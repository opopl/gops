#!/usr/bin/env bash

#{{{
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# name of this script 
export this_script=` basename $0 `

vim_opts="-n -p"
v="vim $vim_opts"
repos=( "config" "scripts" "templates" "vrt" "install" "doc-coms" "doc-cit" )

define_base_dirs(){
# {{{
# main Wales group software directory
export wg_dir="$shd/../../"
packdir=$HOME/arch/packed
unpackdir=$HOME/arch/unpacked
# }}}
}


set_base_vars(){
# {{{
s_purpose="view source files with vim"
s_project="Wales group svn repository"
s_project="~/scripts"
# }}}
}

set_base_vars

display_help(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

		1				Go and WT in force ranges 0-3 
		2	FORCE		Single force regime
		3				G46, nst=4, nf=10, f=( 0.0 0.0001 )

EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( display_help; exit 0 )
#}}}

main(){
# {{{

case "$1" in
  *)
  #{{{
export sys=G46
export sb_mode=$1
let nst=4

force=$2
queue=s1

# depending on sb_mode, define: nm cmd
# {{{
		
cat << EOF

Variables:

sb_mode=$sb_mode
queue=$queue
force=$force
sys=$sys

EOF

case "$sb_mode" in
 	1) # GO and WT in force ranges 0-3 {{{
		let nm=8
		cmd="sleep 3"
 		echo "GO and WT in force ranges 0-3"
		;;
		# }}}
	[2-9])	# force increment run within a single force range {{{
		nm=1
		echo "force increment run within a single force range"
		# }}}
	;;
esac
# }}}

for ((n=0;n<$nm;n++)); do 
# {{{
# depending on sb_mode, pass to q0 the n-dependent parameters
# also, change the queue name, if necessary
#{{{
case "$sb_mode" in 
  	1) # Go and WT in force ranges 0-3 {{{
		n1=$(($n%2)) 
		n2=$(($n/2)) 
		
		case "$n2" in
			0) fr=( 0.0001 0.001 ) ;;
			1) fr=( 0.001 0.01 ) ;;
			2) fr=( 0.01 0.1 ) ;;
			3) fr=( 0.1 1.0 ) ;;
		esac
		
		case "$n1" in
			0) export sys="G46" ; od="go$n2" ; queue=s1 ;;
			1) export sys="P46" ; od="wt$n2" ; queue=s1 ;;
		esac
		
		let nf=9
		let nst=5
		;;
	      # }}}	
	2) fr=( $force ) ; let nst=4; let nf=1 ; od="out" ;;
	3) fr=( 0.0 0.0001 ); export sys="G46"; let nst=4; let nf=10 ; od="out" ;;
esac

export force_min="${fr[0]}"
export force_max="${fr[1]}"
export force_i=$( echo "scale=10; ($force_max-$force_min)/$nf" | bc )
export nsteps=$( echo "10^$nst" | bc ) 
#}}}
  
qsub -V q0 -q $queue ; $cmd ; 
# }}}
done
#}}}
  ;;
esac    # --- end of case ---

# }}}
}

# main part 
# {{{

script_opts=( $* )
define_base_dirs

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
		  #vm) $v $0; exit ;;
	  	vm) $shd/vf b; exit ;;
		h) display_help $*; exit ;;
		-g) v="$v -g" ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}


