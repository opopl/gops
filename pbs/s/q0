#!/bin/bash

##  pbs related stuff {{{

#PBS -q s1
#PBS -N ef
#PBS -j oe

cd $PBS_O_WORKDIR
wc $PBS_NODEFILE > nodes.info
cat $PBS_NODEFILE >> nodes.info
echo $USER >> nodes.info

case $HOSTNAME in 
  	mek-quake) serv="mek-" ;;
esac

pbs_job_id=` echo ${PBS_JOBID}  | sed "s/[\.a-zA-Z]*$//" | sed "s/\.$serv"$//g`
clust_id=` echo ${PBS_JOBID}  | sed "s/^[0-9]*\.//" `
# }}}

source f.sh
source define_forces_0.sh

# set initial parameters  {{{
output_dir=$PWD
outfiles=( ef.dat ) 
all_ofiles=( $o_file $le_file best markov energy data ) 
#}}}

dn=$pbs_job_id
mkdir -p $dn
cd $dn

# save submitted job info 
jobsf=$output_dir/j.$sb_mode.$data_ext
jobsall=$output_dir/j.$data_ext
date_start=`date_dmy_hms`
echo "$pbs_job_id $cmdline $exe $args $sys $date_start" >> $jobsf
echo "$pbs_job_id $cmdline $exe $args $sys $date_start" >> $jobsall

#force loop{{{
for force in ${forces[@]}; do
# parse 'data' file {{{
cat >& data << EOF
SLOPPYCONV $sqmax
TIGHTCONV  $fqmax
UPDATES $m_lbfgs
DGUESS  0.1
SAVE 10
CHANGEACCEPT $ca
$sys 
EDIFF 0.001
STEPS $nsteps $tfac
MAXBFGS 1.0
MAXIT 1000 1000
STEP 1.9 0.0 
TEMPERATURE $temp
PULL $pull_start $pull_end $force
EOF
# }}}

#echo "NORESET" >> data

# execute {{{

#for ((seed=1; seed<=$nrg; seed++)); do

seed=`date +%s`; let seed%=1000
echo $natoms $radius -$seed > randata
rancoords # >& /dev/null
cp newcoords coords

time_start=`date_in_secs`
date_start=`date_dmy_hms`
$exe $args
pref=f_"$force"

case $sb_mode in 
	2) ;;
	*)
		for ofile in ${all_ofiles[@]}; do
		  if [ -f $ofile ]; then 
				cp $ofile $pref.$ofile
		  fi
		done 
		;;
esac

time_finish=`date_in_secs`
time_spent=$(($time_finish-$time_start))

#}}}

# extract energies; append force energy to ef.tex
#{{{

low_en=( ` awk '/^Energy/ { print $5 }' $le_file ` )
ea_en=( ` cat $ea_file | sed '/^[\t ]*#/d' ` )

gm_energy="${low_en[0]}"
gme=$( echo "scale=10; ($gm_energy-($gs_energy))/($gs_energy)" | bc )

outf=$output_dir/ef.$sb_mode.$data_ext
ea_outf=$output_dir/ea.$sb_mode.$data_ext

if [ $printid -eq 1 ]; then
	case "$idin" in 
	  	"ca") varid=$ca ;;
	esac
fi

info="$varid $time_spent $exe $args $pbs_job_id $sys $date_start" 
echo "` printvar 'float' $force` $gm_energy $info" >> $outf
echo "` printvar 'float' $force` ${ea_en[@]} $info " >> $ea_outf
cat le | awk 'NR==3,NR==48' >> $output_dir/$sb_mode.le

if [ $rmout -eq 1]; then 
  	rm -f out $pref.out
fi

# formats: force_long

#}}}
done
#}}}

echo
qstat -f ${PBS_JOBID}@$HOSTNAME
st= ` qstat -f ${PBS_JOBID}@$HOSTNAME `
echo "$st $cmdline" >> jobs.tex
echo 
#vim:ft=sh:fdm=marker
