#!/bin/bash

##  pbs related stuff {{{

#PBS -q s1
#PBS -N ef
#PBS -j oe

cd $PBS_O_WORKDIR
wc $PBS_NODEFILE > nodes.info
cat $PBS_NODEFILE >> nodes.info
echo $USER >> nodes.info

pbs_job_id=` echo ${PBS_JOBID}  | sed "s/[\.a-zA-Z]*$//" `
clust_id=` echo ${PBS_JOBID}  | sed "s/^[0-9]*\.//" `
# }}}

source f.sh
source define_forces_0.sh

# set initial parameters  {{{
output_dir=$PWD
outfiles=( ef.dat ) 
GMIN_ofiles=( GMIN_out lowest best markov energy data ) 
#}}}

dn=$pbs_job_id
mkdir -p $dn
cd $dn

#force loop{{{
for force in ${forces[@]}; do
# parse 'data' file {{{
cat >& data << EOF
SLOPPYCONV $sqmax
TIGHTCONV  $fqmax
UPDATES $m_lbfgs
DGUESS  0.1
SAVE 10
CENTRE
CHANGEACCEPT $ca
$sys 
EDIFF 0.001
STEPS $nsteps
MAXBFGS 1.0
MAXIT 1000 1000
STEP 1.9 0.0 
TEMPERATURE $temp
PULL $pull_start $pull_end $force

EOF
# }}}

#echo "NORESET" >> data

# execute {{{

#for ((seed=1; seed<=$nrg; seed++)); do

echo $natoms $radius -$seed > randata
rancoords # >& /dev/null
cp newcoords coords

time_start=`date_in_secs`
date_start=`date_dmy_hms`
$exe

case $sb_mode in 
	2) ;;
	*)
		for ofile in ${GMIN_ofiles[@]}; do
			cp $ofile $ofile.f.$force
		done 
		;;
esac

time_finish=`date_in_secs`
time_spent=$(($time_finish-$time_start))

#}}}

# extract energies; append force energy to ef.tex
#{{{

low_en=( ` awk '/^Energy/ { print $5 }' lowest ` )

gm_energy="${low_en[0]}"
gme=$( echo "scale=10; ($gm_energy-($gs_energy))/($gs_energy)" | bc )

outf=$output_dir/ef.$sb_mode.$data_ext
#echo "` printvar 'float' $force` $gme $gm_energy $time_spent $date_start" >>  $outf
echo "` printvar 'float' $force` $gm_energy $time_spent $pbs_job_id $sys $date_start " >> $outf
# formats: force_long

#}}}
done
#}}}

echo
qstat -f ${PBS_JOBID}@$HOSTNAME
echo

#vim:ft=sh:fdm=marker
