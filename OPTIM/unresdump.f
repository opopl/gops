C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
C DAE 
C GET COORDINATES FROM EXTERNAL FILE 'COORDS'
C WHICH IS CHARMM FORMAT BUT USE STANDARD FORTRAN
C READING COMMANDS, UNLIKE CHARMM WHICH HAS A LIMIT
C ON TOTAL LINE LENGTH AND DOES INVOLVED PROCEDURE WITH STRINGS
C
      SUBROUTINE UNEWREAD(X,Y,Z,NATOMS,FILTH2,FILTHSTR)
      IMPLICIT NONE
  
      CHARACTER*4 A1
      CHARACTER(LEN=*) FILTHSTR
      CHARACTER(LEN=20) CFNAME
      INTEGER I,I1,NATOMS,FILTH2
      REAL*8 X(NATOMS),Y(NATOMS),Z(NATOMS)
 
      IF (FILTH2.EQ.0) THEN
         WRITE(CFNAME, '(A)') 'COORDS'
      ELSE
         WRITE(CFNAME, '(A)') 'COORDS.'//TRIM(ADJUSTL(FILTHSTR))
      ENDIF

      OPEN(UNIT=19,FILE=CFNAME,STATUS='UNKNOWN')
      READ (19,*)
      DO I=1,NATOMS
         READ (19,'(A,3F20.10)') A1,X(I),Y(I),Z(I)
      ENDDO
  
      CLOSE(19)

      RETURN
      END


      SUBROUTINE UNRESDUMP2(COORDS,IUNIT)
      USE COMMONS
      IMPLICIT NONE

      INTEGER IUNIT,I,J,K
      REAL*8 COORDS(3*NATOMS)
      REAL*8 PEPCOORDS(3*NATOMS)

C JMC REQUIRES AN OPEN FILE
C ALSO WRITES COORDINATES FOR DUMMY PEPTIDE ATOMS (O [REPRESENTING C=O],N), FOR
C VISUALISATION PURPOSES.
      DO J=1,(NATOMS/2)-1
         DO K=1,3
            PEPCOORDS(6*(J-1)+K)=(2.0D0*COORDS(6*(J-1)+K)+COORDS(6*J+K))/3.0D0
            PEPCOORDS(6*(J-1)+K+3)=(COORDS(6*(J-1)+K)+2.0D0*COORDS(6*J+K))/3.0D0
         END DO
      END DO

      WRITE(IUNIT,'(I5)') 2*NATOMS-2
      WRITE(IUNIT,'(A)') ' ' 

      DO J=1,NATOMS/2
C CALPHA
         WRITE(IUNIT,'(A2,3F20.10)') 'C ',(COORDS(6*(J-1)+K),K=1,3)
C SIDE CHAIN
         WRITE(IUNIT,'(A2,3F20.10)') 'C ',(COORDS(6*(J-1)+K),K=4,6)
C PEPTIDE ATOMS
         IF (J.LT.(NATOMS/2)) THEN
             WRITE(IUNIT,'(A2,3F20.10)') 'O ',(PEPCOORDS(6*(J-1)+K),K=1,3)
             WRITE(IUNIT,'(A2,3F20.10)') 'N ',(PEPCOORDS(6*(J-1)+K),K=4,6)
         END IF
      ENDDO

      RETURN

      END

      SUBROUTINE MYUNRESDUMP(COORDS,FNAMEF)
      USE COMMONS
      IMPLICIT NONE

      CHARACTER(LEN=*)  FNAMEF 
      INTEGER IUNIT,J,K
      REAL*8 COORDS(3*NATOMS)

      IUNIT=19
      OPEN(UNIT=IUNIT,FILE=FNAMEF,STATUS='UNKNOWN')
      WRITE(IUNIT,'(I5)') NATOMS

      DO J=1,NATOMS/2
C CALPHA
         WRITE(IUNIT,'(A2,3F20.10)') 'C ',(COORDS(6*(J-1)+K),K=1,3)
C SIDE CHAIN
         WRITE(IUNIT,'(A2,3F20.10)') 'C ',(COORDS(6*(J-1)+K),K=4,6)
      END DO

      CLOSE(IUNIT)

      RETURN

      END

      SUBROUTINE UNRESDUMP3(COORDS,FNAMEF)
      USE COMMONS
      IMPLICIT NONE

      CHARACTER(LEN=*)  FNAMEF
      INTEGER IUNIT,I,J,K
      REAL*8 COORDS(3*NATOMS)
      REAL*8 PEPCOORDS(3*NATOMS)

      IUNIT=19
      OPEN(UNIT=IUNIT,FILE=FNAMEF,STATUS='UNKNOWN')
C ALSO WRITES COORDINATES FOR DUMMY PEPTIDE ATOMS (O [REPRESENTING C=O],N), FOR
C VISUALISATION PURPOSES.
      DO J=1,(NATOMS/2)-1
         DO K=1,3
            PEPCOORDS(6*(J-1)+K)=(2.0D0*COORDS(6*(J-1)+K)+COORDS(6*J+K))/3.0D0
            PEPCOORDS(6*(J-1)+K+3)=(COORDS(6*(J-1)+K)+2.0D0*COORDS(6*J+K))/3.0D0
         END DO
      END DO

      WRITE(IUNIT,'(I5)') 2*NATOMS-2
      WRITE(IUNIT,'(A)') ' '

      DO J=1,NATOMS/2
C CALPHA
         WRITE(IUNIT,'(A2,3F20.10)') 'C ',(COORDS(6*(J-1)+K),K=1,3)
C SIDE CHAIN
         WRITE(IUNIT,'(A2,3F20.10)') 'C ',(COORDS(6*(J-1)+K),K=4,6)
C PEPTIDE ATOMS
         IF (J.LT.(NATOMS/2)) THEN
             WRITE(IUNIT,'(A2,3F20.10)') 'O ',(PEPCOORDS(6*(J-1)+K),K=1,3)
             WRITE(IUNIT,'(A2,3F20.10)') 'N ',(PEPCOORDS(6*(J-1)+K),K=4,6)
         END IF
      ENDDO

      CLOSE(IUNIT)
      RETURN

      END
