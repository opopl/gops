C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
C***********************************************************************
C
C  THIS SUBROUTINE PERFORMS LBFGS MINIMIZATION TO ESTIMATE THE
C  SMALLEST EIGENVALUE AND EIGENVECTOR OF THE HESSIAN WITHOUT SECOND
C  DERIVATIVES...
C  ... IN INTERNAL COORDINATES (JMC MARCH 03).
C
C***********************************************************************
C
      SUBROUTINE INTBEIG(ITER,COORDS,ENERGY,VECS,EVALMIN,NS,SOVER,PTEST,CONVERGED)

      USE COMMONS
      USE KEY
      USE MODNEB
      USE MODTWOEND
      IMPLICIT NONE

      INTEGER J1, ISEED, NS, NITS
      DOUBLE PRECISION ENERGY,COORDS(3*NATOMS),VEC(3*NATOMS),VECS(3*NATOMS),DPRAND,SOVER,EVALMIN,EPS,FRET
      DOUBLE PRECISION DIAG(3*NATOMS),WORK(3*NATOMS*(2*XMUPDATE+1)+2*XMUPDATE)
      PARAMETER (EPS=1.D-6)
      LOGICAL PTEST, CONVERGED
      INTEGER ITER
      COMMON /IS/ ISEED
      SAVE

!     VEC=0.0D0 ! JMC TESTING

      IF ((ITER.EQ.1).AND.(.NOT.READV).AND.(.NOT.TWOENDS).AND.(.NOT.TTDONE).AND.(.NOT.(NEWCONNECTT.OR.NEWNEBT))) THEN
         DO J1=1,NINTS
C JMC VEC(J1) CONTAINS A RANDOM NUMBER BETWEEN 1 AND -1
            VEC(J1)=2*(DPRAND()-0.5D0)
C           VEC(J1)=0.0D0
         ENDDO
C        VEC(1)=1.0D0
      ELSE
         DO J1=1,NINTS
C JMC VECS CONTAINS PREVIOUS VECTOR.
            VEC(J1)=VECS(J1)
         ENDDO
      ENDIF

C JMC CAN'T USE FREEZE...
      IF (FREEZE) THEN
         PRINT *,"** WARNING: TRYING TO USE FREEZE WITH INTMIN; PLEASE DON'T!" ! JMC
         STOP
         DO J1=1,NATOMS
            IF (FROZEN(J1)) THEN
               VEC(3*(J1-1)+1)=0.0D0
               VEC(3*(J1-1)+2)=0.0D0
               VEC(3*(J1-1)+3)=0.0D0
            ENDIF
         ENDDO
      ENDIF

C     CALL VECNORM(VEC,NINTS)

      CALL INTXMYLBFGS(NINTS,XMUPDATE,VEC,.FALSE.,DIAG,CEIG,WORK,ENERGY,COORDS,NITS,NEVS,FRET,PTEST,CONVERGED)
      CALL VECNORM(VEC,NINTS)

      EVALMIN=FRET
      NS=NITS
      SOVER=0.0D0
      DO J1=1,NINTS
         SOVER=SOVER+VECS(J1)*VEC(J1)
         VECS(J1)=VEC(J1)
      ENDDO
      IF (PTEST) WRITE(*,'(A,F15.7)') ' OVERLAP WITH PREVIOUS VECTOR=',SOVER

      FIXIMAGE=.FALSE.

      RETURN
      END
