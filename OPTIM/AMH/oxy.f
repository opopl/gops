C     ------------------- OXY ----------------------

      SUBROUTINE OXY(MAXTAB,IRES, JSTRT,JFINS,PRO_CORD,F_CORD_OXY,
     *               EQDIST,OXSCL,CHRLSCL,RAMASCL,
     *               OXEXCLDV,NUMLNG,ILONG,NMRES,E)
 
C     --------------------------------------------------

C     OXY INCLUDES OXYGEN COORDINATES 
C     ARGUMENTS:

C        JSTRT - FIRST MODIFIED SITE (I)
C        JFINS - LAST MODIFIES SITE (I)
C        F_CORD_OXY- WORK ARRAY OF FORCES (O)
C        AMHAMHMAXSIZ- MAXIMUM NUMBER OF RESIDUES (I)

C     ---------------------------------------------------

      USE AMHGLOBALS, ONLY:AMHMAXSIZ,MAXCNT,I_RAMA,OOEV_DIST,OEXCLDSCL,MAXCRD
      USE AMH_INTERFACES, ONLY:RAMA

      IMPLICIT NONE
      DOUBLE PRECISION, INTENT(IN) :: PRO_CORD(AMHMAXSIZ,3,MAXCRD),EQDIST(:),OXSCL,CHRLSCL,RAMASCL
      DOUBLE PRECISION, INTENT(OUT) :: F_CORD_OXY(AMHMAXSIZ,3,MAXCRD),E(:,:)

      INTEGER, INTENT(IN):: MAXTAB,IRES(AMHMAXSIZ),JSTRT,JFINS,NUMLNG(0:AMHMAXSIZ,MAXTAB),ILONG(MAXCNT,2,4),NMRES
      LOGICAL, INTENT(IN):: OXEXCLDV
 
C     INTERNAL VARIABLES:
      DOUBLE PRECISION A(3), B(3), C(3),ANORM, BNORM, CNORM,AMNR(3),BMNR(3),CMNR(3),
     * APRL(AMHMAXSIZ,3),BPRL(AMHMAXSIZ,3),CPRL(AMHMAXSIZ,3),NORM,EQPROD,F_CORD_OXY_RAMA(AMHMAXSIZ,3,MAXCRD),
     * NITCORD(AMHMAXSIZ,3),CPRCORD(AMHMAXSIZ,3),DELTA(0:AMHMAXSIZ+1,6,3),DIST(AMHMAXSIZ,6),
     * FAC1(0:AMHMAXSIZ+1,6), PROD(AMHMAXSIZ),RAMAPOT(AMHMAXSIZ),OXF,R_DEV,OXDIFF(MAXCNT),
     * OYDIFF(MAXCNT),OZDIFF(MAXCNT),OXDIST(MAXCNT),CVAL1,CVAL2,CVAL3,NVAL1,NVAL2,NVAL3,XI,EXVMIN_MCP,FACTOR(3),DIFF(3),
     * DISTMCP

C        --- DO LOOP INDICES ---
         INTEGER I501,I503,I504,I505,I506,I507,I_IXN,I_AXIS,I_RES,ISIT1,ISIT2
         INTEGER I,J

C     --------------------- BEGIN -----------------------

C     ZERO FORCE AND ENERGY
      F_CORD_OXY_RAMA=0.D0
      F_CORD_OXY=0.0D0
      E(1,3)=0.0D0
      E=0.0D0

       DO 610 I505=JSTRT,JFINS
        DO 606 I506=1,3
          FAC1(I505,I506)=0.0D0
606     CONTINUE
610     CONTINUE

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C        CALCULATE CHAIN CONNECTIVITY
C        BETWEEN N-CB, CPRIME-CB, N-CPRIME 
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C     LOOP OVER ALL AMINO ACIDS IN PROTEIN 

       DO 500 I_RES=JSTRT+1,JFINS-1

C     CALCULATE NITROGEN, CPRIME POSITION

         CVAL1=0.444D0
         CVAL2=0.235D0
         CVAL3=0.321D0

       CPRCORD(I_RES,1)=CVAL1*PRO_CORD(I_RES,1,1)+CVAL2*PRO_CORD(I_RES+1,1,1)+CVAL3*PRO_CORD(I_RES,1,3)
       CPRCORD(I_RES,2)=CVAL1*PRO_CORD(I_RES,2,1)+CVAL2*PRO_CORD(I_RES+1,2,1)+CVAL3*PRO_CORD(I_RES,2,3)
       CPRCORD(I_RES,3)=CVAL1*PRO_CORD(I_RES,3,1)+CVAL2*PRO_CORD(I_RES+1,3,1)+CVAL3*PRO_CORD(I_RES,3,3)

          NVAL1=0.483D0
          NVAL2=0.703D0
          NVAL3=-0.186D0

       NITCORD(I_RES,1)=NVAL1*PRO_CORD(I_RES-1,1,1)+NVAL2*PRO_CORD(I_RES,1,1)+NVAL3*PRO_CORD(I_RES-1,1,3)
       NITCORD(I_RES,2)=NVAL1*PRO_CORD(I_RES-1,2,1)+NVAL2*PRO_CORD(I_RES,2,1)+NVAL3*PRO_CORD(I_RES-1,2,3)
       NITCORD(I_RES,3)=NVAL1*PRO_CORD(I_RES-1,3,1)+NVAL2*PRO_CORD(I_RES,3,1)+NVAL3*PRO_CORD(I_RES-1,3,3)
          
C     CALCULATE DISTANCES        

          DELTA(I_RES,1,1)=PRO_CORD(I_RES,1,2)-NITCORD(I_RES,1)
          DELTA(I_RES,1,2)=PRO_CORD(I_RES,2,2)-NITCORD(I_RES,2)
          DELTA(I_RES,1,3)=PRO_CORD(I_RES,3,2)-NITCORD(I_RES,3)
          DELTA(I_RES,2,1)=PRO_CORD(I_RES,1,2)-CPRCORD(I_RES,1)
          DELTA(I_RES,2,2)=PRO_CORD(I_RES,2,2)-CPRCORD(I_RES,2)
          DELTA(I_RES,2,3)=PRO_CORD(I_RES,3,2)-CPRCORD(I_RES,3)
          DELTA(I_RES,3,1)=CPRCORD(I_RES,1)-NITCORD(I_RES,1)
          DELTA(I_RES,3,2)=CPRCORD(I_RES,2)-NITCORD(I_RES,2)
          DELTA(I_RES,3,3)=CPRCORD(I_RES,3)-NITCORD(I_RES,3)

          DIST(I_RES,1)=DSQRT( DELTA(I_RES,1,1)**2+DELTA(I_RES,1,2)**2+DELTA(I_RES,1,3)**2 )
          DIST(I_RES,2)=DSQRT( DELTA(I_RES,2,1)**2+DELTA(I_RES,2,2)**2+DELTA(I_RES,2,3)**2 )
          DIST(I_RES,3)=DSQRT( DELTA(I_RES,3,1)**2+DELTA(I_RES,3,2)**2+DELTA(I_RES,3,3)**2 )

          FAC1(I_RES,1)=2.0D0*OXSCL*(EQDIST(1)-DIST(I_RES,1))/DIST(I_RES,1)
          FAC1(I_RES,2)=2.0D0*OXSCL*(EQDIST(2)-DIST(I_RES,2))/DIST(I_RES,2)
          FAC1(I_RES,3)=2.0D0*OXSCL*(EQDIST(3)-DIST(I_RES,3))/DIST(I_RES,3)

          IF (IRES(I_RES).EQ.8) THEN
            FAC1(I_RES,1)=0.0D0
            FAC1(I_RES,2)=0.0D0
          ENDIF
500    CONTINUE

       DO 504 I504=1,3
        CPRCORD(JSTRT,I504)=CVAL1*PRO_CORD(JSTRT,I504,1)+CVAL2*PRO_CORD(JSTRT+1,I504,1)+CVAL3*PRO_CORD(JSTRT,I504,3)
        NITCORD(JFINS,I504)=NVAL1*PRO_CORD(JFINS-1,I504,1)+NVAL2*PRO_CORD(JFINS,I504,1)+NVAL3*PRO_CORD(JFINS-1,I504,3)
 
          DELTA(JSTRT-1,1,I504)=0.0D0
          DELTA(JSTRT-1,2,I504)=0.0D0
          DELTA(JSTRT-1,3,I504)=0.0D0

          DELTA(JSTRT,1,I504)=0.0D0
          DELTA(JSTRT,2,I504)=PRO_CORD(JSTRT,I504,2)-CPRCORD(JSTRT,I504)
          DELTA(JSTRT,3,I504)=0.0D0
          DELTA(JFINS,1,I504)=PRO_CORD(JFINS,I504,2)-NITCORD(JFINS,I504)
          DELTA(JFINS,2,I504)=0.0D0
          DELTA(JFINS,3,I504)=0.0D0

          DELTA(JFINS+1,1,I504)=0.0D0
          DELTA(JFINS+1,2,I504)=0.0D0
          DELTA(JFINS+1,3,I504)=0.0D0
504     CONTINUE

        DO 506 I506=1,3
          FAC1(JSTRT-1,I506)=0.0D0
          FAC1(JFINS+1,I506)=0.0D0
506     CONTINUE

         DIST(JSTRT,2)=DSQRT( DELTA(JSTRT,2,1)**2+DELTA(JSTRT,2,2)**2+DELTA(JSTRT,2,3)**2 )
         DIST(JFINS,1)=DSQRT( DELTA(JFINS,1,1)**2+DELTA(JFINS,1,2)**2+DELTA(JFINS,1,3)**2 )
         FAC1(JSTRT,1)=0.0D0
         FAC1(JSTRT,2)=2.0D0*OXSCL*(EQDIST(2)-DIST(JSTRT,2))/DIST(JSTRT,2)
         FAC1(JSTRT,3)=0.0D0

         FAC1(JFINS,1)=2.0D0*OXSCL*(EQDIST(1)-DIST(JFINS,1))/DIST(JFINS,1)
         FAC1(JFINS,2)=0.0D0
         FAC1(JFINS,3)=0.0D0

         DO 666 I_RES = 1, JFINS
          IF (IRES(I_RES).EQ.8) THEN
            FAC1(I_RES,1)=0.0D0
            FAC1(I_RES,2)=0.0D0
          ENDIF
666      CONTINUE

C  ADD FORCES

        DO 503 I503=1,3
        DO 501 I501=JSTRT,JFINS

          F_CORD_OXY(I501,I503,1)=F_CORD_OXY(I501,I503,1)
     *          +FAC1(I501,1)*DELTA(I501,1,I503)*(-NVAL2)               
     *          +FAC1(I501+1,1)*DELTA(I501+1,1,I503)*(-NVAL1)
     *          +FAC1(I501,2)*DELTA(I501,2,I503)*(-CVAL1)               
     *          +FAC1(I501-1,2)*DELTA(I501-1,2,I503)*(-CVAL2)
     *          +FAC1(I501+1,3)*DELTA(I501+1,3,I503)*(-NVAL1)     
     *          +FAC1(I501,3)*DELTA(I501,3,I503)*(-NVAL2+CVAL1)
     *          +FAC1(I501-1,3)*DELTA(I501-1,3,I503)*(CVAL2)

          F_CORD_OXY(I501,I503,2)=F_CORD_OXY(I501,I503,2)
     *          +FAC1(I501,1)*DELTA(I501,1,I503)               
     *          +FAC1(I501,2)*DELTA(I501,2,I503)               

          F_CORD_OXY(I501,I503,3)= F_CORD_OXY(I501,I503,3)+
     *           FAC1(I501+1,1)*DELTA(I501+1,1,I503)*(-NVAL3)
     *          +FAC1(I501,2)*DELTA(I501,2,I503)*(-CVAL3)               
     *          +FAC1(I501+1,3)*DELTA(I501+1,3,I503)*(-NVAL3)           
     *          +FAC1(I501,3)*DELTA(I501,3,I503)*(CVAL3)

501           CONTINUE
503        CONTINUE

C----------------------------------------------------
C  E STORES POTENTIALS FOR OUTPUT AT INCMOV
C---------------------------------------------------

      IF (IRES(JSTRT).NE.8)  THEN
        E(1,3)=E(1,3)+OXSCL*(EQDIST(2)-DIST(JSTRT,2))**2
      ENDIF

      IF (IRES(JFINS).NE.8)  THEN
       E(1,3)=E(1,3)+OXSCL*(EQDIST(1)-DIST(JFINS,1))**2
      ENDIF

       DO 505 I505=JSTRT+1,JFINS-1
         IF (IRES(I505).NE.8) THEN
           E(1,3)=E(1,3)+OXSCL*((EQDIST(1)-DIST(I505,1))**2+(EQDIST(2)-DIST(I505,2))**2+(EQDIST(3)-DIST(I505,3))**2 )
         ELSE
           E(1,3)=E(1,3)+OXSCL*((EQDIST(3)-DIST(I505,3))**2)
         ENDIF
505    CONTINUE

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C        CALCULATE OXYGEN EXCLUDED VOLUME IF NEEDED
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

       IF ( OXEXCLDV ) THEN

        XI=0.5D0

         DO I_IXN= 1,NUMLNG(NMRES,2)
            I = ILONG(I_IXN,1,2)
            J = ILONG(I_IXN,2,2)
            IF((J-I).EQ.1) CYCLE
          DIFF(:)=PRO_CORD(I,:,3)-PRO_CORD(J,:,3)  ! X,Y,Z
          DISTMCP=DSQRT( DIFF(1)*DIFF(1) + DIFF(2)*DIFF(2) + DIFF(3)*DIFF(3) )

          FACTOR(:)=(OEXCLDSCL/(2.0D0*XI))*(COSH((OOEV_DIST(I_IXN)-DISTMCP)/XI)**(-2)) *DIFF(:)/DISTMCP

          F_CORD_OXY(I,:,3)=F_CORD_OXY(I,:,3)+FACTOR(:)
          F_CORD_OXY(J,:,3)=F_CORD_OXY(J,:,3)-FACTOR(:)

          E(1,11)=E(1,11)+0.5D0*OEXCLDSCL*(1.0D0+TANH((OOEV_DIST(I_IXN)-DISTMCP)/XI))
C         WRITE(6,*)'IJ E',J-I,0.5D0*OEXCLDSCL*(1.0D0+TANH((OOEV_DIST(I_IXN)-DISTMCP)/XI)) 
        ENDDO

       ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     CALL RAMA TO GET RAMACHANDRIAN POTENTIALS

          RAMAPOT=0.0D0

          IF (I_RAMA.EQ.1) THEN
        CALL RAMA(IRES,JSTRT,JFINS,PRO_CORD,F_CORD_OXY_RAMA,RAMASCL,RAMAPOT,NITCORD,CPRCORD)
          ENDIF
          E(1,2)=E(1,2)+SUM(RAMAPOT(JSTRT:JFINS))
          F_CORD_OXY=F_CORD_OXY+F_CORD_OXY_RAMA

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     COMPUTE CHIRAL FORCES
C        EQPROD= -2.5      ! WAS ERRONEOUSLY EQPROD=-0.7698

         EQPROD= -0.83D0

       DO 507 I507=JSTRT+1,JFINS-1
         IF (IRES(I507).NE.8) THEN
C     CALCULATE VECTORS
            A(1)=PRO_CORD(I507,1,1)-NITCORD(I507,1)
            B(1)=CPRCORD(I507,1)-PRO_CORD(I507,1,1)
            C(1)=PRO_CORD(I507,1,2)-PRO_CORD(I507,1,1)
            A(2)=PRO_CORD(I507,2,1)-NITCORD(I507,2)
            B(2)=CPRCORD(I507,2)-PRO_CORD(I507,2,1)
            C(2)=PRO_CORD(I507,2,2)-PRO_CORD(I507,2,1)
            A(3)=PRO_CORD(I507,3,1)-NITCORD(I507,3)
            B(3)=CPRCORD(I507,3)-PRO_CORD(I507,3,1)
            C(3)=PRO_CORD(I507,3,2)-PRO_CORD(I507,3,1)
C     CALCULATE MINORS
            AMNR(1)=B(2)*C(3)-B(3)*C(2)
            AMNR(2)=B(3)*C(1)-B(1)*C(3)
            AMNR(3)=B(1)*C(2)-B(2)*C(1)
            BMNR(1)=C(2)*A(3)-C(3)*A(2)
            BMNR(2)=C(3)*A(1)-C(1)*A(3)
            BMNR(3)=C(1)*A(2)-C(2)*A(1)
            CMNR(1)=A(2)*B(3)-A(3)*B(2)
            CMNR(2)=A(3)*B(1)-A(1)*B(3)
            CMNR(3)=A(1)*B(2)-A(2)*B(1)
C     CALCULATE PRODUCTS
            ANORM=1.0D0/(A(1)*A(1)+A(2)*A(2)+A(3)*A(3))
            BNORM=1.0D0/(B(1)*B(1)+B(2)*B(2)+B(3)*B(3))
            CNORM=1.0D0/(C(1)*C(1)+C(2)*C(2)+C(3)*C(3))
            NORM=DSQRT(ANORM*BNORM*CNORM)
            PROD(I507)=(A(1)*AMNR(1)+A(2)*AMNR(2)+A(3)*AMNR(3))*NORM
C     CALCULATE PARTIAL DERIVITIVES
            APRL(I507,1)=NORM*AMNR(1)-A(1)*PROD(I507)*ANORM
            APRL(I507,2)=NORM*AMNR(2)-A(2)*PROD(I507)*ANORM
            APRL(I507,3)=NORM*AMNR(3)-A(3)*PROD(I507)*ANORM
            BPRL(I507,1)=NORM*BMNR(1)-B(1)*PROD(I507)*BNORM
            BPRL(I507,2)=NORM*BMNR(2)-B(2)*PROD(I507)*BNORM
            BPRL(I507,3)=NORM*BMNR(3)-B(3)*PROD(I507)*BNORM
            CPRL(I507,1)=NORM*CMNR(1)-C(1)*PROD(I507)*CNORM
            CPRL(I507,2)=NORM*CMNR(2)-C(2)*PROD(I507)*CNORM
            CPRL(I507,3)=NORM*CMNR(3)-C(3)*PROD(I507)*CNORM
          END IF
507     CONTINUE

C     ADD POTENTIAL TO ACCUMULATOR IF AVERAGES ARE TO BE COMPUTED

        DO 518 I_RES=JSTRT+1,JFINS-1
        IF (IRES(I_RES).NE.8) THEN
            E(1,4)=E(1,4)+CHRLSCL*(PROD(I_RES)-EQPROD)**2
        ENDIF
518     CONTINUE

C     ADD TERMS FOR EACH COORDINATE
 
      DO 509 I_AXIS=1,3
        DO 510 I_RES=JSTRT+1,JFINS-1
        IF (IRES(I_RES).NE.8) THEN
        
          F_CORD_OXY(I_RES,I_AXIS,1)=F_CORD_OXY(I_RES,I_AXIS,1)
     *        - 2.0D0*CHRLSCL*(PROD(I_RES)-EQPROD) * ( (NVAL1+NVAL3)*APRL(I_RES,I_AXIS)
     *         -(CVAL2+CVAL3)*BPRL(I_RES,I_AXIS)-CPRL(I_RES,I_AXIS) )

          F_CORD_OXY(I_RES+1,I_AXIS,1)=F_CORD_OXY(I_RES+1,I_AXIS,1)
     *        - 2.0D0*CHRLSCL*(PROD(I_RES)-EQPROD) * CVAL2*BPRL(I_RES,I_AXIS)

          F_CORD_OXY(I_RES-1,I_AXIS,1)=F_CORD_OXY(I_RES-1,I_AXIS,1)
     *        + 2.0D0*CHRLSCL*(PROD(I_RES)-EQPROD) * NVAL1*APRL(I_RES,I_AXIS)

          F_CORD_OXY(I_RES,I_AXIS,2)=F_CORD_OXY(I_RES,I_AXIS,2)
     *        - 2.0D0*CHRLSCL*(PROD(I_RES)-EQPROD) * CPRL(I_RES,I_AXIS)

          F_CORD_OXY(I_RES,I_AXIS,3)=F_CORD_OXY(I_RES,I_AXIS,3)
     *        - 2.0D0*CHRLSCL*(PROD(I_RES)-EQPROD) * CVAL3*BPRL(I_RES,I_AXIS)

          F_CORD_OXY(I_RES-1,I_AXIS,3)=F_CORD_OXY(I_RES-1,I_AXIS,3)
     *        - 2.0D0*CHRLSCL*(PROD(I_RES)-EQPROD)*(-NVAL3)*APRL(I_RES,I_AXIS) 

        ENDIF

510             CONTINUE
509          CONTINUE

C     ---------------------- DONE -----------------------

      RETURN

      END
