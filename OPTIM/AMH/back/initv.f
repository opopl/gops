
C     --------------------- INITV  ----------------------

      SUBROUTINE INITV(PRCORD,QRCORD,SRCORD,
     *                 TRCORD,ZRCORD,VELOCP,BONDLN,TEMTUR,
     *                 JSTRT,JFINS,TOLSHK,MAXSHK,BDSHAK,
     *                 TIMSTP,NUMPRO,ISHKIT,
     *                 NUMCRD,OARCHV,
     *                 WORK1,WORK3,WORK4,ISEED_AMH,
     *                 IRES)

C     ---------------------------------------------------

C     INITV  INITIALIZES THE VELOCITIES AND COORDINATES
C            WHEN THE HEAT BATH IS TURNED OFF

C     ARGUMENTS:

C        MAXSIZ- MAXIMUM NUMBER OF PROTEIN RESIDUES (I)
C        PRCORD- NEW COORDINATES WHICH SATSIFY BOND 
C                LENGTHS (O)

C     ---------------------------------------------------
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C       I_AXIS                  INDEX OVER AXIS'S
C       I_CAT                   # OF POSSIBLE KINDS OF RESIDUES USED IN
C                               FILTRATION
C       I_COORD                 INDEX OVER COORDINATE TYPES (CA, CB...)
C       I_PRO                   INDEX OVER PROTEINS IN ENSEMBLE
C       I_RES                   INDEX OVER RESIDUES
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      USE GLOBALS, ONLY: MAXSIZ,MAXPRO,MAXCRD,MAXCNT

      IMPLICIT NONE


C     PASSED ARGUMENT DECLARATIONS:

         LOGICAL BDSHAK

         INTEGER NUMPRO,JSTRT,JFINS,
     *           MAXSHK,ISHKIT,
     *           NUMCRD,OARCHV,IRES(MAXSIZ)
     
         REAL PRCORD(MAXSIZ,3,MAXPRO,MAXCRD),
     *        QRCORD(MAXSIZ,3,MAXPRO,MAXCRD),TOLSHK,
     *        SRCORD(MAXSIZ,3,MAXPRO,MAXCRD),TEMTUR,
     *        TRCORD(MAXSIZ,3,MAXPRO,MAXCRD),TIMSTP,
     *        ZRCORD(MAXSIZ,3,MAXPRO,MAXCRD),
     *        VELOCP(MAXSIZ,3,MAXPRO,MAXCRD),
     *        BONDLN(MAXSIZ,MAXCRD),WORK1(MAXCNT),
     *        WORK3(MAXCNT),WORK4(MAXCNT)

         INTEGER ISEED_AMH(4)



C     INTERNAL VARIABLES:

C        --- DO LOOP INDICES ---

         INTEGER I507,I512,I517

        INTEGER I_AXIS, I_COORD, I_PRO, I_RES
 
C        --- IMPLIED DO LOOP INDICES ---

         INTEGER I1

         INTEGER NUMSHK

         REAL TEMPH,DIFF(2,MAXSIZ),DIST(2)

C     REQUIRED SUBROUTINES

        EXTERNAL GAUSSC,SHAKE,SHAKAB,SHAKOX


        TEMPH = 0.0
        DO 600 I1=1,MAXSIZ
          DIFF(1,I1)=0.0
          DIFF(2,I1)=0.0
600        CONTINUE
        DIST(1)=0.0
        DIST(2)=0.0

C     --------------------- BEGIN -----------------------



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     FIND GAUSSIANLY DISTRIBUTED VELOCITIES 
      CALL GAUSSC(MAXSIZ,NUMPRO,VELOCP,
     *            SQRT(TEMTUR),JSTRT,JFINS,MAXPRO,
     *            ISEED_AMH,WORK1,MAXCRD,NUMCRD)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     SET INITIAL POSTIONS ACCORDING TO VELOCITES

      DO 502 I_PRO=1,NUMPRO                ! NUMBER OF PROTIENS IN ENSEMBLE
         DO 500 I_COORD=1,NUMCRD         ! NUMBER OF COORD. TYPES (CA, CB, ...)
            DO 504 I_AXIS=1,3                  ! X,Y,Z

               DO 516 I_RES=1,JSTRT-1
                  TRCORD(I_RES,I_AXIS,I_PRO,I_COORD)=
     *            PRCORD(I_RES,I_AXIS,I_PRO,I_COORD)   
  516          CONTINUE

               DO 515 I_RES=JSTRT,JFINS
                  TRCORD(I_RES,I_AXIS,I_PRO,I_COORD)=
     *            PRCORD(I_RES,I_AXIS,I_PRO,I_COORD) - TIMSTP*
     *            VELOCP(I_RES,I_AXIS,I_PRO,I_COORD)
  515          CONTINUE

               DO 529 I_RES=1,JFINS
                  QRCORD(I_RES,I_AXIS,I_PRO,I_COORD)=
     *            PRCORD(I_RES,I_AXIS,I_PRO,I_COORD)
  529          CONTINUE

  504       CONTINUE
  500    CONTINUE
  502 CONTINUE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC





C     SET BOND CONSTRAINTS FOR EACH SET OF 
C     COORDINATES

      NUMSHK=0

  400 CONTINUE        ! COMING BACK FROM 'GOTO 400' LATER IN SUBROUTINE

      NUMSHK=NUMSHK + 1
      IF( NUMSHK.GT.10 )THEN
         WRITE(OARCHV,130)NUMSHK
  130    FORMAT(/'SHKDRV: CONVERGENCE NOT OBTAINED')
         STOP
      ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      CALL SHAKE(MAXSIZ,PRCORD,TRCORD,SRCORD,
     *           BONDLN,NUMPRO,JSTRT+1,JFINS,ZRCORD,
     *           MAXSHK,TOLSHK,BDSHAK,ISHKIT,MAXPRO,
     *           MAXCRD,MAXCNT,WORK1,WORK3,WORK4,OARCHV)
      IF( BDSHAK )RETURN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      CALL SHAKAB(MAXSIZ,PRCORD,TRCORD,SRCORD,
     *            BONDLN,NUMPRO,JSTRT,JFINS,ZRCORD,
     *            MAXSHK,TOLSHK,BDSHAK,ISHKIT,MAXPRO,
     *            MAXCRD,MAXCNT,WORK1,WORK3,WORK4,OARCHV,
     *            IRES)
      IF( BDSHAK )RETURN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        CALL SHAKOX(TRCORD,PRCORD,SRCORD,
     *              NUMPRO,JSTRT,JFINS,
     *              MAXSHK,TOLSHK,ISHKIT,
     *              MAXPRO,MAXCRD)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     DETERMINE WHICH IF ANY OF THE CONSTRAINTS
C     ARE NOT SATISFIED

      DO 512 I512=1,NUMPRO
            DO 507 I507=JSTRT+1,JFINS

               DIST(1)=SQRT
     *       ( ( PRCORD(I507,1,I512,1) -
     *           PRCORD(I507-1,1,I512,1) )**2
     *       + ( PRCORD(I507,2,I512,1) -
     *           PRCORD(I507-1,2,I512,1) )**2
     *       + ( PRCORD(I507,3,I512,1) -
     *           PRCORD(I507-1,3,I512,1) )**2 )

               DIST(2)=SQRT
     *       ( ( PRCORD(I507,1,I512,2) -
     *           PRCORD(I507,1,I512,1) )**2
     *       + ( PRCORD(I507,2,I512,2) -
     *           PRCORD(I507,2,I512,1) )**2
     *       + ( PRCORD(I507,3,I512,2) -
     *           PRCORD(I507,3,I512,1) )**2 )
            DIFF(1,I507)=ABS(DIST(1) - BONDLN(I507,1))
            DIFF(2,I507)=ABS(DIST(2) - BONDLN(I507,2))
  507       CONTINUE

      DO 517 I517=JSTRT+1,JFINS

            IF (IRES(I517).EQ.8) DIFF(2,I517)=0.0   ! DON'T SKAKE CB OF GLYCINE

            IF( MAX(DIFF(1,I517),DIFF(2,I517)).GT.TOLSHK )THEN
               GO TO 400
            ENDIF
  517       CONTINUE
  512 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     RESET VELOCITIES IN ACCORD W/ NEW 
C     COORDINATES

      TEMPH=1.0/TIMSTP
      DO 522 I_PRO=1,NUMPRO
         DO 503 I_COORD=1,NUMCRD
            DO 523 I_AXIS=1,3
               DO 524 I_RES=JSTRT,JFINS
                  VELOCP(I_RES,I_AXIS,I_PRO,I_COORD)=TEMPH*(
     *            PRCORD(I_RES,I_AXIS,I_PRO,I_COORD) -
     *            TRCORD(I_RES,I_AXIS,I_PRO,I_COORD)) 
  524          CONTINUE
  523       CONTINUE
  503    CONTINUE
  522 CONTINUE
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC


C     ---------------------- DONE -----------------------

      RETURN
      END
