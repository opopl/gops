C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
      SUBROUTINE CPMDLATMIN(N,XC,F1,V,BOXLX)
      USE KEY
      USE PORFUNCS
      IMPLICIT NONE
      INTEGER N, NCOUNT, J1
      DOUBLE PRECISION XC(3*N),F1,F2,F3,GRAD,SECOND,XSAVE(3*N), V(3*N), BSAVE, BOXLX,
     1                 DIF, TEMP1, GEMAX, THRESH, EPREV, THRESHMAX
      LOGICAL YESNO
      CHARACTER BOXSTRING*80
C
C  VALUE OF DIF IS THE ORDER OF MAGNITUDE TO WHICH THE LATTICE
C  CONSTANT CAN BE OPTIMISED. SETTING IT SMALLER THAN 10^(-7)
C  CAUSES NUMERICAL PROBLEMS ON THE DEC.
C

      THRESH=0.08D0
      THRESHMAX=0.08D0
      EPREV=0.0D0
      INQUIRE(FILE='RESTART.1',EXIST=YESNO)

      DIF=1.0D-3
      NCOUNT=1
      DO J1=1,3*N
         XSAVE(J1)=XC(J1)
      ENDDO

      BSAVE=BOXLX

10    TEMP1=BOXLX

      CALL SYSTEM(' CP ' // SYS(1:LSYS) // '.OUT ' // SYS(1:LSYS) // '.OLD.OUT >& /DEV/NULL ')
      IF (.NOT.YESNO) THEN
         IF (PARALLEL) THEN
            CALL SYSTEM(' ( MPIRUN -NP ' // NPROC // ' /EXPORT/HOME/WALES/BIN/CPMD.X.MPI ' 
     1                    // SYS(1:LSYS) // ' > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
         ELSE
            CALL SYSTEM(' ( CPMD.X.2 ' // SYS(1:LSYS) // ' > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
         ENDIF
      ELSE
         OPEN(UNIT=8,FILE='NEWGEOM',STATUS='UNKNOWN')
         DO J1=1,N
            WRITE(8,'(6F20.10)') XC(3*(J1-1)+1),XC(3*(J1-1)+2),XC(3*(J1-1)+3),0.0D0,0.0D0,0.0D0
         ENDDO
         CLOSE(8)
         CALL SYSTEM(' MV NEWGEOM GEOMETRY ')
         WRITE(BOXSTRING,'(F20.10,5F12.4)') BOXLX, 1.0D0, 1.0D0, 0.0D0, 0.0D0, 0.0D0
         CALL SYSTEM(' SED -E "S/CELLSIZE/' // BOXSTRING // '/" ' // SYS(1:LSYS) // '.RESTART > '  // SYS(1:LSYS) // '.LATMIN ')
         IF (PARALLEL) THEN
            CALL SYSTEM(' ( MPIRUN -NP ' // NPROC // ' /EXPORT/HOME/WALES/BIN/CPMD.X.MPI ' 
     1                  // SYS(1:LSYS) // '.LATMIN > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
         ELSE
            CALL SYSTEM(' ( CPMD.X.2 ' // SYS(1:LSYS) // '.LATMIN > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
         ENDIF
      ENDIF

      YESNO=.TRUE.

      OPEN (UNIT=7,FILE='ENERGY',STATUS='OLD')
      READ(7,*) F1, GEMAX
      IF (DEBUG) WRITE(*,'(A,3F20.10)') 'ENERGY,GEMAX,BOXLX=',F1,GEMAX,BOXLX
C     IF (GEMAX.GT.1.0D-5) THEN
C        WRITE(*,'(A,G15.5,A)') 'WARNING, GEMAX=',GEMAX,' CPMD WAVEFUNCTION CONVERGENCE SUSPECT'
C     ENDIF
      CLOSE(7)
      CALL SYSTEM('GREP "CPU TIME" ' // SYS(1:LSYS) // 
     1             '.OUT | TAIL -1 | SED -E "S/ *CPU TIME/ CPU TIME FOR CPMD CALL/" > TEMP')
C    1             '.OUT | TAIL -1 | SED -E "S/ *CPU TIME/ CPU TIME FOR CPMD CALL/" -E "/S/  / /G" > TEMP')
      OPEN (UNIT=7,FILE='TEMP',STATUS='OLD')
      READ(7,'(A)') BOXSTRING
      WRITE(*,'(A,A,F20.10,A,F20.10)') BOXSTRING,' ENERGY=',F1,' GEMAX=',GEMAX
      CLOSE(7)
      OPEN(UNIT=7,FILE='GEOMETRY',STATUS='OLD')
      DO J1=1,N
         READ(7,*) GEMAX,GEMAX,GEMAX,V(3*(J1-1)+1),V(3*(J1-1)+2),V(3*(J1-1)+3)
         V(3*(J1-1)+1)=-V(3*(J1-1)+1)
         V(3*(J1-1)+2)=-V(3*(J1-1)+2)
         V(3*(J1-1)+3)=-V(3*(J1-1)+3)
      ENDDO
      CLOSE(7)

      IF (EPREV.NE.0.0D0) THEN
         IF (F1.GT.EPREV) THEN
            THRESH=THRESH/1.2D0
         ELSE
            THRESH=MIN(THRESHMAX,THRESH*1.1D0)
         ENDIF
      ENDIF

      BOXLX=TEMP1+DIF
      DO J1=1,3*N
         XC(J1)=XSAVE(J1)*BOXLX/BSAVE
      ENDDO
      OPEN(UNIT=8,FILE='NEWGEOM',STATUS='UNKNOWN')
      DO J1=1,N
         WRITE(8,'(6F20.10)') XC(3*(J1-1)+1),XC(3*(J1-1)+2),XC(3*(J1-1)+3),0.0D0,0.0D0,0.0D0
      ENDDO
      CLOSE(8)
      CALL SYSTEM(' MV NEWGEOM GEOMETRY ')
      WRITE(BOXSTRING,'(F20.10,5F12.4)') BOXLX, 1.0D0, 1.0D0, 0.0D0, 0.0D0, 0.0D0
      CALL SYSTEM(' SED -E "S/CELLSIZE/' // BOXSTRING // '/" ' // SYS(1:LSYS) // '.RESTART > '  // SYS(1:LSYS) // '.LATMIN ')
      IF (PARALLEL) THEN
         CALL SYSTEM(' ( MPIRUN -NP ' // NPROC // ' /EXPORT/HOME/WALES/BIN/CPMD.X.MPI ' 
     1                // SYS(1:LSYS) // '.LATMIN > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
      ELSE
         CALL SYSTEM(' ( CPMD.X.2 ' // SYS(1:LSYS) // '.LATMIN > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
      ENDIF
      OPEN (UNIT=7,FILE='ENERGY',STATUS='OLD')
      READ(7,*) F2, GEMAX
      IF (DEBUG) WRITE(*,'(A,3F20.10)') 'ENERGY,GEMAX,BOXLX=',F2,GEMAX,BOXLX
C     IF (GEMAX.GT.1.0D-5) THEN
C        WRITE(*,'(A,G15.5,A)') 'WARNING, GEMAX=',GEMAX,' CPMD WAVEFUNCTION CONVERGENCE SUSPECT'
C     ENDIF
      CLOSE(7)
      CALL SYSTEM('GREP "CPU TIME" ' // SYS(1:LSYS) // 
     1             '.OUT | TAIL -1 | SED -E "S/ *CPU TIME/ CPU TIME FOR CPMD CALL/" > TEMP')
C    1             '.OUT | TAIL -1 | SED -E "S/ *CPU TIME/ CPU TIME FOR CPMD CALL/" -E "/S/  / /G" > TEMP')
      OPEN (UNIT=7,FILE='TEMP',STATUS='OLD')
      READ(7,'(A)') BOXSTRING
      WRITE(*,'(A,A,F20.10,A,F20.10)') BOXSTRING,' ENERGY=',F2,' GEMAX=',GEMAX
      CLOSE(7)

      BOXLX=TEMP1-DIF
      DO J1=1,3*N
         XC(J1)=XSAVE(J1)*BOXLX/BSAVE
      ENDDO
      OPEN(UNIT=8,FILE='NEWGEOM',STATUS='UNKNOWN')
      DO J1=1,N
         WRITE(8,'(6F20.10)') XC(3*(J1-1)+1),XC(3*(J1-1)+2),XC(3*(J1-1)+3),0.0D0,0.0D0,0.0D0
      ENDDO
      CLOSE(8)
      CALL SYSTEM(' MV NEWGEOM GEOMETRY ')
      WRITE(BOXSTRING,'(F20.10,5F12.4)') BOXLX, 1.0D0, 1.0D0, 0.0D0, 0.0D0, 0.0D0
      CALL SYSTEM(' SED -E "S/CELLSIZE/' // BOXSTRING // '/" ' // SYS(1:LSYS) // '.RESTART > '  // SYS(1:LSYS) // '.LATMIN ')
      IF (PARALLEL) THEN
         CALL SYSTEM(' ( MPIRUN -NP ' // NPROC // ' /EXPORT/HOME/WALES/BIN/CPMD.X.MPI ' 
     1               // SYS(1:LSYS) // '.LATMIN > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
      ELSE
         CALL SYSTEM(' ( CPMD.X.2 ' // SYS(1:LSYS) // '.LATMIN > ' // SYS(1:LSYS) // '.OUT ) >& /DEV/NULL')
      ENDIF
      OPEN (UNIT=7,FILE='ENERGY',STATUS='OLD')
      READ(7,*) F3, GEMAX
      IF (DEBUG) WRITE(*,'(A,3F20.10)') 'ENERGY,GEMAX,BOXLX=',F3,GEMAX,BOXLX
C     IF (GEMAX.GT.1.0D-5) THEN
C        WRITE(*,'(A,G15.5,A)') 'WARNING, GEMAX=',GEMAX,' CPMD WAVEFUNCTION CONVERGENCE SUSPECT'
C     ENDIF
      CLOSE(7)
      CALL SYSTEM('GREP "CPU TIME" ' // SYS(1:LSYS) // 
     1             '.OUT | TAIL -1 | SED -E "S/ *CPU TIME/ CPU TIME FOR CPMD CALL/" > TEMP')
C    1             '.OUT | TAIL -1 | SED -E "S/ *CPU TIME/ CPU TIME FOR CPMD CALL/" -E "/S/  / /G" > TEMP')
      OPEN (UNIT=7,FILE='TEMP',STATUS='OLD')
      READ(7,'(A)') BOXSTRING
      WRITE(*,'(A,A,F20.10,A,F20.10)') BOXSTRING,' ENERGY=',F3,' GEMAX=',GEMAX
      CLOSE(7)

      GRAD=(F2-F3)/(2.0D0*DIF)
      
      IF (GRAD.EQ.0.0D0) STOP

      SECOND=(F3+F2-2.0D0*F1)/(DIF*DIF)
      WRITE(*,'(A,I5,A,T50,F20.10)') 'ENERGY FOR LATTICE CYCLE ',NCOUNT,' IS ',F1
      WRITE(*,'(A,T50,F20.10)') 'GRADIENT WRT BOX LENGTH=',GRAD
      WRITE(*,'(A,T50,F20.10)') 'SECOND DERIVATIVE WRT BOX LENGTH=',SECOND
      WRITE(*,'(A,T50,F20.10)') 'FULL STEP SIZE=',-GRAD/SECOND
      EPREV=F1
      NCOUNT=NCOUNT+1
      IF (DABS(GRAD/SECOND).GT.THRESH) THEN
         BOXLX=TEMP1-THRESH*GRAD*DABS(SECOND)/(SECOND*DABS(GRAD))
         WRITE(*,'(A,T50,F20.10,A,F15.5)') 'SCALED STEP=',-THRESH*GRAD*DABS(SECOND)/(SECOND*DABS(GRAD)),' NEW BOX LENGTH=',BOXLX
         DO J1=1,3*N
            XC(J1)=XSAVE(J1)*BOXLX/BSAVE
         ENDDO
         GOTO 10
      ELSE
         BOXLX=TEMP1-GRAD/SECOND
         WRITE(*,'(A,T50,F20.10,A,F15.5)') 'SCALED STEP=',-GRAD/SECOND,' NEW BOX LENGTH=',BOXLX
         DO J1=1,3*N
            XC(J1)=XSAVE(J1)*BOXLX/BSAVE
         ENDDO
         IF (DABS(GRAD/SECOND).GT.DIF/1.0D1) GOTO 10
      ENDIF

      WRITE(*,'(A,I6,A)') 'BOX LENGTH OPTIMISATION CONVERGED IN ',NCOUNT,' STEPS. COORDINATES WRITTEN TO POINTS.LATMIN'
      DO J1=1,3*N
         XC(J1)=XSAVE(J1)*BOXLX/BSAVE
      ENDDO
      IF (FILTH.NE.0) PRINT*,'*** WARNING FILTH NOT EQUAL TO ZERO IN CPMDLATMIN'
      OPEN(UNIT=7,FILE='POINTS.LATMIN',STATUS='UNKNOWN')
      WRITE(7,'(3F20.10)') (XC(J1),J1=1,3*N)
      STOP

      RETURN
      END
