C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
C
C*************************************************************************
C
C  HERE WE CALCULATE THE POTENTIAL USING THE TWO AND THREE-BODY
C  TERMS OF LENNARD-JONES PLUS AXILROD-TELLER.
C                                        
C*************************************************************************
C
      SUBROUTINE AXPAIRS (N, X, P2, P3, POTEL, ZSTAR)
      IMPLICIT NONE 
      INTEGER N, J1, J2, I, J, IJ
      DOUBLE PRECISION X(3*N), POTEL, P2, P3, ZSTAR,
     1                 DIST(N,N), SDIST(N,N), DOT(N,N)
C
      P2=0.0D0
      P3=0.0D0
C
C  IT IS VITAL TO TAKE AS MUCH AS POSSIBLE OUT OF THE LOOPS,
C  ESPECIALLY THE INNER LOOP.
C
      DO 20 J1=1,N
         DIST(J1,J1)=0.0D0
         SDIST(J1,J1)=0.0D0
         DO 10 J2=J1+1,N
            SDIST(J1,J2)=( X(3*(J2-1)+1)-X(3*(J1-1)+1) )**2 +
     1                   ( X(3*(J2-1)+2)-X(3*(J1-1)+2) )**2 +
     2                   ( X(3*(J2-1)+3)-X(3*(J1-1)+3) )**2 
            DIST(J1,J2)=DSQRT(SDIST(J1,J2))
            DIST(J2,J1)=DIST(J1,J2)
            SDIST(J2,J1)=SDIST(J1,J2)
10       CONTINUE
20    CONTINUE
C
      DO 25 J1=1,N
         DO 35 J2=J1,N
            DOT(J2,J1)=X(3*(J2-1)+1)*X(3*(J1-1)+1)
     1                +X(3*(J2-1)+2)*X(3*(J1-1)+2)
     2                +X(3*(J2-1)+3)*X(3*(J1-1)+3)
            DOT(J1,J2)=DOT(J2,J1)
35       CONTINUE
25    CONTINUE
C
C  CALCULATE THE ENERGY
C  TRY TO MAKE SUN FORTRAN COMPILE THE INNER LOOP PROPERLY!
C
      DO 22 I=1,N
         DO 23 J=1,N
            IF (I.NE.J) THEN
               P2=P2+4.0D0/SDIST(I,J)**6-4.0D0/SDIST(I,J)**3
               DO 24 IJ=1,N
                  IF ((IJ.NE.I).AND.(IJ.NE.J)) THEN
                     P3=P3+(1.0-3.0*
     1                   (DOT(J,I)+DOT(IJ,J)-DOT(IJ,I)-DOT(J,J))
     2                  *(DOT(J,I)+DOT(IJ,IJ)-DOT(IJ,J)-DOT(IJ,I))
     3                  *(DOT(I,I)+DOT(IJ,J)-DOT(J,I)-DOT(IJ,I))
     4                  / (DIST(I,J)*DIST(I,IJ)*DIST(J,IJ))**2 ) 
     5                  / (DIST(I,J)*DIST(I,IJ)*DIST(J,IJ))**3
                   ENDIF
24              CONTINUE
             ENDIF
23       CONTINUE
22    CONTINUE
      P3=P3*ZSTAR/6.0
      P2=P2/2.0D0
      POTEL=P2+P3
      RETURN
      END
