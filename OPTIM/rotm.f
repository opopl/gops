C 
C  GPL LICENSE INFO {{{
C
C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
C }}}
C 
      SUBROUTINE ROTM(IDIR,ANG,IX,RT)
! DOXYGEN {{{
!>
!> \NAME ROTM
!> \BRIEF FORMS THREE DIMENSIONAL ROTATION MATRIX
!>  (IX=0 IF ANG IS EXPRESSED IN RADIANS, IX=1 IF DEG, ADD 10 TO IX TO GET TRANSPOSE)                 
!>
!> \PARAM[IN] IDIR - AXIS AROUND WHICH THE ANGLE ANG IS SPECIFIED
!> \PARAM[IN] ANG - ANGLE; CAN BE EXPRESSED EITHER IN RADIANS (IX=0) OR IN
!>              DEGREES (IX=1).
!> \PARAM[IN] IX - SPECIFY THE INPUT FORMAT FOR THE ANGLE ANG. VALUES:
!>              0 - RADIANS
!>              1 - DEGREES
!>              ADDING +10 TO IX RESULTS IN THE MATRIX BEING TRANSPOSED. 
!> \PARAM[OUT] RT - THE 3X3 ROTATION MATRIX 
!>
! }}}
C
C     FORMS THREE DIMENSIONAL ROTATION MATRIX (IX=0 IF ANG IN RADS,
C     IX=1 IF DEG,  ADD 10 TO IX TO GET TRANSPOSE)
C
      IMPLICIT NONE
! SUBROUTINE PARAMETERS 
      INTEGER IDIR,IX
      DOUBLE PRECISION RT(3,3),ANG

! LOCAL PARAMETERS 
      INTEGER I,J,INK,IEO,IBTAND
      DOUBLE PRECISION ATOR,TANG
! SUBROUTINE BODY {{{
      IBTAND(I,J) = IAND(I,J)
      IEO(I)=2*IBTAND(I,1)-1
C
      ATOR=DACOS(-1.D0)/180.D0
      INK=IX/10
      RT(1:3,1:3)=0.0D0
      TANG=ANG
      IF(IX.EQ.1)TANG=ANG*ATOR
      DO J=1,3
         RT(J,J)=DCOS(TANG)
         RT(IDIR,J)=IBTAND(IDIR,J)/MAX(IDIR,J)
      ENDDO
      DO I=1,3
         DO J=1,I
            IF(I.NE.J.AND.I.NE.IDIR.AND.J.NE.IDIR)THEN
               RT(I,J)=IEO(I*J)*DSIN(TANG)
               RT(J,I)=-RT(I,J)
            ENDIF
         ENDDO
      ENDDO
      IF(INK.NE.0)CALL MTRANSOPT(RT,RT,3,3,3,3)
      ! }}}
      RETURN
      END
