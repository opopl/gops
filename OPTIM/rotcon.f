C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
      SUBROUTINE ROTCON(IT,IPRNT,IERR,PTEST)
C
C  COMPUTES ROTATIONAL CONSTANTS (IN CM-1), OPTIONALLY
C  PRINTS THEM AND RETURNS AN ERROR MESSAGE IF INERTIA
C  TENSOR PASSED IS NOT DIAGONAL.
C
      IMPLICIT NONE
      DOUBLE PRECISION IT(3,3),RC(3),PI,FACTOR,Z
      INTEGER NORD(3),IPRNT,IERR,IBOT,I,J
      DATA FACTOR /189.123013D0/
      DATA PI /3.141592654D0/
      LOGICAL PTEST

      Z=0.D0
      IBOT=0
      IERR=0
      DO I=1,3
         DO J=I+1,3
            Z=DABS(IT(I,J))+DABS(IT(J,I))+Z
         ENDDO
      ENDDO
      IF(Z.GT.1.D-9)THEN
       WRITE(6,100)
 100   FORMAT(' ***PROGRAM ERROR***, INERTIA TENSOR NOT DIAGONAL IN ROTCON.')
       PRINT*,'Z=',Z
       IERR=1
       IBOT=1
      ELSE
       IBOT=1
      ENDIF
      DO 20 I=1,3
       IF(IT(I,I).GT.0)THEN
        RC(I)=FACTOR/IT(I,I)
        RC(I)=RC(I)/PI
       ELSE
        IBOT=2
       ENDIF
 20   CONTINUE
      CALL PIKSR2(3,RC,NORD)
      IF(IPRNT.NE.0)THEN
       IF (PTEST) WRITE(6,200)
       IF (PTEST) WRITE(6,300) (RC(J),J=IBOT,3),IT(1,1),IT(2,2),IT(3,3)
 200   FORMAT(' ROTCON> ROTATIONAL CONSTANTS (IN CM-1) AND PRINCIPAL MOMENTS OF INERTIA: ')
 300   FORMAT((6(F15.5,1X)))
      ENDIF
      RETURN
      END        
