C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
      PROGRAM OPTIM3
      USE COMMONS
      USE PORFUNCS
      !USE OPTIMHEADER
      USE KEY, ONLY: FILTHSTR,SEQ,NUMGLY,TARFL,CASTEPJOB,CP2KJOB,ONETEPJOB
      USE MODAMBER9, ONLY: AMBERSTR,AMBERSTR1,INPCRD,ATMASS1

      IMPLICIT NONE

      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR, LAST, J1
      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,NABT,RINGPOLYMERT
      COMMON /BUFINF/ ITEM, NITEMS, LOC(80), LINE, SKIPBL, CLEAR, NCR,
     &                NERROR, IR, ECHO, LAST, CAT
      DOUBLE PRECISION DUMMY
      CHARACTER ZDUM*5
      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG, FILTH, FILTH2
      CHARACTER FNAME*80, TSTRING*80
      CHARACTER(LEN=80) :: SYS
      CHARACTER WORD*16
      CHARACTER(LEN=10)  CHECK
      CHARACTER(LEN=20) OTEMP, OSTRING, CSTRING
      CHARACTER(LEN=21) DSTRING1, DSTRING2
      CHARACTER(LEN=80) ARGSTRING, MYLINE
      LOGICAL AMH
      INTEGER :: NRES,I_RES,NOGLY

      !CALL PRINTHEADER
      CASTEP=.FALSE.
      ONETEP=.FALSE.
      CP2K=.FALSE. 
      CPMD=.FALSE.
      VARIABLES=.FALSE.
      RINGPOLYMERT=.FALSE.
      AMBER=.FALSE.
      AMBERT=.FALSE.
      NABT=.FALSE.

C
C  THE FUNCTION IARGC RETURNS THE ARGUMENT COUNT
C  THE STATEMENT CALL GETARG( K , ARG ) GETS THE  KTH  COMMAND-
C  LINE ARGUMENT AND PUTS IT INTO ARG.
C  THE 0TH ARGUMENT IS THE COMMAND NAME.
C
C  THIS PROVIDES A NEW WAY TO FILTHIFY OPTIM.
C
      CALL IARGC_SUBR(NARG) ! SAT: SUBROUTINE INTERFACE TO IARGC
      FILTH=0
      FILTH2=0
      IF (NARG.GT.0) THEN
         CALL GETARG(1,ARGSTRING)
C
C  BOTH METHODS TO CONVERT THE CHARACTER TO AN INTEGER SEEM TO WORK.
C
C  IT WOULD BE BETTER TO USE ARGSTRING AS A STRING, SO THAT NON-NUMERICAL
C  EXTENSIONS WOULD WORK. THIS WOULD REQUIRE CORRESPONDING CHANGES TO FILTHY_PHYLLIS.
C  WE COULD ALSO REMOVE THE ODATA.READ FILE IF FILTHY_PHYLLIS WERE CHANGED TO WORK
C  WITH FORK AND WAIT!
C
C        FILTH2=ATOI(ARGSTRING)
         READ(ARGSTRING,*) FILTH2
         WRITE(*,'(A,I6,A)') ' COMMAND LINE ARGUMENT READ, USING EXTENSION NUMBER ',FILTH2,' FOR ALL I/O'
         FILTH=FILTH2
      ELSE
         ARGSTRING=''
      ENDIF

      IF (FILTH2.EQ.0) THEN
         OPEN(5,FILE='ODATA',STATUS='OLD')
      ELSE
         WRITE(OTEMP,*) FILTH2
         WRITE(OSTRING,'(A)') 'ODATA.' // TRIM(ADJUSTL(OTEMP))
         OPEN(5,FILE=OSTRING,STATUS='OLD')
      ENDIF

190   CALL INPUT(END)
      IF (.NOT. END) CALL READU(WORD)
      IF (END.OR.WORD.EQ.'STOP'.OR.WORD.EQ.'POINTS') GOTO 200
      IF (WORD.EQ.'    ' .OR.WORD.EQ.'NOTE'.OR.WORD.EQ.'COMMENT'.OR. WORD .EQ. '\\') THEN
         GOTO 190
      ELSE IF ((WORD.EQ.'CPMD').OR.(WORD.EQ.'CPMDC')) THEN
         CPMD=.TRUE.
         IF (NITEMS.GT.1) THEN
            CALL READA(SYS)
         ELSE
            WRITE(*,'(A)') ' ERROR - NO CPMD SYSTEM SPECIFIED'
            STOP
         ENDIF
         DO J1=1,80
            IF (SYS(J1:J1).EQ.' ') THEN
               LSYS=J1-1
               GOTO 112
            ENDIF
         ENDDO
112      CONTINUE
      ELSE IF ((WORD.EQ.'ONETEP').OR.(WORD.EQ.'ONETEPC')) THEN
         ONETEP=.TRUE. 
         IF (WORD.EQ.'ONETEP') DFTP=.TRUE.
         IF (NITEMS.GT.2) THEN
            CALL READA(ONETEPJOB)
            CALL READA(SYS)
         ELSE
            WRITE(*,'(A)') 'GETPARAMS> ERROR - ONETEP INPUT MANGLED'
            STOP
         ENDIF
         DO J1=1,80
            IF (SYS(J1:J1).EQ.' ') THEN
               LSYS=J1-1
               GOTO 231
            ENDIF
         ENDDO
231      CONTINUE
      ELSE IF ((WORD.EQ.'CP2K').OR.(WORD.EQ.'CP2KC')) THEN 
         CP2K=.TRUE.
         IF (WORD.EQ.'CP2K') DFTP=.TRUE. 
         IF (NITEMS.GT.2) THEN
            CALL READA(CP2KJOB)
            CALL READA(SYS)
         ELSE
            WRITE(*,'(A)') 'GETPARAMS> ERROR - CP2K INPUT MANGLED'
            STOP
         ENDIF
         DO J1=1,80
            IF (SYS(J1:J1).EQ.' ') THEN
               LSYS=J1-1
               GOTO 271
            ENDIF
         ENDDO
271      CONTINUE
      ELSE IF ((WORD.EQ.'CASTEP').OR.(WORD.EQ.'CASTEPC')) THEN
         CASTEP=.TRUE.
         IF (WORD.EQ.'CASTEP') DFTP=.TRUE.
         IF (NITEMS.GT.2) THEN
            CALL READA(CASTEPJOB)
            CALL READA(SYS)
         ELSE
            WRITE(*,'(A)') 'GETPARAMS> ERROR - CASTEP INPUT MANGLED'
            STOP
         ENDIF
         DO J1=1,80
            IF (SYS(J1:J1).EQ.' ') THEN
               LSYS=J1-1
               GOTO 211
            ENDIF
         ENDDO
211      CONTINUE
      ELSE IF (WORD.EQ.'RINGPOLYMER') THEN
         RINGPOLYMERT=.TRUE.
         GOTO 200
      ELSE IF (WORD.EQ.'VARIABLES') THEN
         VARIABLES=.TRUE.
         GOTO 200
      ELSE IF (WORD.EQ.'AMBER') THEN
         AMBER=.TRUE.
         NATOMS=0
         OPEN (UNIT=9,FILE='COORDS.AMBER',STATUS='OLD')
310      READ (UNIT=9,IOSTAT=IOS,FMT='(A3)') CHECK
         IF (IOS.LT.0) THEN
           PRINT *,'END OF FILE BEFORE ALL INFORMATION SPECIFIED'
           STOP
         ENDIF
         IF (CHECK.EQ.'END' .OR. CHECK.EQ.'END' .OR. CHECK.EQ.'END') THEN
            CLOSE(9)
            GOTO 400
         ENDIF
         NATOMS=NATOMS+1
         GOTO 310
      ELSE IF (WORD.EQ.'AMBER9'.OR.(WORD.EQ.'NAB')) THEN
         IF(WORD.EQ.'AMBER9') AMBERT=.TRUE.
         IF(WORD.EQ.'NAB') NABT=.TRUE.
!         NATOMS=0
        INPCRD='COORDS.INPCRD'
       IF(NITEMS<3) THEN
         CALL READA(AMBERSTR)
          IF (FILTH2.NE.0) THEN
            WRITE(OTEMP,*) FILTH2
            WRITE(OSTRING,'(A)') TRIM(ADJUSTL(AMBERSTR))//'.'//TRIM(ADJUSTL(OTEMP))
            WRITE(*,*) 'OSTRING=', OSTRING
          ELSE
            WRITE(OSTRING,'(A)') TRIM(ADJUSTL(AMBERSTR))
          END IF
          WRITE(*,'(A)') ' GETPARAMS> INPUT COORDINATES FOR AMBER9 SYSTEM WILL BE READ FROM ',TRIM(ADJUSTL(AMBERSTR)),OSTRING
         CALL AMBERINTERFACE(NATOMS,2,INPCRD,6)
         CALL AMBER_READCOORDS(OSTRING)
       ELSE IF(NITEMS==3) THEN
         CALL READA(AMBERSTR)
         CALL READA(AMBERSTR1)
          WRITE(*,'(A)') ' GETPARAMS> INPUT COORDINATES FOR AMBER9 SYSTEM WILL BE READ FROM ', TRIM(ADJUSTL(AMBERSTR)),
     &                         'TYPE: ', TRIM(ADJUSTL(AMBERSTR1))
          IF(TRIM(ADJUSTL(AMBERSTR1)).EQ.'INPCRD') THEN
           INPCRD=AMBERSTR
           WRITE(*,'(A)') ' GETPARAMS> READING AMBER INPCRD COORDINATE FORMAT'
          ELSE
           WRITE(*,'(A)') ' GETPARAMS> ERROR - NO OTHER TYPES DEFINED CURRENTLY THAN INPCRD'
          END IF
           CALL AMBERINTERFACE(NATOMS,2,INPCRD,6)
       END IF
        GOTO 400           ! FINISHED COUNTING ATOMS, GO TO THE END OF THE SUBROUTINE
      ELSE IF (WORD.EQ.'AMH') THEN

         AMH=.TRUE.
         NATOMS=0
         WRITE(6,*)'ENTERING GETPARAMS'

         OPEN(UNIT=30,FILE='PRO.LIST',STATUS='OLD',FORM='FORMATTED')
         READ (30,1000)TARFL
1000     FORMAT(A5)
         CLOSE(30)

         OPEN(30,FILE='PROTEINS/'//TARFL,STATUS='OLD')
            READ(30,*)
            READ(30,*)NRES
            IF (NRES.GT.500) THEN
                WRITE(6,*) 'FAILURE NRES GR THAN 500 COUNTATOMS'
                STOP
            ENDIF
            READ (30,25)(SEQ(I_RES),I_RES=1,NRES)
25         FORMAT(25(I2,1X))
          CLOSE(30)
               
          NOGLY = 0
          NUMGLY = 0
           DO I_RES=1,NRES
             IF (SEQ(I_RES).NE.8) NOGLY = NOGLY +1
             IF (SEQ(I_RES).EQ.8) NUMGLY = NUMGLY +1
           ENDDO
            NATOMS = NOGLY*3 + NUMGLY*2
            WRITE(6,*)'NATOMS NOGLY  NUMGLY  ',NATOMS,NOGLY,NUMGLY
           GOTO 400

       ELSE IF (WORD.EQ.'CHARMM') THEN
! DAE WE ARE GOING TO ASSUME THAT THERE IS A CHARMM FORMAT FILE IN THE DIRECTORY CALLED INPUT.CRD, AND THE FIRST
! LINE OF IT WILL TELL US THE NUMBER OF ATOMS. IN 99% OF OLD (OPTIM<3) RUNS THIS IS WHAT I DID, BUT THE OLD VERSIONS
! WERE MORE FLEXIBLE IN THAT ANY FILENAME COULD BE SPECIFIED IN THE CHARMM BIT OF THE ODATA FILE

         IF (FILTH2.NE.0) THEN
            WRITE(OTEMP,*) FILTH2
            WRITE(OSTRING,'(A)') 'INPUT.CRD.' // TRIM(ADJUSTL(OTEMP))
         ELSE
            WRITE(OSTRING,'(A)') 'INPUT.CRD'
         ENDIF
         OPEN (UNIT=9,FILE=OSTRING,STATUS='OLD',IOSTAT=IOS)

         IF (IOS /= 0) THEN
            WRITE(OSTRING,'(A)') 'INPUT.CRD'
            OPEN (UNIT=9,FILE=OSTRING,STATUS='OLD',IOSTAT=IOS)
            IF (IOS == 0) THEN
         ELSE
            WRITE(*,'(2A)') 'THANKS TO OUR NEW DYNAMIC MEMORY ALLOCATION OVERLORDS, THERE MUST BE A CHARMM-FORMAT FILE CALLED ',
     &    '"INPUT.CRD" FOR CHARMM TO FIND OUT THE NUMBER OF ATOMS. FEEL FREE TO RECODE TO ENABLE ANY FILENAME TO WORK PROPERLY.'
            STOP
         ENDIF
         ENDIF
         DO
              READ(9,*) MYLINE
              IF (MYLINE(1:1)=='*') THEN ! SAT THIS IS THE GODDAMN CHARMM COMMENT LINE
                    CYCLE
              ELSE
                    READ(MYLINE,*) NATOMS
                    EXIT
              ENDIF
         ENDDO
         CLOSE(9)

! DAE WE ALSO NEED TO FIND OUT WHAT MAXAIM IS IN CHARMM, AND SET MXATMS IN OPTIM TO BE THE SAME, SO THAT THOSE ARRAYS WHICH
! ARE PASSED BETWEEN THE TWO CAN BE DECLARED CORRECTLY. MXATMS IS NOW STORED IN MODMXATMS.
       
         CALL GETMAXAIM

         GOTO 400

      ELSE IF (WORD.EQ.'UNRES') THEN
! JMC WE ARE GOING TO ASSUME THAT THERE IS A COORDS FILE. THE FIRST LINE OF IT WILL TELL US THE NUMBER OF ATOMS.

         IF (FILTH2.EQ.0) THEN
            OPEN (UNIT=9,FILE='COORDS',STATUS='OLD',IOSTAT=IOS)
         ELSE
            WRITE(CSTRING,'(A)') 'COORDS.'//TRIM(ADJUSTL(OTEMP))
            OPEN (UNIT=9,FILE=CSTRING,STATUS='OLD',IOSTAT=IOS)
         ENDIF
         IF (IOS /= 0) THEN
            WRITE(*,'(2A)') 'THANKS TO OUR NEW DYNAMIC MEMORY ALLOCATION OVERLORDS, THERE MUST BE A COORDS FILE PRESENT ',
     &    ' FOR OPTIM3 TO FIND OUT THE NUMBER OF ATOMS FOR UNRES. PLEASE MAKE IT SO!'
            STOP
         ENDIF
         READ(9,*) NATOMS
         CLOSE(9)

         GOTO 400

      ENDIF
      GOTO 190

200   CONTINUE

      IF (CASTEP) THEN
         FNAME=SYS(1:LSYS) // '.CELL'
         WRITE(*,'(A,A)') ' GETPARAMS> COUNTING ATOMS IN FILE ',FNAME
         OPEN(UNIT=7,FILE=FNAME,STATUS='OLD')
         NATOMS=0
         COORDSLOOP: DO
            READ(7,'(A21)') DSTRING1
            CALL UPPERCASE(DSTRING1)
C           WRITE(*,'(A21)') DSTRING1
            IF (DSTRING1(1:16).EQ.'%BLOCK POSITIONS') THEN
               DO 
                  READ(7,'(A21)') DSTRING1
                  CALL UPPERCASE(DSTRING1)
C                 WRITE(*,*) DSTRING1
                  IF (DSTRING1(1:19).EQ.'%ENDBLOCK POSITIONS') EXIT COORDSLOOP
                  NATOMS=NATOMS+1
               ENDDO
            ENDIF
         ENDDO COORDSLOOP
C        WRITE(*,'(A,I4,A)') 'GETPARAMS> CASTEP RUN FOR ',NATOMS,' ATOMS'
         CLOSE(7)
      ELSEIF (ONETEP) THEN
         FNAME=SYS(1:LSYS) // '.DAT'
         WRITE(*,'(A,A)') 'GETPARAMS> COUNTING ATOMS IN FILE ',FNAME
         OPEN(UNIT=7,FILE=FNAME,STATUS='OLD')
         NATOMS=0
         COORDSLOOP2: DO
            READ(7,'(A21)') DSTRING1
            CALL UPPERCASE(DSTRING1)
C           WRITE(*,'(A21)') DSTRING1
            IF (DSTRING1(1:16).EQ.'%BLOCK POSITIONS') THEN
               DO 
                  READ(7,'(A21)') DSTRING1
                  CALL UPPERCASE(DSTRING1)
C                 WRITE(*,*) DSTRING1
                  IF (DSTRING1(1:19).EQ.'%ENDBLOCK POSITIONS') EXIT COORDSLOOP2
                  NATOMS=NATOMS+1
               ENDDO
            ENDIF
         ENDDO COORDSLOOP2
         WRITE(*,'(A,I4,A)') 'GETPARAMS> ONETEP RUN FOR ',NATOMS,' ATOMS'
         CLOSE(7)
      ELSEIF (CP2K) THEN 
         FNAME=SYS(1:LSYS) // '.INP'
         WRITE(*,'(A,A)') ' GETPARAMS> COUNTING ATOMS IN FILE ',FNAME
         OPEN(UNIT=7,FILE=FNAME,STATUS='OLD')
         NATOMS=0
         COORDSLOOP3: DO
            READ(7,'(A21)') DSTRING1
            DSTRING1=ADJUSTL(DSTRING1)
            CALL UPPERCASE(DSTRING1)
C           WRITE(*,'(A21)') DSTRING1
            IF (DSTRING1(1:6).EQ.'&COORD') THEN
               DO 
                  READ(7,'(A21)') DSTRING1
                  DSTRING1=ADJUSTL(DSTRING1)
                  CALL UPPERCASE(DSTRING1)
C                 WRITE(*,*) DSTRING1
                  IF (DSTRING1(1:10).EQ.'&END COORD') EXIT COORDSLOOP3
                  IF (DSTRING1(1:6).EQ.'SCALED') NATOMS=NATOMS-1
                  IF (DSTRING1(1:4).EQ.'UNIT') NATOMS=NATOMS-1
                  NATOMS=NATOMS+1
               ENDDO
            ENDIF
         ENDDO COORDSLOOP3
         WRITE(*,'(A,I4,A)') ' GETPARAMS> CP2K RUN FOR ',NATOMS,' ATOMS'
         CLOSE(7) 
      ELSE IF (CPMD) THEN
         FNAME=SYS(1:LSYS)
         WRITE(*,'(A,A)') 'GETPARAMS> READING COORDINATES FROM FILE ',FNAME
         OPEN(UNIT=7,FILE=FNAME,STATUS='OLD')
         NATOMS=0
11       READ(7,'(A)') FNAME
         IF (FNAME(1:6).EQ.'&ATOMS') THEN
            J1=0
12          READ(7,'(A)') TSTRING
            IF (TSTRING(1:1).EQ.'*') THEN
               J1=J1+1
               READ(7,'(A)') FNAME
               READ(7,*) NTYPE(J1)
               DO J2=1,NTYPE(J1)
                  READ(7,*) DUMMY
               ENDDO
               NATOMS=NATOMS+NTYPE(J1)
               GOTO 12
            ELSE IF (TSTRING(1:1).EQ.' ') THEN
               GOTO 12
            ELSE IF (TSTRING(1:4).EQ.'&END') THEN
               GOTO 13
            ENDIF
         ELSE
            GOTO 11
         ENDIF
13       CONTINUE
      ELSE IF (VARIABLES) THEN
         NATOMS=0
110      CALL INPUT(END)
         IF (.NOT.END) THEN
            CALL READF(DUMMY)
            NATOMS=NATOMS+1
            GOTO 110
         ENDIF
      ELSE IF (RINGPOLYMERT) THEN
         NATOMS=0
111      CALL INPUT(END)
         IF (.NOT.END) THEN
            CALL READF(DUMMY)
            NATOMS=NATOMS+NITEMS
            GOTO 111
         ENDIF
      ELSE 
         NATOMS=0
300      CALL INPUT(END)
         IF (.NOT.END) THEN
            CALL READA(ZDUM)
            IF (ZDUM(1:2).EQ.'  ') GOTO 300
            CALL READF(DUMMY)
            CALL READF(DUMMY)
            CALL READF(DUMMY)
            NATOMS=NATOMS+1
            GOTO 300
         ENDIF
      ENDIF
400   CLOSE(5)

      WRITE(*,'(A,I6)') ' GETPARAMS> NUMBER OF ATOMS (OR VARIABLES)  DETERMINED AS ',NATOMS

      CALL OPTIM(FILTH,FILTH2,ARGSTRING)

      STOP
      END
