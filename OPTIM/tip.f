C   OPTIM: A PROGRAM FOR OPTIMIZING GEOMETRIES AND CALCULATING REACTION PATHWAYS
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF OPTIM.
C
C   OPTIM IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   OPTIM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C

C
C  ENERGY AND GRADIENT FOR RIGID BODY TIPNP USING NEW RIGID BODY
C  DERIVATIVE FUNCTIONS ETC.
C
      SUBROUTINE TIPNP(TIPID,X,V,ETIP,GTEST,SECT)

      USE COMMONS
      USE KEY, ONLY : EFIELD
      USE MODHESS

      IMPLICIT NONE

! SUBROUTINE ARGUMENTS

      INTEGER, INTENT(IN) :: TIPID                   ! TIPNP, N=1-5
      DOUBLE PRECISION, INTENT(IN) :: X(3*NATOMS)    ! COORDINATES
      DOUBLE PRECISION, INTENT(OUT) :: V(3*NATOMS)   ! GRADIENTS
      DOUBLE PRECISION, INTENT(OUT) :: ETIP          ! ENERGY
      LOGICAL, INTENT(IN) :: GTEST                   ! CALCULATE GRADIENTS
      LOGICAL, INTENT(IN) :: SECT                    ! CALCULATE SECOND DERIVATIVES

! LOCAL VARIABLES

      INTEGER J1, J2, K1, K2, NAT2, NSITE, J3, J4, J3MIN, J4MIN
      DOUBLE PRECISION X1, X2, Y1, Y2, Z1, Z2, FLJ, DFLJ, D2FLJ, FC, DFC, D2FC,
     1                 PAIRENERGY, EPS2, RALPHA12, RALPHA22, RDIST, 
     2                 M1, L1, N1, M2, L2, N2, ALPHA1, CA1, CA2, ALPHA2, S1, S2, C3A1, C3A2,
     3                 L12, M12, N12, L22, M22, N22, SIGMA, C6, C12,
     4                 GX1, GY1, GZ1, GL1, GM1, GN1, GL2, GM2, GN2, C2A2, C2A1,
     5                 DIST,
     6                 P1X, P1Y, P1Z, P2X, P2Y, P2Z, XDUMM, Q1, Q2,
     7                 CHARGE(5), HTOKJ, SITE(5,3)
      PARAMETER (HTOKJ=1389.354848D0) ! CONVERSION FACTOR FOR COULOMB ENERGY AND GRADIENTS

      INTEGER :: RBCOORD1, RBCOORD2, INDEX1, INDEX2
      DOUBLE PRECISION :: FIRSTDERIVATIVES(12)
      DOUBLE PRECISION :: PAIRGRAD(12), PAIRHESS(12,12)
      DOUBLE PRECISION :: DEDRIJ, D2EDRIJ2
      DOUBLE PRECISION :: SINGLEGRAD(6), SINGLEHESS(6,6)  ! FOR USE WITH EXTERNAL FIELDS

      DOUBLE PRECISION :: ZREAL, EFIELDINTERACTION, PDOTXZERO, RALPHA1, EVTOKJ
      PARAMETER (EVTOKJ=96.4847D0) ! EV TO KJ/MOL CONVERSION, INPUT FIELD IN V/A

! EXTERNAL FUNCTIONS

      DOUBLE PRECISION :: DRIJDXRB, D2RIJDXRB1DXRB2
      DOUBLE PRECISION :: DZDXRB, D2ZDXRB1DXRB2
      
C
C  STATEMENT FUNCTIONS.
C  SITE-SITE ENERGY TERMS - COULOMBIC AND LJ. XDUMM IS THE SITE-SITE DISTANCE.
C
      FLJ(XDUMM)=(C12/XDUMM**6-C6)/XDUMM**6
      DFLJ(XDUMM)=-6.0D0*(-C6+2.0D0*C12/XDUMM**6)/XDUMM**7
      D2FLJ(XDUMM)=6.0D0*(26.0D0*C12/XDUMM**6 - 7.0D0*C6)/XDUMM**8

      FC(Q1,Q2,XDUMM)=Q1*Q2/XDUMM
      DFC(Q1,Q2,XDUMM)=-Q1*Q2/XDUMM**2
      D2FC(Q1,Q2,XDUMM)=2.0D0*Q1*Q2/XDUMM**3

C     PRINT*,'COORDS IN TIP:'
C     WRITE(*,'(3F20.10)') (X(J1),J1=1,3*NATOMS)
C
C DISTINGUISH TIP1P, TIP2P, TIP3P, TIP4P
C
      SITE(1,1)=0.0D0
      SITE(1,2)=0.0D0
      SITE(1,3)=0.0D0
C      SITE(1,3)=0.065098D0
      SITE(2,1)=0.756950327D0
      SITE(2,2)=0.0D0
      SITE(2,3)=-0.5858822760D0
C      SITE(2,3)=-0.5207842760D0
      SITE(3,1)=-0.756950327D0
      SITE(3,2)=0.0D0
      SITE(3,3)=-0.5858822760D0
C      SITE(3,3)=-0.5207842760D0
      SITE(4,1)=0.0D0
      SITE(4,2)=0.0D0
      CHARGE(1)=0.0D0
      NSITE=4

      IF (TIPID.EQ.1) THEN
         C6=2510.4D0 ! LJ COEFFICIENTS IN KJ/MOL ANGSTROM**6 OR ANGSTROM**12
         C12=2426720.0D0
         SITE(4,3)=0.0D0
C        SITE(4,3)=0.065098D0
         CHARGE(2)=0.4D0
         CHARGE(3)=0.4D0
         CHARGE(4)=-0.8D0
      ELSE IF (TIPID.EQ.2) THEN
         C6=2510.4D0 ! LJ COEFFICIENTS IN KJ/MOL ANGSTROM**6 OR ANGSTROM**12
         C12=2907880.0D0
         SITE(4,3)=-0.15D0
C        SITE(4,3)=-0.084902D0
         CHARGE(2)=0.535D0
         CHARGE(3)=0.535D0
         CHARGE(4)=-1.07D0
      ELSE IF (TIPID.EQ.3) THEN
         C6=2489.48D0 ! LJ COEFFICIENTS IN KJ/MOL ANGSTROM**6 OR ANGSTROM**12
         C12=2435088.0D0
         SITE(4,3)=0.0D0
C        SITE(4,3)=0.065098D0
         CHARGE(2)=0.417D0
         CHARGE(3)=0.417D0
         CHARGE(4)=-0.834D0
      ELSE IF (TIPID.EQ.4) THEN
         C6=2552.24D0 ! LJ COEFFICIENTS IN KJ/MOL ANGSTROM**6 OR ANGSTROM**12
         C12=2510.4D3
         SITE(4,3)=-0.15D0
C        SITE(4,3)=-0.084902D0
         CHARGE(2)=0.52D0
         CHARGE(3)=0.52D0
         CHARGE(4)=-1.04D0
      ELSE IF (TIPID.EQ.5) THEN
! C6  = 590.3472412D0 KCAL/MOL ANGSTROM**6
! C12 = 544546.6644D0 KCAL/MOL ANGSTROM**12 
         C6=2470.012857D0 ! LJ COEFFICIENTS IN KJ/MOL ANGSTROM**6 OR ANGSTROM**12
         C12=2278383.244D0
         NSITE=5
         SITE(4,1)=0.0D0; SITE(4,2)= 0.571543301D0; SITE(4,3)=0.404151276D0
         SITE(5,1)=0.0D0; SITE(5,2)=-0.571543301D0; SITE(5,3)=0.404151276D0
C         SITE(4,1)=0.0D0; SITE(4,2)= 0.571543301D0; SITE(4,3)=0.469249307D0
C         SITE(5,1)=0.0D0; SITE(5,2)=-0.571543301D0; SITE(5,3)=0.469249307D0
         CHARGE(2)=0.241D0
         CHARGE(3)=0.241D0
         CHARGE(4)=-0.241D0
         CHARGE(5)=-0.241D0
      ENDIF

      NAT2=NATOMS/2
      ETIP=0.0D0
      V = 0.0D0
      HESS = 0.0D0

C     PRINT*,'SITE 1', SITE(1,1),SITE(1,2),SITE(1,3)
C     PRINT*,'SITE 2', SITE(2,1),SITE(2,2),SITE(2,3)
C     PRINT*,'SITE 3', SITE(3,1),SITE(3,2),SITE(3,3)
C     PRINT*,'SITE 4', SITE(4,1),SITE(4,2),SITE(4,3)

C
C  POTENTIAL ENERGY FIRST.
C
      DO J1=1,NAT2
         X1=X(3*(J1-1)+1)
         Y1=X(3*(J1-1)+2)
         Z1=X(3*(J1-1)+3)
         L1=X(3*(NAT2+J1-1)+1)
         M1=X(3*(NAT2+J1-1)+2)
         N1=X(3*(NAT2+J1-1)+3)
         L12=L1**2
         M12=M1**2
         N12=N1**2
         ALPHA1=SQRT(L12+M12+N12)
         RALPHA1=1.0D0/MAX(ALPHA1,1.0D-10)
         RALPHA12=1.0D0/MAX(ALPHA1**2,1.0D-20)
         CA1=COS(ALPHA1)
         C2A1=CA1
         IF (ALPHA1.LT.0.0010D0) THEN
C           C3A1=-ALPHA1/2+ALPHA1**3/24 ! BUG
            C3A1=-0.5D0+ALPHA1**2/24.0D0
            S1=1.0D0-ALPHA1**2/6
         ELSE
            C3A1=(CA1-1.0D0)/ALPHA1**2
            S1=SIN(ALPHA1)/ALPHA1
         ENDIF
C        WRITE(*,'(A,6F15.5)') 'ALPHA1,RALPHA12,CA1,C2A1,C3A1,S1=',ALPHA1,RALPHA12,CA1,C2A1,C3A1,S1
         DO J2=J1+1,NAT2
            X2=X(3*(J2-1)+1)
            Y2=X(3*(J2-1)+2)
            Z2=X(3*(J2-1)+3)
            L2=X(3*(NAT2+J2-1)+1)
            M2=X(3*(NAT2+J2-1)+2)
            N2=X(3*(NAT2+J2-1)+3)
            L22=L2**2
            M22=M2**2
            N22=N2**2
            ALPHA2=SQRT(L22+M22+N22)
            RALPHA22=1.0D0/MAX(ALPHA2**2,1.0D-20)
            CA2=COS(ALPHA2)
            C2A2=CA2
            IF (ALPHA2.LT.0.00001D0) THEN
C              C3A2=-ALPHA2/2+ALPHA2**3/24
               C3A2=-0.5D0+ALPHA2**2/24.0D0
               S2=1.0D0-ALPHA2**2/6
            ELSE
               C3A2=(CA2-1.0D0)/ALPHA2**2
               S2=SIN(ALPHA2)/ALPHA2
            ENDIF
C
C  O-O LJ CONTRIBUTION.
C
            P1X=SITE(1,1)
            P1Y=SITE(1,2)
            P1Z=SITE(1,3)
            P2X=SITE(1,1)
            P2Y=SITE(1,2)
            P2Z=SITE(1,3)
            DIST= 
     1  SQRT((C2A1*P1X-C3A1*L1*(L1*P1X+M1*P1Y+N1*P1Z)-C2A2*P2X+C3A2*L2*(L2*P2X + M2*P2Y + N2*P2Z)+ 
     1      (N1*P1Y - M1*P1Z)*S1 - (N2*P2Y - M2*P2Z)*S2 + X1 - X2)**2 + 
     1   (C2A1*P1Y - C3A1*M1*(L1*P1X + M1*P1Y + N1*P1Z) - C2A2*P2Y+C3A2*M2*(L2*P2X+M2*P2Y+N2*P2Z)+ 
     1      (-(N1*P1X) + L1*P1Z)*S1 - (-(N2*P2X) + L2*P2Z)*S2 + Y1-Y2)**2 + 
     1   (C2A1*P1Z - C3A1*N1*(L1*P1X + M1*P1Y + N1*P1Z) - C2A2*P2Z+C3A2*N2*(L2*P2X+M2*P2Y+N2*P2Z)+ 
     1      (M1*P1X - L1*P1Y)*S1 - (M2*P2X - L2*P2Y)*S2 + Z1 - Z2)**2)
C           PRINT*,'COORDINATES OF MOLECULE PAIR:'
C           WRITE(*,'(3F20.10)') X1,Y1,Z1
C           WRITE(*,'(3F20.10)') L1,M1,N1
C           WRITE(*,'(3F20.10)') X2,Y2,Z2
C           WRITE(*,'(3F20.10)') L2,M2,N2
C           PRINT*,'DISTANCE=',DIST
            PAIRENERGY = FLJ(DIST)

            IF (GTEST.OR.SECT) THEN
               DEDRIJ = DFLJ(DIST)
               RDIST = 1.0D0/DIST

               FIRSTDERIVATIVES = 0.0D0

               DO RBCOORD1 = 1, 6
                  FIRSTDERIVATIVES(RBCOORD1) = DRIJDXRB(RBCOORD1,
     1                 P1X,P1Y,P1Z,P2X,P2Y,P2Z,X1,Y1,Z1,N1,L1,M1,X2,Y2,Z2,L2,M2,N2,RDIST,
     1                 C2A2,RALPHA12,RALPHA22,C3A2,S2,C2A1,C3A1,S1,N12,L12,M12,L22,M22,N22)                  
               ENDDO

! KNOW DRIJ/DX2 = -DRIJ/DX1, RIJ/DY2 = -DRIJ/DY1, RIJ/DZ2 = -DRIJ/DZ1

               DO RBCOORD1 = 10, 12
                  FIRSTDERIVATIVES(RBCOORD1) = DRIJDXRB(RBCOORD1,
     1                 P1X,P1Y,P1Z,P2X,P2Y,P2Z,X1,Y1,Z1,N1,L1,M1,X2,Y2,Z2,L2,M2,N2,RDIST,
     1                 C2A2,RALPHA12,RALPHA22,C3A2,S2,C2A1,C3A1,S1,N12,L12,M12,L22,M22,N22)
               ENDDO

               PAIRGRAD = DEDRIJ*FIRSTDERIVATIVES

! SECOND DERIVATIVES
               
               IF (SECT) THEN 
                  FIRSTDERIVATIVES(7) = -FIRSTDERIVATIVES(1)
                  FIRSTDERIVATIVES(8) = -FIRSTDERIVATIVES(2)
                  FIRSTDERIVATIVES(9) = -FIRSTDERIVATIVES(3)
                
                  D2EDRIJ2 = D2FLJ(DIST)

                  PAIRHESS = 0.0D0

                  DO RBCOORD1 = 1, 12
                     DO RBCOORD2 = RBCOORD1, 12

                        PAIRHESS(RBCOORD1,RBCOORD2) = DEDRIJ*
     1                  D2RIJDXRB1DXRB2(RBCOORD1,RBCOORD2,
     1                                  P1X,P1Y,P1Z,P2X,P2Y,P2Z,X1,Y1,Z1,N1,L1,M1,X2,Y2,Z2,L2,M2,N2,RDIST,
     1                                  C2A2,RALPHA12,RALPHA22,C3A2,S2,C2A1,C3A1,S1,N12,L12,M12,L22,M22,N22) +
     1                  D2EDRIJ2*FIRSTDERIVATIVES(RBCOORD1)*FIRSTDERIVATIVES(RBCOORD2)
                     ENDDO
                  ENDDO
                        
               ENDIF
            ENDIF
C
C  SUM OVER CHARGED SITES.
C
            DO K1=2,NSITE
               P1X=SITE(K1,1)
               P1Y=SITE(K1,2)
               P1Z=SITE(K1,3)
               DO K2=2,NSITE
                  P2X=SITE(K2,1)
                  P2Y=SITE(K2,2)
                  P2Z=SITE(K2,3)
                  DIST=
     1  SQRT((C2A1*P1X-C3A1*L1*(L1*P1X+M1*P1Y+N1*P1Z)-C2A2*P2X+C3A2*L2*(L2*P2X + M2*P2Y + N2*P2Z)+ 
     1      (N1*P1Y - M1*P1Z)*S1 - (N2*P2Y - M2*P2Z)*S2 + X1 - X2)**2 + 
     1   (C2A1*P1Y - C3A1*M1*(L1*P1X + M1*P1Y + N1*P1Z) - C2A2*P2Y+C3A2*M2*(L2*P2X+M2*P2Y+N2*P2Z)+ 
     1      (-(N1*P1X) + L1*P1Z)*S1 - (-(N2*P2X) + L2*P2Z)*S2 + Y1-Y2)**2 + 
     1   (C2A1*P1Z - C3A1*N1*(L1*P1X + M1*P1Y + N1*P1Z) - C2A2*P2Z+C3A2*N2*(L2*P2X+M2*P2Y+N2*P2Z)+ 
     1      (M1*P1X - L1*P1Y)*S1 - (M2*P2X - L2*P2Y)*S2 + Z1 - Z2)**2)

                  PAIRENERGY = PAIRENERGY + HTOKJ*FC(CHARGE(K1),CHARGE(K2),DIST)

                  IF (GTEST .OR. SECT) THEN
                     DEDRIJ=HTOKJ*DFC(CHARGE(K1),CHARGE(K2),DIST)
                     RDIST=1.0D0/DIST

                     FIRSTDERIVATIVES = 0.0D0

                     DO RBCOORD1 = 1, 6
                        FIRSTDERIVATIVES(RBCOORD1) = DRIJDXRB(RBCOORD1,
     1                       P1X,P1Y,P1Z,P2X,P2Y,P2Z,X1,Y1,Z1,N1,L1,M1,X2,Y2,Z2,L2,M2,N2,RDIST,
     1                       C2A2,RALPHA12,RALPHA22,C3A2,S2,C2A1,C3A1,S1,N12,L12,M12,L22,M22,N22)
                     ENDDO

                     DO RBCOORD1 = 10, 12
                        FIRSTDERIVATIVES(RBCOORD1) = DRIJDXRB(RBCOORD1,
     1                       P1X,P1Y,P1Z,P2X,P2Y,P2Z,X1,Y1,Z1,N1,L1,M1,X2,Y2,Z2,L2,M2,N2,RDIST,
     1                       C2A2,RALPHA12,RALPHA22,C3A2,S2,C2A1,C3A1,S1,N12,L12,M12,L22,M22,N22)
                     ENDDO                

                     PAIRGRAD = PAIRGRAD + DEDRIJ*FIRSTDERIVATIVES

! SECOND DERIVATIVES
               
                     IF (SECT) THEN                     
                        FIRSTDERIVATIVES(7) = -FIRSTDERIVATIVES(1)
                        FIRSTDERIVATIVES(8) = -FIRSTDERIVATIVES(2)
                        FIRSTDERIVATIVES(9) = -FIRSTDERIVATIVES(3)

                        D2EDRIJ2 = HTOKJ*D2FC(CHARGE(K1),CHARGE(K2),DIST)
                        
                        DO RBCOORD1 = 1, 12
                           DO RBCOORD2 = RBCOORD1, 12
                              PAIRHESS(RBCOORD1,RBCOORD2) = PAIRHESS(RBCOORD1,RBCOORD2) +
     1                             DEDRIJ*
     1                             D2RIJDXRB1DXRB2(RBCOORD1,RBCOORD2,
     1                                  P1X,P1Y,P1Z,P2X,P2Y,P2Z,X1,Y1,Z1,N1,L1,M1,X2,Y2,Z2,L2,M2,N2,RDIST,
     1                                  C2A2,RALPHA12,RALPHA22,C3A2,S2,C2A1,C3A1,S1,N12,L12,M12,L22,M22,N22) +
     1                             D2EDRIJ2*FIRSTDERIVATIVES(RBCOORD1)*FIRSTDERIVATIVES(RBCOORD2)
                           ENDDO
                        ENDDO                        

                     ENDIF
                  ENDIF
               ENDDO
            ENDDO
   
            ETIP = ETIP + PAIRENERGY

            IF (GTEST) THEN
               DO RBCOORD1 = 1, 3
                  V(3*(J1-1)+RBCOORD1) = V(3*(J1-1)+RBCOORD1) + PAIRGRAD(RBCOORD1)              ! COM 1
                  V(3*(NAT2+J1-1)+RBCOORD1) = V(3*(NAT2+J1-1)+RBCOORD1) + PAIRGRAD(RBCOORD1+3)  ! ALPHA 1
                  V(3*(J2-1)+RBCOORD1) = V(3*(J2-1)+RBCOORD1) - PAIRGRAD(RBCOORD1)              ! COM 2
                  V(3*(NAT2+J2-1)+RBCOORD1) = V(3*(NAT2+J2-1)+RBCOORD1) + PAIRGRAD(RBCOORD1+9)  ! ALPHA 2
               ENDDO
            ENDIF

            IF (SECT) THEN
! IT IS NECESSARY TO CONVERT TO THE SLIGHTLY STRANGE HESSIAN NUMBERING SCHEME

               DO RBCOORD1 = 1, 12

                  IF (RBCOORD1.LT.4) THEN
                     INDEX1 = 3*(J1-1)+RBCOORD1
                  ELSE IF (RBCOORD1.LT.7) THEN
                     INDEX1 = 3*(NAT2+J1-1)+RBCOORD1-3
                  ELSE IF (RBCOORD1.LT.10) THEN
                     INDEX1 = 3*(J2-1)+RBCOORD1-6
                  ELSE
                     INDEX1 = 3*(NAT2+J2-1)+RBCOORD1-9
                  ENDIF

                  DO RBCOORD2 = RBCOORD1, 12

                     IF (RBCOORD2.LT.4) THEN
                        INDEX2 = 3*(J1-1)+RBCOORD2
                     ELSE IF (RBCOORD2.LT.7) THEN
                        INDEX2 = 3*(NAT2+J1-1)+RBCOORD2-3
                     ELSE IF (RBCOORD2.LT.10) THEN
                        INDEX2 = 3*(J2-1)+RBCOORD2-6
                     ELSE
                        INDEX2 = 3*(NAT2+J2-1)+RBCOORD2-9
                     ENDIF

                     HESS(INDEX1,INDEX2) = HESS(INDEX1,INDEX2) + PAIRHESS(RBCOORD1,RBCOORD2)
                  ENDDO
               ENDDO
            END IF
         ENDDO

! APPLIED UNIFORM ELECTRIC FIELD ALONG THE Z-DIRECTION

         IF (EFIELD.NE.0.0D0) THEN

            EFIELDINTERACTION = 0.0D0           
            SINGLEGRAD = 0.0D0
            SINGLEHESS = 0.0D0

            DO K1=2,NSITE
               P1X=SITE(K1,1)
               P1Y=SITE(K1,2)
               P1Z=SITE(K1,3)     ! Z-COORDINATE OF THIS SITE IN THE REFERENCE GEOMETRY       
               
               PDOTXZERO = L1*P1X+M1*P1Y+N1*P1Z
               ZREAL = Z1 + P1Z*CA1 + N1*RALPHA12*PDOTXZERO*(1.0D0-CA1) + (P1X*M2-P1Y*L2)*S1
               EFIELDINTERACTION = EFIELDINTERACTION + ZREAL*CHARGE(K1)

! GRADIENTS IF NECESSARY

               IF (GTEST) THEN                  
                  DO RBCOORD1 = 3, 6
                     SINGLEGRAD(RBCOORD1) = SINGLEGRAD(RBCOORD1) +
     &                 CHARGE(K1)*DZDXRB(RBCOORD1,L1,M1,N1,P1X,P1Y,P1Z,CA1,S1,RALPHA12,PDOTXZERO)
                  ENDDO
               END IF

! LIKEWISE SECOND DERIVATIVES
! WE ALREADY KNOW MOST OF THESE ARE ZERO

               IF (SECT) THEN      
                  DO RBCOORD1 = 4, 6
                     DO RBCOORD2 = RBCOORD1, 6
                        SINGLEHESS(RBCOORD1,RBCOORD2) = SINGLEHESS(RBCOORD1,RBCOORD2) + CHARGE(K1)*
     &                   D2ZDXRB1DXRB2(RBCOORD1,RBCOORD2,L1,M1,N1,P1X,P1Y,P1Z,CA1,S1,RALPHA12,PDOTXZERO)
                     ENDDO
                  ENDDO
               ENDIF
            ENDDO

            ETIP = ETIP - EVTOKJ*EFIELD*EFIELDINTERACTION

            IF (GTEST) THEN
               V(3*(J1-1)+3) = V(3*(J1-1)+3) - EVTOKJ*EFIELD*SINGLEGRAD(3)
               V(3*(NAT2+J1-1)+1) = V(3*(NAT2+J1-1)+1) - EVTOKJ*EFIELD*SINGLEGRAD(4)
               V(3*(NAT2+J1-1)+2) = V(3*(NAT2+J1-1)+2) - EVTOKJ*EFIELD*SINGLEGRAD(5)
               V(3*(NAT2+J1-1)+3) = V(3*(NAT2+J1-1)+3) - EVTOKJ*EFIELD*SINGLEGRAD(6)
            ENDIF

            IF (SECT) THEN
               DO RBCOORD1 = 4, 6
                  INDEX1 = 3*(NAT2+J1-1)+RBCOORD1-3

                  DO RBCOORD2 = RBCOORD1, 6
                     INDEX2 = 3*(NAT2+J1-1)+RBCOORD2-3                     
                     HESS(INDEX1,INDEX2) = HESS(INDEX1,INDEX2) - EVTOKJ*EFIELD*SINGLEHESS(RBCOORD1,RBCOORD2)
                  ENDDO
               ENDDO

            ENDIF
         ENDIF

      ENDDO

      IF (SECT) THEN
! FILL IN BLANK ENTRIES IN THE UPPER TRIANGLE OF HESSIAN
         DO J1=1,NAT2
            DO J2=J1+1,NAT2
               HESS(3*(J2-1)+1,3*(NAT2+J1-1)+1)=HESS(3*(NAT2+J1-1)+1,3*(J2-1)+1)
               HESS(3*(J2-1)+2,3*(NAT2+J1-1)+1)=HESS(3*(NAT2+J1-1)+1,3*(J2-1)+2)
               HESS(3*(J2-1)+3,3*(NAT2+J1-1)+1)=HESS(3*(NAT2+J1-1)+1,3*(J2-1)+3)
               HESS(3*(J2-1)+1,3*(NAT2+J1-1)+2)=HESS(3*(NAT2+J1-1)+2,3*(J2-1)+1)
               HESS(3*(J2-1)+2,3*(NAT2+J1-1)+2)=HESS(3*(NAT2+J1-1)+2,3*(J2-1)+2)
               HESS(3*(J2-1)+3,3*(NAT2+J1-1)+2)=HESS(3*(NAT2+J1-1)+2,3*(J2-1)+3)
               HESS(3*(J2-1)+1,3*(NAT2+J1-1)+3)=HESS(3*(NAT2+J1-1)+3,3*(J2-1)+1)
               HESS(3*(J2-1)+2,3*(NAT2+J1-1)+3)=HESS(3*(NAT2+J1-1)+3,3*(J2-1)+2)
               HESS(3*(J2-1)+3,3*(NAT2+J1-1)+3)=HESS(3*(NAT2+J1-1)+3,3*(J2-1)+3)
            ENDDO
         ENDDO

! SYMMETRISE HESSIAN
         DO J1=1,3*NATOMS
            DO J2=J1+1,3*NATOMS
               HESS(J2,J1)=HESS(J1,J2)
            ENDDO
         ENDDO
      ENDIF

!      WRITE(*,'(A,G20.10)') 'ENERGY=',ETIP
!      PRINT*,'COORDS:'
!      WRITE(*,'(I6,G20.10)') (J1,X(J1),J1=1,3*NATOMS)
C     PRINT*,'GRADIENT:'
C     WRITE(*,'(I6,G20.10)') (J1,V(J1),J1=1,3*NATOMS)

!      DO J1=1,3*NATOMS
!         PRINT *, J1, V(J1)
!      ENDDO

      RETURN
      END

! ****************************************************************************************************

!  SUBROUTINE TO CONVERT TIP OXYGEN AND DV COORDINATES TO CARTESIANS.

      SUBROUTINE TIPIO(X1, Y1, Z1, L1, M1, N1, COORDS)
      IMPLICIT NONE
      DOUBLE PRECISION X1, Y1, Z1, COORDS(*), C2A1, M1, L1, N1, ALPHA1, CA1, S1, C3A1, L12, M12, N12

      L12=L1**2
      M12=M1**2
      N12=N1**2
      ALPHA1=SQRT(L12+M12+N12)
      CA1=COS(ALPHA1)
      C2A1=CA1
      IF (ALPHA1.LT.0.0001D0) THEN
C        C3A1=(-ALPHA1/2+ALPHA1**3/24) ! BUG
         C3A1=(-0.5D0+ALPHA1**2/24.0D0)
         S1=(1.0D0-ALPHA1**2/6)
      ELSE
         C3A1=(CA1-1.0D0)/ALPHA1**2
         S1=SIN(ALPHA1)/ALPHA1
      ENDIF

      COORDS(1) = X1
      COORDS(2) = Y1
      COORDS(3) = Z1    
      COORDS(4) = 0.756950327*C2A1 - C3A1*L1*(0.756950327*L1 - 0.585882276*N1) + 0.585882276*M1*S1 + X1
      COORDS(5) = -(C3A1*M1*(0.756950327*L1 - 0.585882276*N1)) + (-0.585882276*L1 - 0.756950327*N1)*S1 + Y1
      COORDS(6) = -0.585882276*C2A1 - C3A1*(0.756950327*L1 - 0.585882276*N1)*N1 + 0.756950327*M1*S1 + Z1
      COORDS(7) = -0.756950327*C2A1 + C3A1*L1*(0.756950327*L1 + 0.585882276*N1) + 0.585882276*M1*S1 + X1
      COORDS(8) = C3A1*M1*(0.756950327*L1 + 0.585882276*N1) + (-0.585882276*L1 + 0.756950327*N1)*S1 + Y1
      COORDS(9) = -0.585882276*C2A1 + C3A1*(0.756950327*L1 + 0.585882276*N1)*N1 - 0.756950327*M1*S1 + Z1

      RETURN
      END

! ****************************************************************************************************
