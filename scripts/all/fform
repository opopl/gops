#!/usr/bin/perl -w

# intro {{{
#use... deal with opt {{{
use strict;
use Pod::Usage;
use Getopt::Long;
use File::Basename;

my $opt_b;
my ($opt_help, $opt_man);
GetOptions("help", "man", "b")
  or pod2usage("Try '$0 --help' for more information");
pod2usage(-verbose => 1) if $opt_help;
pod2usage(-verbose => 2) if $opt_man;
#}}}
#vars {{{
my $comment_char = '!';
my $cont_char = '&';
my $old = "";
my $comment = "";
my $in_string = 1;

my $f77="$ARGV[0].f";
my $f90="$ARGV[0].f90";
my ($this_script,$shd)=&fileparse($0);
open(N,">$f90");
open(O,"<$f77");
#}}}

if ( @ARGV == 0 ) {
        show_help();
        exit 1;
}
#}}}

while (<O>) {
	#{{{
    my $new = $_;
# Delete trailing blanks and tabs {{{

    $new =~ s/[\s\t]*$//;
    #$new =~ s/^\s+$//;
#}}}
# Save comments, converting to '!' comments.  {{{
#Note that "comments"
# include C preprocessor lines and blank lines.

    if ($new =~ /^[*c#!]|^$/i) {
		if ($new =~ /^[*c]/i) {
	    	substr($new,0,1) = $comment_char;
		}
		$comment .= $new;
		next;
    }
#}}}
# Replace tabs with spaces {{{

    $new =~ s/\t/        /g;
# }}}
# Look for continues, {{{
       #make sure continuation is '&' if backward
# compatible or in a string
#
    if (substr($new,5,1) ne " " and substr($new,5,1)) {
			substr($new,5,1) = $cont_char;
		#if ($opt_b || $in_string) {
			#substr($new,5,1) = $cont_char;
		#} else {
			#substr($new,5,1) = ' ';
		#}

#
# Check for ! comments in previous line, put & in column 73 and before !
#
		my($pos, $posx, $pad, $len);
		if ( ($pos = index($old,"!")) >= $[ ) {
	    	if ($opt_b && $pos < 72) {
				$pad = 72 - $pos;
	    	} else {
				$pad = 1;
	    	}
			$posx=$pos;
	    	substr($old,$pos,0) = ' ' x $pad . $cont_char;
		} else {
	    	$len = length($old);     # includes a '\n'
	    	if ($opt_b && $len < 73) {
				$pad = 73 - length($old);
	    	} else {
				$pad = 1;
	    	}
			$posx=$len;
		}
	    	substr($old,$posx,0) = ' ' x $pad . $cont_char;
    }
	#}}}
#
# Print $old and any "comments"
#
    print N "$old\n";
	if (  $comment !~ s/^[\s]*$// ) { print N "$comment\n"; } 
    $comment = "";
	
    $old = $new;
#}}}
}
#
# Print the last $old and "comments"
#
print N "$old\n";
print N "$comment\n";
close N;
close O;

sub show_help(){
	#{{{
print <<"PH";
======================================
fform - Fortran 90 reformatter

USAGE: $this_script FILE

DESCRIPTION

Convert to F90 free format - start comments with '!' and put '&'
at end of line for continuations.

SCRIPT LOCATION: $shd
======================================
AUTHOR: Kate Hedstrom, kate\@arsc.edu
Modified by op
======================================

PH
#}}}
}

# END...cut{{{
__END__

freeform - Fortran 90 reformatter

=head1 SYNOPSIS

freeform [--help] [--man] [-b] [file ...] > outfile

=head1 DESCRIPTION

Convert to F90 free format - start comments with '!' and put '&'
at end of line for continuations.

=head1 OPTIONS AND ARGUMENTS

=over 4

=item I<-help>

Print more details about the arguments.

=item I<-man>

Print a full man page.

=item I<-b>

Maintain compatibility with fixed format.

=back

=head1 BUGS

The $in_string flag is always true because I'm not sure
how to check for it.

=head1 AUTHOR

Kate Hedstrom
kate@arsc.edu

=cut
#}}}
