#!/bin/bash

use(){
source $shd/"$this_script"_$1.sh
}

set_base_vars(){
  #{{{

export shd="`dirname $(readlink -f $0)`"
export this_script=` basename $0 `

export vim_opts="-n -p"
export v="vim $vim_opts"

export r="$shd"
export xyz_dir="$r/../xyz/"
export tmp_dir="$r/tmp"
export pics_dir="$r/../pics/"
export file0="chf"

export reset_f=0
export reset_pof=0

export frame_min=1
export frame_max=1
export font_size=30
export show_date=0 
export write_log_file=1
export pic_ext="gif"
export rotate=0
export no_rotate=1
export use_opt=0

export append_angles=0
export append_force=0
export print_text="all"

export zoom=70

export rx=0 ; 
export ry=0 ; 
export rz=0

export xai=10 ; 
export yai=10  
export zai=10
export xamin=0; 
export yamin=0; 
export zamin=0
export xamin=45; 
export yamin=45; 
export zamin=45

#}}}
}

set_base_vars

if [ $no_rotate -eq 1 ]; then
  	xamax=$xamin
  	yamax=$yamin
  	zamax=$zamin
fi 

mkdir -p $tmp_dir
mkdir -p $pics_dir


display_help(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

some option

EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
=============================================
EOF
# }}}
# }}}
}

main(){
# {{{

case "$1" in
  "")
  ;;
  *)
  ;;
esac    # --- end of case ---

# }}}
}

[ -z "$*" ] && ( display_help; exit 0 )

	  #{{{
	  cmd_args=( "$@" ) 
	  use read_cmd_args

	  echo "*********************"
	  echo "Starting $this_script..."
	  echo "Command-line arguments supplied:"
	  echo "${cmd_args[@]}"
	  echo 

	  old_full_file=${full_file%.xyz}.old.xyz
	  cp $full_file $old_full_file 

	  file=$file0.xyz ; full_file=$xyz_dir/$file
	  source "$this_script"_bln.sh

	  # now sort with respect to forces #source sort_forces.sh

	  case "$reset_f" in
	    	0)
	  		frame_max=1
	  		frame_min=1
			;;
		2)	frame_min=1
			frame_max=$num_frames
		;;
	  esac

	  mkdir -p $pics_dir

	  echo "Input XYZ file: $file0 "
	  echo "Input XYZ-directory: $xyz_dir"
	  echo "Number of frames: $num_frames"
	  echo "Output image directory: $pics_dir"
 	  echo "====================================="

	  source "$this_script"_loop_over_frames.sh	  
	  cp $old_full_file $full_file
	 #}}}


define_base_dirs(){
# {{{
# main Wales group software directory
export wg_dir="$shd/../../"
packdir=$HOME/arch/packed
unpackdir=$HOME/arch/unpacked
# }}}
}

set_base_vars(){
# {{{
s_purpose="view source files with vim"
s_project="~/scripts"
# }}}
}


#}}}



# main part 
# {{{

script_opts=( $* )
define_base_dirs

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $hm/scripts/f.sh; exit ;;
		h) display_help $*; exit ;;
		-g) v="$v -g" ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}


