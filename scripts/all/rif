#!/usr/bin/perl -w
#

use strict;
use File::Find ();
use File::Basename;
use Getopt::Std;
use Cwd;

my ($this_script,$shd)=fileparse($0);

##here-doc{{{
#my %opt;
#@ARGV > 0 and getopts('n:s:m:', \%opt) and not (keys %opt > 1) or die 
#+<< "USAGE";
#=========================================================
#PURPOSE: Clean source code files from IF...ELSE...ENDIF clauses
#USAGE: $this_script OPTIONS

	#OPTIONS

		#-f FILE		file to process
	
#=========================================================
#USAGE
##}}}

my(@true,@false,@ifs);
my $dir=&cwd();
# init file
#my $ifile="$dir/keyword.f";
my $ifile="$dir/keyword.init.i.f";
my $true_file="$dir/true.in";
my $false_file="$dir/false.in";
my $data_file="$dir/data.in";

open(TF,">$true_file") or die $!;
open(FF,">$false_file") or die $!;
open(DATA,">$data_file") or die $!;

open(IFILE,"$ifile") or die $!;
while(<IFILE>){
	if ( m/^[\t\s]*([a-zA-Z0-9_]*)=[\t\s]*\.(TRUE)\./i ) { push(@true,$1); print TF "$1\n"; }
	if ( m/^[\t\s]*([a-zA-Z0-9_]*)=[\t\s]*\.(FALSE)\./i ) { push(@false,$1); print FF "$1\n"; }
}

close IFILE;
close TF;
close FF;
close DATA;

# file to process

# $sflist - file which lists the used source files 
my $sflist="source.in";
open(SFILE,"$sflist") or die $!;
@source_files=<SFILE>;

foreach $source_file 
$file="$dir/mc.F";
open(FILE,"$file") or die $!;
while(<FILE>){
	# 	@opened => contains "opened" IF statements, i.e.  {{{
	# while it contains those, we are still inside this IF statement;
	# once we go to the point when we reach the ENDIF corresponding to this
	# IF statement, we remove that string from @opened. Thus, the array @opened
	# has the structure:
	# 		Uppermost IF statement, then level-below statement etc.
    # if we are not inside any IF statement, @opened is empty.	
	#}}}
	if ( m/^[\t\s]*IF[\t\s]*\((.)\)[THEN]?/i ) { 
			$ifcondition=$1;
			push(@opened,$ifcondition); 
		}
}
close FILE;

