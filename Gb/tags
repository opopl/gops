!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
10	dv.f90	/^10 format(a)$/;"	l	subroutine:display_version	file:
10	finalio.f	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	mylbfgs.f	/^10    CALL FLUSH(MYUNIT)$/;"	l	subroutine:MYLBFGS	file:
10	potential.f	/^10    CONTINUE$/;"	l	subroutine:POTENTIAL	file:
10	takestep.f	/^10       J2=3*J1$/;"	l	subroutine:TAKESTEP	file:
11	mylbfgs.f	/^11          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in mylbfgs')$/;"	l	subroutine:MYLBFGS	file:
120	io1.f90	/^120         FORMAT('Run ',I3,': ',I9,' steps with temperature scaled by ',E15.8)$/;"	l	subroutine:IO1	file:
160	io1.f90	/^160      FORMAT('Debug printing is on')$/;"	l	subroutine:IO1	file:
20	dv.f90	/^20 format(2a)$/;"	l	subroutine:display_version	file:
20	io1.f90	/^20       FORMAT('Initial coordinates:')$/;"	l	subroutine:IO1	file:
21	mc.f90	/^21       FORMAT('ACCEPTANCE RATIO FOR RUN=',F12.5,' STEP=',F12.5,' ANGULAR STEP FACTOR=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
23	mc.f90	/^23          CONTINUE$/;"	l	subroutine:MC	file:
235	mylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
240	mylbfgs.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
30	finalio.f	/^30          FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	io1.f90	/^30             FORMAT(3F20.10)$/;"	l	subroutine:IO1	file:
30	mylbfgs.f	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
33	mc.f90	/^33                FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' EVAP,REJ')$/;"	l	subroutine:MC	file:
34	mc.f90	/^34                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
36	mc.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	subroutine:MC	file:
37	mc.f90	/^37    CONTINUE$/;"	l	subroutine:MC	file:
70	quench.f	/^70          FORMAT(1X,'QUENCH NUMBER ',I6,' FINAL ENERGY=',F20.10,' RMS FORCE=',E20.10)$/;"	l	subroutine:QUENCH	file:
80	quench.f	/^80          FORMAT(A2,3F20.10)$/;"	l	subroutine:QUENCH	file:
ACCRAT	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:V
ACCREJ	mc.f90	/^      SUBROUTINE ACCREJ(/;"	s	module:FUNC
ANV	v.f90	/^      INTEGER,ALLOCATABLE :: ANV(/;"	v	module:V
ARMA	v.f90	/^     DOUBLE PRECISION ::    ARMA,/;"	v	module:V
ARMB	v.f90	/^     DOUBLE PRECISION ::    ARMA,ARMB$/;"	v	module:V
ARMT	v.f90	/^       LOGICAL ::  ARMT /;"	v	module:V
ASTEP	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP,/;"	v	module:V
ATOM1	main.f	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	main.f	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMPAIR	main.f	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
BEADLETTER	v.f90	/^     CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:V
BFGS	v.f90	/^      LOGICAL :: CENT,BFGS,/;"	v	module:V
BLNSSTRUCT	v.f90	/^     CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:V
BLNT	v.f90	/^      LOGICAL :: P46,G46,BLNT,/;"	v	module:V
BQMAX	v.f90	/^     DOUBLE PRECISION :: RADIUS,BQMAX,/;"	v	module:V
BSPT	v.f90	/^      LOGICAL :: P46,G46,BLNT,SEEDT,NORESET,BSPT,/;"	v	module:V
CENT	v.f90	/^      LOGICAL :: CENT,/;"	v	module:V
CHECKMARKOVT	v.f90	/^      LOGICAL :: CENT,BFGS,LBFGST,DEBUG,CHECKMARKOVT,/;"	v	module:V
CO	potential.f	33;"	c	subroutine:POTENTIAL
CO	quench.f	40;"	c	subroutine:QUENCH
COORDS	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:V
COORDSO	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,COORDSO$/;"	v	module:V
COUNTATOMS	countatoms.f90	/^      SUBROUTINE COUNTATOMS(/;"	s	module:NOA
CQMAX	v.f90	/^     DOUBLE PRECISION ::   CQMAX,/;"	v	module:V
CSMAVVAL	potential.f	52;"	c	subroutine:POTENTIAL
CSMAVVAL	quench.f	44;"	c	subroutine:QUENCH
DEBUG	v.f90	/^      LOGICAL :: CENT,BFGS,LBFGST,DEBUG,/;"	v	module:V
DGUESS	v.f90	/^     DOUBLE PRECISION :: TFAC(3),RMS,DGUESS,/;"	v	module:V
DMIN	mc.f90	336;"	c	subroutine:TRANSITION
DMIN	quench.f	41;"	c	subroutine:QUENCH
DUMPFILE	v.f90	/^      CHARACTER(LEN=130) DUMPFILE,/;"	v	module:V
DUMPT	v.f90	/^      LOGICAL :: TARGET,DUMPT,/;"	v	module:V
DUMPXYZUNIT	v.f90	/^     INTEGER :: DUMPXYZUNIT$/;"	v	module:V
ECONV	v.f90	/^     DOUBLE PRECISION :: RADIUS,BQMAX,MAXBFGS,ECONV,/;"	v	module:V
EPREV	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV /;"	v	module:V
EPSSPHERE	v.f90	/^     DOUBLE PRECISION :: TFAC(3),RMS,DGUESS,EPSSPHERE$/;"	v	module:V
ESAVE	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ESAVE(/;"	v	module:V
EV	mc.f90	50;"	c	subroutine:MC
EV	mylbfgs.f	36;"	c	subroutine:MYLBFGS
EV	potential.f	49;"	c	subroutine:POTENTIAL
EV	quench.f	43;"	c	subroutine:QUENCH
FAIL	potential.f	48;"	c	subroutine:POTENTIAL
FF	qmod.f90	/^      integer,allocatable :: FF(/;"	v	module:QMODULE
FINALIO	finalio.f	/^      SUBROUTINE FINALIO$/;"	s
FINALQ	finalq.f	/^      SUBROUTINE FINALQ$/;"	s
FIXBOTH	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH,/;"	v	module:V
FIXCOM	v.f90	/^      LOGICAL :: CENT,BFGS,LBFGST,DEBUG,CHECKMARKOVT,FIXCOM,/;"	v	module:V
FIXIMAGE	v.f90	/^      LOGICAL :: P46,G46,BLNT,SEEDT,NORESET,BSPT,FIXIMAGE$/;"	v	module:V
FIXSTEP	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP,/;"	v	module:V
FIXTEMP	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP,/;"	v	module:V
FUNC	mc.f90	/^      MODULE FUNC /;"	m
G46	v.f90	/^      LOGICAL :: P46,G46,/;"	v	module:V
GD	mylbfgs.f	35;"	c	subroutine:MYLBFGS
GD	potential.f	50;"	c	subroutine:POTENTIAL
GD	quench.f	42;"	c	subroutine:QUENCH
GMAX	v.f90	/^     DOUBLE PRECISION :: RADIUS,BQMAX,MAXBFGS,ECONV,GMAX$/;"	v	module:V
GMIN	main.f	/^      PROGRAM GMIN$/;"	p
GOFACTOR	v.f90	/^      DOUBLE PRECISION :: GOFACTOR=/;"	v	module:V
GOTYPE	v.f90	/^      LOGICAL :: GOTYPE=/;"	v	module:V
HESS	modhess.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS /;"	v	module:MODHESS
INTEDUMPFILE	v.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME, INTEDUMPFILE$/;"	v	module:V
INTEFF	qmod.f90	/^      integer,allocatable :: FF(:),INTEFF(/;"	v	module:QMODULE
INTEQMIN	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:QMODULE
INTEQMINP	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:QMODULE
IO1	io1.f90	/^      SUBROUTINE IO1$/;"	s
ISTR	main.f	/^      CHARACTER(LEN=130) ISTR$/;"	v	program:GMIN
J1	main.f	/^      INTEGER J1,/;"	v	program:GMIN
J2	main.f	/^      INTEGER J1,J2,/;"	v	program:GMIN
JDUMP	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP,/;"	v	module:V
JP	main.f	/^      INTEGER J1,J2, JP,/;"	v	program:GMIN
JUMPMOVE	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE,/;"	v	module:V
JUMPTO	v.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:)   :: JUMPTO /;"	v	module:V
LBFGST	v.f90	/^      LOGICAL :: CENT,BFGS,LBFGST,/;"	v	module:V
LOPEN	main.f	/^      LOGICAL LOPEN$/;"	v	program:GMIN
MASSES	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MASSES(/;"	v	module:V
MAXBFGS	v.f90	/^     DOUBLE PRECISION :: RADIUS,BQMAX,MAXBFGS,/;"	v	module:V
MAXEFALL	v.f90	/^     DOUBLE PRECISION :: MAXERISE,MAXEFALL$/;"	v	module:V
MAXERISE	v.f90	/^     DOUBLE PRECISION :: MAXERISE,/;"	v	module:V
MAXIT	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,MAXIT,/;"	v	module:V
MAXIT2	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,MAXIT,MAXIT2,/;"	v	module:V
MC	mc.f90	/^      SUBROUTINE MC(/;"	s	module:FUNC
MCRUNS	mcruns.f	/^      SUBROUTINE MCRUNS(/;"	s
MCSTEPS	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,MAXIT,MAXIT2,NTARGETS,NSEED,NSAVE,MCSTEPS(/;"	v	module:V
MCTEMP	v.f90	/^     DOUBLE PRECISION ::   CQMAX,MCTEMP$/;"	v	module:V
MODCOMMONDEINIT	v.f90	/^      SUBROUTINE MODCOMMONDEINIT$/;"	s	module:V
MODCOMMONINIT	v.f90	/^      SUBROUTINE MODCOMMONINIT$/;"	s	module:V
MODHESS	modhess.f90	/^MODULE MODHESS$/;"	m
MPIERR	main.f	/^      INTEGER J1,J2, JP, MPIERR,/;"	v	program:GMIN
MUPDATE	v.f90	/^     INTEGER :: NRUNS,MUPDATE,/;"	v	module:V
MYBUNIT	v.f90	/^     INTEGER :: MYEUNIT, MYMUNIT, MYBUNIT,/;"	v	module:V
MYEUNIT	v.f90	/^     INTEGER :: MYEUNIT,/;"	v	module:V
MYFILENAME	v.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME,/;"	v	module:V
MYLBFGS	mylbfgs.f	/^      SUBROUTINE MYLBFGS(/;"	s
MYMUNIT	v.f90	/^     INTEGER :: MYEUNIT, MYMUNIT,/;"	v	module:V
MYNODE	v.f90	/^     INTEGER :: MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT, MYPUNIT, MYNODE /;"	v	module:V
MYPOT	finalq.f	15;"	c	subroutine:FINALQ
MYPOT	main.f	24;"	c	program:GMIN
MYPOT	mc.f90	51;"	c	subroutine:MC
MYPOT	mylbfgs.f	34;"	c	subroutine:MYLBFGS
MYPOT	quench.f	39;"	c	subroutine:QUENCH
MYPUNIT	v.f90	/^     INTEGER :: MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT, MYPUNIT,/;"	v	module:V
MYRESET	mc.f90	/^      SUBROUTINE MYRESET(/;"	s	module:FUNC
MYRUNIT	v.f90	/^     INTEGER :: MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT,/;"	v	module:V
MYUNIT	v.f90	/^     INTEGER :: NRUNS,MUPDATE,NRELAX,MYUNIT$/;"	v	module:V
NACCEPT	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,/;"	v	module:V
NATOMS	v.f90	/^     INTEGER :: NATOMS,/;"	v	module:V
NCORE	v.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NQ, NCORE!/;"	v	module:V
NDUMMY	main.f	/^      INTEGER, ALLOCATABLE :: NDUMMY(/;"	v	program:GMIN
NDUMMY2	main.f	/^      INTEGER, ALLOCATABLE :: NDUMMY(:), NDUMMY2(/;"	v	program:GMIN
NDUMMY3	main.f	/^      INTEGER J1,J2, JP, MPIERR, NDUMMY3,/;"	v	program:GMIN
NOA	countatoms.f90	/^MODULE NOA$/;"	m
NORESET	v.f90	/^      LOGICAL :: P46,G46,BLNT,SEEDT,NORESET,/;"	v	module:V
NPAIRS	v.f90	/^     INTEGER :: NPAIRS$/;"	v	module:V
NPAR	v.f90	/^     INTEGER :: NPAR$/;"	v	module:V
NPTOTAL	main.f	/^      INTEGER J1,J2, JP, MPIERR, NDUMMY3,NPTOTAL$/;"	v	program:GMIN
NQ	v.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NQ,/;"	v	module:V
NRELAX	v.f90	/^     INTEGER :: NRUNS,MUPDATE,NRELAX,/;"	v	module:V
NRUNS	v.f90	/^     INTEGER :: NRUNS,/;"	v	module:V
NS	v.f90	/^     INTEGER :: NATOMS,NS,/;"	v	module:V
NSAVE	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,MAXIT,MAXIT2,NTARGETS,NSEED,NSAVE,/;"	v	module:V
NSEED	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,MAXIT,MAXIT2,NTARGETS,NSEED,/;"	v	module:V
NTARGETS	v.f90	/^     INTEGER :: NATOMS,NS,NACCEPT,MAXIT,MAXIT2,NTARGETS,/;"	v	module:V
NUMBER_OF_ATOMS	countatoms.f90	/^      INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:NOA
OMOVE	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE, OMOVE /;"	v	module:V
OSTEP	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP,/;"	v	module:V
P46	v.f90	/^      LOGICAL :: P46,/;"	v	module:V
PAIRDIST	v.f90	/^     INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:V
PAIRDISTT	v.f90	/^     LOGICAL :: PAIRDISTT$/;"	v	module:V
PCALL	io1.f90	16;"	c	subroutine:IO1
PCALL	potential.f	51;"	c	subroutine:POTENTIAL
PORFUNCS	porfuncs.f90	/^MODULE PORFUNCS$/;"	m
POTEL	main.f	/^      DOUBLE PRECISION POTEL$/;"	v	program:GMIN
POTENTIAL	potential.f	/^      SUBROUTINE POTENTIAL(/;"	s
QMIN	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:QMODULE
QMINP	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:QMODULE
QMODULE	qmod.f90	/^MODULE QMODULE$/;"	m
QUENCH	quench.f	/^      SUBROUTINE QUENCH(/;"	s
RADIUS	v.f90	/^     DOUBLE PRECISION :: RADIUS,/;"	v	module:V
RCA	rca.f90	/^SUBROUTINE RCA$/;"	s
RESTART	v.f90	/^      LOGICAL :: TARGET,DUMPT,TRACKDATAT,RESTART$/;"	v	module:V
RMS	v.f90	/^     DOUBLE PRECISION :: TFAC(3),RMS,/;"	v	module:V
SCREENC	main.f	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SEEDT	v.f90	/^      LOGICAL :: P46,G46,BLNT,SEEDT,/;"	v	module:V
STEP	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP,/;"	v	module:V
STEPOUT	v.f90	/^      LOGICAL :: CENT,BFGS,LBFGST,DEBUG,CHECKMARKOVT,FIXCOM,STEPOUT$/;"	v	module:V
SYS	v.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	module:V
TAKESTEP	takestep.f	/^      SUBROUTINE TAKESTEP(/;"	s
TARGET	v.f90	/^      LOGICAL :: TARGET,/;"	v	module:V
TARGETS	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TARGETS(/;"	v	module:V
TCOORDS	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: TCOORDS$/;"	v	module:V
TEMP	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP,/;"	v	module:V
TFAC	v.f90	/^     DOUBLE PRECISION :: TFAC(/;"	v	module:V
TMOVE	v.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE,/;"	v	module:V
TMPCOORDS	main.f	/^      DOUBLE PRECISION, ALLOCATABLE :: TMPCOORDS(/;"	v	program:GMIN
TOT	io1.f90	15;"	c	subroutine:IO1
TOT	mc.f90	52;"	c	subroutine:MC
TOT	potential.f	56;"	c	subroutine:POTENTIAL
TRACKDATAT	v.f90	/^      LOGICAL :: TARGET,DUMPT,TRACKDATAT,/;"	v	module:V
TRANSITION	mc.f90	/^      SUBROUTINE TRANSITION(/;"	s	module:FUNC
TSTART	v.f90	/^     DOUBLE PRECISION ::   TSTART$/;"	v	module:V
V	v.f90	/^      MODULE V$/;"	m
VAT	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,/;"	v	module:V
VATO	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,  VATO /;"	v	module:V
VT	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: VT$/;"	v	module:V
XINSAVE	v.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: XINSAVE(/;"	v	module:V
display_version	dv.f90	/^subroutine display_version(/;"	s	module:dv
dumpint	v.f90	/^     INTEGER ::    dumpint$/;"	v	module:V
dv	dv.f90	/^module dv$/;"	m
ev	mc.f90	337;"	c	subroutine:TRANSITION
ev	mc.f90	374;"	c	subroutine:ACCREJ
flush	porfuncs.f90	/^subroutine flush(/;"	s	module:PORFUNCS
fork_subr	porfuncs.f90	/^          subroutine fork_subr(/;"	s	module:PORFUNCS
getarg_subr	porfuncs.f90	/^          subroutine getarg_subr(/;"	s	module:PORFUNCS
getpid_subr	porfuncs.f90	/^          subroutine getpid_subr(/;"	s	module:PORFUNCS
iargc_subr	porfuncs.f90	/^subroutine iargc_subr(/;"	s	module:PORFUNCS
system_subr	porfuncs.f90	/^          subroutine system_subr(/;"	s	module:PORFUNCS
wait_subr	porfuncs.f90	/^          subroutine wait_subr(/;"	s	module:PORFUNCS
