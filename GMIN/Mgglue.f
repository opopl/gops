C   GMIN: A PROGRAM FOR FINDING GLOBAL MINIMA
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF GMIN.
C
C   GMIN IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   GMIN IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
C*************************************************************************
C
C  HERE WE CALCULATE THE ALUMINIUM GLUE POTENTIAL AND GRADIENT
C                                        
C*************************************************************************

      SUBROUTINE MGGLUE (X,V,EMG,GRADT)
      USE COMMONS
      IMPLICIT NONE 
      INTEGER J1, J2
      DOUBLE PRECISION X(3*NATOMS), EMG, DIST, ETEMP, ETEMP2, 
     1                 V(3*NATOMS), RHO1, RTEMP, DUTEMP(NATOMS),
     2                 DRTEMP, DVTEMP, VTEMP, VTEMP1, VTEMP2, VTEMP3, 
     3                 RRC, RRCSQ
      LOGICAL GRADT

      EMG=0.0D0
      RRC=6.67993511355129D0
      RRCSQ=RRC**2

      DO J1=1,NATOMS
        VT(J1)=0.0D0
      ENDDO

      ETEMP=0.0D0
      DO 22 J1=1,NATOMS
         RTEMP=0.0D0
         DO 23 J2=1,NATOMS
           IF (J1.NE.J2) THEN
             DIST=( X(3*(J2-1)+1)-X(3*(J1-1)+1) )**2 +
     1             ( X(3*(J2-1)+2)-X(3*(J1-1)+2) )**2 +
     2             ( X(3*(J2-1)+3)-X(3*(J1-1)+3) )**2
             IF (DIST.LT.RRCSQ) THEN
               DIST=DSQRT(DIST)
               CALL MGRH(DIST,RHO1,0)
               RTEMP=RTEMP+RHO1
               IF (J1.LT.J2) THEN
                 CALL MGV2(DIST,ETEMP2,0)
                 ETEMP=ETEMP+ETEMP2
                 VT(J1)=VT(J1)+ETEMP2/2.0D0
                 VT(J2)=VT(J2)+ETEMP2/2.0D0
               ENDIF
             ENDIF
           ENDIF
23       CONTINUE
         CALL MGUU(RTEMP,ETEMP2,0)
         EMG=EMG+ETEMP2
         VT(J1)=VT(J1)+ETEMP2
         CALL MGUU(RTEMP,DUTEMP(J1),1)
22    CONTINUE
      EMG=EMG+ETEMP

C
C NOW CALCULATE THE GRADIENT ANALYTICALLY.
C
      IF (GRADT) THEN 

      DO J1=1,NATOMS
         VTEMP1=0.0D0
         VTEMP2=0.0D0
         VTEMP3=0.0D0
         DO J2=1,NATOMS
           IF (J1.NE.J2) THEN
             DIST=( X(3*(J2-1)+1)-X(3*(J1-1)+1) )**2 +
     1              ( X(3*(J2-1)+2)-X(3*(J1-1)+2) )**2 +
     2              ( X(3*(J2-1)+3)-X(3*(J1-1)+3) )**2
             IF (DIST.LT.RRCSQ) THEN
               DIST=DSQRT(DIST)
               CALL MGV2(DIST,DVTEMP,1)
               CALL MGRH (DIST,DRTEMP,1)
               VTEMP=(DVTEMP+(DUTEMP(J1)+DUTEMP(J2))*DRTEMP)/DIST
               VTEMP1=VTEMP1+VTEMP*(X(3*(J1-1)+1)-X(3*(J2-1)+1))
               VTEMP2=VTEMP2+VTEMP*(X(3*(J1-1)+2)-X(3*(J2-1)+2))
               VTEMP3=VTEMP3+VTEMP*(X(3*(J1-1)+3)-X(3*(J2-1)+3))
             ENDIF
           ENDIF
         ENDDO
         V(3*(J1-1)+1)=VTEMP1
         V(3*(J1-1)+2)=VTEMP2
         V(3*(J1-1)+3)=VTEMP3
      ENDDO

      ENDIF

      RETURN
      END


*     LIU-ADAMS-ERCOLESSI-MORIARTY GLUE POTENTIAL FOR MG.
*     REF.: X.-Y. LIU, J. B. ADAMS, F. ERCOLESSI  AND J. A. MORIARTY,
*     MODELLING SIMUL. MATER. SCI. ENG. 4, 293 (1996).
*     POTENTIAL HOME PAGE: HTTP://WWW.SISSA.IT/FURIO/POTENTIALS/MG/

      SUBROUTINE MGV2(ARG,FUNC,DFLAG)
*        MAGNESIUM : PAIR POTENTIAL   AND ITS FIRST TWO DERIVATIVES.
*        GENERATED AUTOMATICALLY BY POCO, VERSION 26-NOV-93
*        HAMILTONIAN TYPE #  1, RUN ON 95/03/23 AT 14.05.29
*        USES SUBROUTINE SEVAL FROM NETLIB@ORNL.GOV [TO GET IT,
*        USE 'SEND SEVAL FROM SFMM'], TRIVIALLY MODIFIED TO
*        COMPUTE ALSO DFUNC AND D2FUNC AND USE DOUBLE PRECISION.
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NV2= 17)
      PARAMETER (ARGMAX=   .667993511355129D+01)
      INTEGER DFLAG
      DOUBLE PRECISION XV2(NV2),YV2(NV2),BV2(NV2),CV2(NV2),DV2(NV2)
      SAVE XV2,YV2,BV2,CV2,DV2
      DATA XV2(  1) /   .209371100573996D+01 /
      DATA XV2(  2) /   .249251310207138D+01 /
      DATA XV2(  3) /   .283149488395308D+01 /
      DATA XV2(  4) /   .317047666583479D+01 /
      DATA XV2(  5) /   .350945844771650D+01 /
      DATA XV2(  6) /   .384844022959820D+01 /
      DATA XV2(  7) /   .418742201147991D+01 /
      DATA XV2(  8) /   .452640379336162D+01 /
      DATA XV2(  9) /   .486538557524332D+01 /
      DATA XV2( 10) /   .520436735712503D+01 /
      DATA XV2( 11) /   .554334913900674D+01 /
      DATA XV2( 12) /   .588233092088845D+01 /
      DATA XV2( 13) /   .622131270277015D+01 /
      DATA XV2( 14) /   .656029448465186D+01 /
      DATA XV2( 15) /   .667993511355129D+01 /
      DATA XV2( 16) /   .667996901172947D+01 /
      DATA XV2( 17) /   .668000290990766D+01 /
      DATA YV2(  1) /   .153928517802236D+01 /
      DATA YV2(  2) /   .302534885675981D+00 /
      DATA YV2(  3) /  -.475831443182775D-01 /
      DATA YV2(  4) /  -.126245209044009D+00 /
      DATA YV2(  5) /  -.113018124801363D+00 /
      DATA YV2(  6) /  -.793483963982679D-01 /
      DATA YV2(  7) /  -.547284563621586D-01 /
      DATA YV2(  8) /  -.318233872544895D-01 /
      DATA YV2(  9) /  -.971224623229114D-02 /
      DATA YV2( 10) /   .151183119534004D-02 /
      DATA YV2( 11) /   .146823073635825D-02 /
      DATA YV2( 12) /  -.188223305893613D-02 /
      DATA YV2( 13) /  -.354784297292924D-02 /
      DATA YV2( 14) /  -.110924151560009D-02 /
      DATA YV2( 15) /   .000000000000000D+00 /
      DATA YV2( 16) /   .000000000000000D+00 /
      DATA YV2( 17) /   .000000000000000D+00 /
      DATA BV2(  1) /  -.467533787577523D+01 /
      DATA BV2(  2) /  -.176659850116244D+01 /
      DATA BV2(  3) /  -.496070082140902D+00 /
      DATA BV2(  4) /  -.438392138791983D-01 /
      DATA BV2(  5) /   .923251925445662D-01 /
      DATA BV2(  6) /   .895767892906107D-01 /
      DATA BV2(  7) /   .652331470961059D-01 /
      DATA BV2(  8) /   .700885277341982D-01 /
      DATA BV2(  9) /   .528076929875946D-01 /
      DATA BV2( 10) /   .136984879804464D-01 /
      DATA BV2( 11) /  -.865405333157377D-02 /
      DATA BV2( 12) /  -.911985574864718D-02 /
      DATA BV2( 13) /   .741057818215175D-03 /
      DATA BV2( 14) /   .129966252432477D-01 /
      DATA BV2( 15) /   .251830318859266D-05 /
      DATA BV2( 16) /  -.839682282456011D-06 /
      DATA BV2( 17) /   .840425941231385D-06 /
      DATA CV2(  1) /   .454808379415846D+01 /
      DATA CV2(  2) /   .274560749124421D+01 /
      DATA CV2(  3) /   .100246537558882D+01 /
      DATA CV2(  4) /   .331620679866272D+00 /
      DATA CV2(  5) /   .700658227767553D-01 /
      DATA CV2(  6) /  -.781736427271344D-01 /
      DATA CV2(  7) /   .635962942125154D-02 /
      DATA CV2(  8) /   .796379708013682D-02 /
      DATA CV2(  9) /  -.589424504186043D-01 /
      DATA CV2( 10) /  -.564301362438733D-01 /
      DATA CV2( 11) /  -.951010747052316D-02 /
      DATA CV2( 12) /   .813598519619999D-02 /
      DATA CV2( 13) /   .209538187222403D-01 /
      DATA CV2( 14) /   .152002405224814D-01 /
      DATA CV2( 15) /  -.123809724270535D+00 /
      DATA CV2( 16) /   .247487820445084D-01 /
      DATA CV2( 17) /   .248145960925009D-01 /
      DATA DV2(  1) /  -.150657541630735D+01 /
      DATA DV2(  2) /  -.171409616369264D+01 /
      DATA DV2(  3) /  -.659666420221412D+00 /
      DATA DV2(  4) /  -.257196572273601D+00 /
      DATA DV2(  5) /  -.145769353425626D+00 /
      DATA DV2(  6) /   .831246954523014D-01 /
      DATA DV2(  7) /   .157743743629373D-02 /
      DATA DV2(  8) /  -.657913896604715D-01 /
      DATA DV2(  9) /   .247045151982798D-02 /
      DATA DV2( 10) /   .461382010097950D-01 /
      DATA DV2( 11) /   .173520560788141D-01 /
      DATA DV2( 12) /   .126042501506401D-01 /
      DATA DV2( 13) /  -.565770640909810D-02 /
      DATA DV2( 14) /  -.387298657297743D+00 /
      DATA DV2( 15) /   .146083078065090D+04 /
      DATA DV2( 16) /   .647173894591949D+00 /
      DATA DV2( 17) /   .647173894591949D+00 /
      IF (ARG.GE.ARGMAX) THEN
         FUNC =   .000000000000000D+00
      ELSE
         CALL SEVAL(NV2,ARG,XV2,YV2,BV2,CV2,DV2,FUNC,DFLAG)
      ENDIF
      END

      SUBROUTINE MGRH(ARG,FUNC,DFLAG)
*        MAGNESIUM : ATOMIC DENSITY   AND ITS FIRST TWO DERIVATIVES.
*        GENERATED AUTOMATICALLY BY POCO, VERSION 26-NOV-93
*        HAMILTONIAN TYPE #  1, RUN ON 95/03/23 AT 14.05.29
*        USES SUBROUTINE SEVAL FROM NETLIB@ORNL.GOV [TO GET IT,
*        USE 'SEND SEVAL FROM SFMM'], TRIVIALLY MODIFIED TO
*        COMPUTE ALSO DFUNC AND D2FUNC AND USE DOUBLE PRECISION.
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NRH= 10)
      PARAMETER (ARGMAX=   .667993511355129D+01)
      INTEGER DFLAG
      DOUBLE PRECISION XRH(NRH),YRH(NRH),BRH(NRH),CRH(NRH),DRH(NRH)
      SAVE XRH,YRH,BRH,CRH,DRH
      DATA XRH(  1) /   .209371100573996D+01 /
      DATA XRH(  2) /   .249251310207138D+01 /
      DATA XRH(  3) /   .330606937858747D+01 /
      DATA XRH(  4) /   .411962565510357D+01 /
      DATA XRH(  5) /   .493318193161967D+01 /
      DATA XRH(  6) /   .574673820813576D+01 /
      DATA XRH(  7) /   .656029448465186D+01 /
      DATA XRH(  8) /   .667993511355129D+01 /
      DATA XRH(  9) /   .668001646917894D+01 /
      DATA XRH( 10) /   .668009782480659D+01 /
      DATA YRH(  1) /   .143187372690200D+00 /
      DATA YRH(  2) /   .891051954501756D-01 /
      DATA YRH(  3) /   .497245267820974D-01 /
      DATA YRH(  4) /   .346372124961649D-01 /
      DATA YRH(  5) /   .235194366080153D-01 /
      DATA YRH(  6) /   .302069379049224D-02 /
      DATA YRH(  7) /   .802148619196398D-03 /
      DATA YRH(  8) /   .000000000000000D+00 /
      DATA YRH(  9) /   .000000000000000D+00 /
      DATA YRH( 10) /   .000000000000000D+00 /
      DATA BRH(  1) /  -.178789353139449D+00 /
      DATA BRH(  2) /  -.966399582905674D-01 /
      DATA BRH(  3) /  -.228583230701083D-01 /
      DATA BRH(  4) /  -.127781884490251D-01 /
      DATA BRH(  5) /  -.226605548863010D-01 /
      DATA BRH(  6) /  -.131659411679867D-01 /
      DATA BRH(  7) /  -.844599349041348D-02 /
      DATA BRH(  8) /  -.475726389590590D-05 /
      DATA BRH(  9) /   .158678593730407D-05 /
      DATA BRH( 10) /  -.158987985331039D-05 /
      DATA CRH(  1) /   .118815732796611D+00 /
      DATA CRH(  2) /   .871746459014311D-01 /
      DATA CRH(  3) /   .351562021809925D-02 /
      DATA CRH(  4) /   .887459163577463D-02 /
      DATA CRH(  5) /  -.210217125203868D-01 /
      DATA CRH(  6) /   .326922189037599D-01 /
      DATA CRH(  7) /  -.268905948319926D-01 /
      DATA CRH(  8) /   .974455250774157D-01 /
      DATA CRH(  9) /  -.194662872995196D-01 /
      DATA CRH( 10) /  -.195803758793374D-01 /
      DATA DRH(  1) /  -.264467741320369D-01 /
      DATA DRH(  2) /  -.342770902264586D-01 /
      DATA DRH(  3) /   .219569789755835D-02 /
      DATA DRH(  4) /  -.122492260294464D-01 /
      DATA DRH(  5) /   .220078737327456D-01 /
      DATA DRH(  6) /  -.244124942369915D-01 /
      DATA DRH(  7) /   .346415541980947D+00 /
      DATA DRH(  8) /  -.479015468881384D+03 /
      DATA DRH(  9) /  -.467448014399572D+00 /
      DATA DRH( 10) /  -.467448014399572D+00 /
      IF (ARG.GE.ARGMAX) THEN
         FUNC =   .000000000000000D+00
      ELSE
         CALL SEVAL(NRH,ARG,XRH,YRH,BRH,CRH,DRH,FUNC,DFLAG)
      ENDIF
      END

      SUBROUTINE MGUU(ARG,FUNC,DFLAG)
*        MAGNESIUM : GLUE FUNCTION    AND ITS FIRST TWO DERIVATIVES.
*        GENERATED AUTOMATICALLY BY POCO, VERSION 26-NOV-93
*        HAMILTONIAN TYPE #  1, RUN ON 95/03/23 AT 14.05.29
*        USES SUBROUTINE SEVAL FROM NETLIB@ORNL.GOV [TO GET IT,
*        USE 'SEND SEVAL FROM SFMM'], TRIVIALLY MODIFIED TO
*        COMPUTE ALSO DFUNC AND D2FUNC AND USE DOUBLE PRECISION.
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      PARAMETER (NUU= 11)
      PARAMETER (ARGMIN=   .000000000000000D+00)
      INTEGER DFLAG
      DOUBLE PRECISION XUU(NUU),YUU(NUU),BUU(NUU),CUU(NUU),DUU(NUU)
      SAVE XUU,YUU,BUU,CUU,DUU
      DATA XUU(  1) /   .000000000000000D+00 /
      DATA XUU(  2) /   .100000000000000D+00 /
      DATA XUU(  3) /   .237500000000000D+00 /
      DATA XUU(  4) /   .375000000000000D+00 /
      DATA XUU(  5) /   .512500000000000D+00 /
      DATA XUU(  6) /   .650000000000000D+00 /
      DATA XUU(  7) /   .787500000000000D+00 /
      DATA XUU(  8) /   .925000000000000D+00 /
      DATA XUU(  9) /   .106250000000000D+01 /
      DATA XUU( 10) /   .120000000000000D+01 /
      DATA XUU( 11) /   .140000000000000D+01 /
      DATA YUU(  1) /   .000000000000000D+00 /
      DATA YUU(  2) /  -.206805227959338D+00 /
      DATA YUU(  3) /  -.290481511485127D+00 /
      DATA YUU(  4) /  -.403009316082408D+00 /
      DATA YUU(  5) /  -.556469868697284D+00 /
      DATA YUU(  6) /  -.609101336623323D+00 /
      DATA YUU(  7) /  -.626377489625343D+00 /
      DATA YUU(  8) /  -.635377221699801D+00 /
      DATA YUU(  9) /  -.635910883069410D+00 /
      DATA YUU( 10) /  -.627564569808675D+00 /
      DATA YUU( 11) /  -.565414923439952D+00 /
      DATA BUU(  1) /  -.315967367115533D+01 /
      DATA BUU(  2) /  -.116065136867398D+01 /
      DATA BUU(  3) /  -.498734722118105D+00 /
      DATA BUU(  4) /  -.112522621099331D+01 /
      DATA BUU(  5) /  -.803742773083007D+00 /
      DATA BUU(  6) /  -.156355872112811D+00 /
      DATA BUU(  7) /  -.960909223506751D-01 /
      DATA BUU(  8) /  -.325724765167350D-01 /
      DATA BUU(  9) /   .183795169106987D-01 /
      DATA BUU( 10) /   .129512268316687D+00 /
      DATA BUU( 11) /   .534598088628589D+00 /
      DATA CUU(  1) /   .127584187220449D+02 /
      DATA CUU(  2) /   .723180430276862D+01 /
      DATA CUU(  3) /  -.241786505508954D+01 /
      DATA CUU(  4) /  -.213843668218466D+01 /
      DATA CUU(  5) /   .447649804880503D+01 /
      DATA CUU(  6) /   .231770321887313D+00 /
      DATA CUU(  7) /   .206520221837309D+00 /
      DATA CUU(  8) /   .255432111500437D+00 /
      DATA CUU(  9) /   .115127840699081D+00 /
      DATA CUU( 10) /   .693110351344470D+00 /
      DATA CUU( 11) /   .133231875021504D+01 /
      DATA DUU(  1) /  -.184220480642544D+02 /
      DATA DUU(  2) /  -.233931378372319D+02 /
      DATA DUU(  3) /   .677402116133043D+00 /
      DATA DUU(  4) /   .160362054084599D+02 /
      DATA DUU(  5) /  -.102902490349520D+02 /
      DATA DUU(  6) /  -.612123637575849D-01 /
      DATA DUU(  7) /   .118574277971218D+00 /
      DATA DUU(  8) /  -.340131565579043D+00 /
      DATA DUU(  9) /   .140116972277670D+01 /
      DATA DUU( 10) /   .106534733145095D+01 /
      DATA DUU( 11) /   .106534733145095D+01 /
      IF (ARG.LE.ARGMIN) THEN
         FUNC =   .000000000000000D+00
      ELSE
         CALL SEVAL(NUU,ARG,XUU,YUU,BUU,CUU,DUU,FUNC,DFLAG)
      ENDIF
      END

