      SUBROUTINE WALESAMH_INITIAL()

      USE AMHGLOBALS, ONLY: SO, NMTEMP,ITGRD,TEMGRD,TEMTUR,ICTEMP,CTEMP,
     *  ISCLTAB,NMRES,OARCHV,NMSTEP,NUMPRO,IDIGNS,MAXPRO,MAXCRD,PRCORD,IRES,OCONV,
     *  OMOVI,OMOVISEG,QUENCH,NQUENCH,QUENCH_CRD

      USE COMMONS, ONLY: COORDS

      IMPLICIT NONE

C     SUBROUTINES REQUIRED BY MAIN PROGRAM

       EXTERNAL GENTAB,INITIL,INTSTR,SCLTAB,ZERO_AMH

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     INTERNAL VARIABLES:

         INTEGER JSTRT,JFINS,I_QUENCH,LEN,ISHKIT,NMDIFV,GLY_COUNT
         INTEGER III

         CHARACTER*10 SAVE_NAME


      CALL ZERO_AMH

C     --------------------- BEGIN -----------------------


CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     OPEN REQUIRED FILES, READ INPUT PARAMETER FILE, AND GENERATE HEADER FILE
C      CALL READ_INPUT_ALT() ! CALLED BEFORE INITIL : JOHAN
      CALL INITIL
C      CALL READ_ALTGAMMA()  ! CALLED AFTER  INITIL : JOHAN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     SET UP TEMPERATURE-ANNEALING SCHEDULE
C      CALL ANNSCH(NMTEMP,ITGRD,TEMGRD,TEMTUR,ICTEMP,CTEMP)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     GENERATE REQUISITE FORCE/POTENTIAL TABLES
      CALL GENTAB
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        WRITE(SO,*) 'IN SCLTAB',ISCLTAB
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     SCALE TABLES
      IF (ISCLTAB) CALL SCLTAB
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

        WRITE(SO,*) 'OUT SCLTAB'
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     GENERATE INITIAL STRUCTURES
      QUENCH_CRD=0.0D0
      CALL INTSTR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
        
        WRITE(SO,*) 'OUT INTSTR'

        IF (.NOT. QUENCH) NQUENCH=1
        DO I_QUENCH = 1,NQUENCH
        PRCORD=QUENCH_CRD(:,:,:,:,I_QUENCH)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     SET INDICIES FOR THE FIRST AND LAST RESIDUES
C     WHICH ARE NOT FIXED IN CRYSTAL CONFORMATION
      JSTRT=1
      JFINS=NMRES

C     SET SUBSEGMENT LENGTH
      LEN=JFINS - JSTRT + 1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C++++++++++++++++++++++++++++++JOHAN
!       CALL READ_INPUT_ALT()
!       CALL READ_ALTGAMMA() ! MUST BE CALLED AFTER INITIL

C------------------------------JOHAN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     --- DIAGNOSTICS ---
C      WRITE(OARCHV,121)JSTRT,JFINS,LEN
C  121 FORMAT(/' START ',I3,' END ',I3,' LENGTH ',I3)
C      WRITE(OARCHV,122)JSTRT,JFINS,NMSTEP,NUMPRO
C  122 FORMAT('JSTRT ',I3,' JFINS ',I3,' MUTATIONS/T ',
C     *       I3,' NUMPRO ',I3)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     GENERATE INITIAL ENSEMBLE OF PROTEINS
C     FIND CONFIGURATION WHICH SATISFIES THE CONSTRAINTS

      IDIGNS=.FALSE.

        ENDDO ! I_QUENCH

        GLY_COUNT = 0
       DO 764 III = 1,NMRES
       IF (IRES(III).EQ.8) THEN
         COORDS(9*(III-1)+1 - GLY_COUNT*3,1) = (PRCORD(III, 1, 1, 1)) !  CA X
         COORDS(9*(III-1)+2 - GLY_COUNT*3,1) = (PRCORD(III, 2, 1, 1)) !  CA Y
         COORDS(9*(III-1)+3 - GLY_COUNT*3,1) = (PRCORD(III, 3, 1, 1)) !  CA Z
         COORDS(9*(III-1)+4 - GLY_COUNT*3,1) = (PRCORD(III, 1, 1, 3)) !  O X
         COORDS(9*(III-1)+5 - GLY_COUNT*3,1) = (PRCORD(III, 2, 1, 3)) !  O Y
         COORDS(9*(III-1)+6 - GLY_COUNT*3,1) = (PRCORD(III, 3, 1, 3)) !  O Z
         GLY_COUNT = GLY_COUNT + 1
       ELSE
         COORDS(9*(III-1)+1 - GLY_COUNT*3,1) = (PRCORD(III, 1, 1, 1)) !  CA X
         COORDS(9*(III-1)+2 - GLY_COUNT*3,1) = (PRCORD(III, 2, 1, 1)) !  CA Y
         COORDS(9*(III-1)+3 - GLY_COUNT*3,1) = (PRCORD(III, 3, 1, 1)) !  CA Z
         COORDS(9*(III-1)+4 - GLY_COUNT*3,1) = (PRCORD(III, 1, 1, 2)) !  CB X
         COORDS(9*(III-1)+5 - GLY_COUNT*3,1) = (PRCORD(III, 2, 1, 2)) !  CB Y
         COORDS(9*(III-1)+6 - GLY_COUNT*3,1) = (PRCORD(III, 3, 1, 2)) !  CB Z
         COORDS(9*(III-1)+7 - GLY_COUNT*3,1) = (PRCORD(III, 1, 1, 3)) !  O X
         COORDS(9*(III-1)+8 - GLY_COUNT*3,1) = (PRCORD(III, 2, 1, 3)) !  O Y
         COORDS(9*(III-1)+9 - GLY_COUNT*3,1) = (PRCORD(III, 3, 1, 3)) !  O Z
       ENDIF
764    CONTINUE



      END
