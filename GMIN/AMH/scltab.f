 
C     --------------------- SCLTAB ----------------------

      SUBROUTINE SCLTAB

C     ---------------------------------------------------

C     SCLTAB SCALES THE POTENTIAL ENERGY ACCORDING TO
C            THE SPECIFIED ENERGY/RESIDUE FOR THE
C            TARGET CONFORMATION

C     ---------------------------------------------------

      USE AMHGLOBALS,  ONLY:SO, MAXTAB,MAXR,OARCHV,I521,NUMCRD,I523,
     *  PRCORD,ZRCORD,AVEP,VPOTNT,FORSE,MAXSIZ,NMRES,NUMMEM,
     *  IWORK,PEXCLD,NUMLNG,RINC,RINCINV,IPROLSTSCL,
     *  RINCSQ,ILONG,CRDIXN,IDIGNS,IRES,IPROLST,
     *  EQDIST,HBOND,OXEXCLDV,I1,NUMTAB,SRPLR,ERES,
     *  I502,I507,MAXS,I505,I511,I512,I2,I508,I509,I516,I515,
     *  I525,TARGET,IGOMB,NGOMB,ICLASSWEIGHT,TEST_SITE,
     *  IXN_FROM_SITE,I_V_TEST,MINMR,MAXMR,OVSCLTAB

      IMPLICIT NONE


C     INTERNAL VARIABLES:

         LOGICAL TEMPAV,SCL_CALL

         INTEGER I,I_TEST_TAB,I_TEST_IXN,I_RANGE

         INTEGER I_IXN, I_COORD, I_MEM, I_TAB,COUNT, K,J

         DOUBLE PRECISION RNORM,RMAX(MAXTAB),RMIN(MAXTAB),TRGENG(MAXTAB,3),TRGSCL(3),SRPLR_TOT,
     *        VPOTINT_TEST(0:MAXR+1),TRGENGTOT(3)

         CHARACTER*10 CCOUNT1,CCOUNT2,CCOUNT3
         CHARACTER*5 TARFL,MEMFL

        INTEGER NRES,MEMIRES(MAXSIZ),MEMSURF(MAXSIZ),MEMSS(MAXSIZ),OPEN_STATUS

        DOUBLE PRECISION MEMCORD(MAXSIZ,3,3)
 
C     REQUIRED SUBROUTINES:

         EXTERNAL FORCE,NUM_TO_CHAR

C     --------------------- BEGIN -----------------------
C        WRITE(SO,*) 'SCLTAB'C     GET TARGET'S RAW TABLE POTENTIAL  ENERGY
C     FIND POTENTIAL ENERGY FOR EACH INTERACTION TYPE

         TRGENGTOT(I_RANGE)=0.0D0
      TEMPAV=.TRUE.
C ***************

C   READ TARGET (WHICH IS CONSIDERED 0TH MEMORY)
          REWIND IPROLST

          READ (IPROLST,1000)TARFL
       DO 609 I_MEM=1,NUMMEM
1000     FORMAT(A5)
          READ (IPROLST,1000)MEMFL

          OPEN(17,FILE='PROTEINS/'//MEMFL,
     *        STATUS='OLD',IOSTAT=OPEN_STATUS)

         IF (OPEN_STATUS.NE.0) THEN
           WRITE(SO,*) 'FAILURE TO OPEN PROTEIN FILE ', MEMFL
           WRITE(SO,*) 'IN SCALE TAB'
           WRITE(SO,*) 'ERROR NUMBER ',OPEN_STATUS
           STOP
         ENDIF

           READ(17,*)
           READ(17,*)NRES
           READ(17,201)(MEMIRES(J),J=1,NRES)
201        FORMAT (25(I2,1X))
           DO J = 1,3
              READ(17,202)(MEMCORD(K,J,1),K=1,NRES)
202           FORMAT(8(F8.3,1X))
           ENDDO
           DO J = 1,3
              READ(17,202)(MEMCORD(K,J,2),K=1,NRES)
           ENDDO
           DO J = 1,3
              READ(17,202)(MEMCORD(K,J,3),K=1,NRES)
           ENDDO
           READ(17,201)(MEMSURF(K),K=1,NRES)
           READ(17,201)(MEMSS(K),K=1,NRES)
        CLOSE(17)
 
      WRITE(OARCHV,*)

        DO 521 I521=1,3                ! SET PROTEIN COORDS TO NATIVE STR
          DO 522 I_COORD=1,NUMCRD
            DO 523 I523=1,NMRES
C               PRCORD(I523,I521,1,I_COORD)=TARGET(I523,I521,I_COORD)
              PRCORD(I523,I521,1,I_COORD)=MEMCORD(I523,I521,I_COORD)
 523            CONTINUE
 522      CONTINUE
 521    CONTINUE

      SCL_CALL=.TRUE.

         CALL FORCE(1,PRCORD,ZRCORD,AVEP,TEMPAV,MAXR,VPOTNT,FORSE,TRGENG,PEXCLD,
     *     NUMLNG,NMRES,RINCINV,RINCSQ,ILONG,CRDIXN,IRES,EQDIST,HBOND,OXEXCLDV,SCL_CALL)

         IDIGNS=.FALSE.

       DO I_RANGE=1,3
         DO I_TAB=1,NUMTAB
          TRGENGTOT(I_RANGE)=TRGENGTOT(I_RANGE)+TRGENG(I_TAB,I_RANGE)
           WRITE(SO,*) I_TAB,I_RANGE,TRGENG(I_TAB,I_RANGE),TRGENGTOT(I_RANGE)
         ENDDO
       ENDDO 

609     CONTINUE

       DO I_RANGE=1,3
           WRITE(SO,*)'BEFORE NORMALIZATION ',TRGENGTOT(I_RANGE) 
           TRGENGTOT(I_RANGE)=TRGENGTOT(I_RANGE)/DBLE(NUMMEM)
           WRITE(SO,*)'AFTER NORMALIZATION ',TRGENGTOT(I_RANGE)
       ENDDO

       SRPLR_TOT=SRPLR(1)+SRPLR(2)+SRPLR(3)
 
       IF (ICLASSWEIGHT) THEN
         DO I_RANGE=1,3
           TRGSCL(I_RANGE)= DABS( (SRPLR(I_RANGE)/SRPLR_TOT)*4.0D0*
     *                        ERES*DBLE(NMRES)/TRGENGTOT(I_RANGE) )
         ENDDO
       ELSE
         DO I_RANGE=1,3
           IF (IGOMB) THEN
            TRGSCL(I_RANGE)=(DABS( 4.0D0*ERES*DBLE(NMRES)/AVEP(1,1,5)))**(1.0D0/NGOMB)
           ELSE
            TRGSCL(I_RANGE)=(DABS( 4.0D0*ERES*DBLE(NMRES)/AVEP(1,1,5)))  
           ENDIF
         ENDDO
       ENDIF

         WRITE(SO,*) 'SHORT, MED AND LONG RANGE CONTS TO POTENTIAL ARE'
         WRITE(SO,*) (TRGENG(I1,1),I1=1,MAXTAB)
         WRITE(SO,*) (TRGENG(I1,2),I1=1,MAXTAB)
         WRITE(SO,*) (TRGENG(I1,3),I1=1,MAXTAB)
         WRITE(SO,*) 'TOTALS PER CLASS:'
         WRITE(SO,*) (TRGENGTOT(I_RANGE),I_RANGE=1,3)
         WRITE(SO,*) 'SCALING FACTORS' 
         WRITE(SO,*) (TRGSCL(I_RANGE),I_RANGE=1,3)

C     WEIGHT TABLE ENERGIES FOR EACH COORDINATE TYPE

      DO 504 I_TAB=1,NUMTAB
         DO 502 I502=1,NUMLNG(NMRES,I_TAB)  ! SET IWORK=J-I
            IWORK(I502)=ILONG(I502,2,I_TAB) - ILONG(I502,1,I_TAB)
502      CONTINUE


C        LOOP OVER INTERACTION PAIRS
         DO 506 I_IXN=1,NUMLNG(NMRES,I_TAB)

             IF( IWORK(I_IXN).LT.MINMR )THEN

C              SHORT-RANGE IXNS

             DO 507 I507=0,MAXS+1
                 VPOTNT(I507,I_IXN,I_TAB)=TRGSCL(1)*VPOTNT(I507,I_IXN,I_TAB)
                 FORSE(I507,I_IXN,I_TAB)=TRGSCL(1)*FORSE(I507,I_IXN,I_TAB)
507          CONTINUE

            ELSEIF( IWORK(I_IXN).GT.MAXMR ) THEN

C              LONG-RANGE IXNS

               DO 525 I525=0,MAXS+1
                  VPOTNT(I525,I_IXN,I_TAB)=TRGSCL(3)*VPOTNT(I525,I_IXN,I_TAB)
                  FORSE(I525,I_IXN,I_TAB)=TRGSCL(3)*FORSE(I525,I_IXN,I_TAB)
525            CONTINUE
            ELSE

C              MED-RANGE IXNS

               DO 505 I505=0,MAXS+1
                  VPOTNT(I505,I_IXN,I_TAB)=TRGSCL(2)*VPOTNT(I505,I_IXN,I_TAB) 
                  FORSE(I505,I_IXN,I_TAB)=TRGSCL(2)*FORSE(I505,I_IXN,I_TAB)
  505          CONTINUE
            ENDIF
  506    CONTINUE


       IF (I_V_TEST) THEN

         I_TEST_TAB=I_TAB
         I_TEST_IXN=IXN_FROM_SITE(TEST_SITE(1),
     *                         TEST_SITE(2),I_TEST_TAB)
         IF ( (TEST_SITE(1).NE.ILONG(I_TEST_IXN,1,I_TEST_TAB))
     *    .OR.(TEST_SITE(2).NE.ILONG(I_TEST_IXN,2,I_TEST_TAB)) )
     *      THEN
            WRITE(SO,*) 'ERROR IN SCLTAB'
            WRITE(SO,*) 'TEST SITES FOR TABLE',I_TEST_TAB,'WRONG'
            WRITE(SO,*) 'SHOULD BE',TEST_SITE(1),TEST_SITE(2)
            WRITE(SO,*) 'FIND FROM LOOKING UP INTERACTION THEY ARE'
            WRITE(SO,*) ILONG(I_TEST_IXN,1,I_TEST_TAB),
     *                    ILONG(I_TEST_IXN,1,I_TEST_TAB)
            GOTO 1111
          ENDIF

         VPOTINT_TEST=0.0D0

         COUNT=TEST_SITE(1)
         CALL NUM_TO_CHAR(COUNT,CCOUNT1)
         COUNT=TEST_SITE(2)
         CALL NUM_TO_CHAR(COUNT,CCOUNT2)
         COUNT=I_TEST_TAB
         CALL NUM_TO_CHAR(COUNT,CCOUNT3)
         OPEN(OVSCLTAB,FILE='V_SCLTAB_'//TRIM(CCOUNT1)//'_'//
     *    TRIM(CCOUNT2)//'.'//TRIM(CCOUNT3),STATUS='UNKNOWN',ACTION='WRITE')

       WRITE(OVSCLTAB,*) 'R,VPOTNT,FORSE AND INT FORCE FOR IXN,TABLE'
     *                                 ,I_TEST_IXN,I_TEST_TAB
       WRITE(OVSCLTAB,*) 'SITES',ILONG(I_TEST_IXN,1,I_TEST_TAB)
     *                               ,ILONG(I_TEST_IXN,2,I_TEST_TAB)
       DO I=MAXS,0,-1 
         VPOTINT_TEST(I)=VPOTINT_TEST(I+1)+
     *                  (1.0D0*RINC(I_TEST_IXN,I_TEST_TAB))*0.5D0*
     *                  (FORSE(I+1,I_TEST_IXN,I_TEST_TAB)*DBLE(I+1)+
     *                   FORSE(I,I_TEST_IXN,I_TEST_TAB)*
     *                   DBLE(I))*RINC(I_TEST_IXN,I_TEST_TAB)
       ENDDO
       DO I=0,MAXS+1
         WRITE(OVSCLTAB,*) DBLE(I)*RINC(I_TEST_IXN,I_TEST_TAB),
     *                   VPOTNT(I,I_TEST_IXN,I_TEST_TAB),
     *   (FORSE(I,I_TEST_IXN,I_TEST_TAB)*RINC(I_TEST_IXN,I_TEST_TAB))
     *                          *DBLE(I),VPOTINT_TEST(I) 
       ENDDO

1111  ENDIF !END OF WRITING OUT TEST POTENTIAL
       
       
  504 CONTINUE

C     --- DIAGNOSTICS --- 

      RNORM=0.0D0
      DO 511 I511=1,NUMTAB
         RNORM=RNORM + TRGENG(I511,1) + TRGENG(I511,2)
  511 CONTINUE
      WRITE(OARCHV,345)RNORM
  345 FORMAT(/'TARGET ENERGIES AND SCALING FACTORS ',1PE10.3)
      DO 512 I512=1,NUMTAB
         WRITE(OARCHV,130)I512,(TRGENG(I512,I2),I2=1,2),
     *                    (TRGSCL(I2),I2=1,2)
  130    FORMAT('TABLE ',I2,1X,4(1PE10.3,1X))
  512 CONTINUE

C     PRINT SAMPLE OF IXN PAIRS

      WRITE(OARCHV,132)
  132 FORMAT(/4(3X,'SITES',9X,'V',2X))
      DO 508 I508=1,NMRES,NMRES-10
         DO 509 I509=NUMLNG(I508-1,1)+1,
     *               MIN( NUMLNG(I508-1,1)+5,NUMLNG(I508,1))

            DO 516 I516=1,NUMTAB
               RMAX(I516)=-100000.0D0
               RMIN(I516)=1000000.0D0
               DO 515 I515=1,MAXS
                  RMAX(I516)=
     *               MAX( RMAX(I516),VPOTNT(I515,I509,I516) )
                  RMIN(I516)=
     *               MIN( RMIN(I516),VPOTNT(I515,I509,I516) )
  515           CONTINUE
  516       CONTINUE
            WRITE(OARCHV,103)(ILONG(I509,1,I1),ILONG(I509,2,I1),
     *                       VPOTNT(1,I509,I1),I1=1,MIN(4,NUMTAB))
  103       FORMAT(/4(2(1X,I3),1X,1PE9.2,2X))
            WRITE(OARCHV,106)(VPOTNT(MAXS,I509,I1),I1=1,4)
            WRITE(OARCHV,106)(RMIN(I1),I1=1,NUMTAB)
            WRITE(OARCHV,106)(RMAX(I1),I1=1,NUMTAB)
  106       FORMAT(4(2(1X,3X),1X,1PE9.2,2X))

  509    CONTINUE
  508 CONTINUE
 
C     ---------------------- DONE -----------------------

      RETURN
      END
