C   GMIN: A PROGRAM FOR FINDING GLOBAL MINIMA
C   COPYRIGHT (C) 1999-2006 DAVID J. WALES
C   THIS FILE IS PART OF GMIN.
C
C   GMIN IS FREE SOFTWARE; YOU CAN REDISTRIBUTE IT AND/OR MODIFY
C   IT UNDER THE TERMS OF THE GNU GENERAL PUBLIC LICENSE AS PUBLISHED BY
C   THE FREE SOFTWARE FOUNDATION; EITHER VERSION 2 OF THE LICENSE, OR
C   (AT YOUR OPTION) ANY LATER VERSION.
C
C   GMIN IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,
C   BUT WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF
C   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  SEE THE
C   GNU GENERAL PUBLIC LICENSE FOR MORE DETAILS.
C
C   YOU SHOULD HAVE RECEIVED A COPY OF THE GNU GENERAL PUBLIC LICENSE
C   ALONG WITH THIS PROGRAM; IF NOT, WRITE TO THE FREE SOFTWARE
C   FOUNDATION, INC., 59 TEMPLE PLACE, SUITE 330, BOSTON, MA  02111-1307  USA
C
      SUBROUTINE WALESAMH_FINALIO

      USE COMMONS, ONLY:NATOMS
      USE QMOD
      USE GLOBALS, ONLY:SO,MAXTAB,MAXR,NUMCRD,I523,NMRES,NUMPRO,MAXPRO,MAXCRD,IRES,AMINOA

      IMPLICIT NONE

      INTEGER J1, J2, J3, NTYPEA, III, I1,JJJ, COUNTT, GLY_COUNT, NSAVE
      DOUBLE PRECISION EPSAB, EPSBB, SIGAB, SIGBB
      COMMON /BIN/ EPSAB, EPSBB, SIGAB, SIGBB, NTYPEA

      DOUBLE PRECISION EPS2, RAD, HEIGHT
      COMMON /CAPS/ EPS2, RAD, HEIGHT

      CHARACTER(LEN=6) :: CRMS
      CHARACTER(LEN=3) :: RES_TYPE
      CHARACTER*1 COUNTTT

      REAL  PPPCORD(NMRES*3*3,3,MAXPRO,MAXCRD)

      EXTERNAL NUM_TO_CHAR

      NSAVE=3    

      OPEN(UNIT=25,FILE='LOWEST',STATUS='UNKNOWN')

      OPEN(UNIT=26,FILE='MOVIE_GMIN',STATUS='UNKNOWN')
      WRITE(26,334)NMRES,NUMCRD,NUMPRO,NSAVE
334   FORMAT(4(I8,1X),' NMRES NMCRD NUMPRO NMSNAP')

      DO J1=1,NSAVE
         COUNTT=J1
         CALL NUM_TO_CHAR(COUNTT,COUNTTT)
         OPEN(UNIT=27,FILE='MOVIE_GMIN.'//COUNTTT//'.PDB',STATUS='UNKNOWN')

         WRITE(25,*) NATOMS
         WRITE(25,10) J1, QMIN(J1), FF(J1)
10       FORMAT('ENERGY OF MINIMUM ',I2,'=',F20.10,' FIRST FOUND AT STEP ',I8)
         WRITE(26,683)NUMCRD,J1,NUMCRD,REAL(NUMCRD),NUMCRD
683      FORMAT(3(I6,1X),F8.4,1X,I5,' STUCT SNAP T T TID')  

         GLY_COUNT = 0

         DO 1964 III = 1,NMRES

            IF (IRES(III).EQ.8) THEN
 
               PPPCORD(III, 1, 1, 1) = REAL(QMINP(J1,9*(III-1)+1- GLY_COUNT*3)) !  CA X
               PPPCORD(III, 2, 1, 1) = REAL(QMINP(J1,9*(III-1)+2- GLY_COUNT*3)) !  CA Y
               PPPCORD(III, 3, 1, 1) = REAL(QMINP(J1,9*(III-1)+3- GLY_COUNT*3)) !  CA Z
!    SWAP  CA FOR CB
               PPPCORD(III, 1, 1, 2) = REAL(QMINP(J1,9*(III-1)+1- GLY_COUNT*3)) !  CB X
               PPPCORD(III, 2, 1, 2) = REAL(QMINP(J1,9*(III-1)+2- GLY_COUNT*3)) !  CB Y
               PPPCORD(III, 3, 1, 2) = REAL(QMINP(J1,9*(III-1)+3- GLY_COUNT*3)) !  CB Z
               PPPCORD(III, 1, 1, 3) = REAL(QMINP(J1,9*(III-1)+4- GLY_COUNT*3)) !  O X
               PPPCORD(III, 2, 1, 3) = REAL(QMINP(J1,9*(III-1)+5- GLY_COUNT*3)) !  O Y
               PPPCORD(III, 3, 1, 3) = REAL(QMINP(J1,9*(III-1)+6- GLY_COUNT*3)) !  O Z
    
               GLY_COUNT = GLY_COUNT +1
            ELSE

               PPPCORD(III, 1, 1, 1) = REAL(QMINP(J1,9*(III-1)+1- GLY_COUNT*3)) !  CA X
               PPPCORD(III, 2, 1, 1) = REAL(QMINP(J1,9*(III-1)+2- GLY_COUNT*3)) !  CA Y
               PPPCORD(III, 3, 1, 1) = REAL(QMINP(J1,9*(III-1)+3- GLY_COUNT*3)) !  CA Z
               PPPCORD(III, 1, 1, 2) = REAL(QMINP(J1,9*(III-1)+4- GLY_COUNT*3)) !  CB X
               PPPCORD(III, 2, 1, 2) = REAL(QMINP(J1,9*(III-1)+5- GLY_COUNT*3)) !  CB Y
               PPPCORD(III, 3, 1, 2) = REAL(QMINP(J1,9*(III-1)+6- GLY_COUNT*3)) !  CB Z
               PPPCORD(III, 1, 1, 3) = REAL(QMINP(J1,9*(III-1)+7- GLY_COUNT*3)) !  O X
               PPPCORD(III, 2, 1, 3) = REAL(QMINP(J1,9*(III-1)+8- GLY_COUNT*3)) !  O Y
               PPPCORD(III, 3, 1, 3) = REAL(QMINP(J1,9*(III-1)+9- GLY_COUNT*3)) !  O Z
      
            ENDIF

1964     CONTINUE
        
         DO 526 III=1,NMRES
            WRITE(26,632)(PPPCORD(III,I1,1,1),I1=1,3),
     *         (PPPCORD(III,I1,1,2),I1=1,3),(PPPCORD(III,I1,1,3),I1=1,3)
632         FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1X))
526      CONTINUE


         DO 664 III = 1,NMRES 
            RES_TYPE = AMINOA(IRES(III))
            WRITE(27,665)III,RES_TYPE,III,(PPPCORD(III,JJJ,1,1),JJJ=1,3),III
665         FORMAT('ATOM    ',I3,'  CA  ',A3,'   ',I3,'    ',3(F8.3),'  1.00  0.00     TPDB ',I3)
            WRITE(27,668)III,RES_TYPE,III,(PPPCORD(III,JJJ,1,2),JJJ =1,3),III
668         FORMAT('ATOM    ',I3,'  CB  ',A3,'   ',I3,'    ',3(F8.3),'  1.00  0.00     TPDB ',I3)
            WRITE(27,670)III,RES_TYPE,III,(PPPCORD(III,JJJ,1,3),JJJ =1,3),III
670         FORMAT('ATOM    ',I3,'  O   ',A3,'   ',I3,'    ',3(F8.3),'  1.00  0.00     TPDB ',I3)
664      CONTINUE

         CLOSE(27)

         IF ((NS.GT.0).AND.(.NOT.(WELCH.OR.TOSI))) THEN
            WRITE(25,50) (QMINP(J1,J2),J2=3*(NATOMS-NS)+1,3*NATOMS)
50          FORMAT('LB',3F20.10)
         ENDIF
      ENDDO
      CLOSE(25)
      CLOSE(26)
 
      RETURN
      END
