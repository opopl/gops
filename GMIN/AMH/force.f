
C     --------------------- FORCE ----------------------

      SUBROUTINE FORCE(NUMPRO,PRCORD,ZRCORD,AVEP,TEMPAV,MAXR,VPOTNT,FORSE,
     *          TRGENG,PEXCLD,NUMLNG,NMRES,RINCINV,RINCSQ,ILONG,CRDIXN,IRES,
     *                 EQDIST,HBOND,OXEXCLDV,SCL_CALL)
 
C     ---------------------------------------------------

C     FORCE  FINDS THE FORCES AND POTENTIAL FOR THE CONFIGURATIONS IN PRCORD

C     ARGUMENTS:

C        MAXSIZ- MAXIMUM PROTEIN LENGTH (I)
C        MAXPRO- MAXIMUM NUMBER OF PROTEINS (I)
C        NUMPRO- ACTUAL ENSEMBLE NUMBER (I)
C        PRCORD- CURRENT SET OF CONFIGURATIONS (I)
C        MAXCNT- MAXIMUM NUMBER OF PAIR IXNS (I)
C        ZRCORD- TOTAL FORCE ON EACH RESIDUE (O)
C        AVEP  - ARRAY USED TO RECORD 1ST AND 2ND 
C                MOMENTS OF THE POTENTIAL ENERGY
C        TEMPAV- IF TEMPAV, THEN COMPUTE TOTAL FORCES
C                AND POTENTIAL FOR AVERAGING
C        MAXR  - MAXIMUM R-GRID LENGTH (I)
C        MAXRES- MAXIMUM NUMBER OF RESIDUES (I)
C        IRES  - CODED AMINO ACID SEQUENCE (I)
         
         USE AMHGLOBALS,  ONLY: MAXTAB,MAXSIZ,MAXCNT,MAXPRO,MAXCRD,
     *         OXSCL,CHRLSCL,RAMASCL,IGOMB,NGOMB,IBIASGAUSS,BIAS_AV,BIAS_VAR,
     *         BIAS_PREFACTOR,IBIASPOLY,NBIASPOLY,BIASPOLY,
     *         I_QBIAS_A,I_QBIAS_B,CCEV_DIST,I_NON_ADD_CONTACT,I_CON_P_AP,
     *         I_REP,I_HBOND_EASTWOOD,SO

         USE AMH_INTERFACES, ONLY:OXY,LOOKUP,
     *    CONTACT_P_AP,NON_ADD_CONTACT,REP_BIAS,DSSP_HDRGN_EASTWOOD,HDRGN

         USE GLOBALS_ALT, ONLY:ALTPOTFLAG

         IMPLICIT NONE

C     ARGUMENT DECLARATIONS:

         LOGICAL TEMPAV,SCL_CALL,HBOND,OXEXCLDV

         INTEGER NUMPRO,CRDIXN(MAXTAB,2),MAXR,NUMLNG(0:MAXSIZ,MAXTAB),NMRES,
     *           ILONG(MAXCNT,2,MAXTAB),IRES(MAXSIZ)
     
         DOUBLE PRECISION PRCORD(MAXSIZ,3,MAXPRO,MAXCRD),
     *        ZRCORD(MAXSIZ,3,MAXPRO,MAXCRD),F_CORD(MAXSIZ,3,MAXCRD),PRO_CORD(MAXSIZ,3,MAXCRD),
     *        AVEP(MAXPRO,2,50),RINCINV(MAXCNT,MAXTAB),
     *        RINCSQ(MAXCNT,MAXTAB),VPOTNT(0:MAXR+1,MAXCNT,MAXTAB),
     *        FORSE(0:MAXR+1,MAXCNT,MAXTAB),TRGENG(MAXTAB,3),PEXCLD,E(2,50),EQDIST(5),
     *        FRCORD(MAXSIZ,3,MAXPRO,MAXCRD)

C     INTERNAL VARIABLES:
C        --- DO LOOP INDICES ---

         INTEGER  I_PRO

          EXTERNAL  ALTPOT_MASTER

C     --------------------- BEGIN -----------------------

C             WRITE(SO,*) 'BEGIN FORCE'
  
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     INITIALIZE STORAGE FOR POTENTIAL ENERGY
C     AND INITIALIZE ZRCORD

      AVEP=0.0D0
      ZRCORD=0.0D0
      PRO_CORD=0.0D0
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

      IF (I_REP) THEN
        CALL REP_BIAS(PRCORD,FRCORD,E(1,43))
        ZRCORD=ZRCORD+FRCORD
        IF (TEMPAV) AVEP(1,:,:)=AVEP(1,:,:)+E
      ENDIF
               
      DO 500 I_PRO=1,NUMPRO
        PRO_CORD=PRCORD(:,:,I_PRO,:)

C       FIND HBOND FORCE AND POTENTIAL
C       IF ( .NOT.SCL_CALL ) THEN
         IF ( HBOND ) THEN
            CALL HDRGN(PRO_CORD,F_CORD,TEMPAV,E)
            ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
            IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E
         ENDIF

         IF ( I_HBOND_EASTWOOD ) THEN
            CALL DSSP_HDRGN_EASTWOOD(PRO_CORD,F_CORD,TEMPAV,E)
            ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
            IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E
C           WRITE(6,*)'E HYDROGEN BOND ', E
       ENDIF
 
C       IF( .NOT.SCL_CALL ) THEN
           CALL OXY(MAXTAB,IRES,1,NMRES,PRO_CORD,F_CORD,
     *              EQDIST,OXSCL,CHRLSCL,RAMASCL,
     *              OXEXCLDV,NUMLNG,ILONG,NMRES,E)

            ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
            IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E
C        ENDIF

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 
C        FIND POTENTIAL AND FORCE DUE TO CA/CB VIA LOOKUP 

C          WRITE(SO,*)'IN LOOKUP'

         CALL LOOKUP(MAXR,CRDIXN,VPOTNT,FORSE,PRO_CORD,F_CORD,
     *      TRGENG,NUMLNG,NMRES,RINCINV,RINCSQ,IGOMB,NGOMB,TEMPAV,MAXTAB,ILONG,
     *      E,IBIASGAUSS,BIAS_AV,BIAS_VAR,BIAS_PREFACTOR,IBIASPOLY,NBIASPOLY,
     *               BIASPOLY,I_QBIAS_A,I_QBIAS_B,CCEV_DIST,PEXCLD)
         ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
         IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E

!CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C       FIND NON-ADDITIVE CONTACT CONTRIBUTION
C                  WRITE(SO,*) 'IN NON_ADD'

          IF (I_NON_ADD_CONTACT) THEN
             E=0.0D0
             CALL NON_ADD_CONTACT(PRO_CORD,NMRES,TEMPAV,F_CORD,E(1,17))
             ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
             IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E
          ENDIF

         IF((ALTPOTFLAG(1).GT.0).OR.(ALTPOTFLAG(2).GT.0))THEN ! ANISOTROPICALLY VARYING POTENTIAL:
            E=0.0D0
            CALL ALTPOT_MASTER(PRO_CORD,F_CORD,E,TEMPAV,NMRES)
             ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
             IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E
         ENDIF

         IF (I_CON_P_AP) THEN 
             E=0.0D0
             CALL CONTACT_P_AP(PRO_CORD,NMRES,F_CORD,E(1,40:42))
             ZRCORD(:,:,I_PRO,:)=ZRCORD(:,:,I_PRO,:)+F_CORD
             IF (TEMPAV) AVEP(I_PRO,:,:)=AVEP(I_PRO,:,:)+E
         ENDIF
  500 CONTINUE                        ! END OF LOOP OVER PROTEINS

C   ENERGY 
C   AVEP(NUM_PRO , ???? , ENERGY TERM , NMDIF)

C FORCE 
C ZRCORD(NUMRES,I_AXIS,NUMPRO,CORD TYPE ),

C     ---------------------- DONE -----------------------
      RETURN
      END
