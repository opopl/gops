!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	EAMal.f	/^1       CONTINUE$/;"	l	subroutine:EAMal	file:
1	brent.f	/^1       IF(X.GE.XM) THEN$/;"	l	function:BRENT	file:
1	fedor.f	/^    1 continue$/;"	l	function:ar2UT0	file:
1	fedor.f	/^    1 continue$/;"	l	function:ut	file:
1	fedor.f	/^   1      continue$/;"	l	subroutine:hmat	file:
1	fedor.f	/^   1      continue$/;"	l	subroutine:hmatd	file:
1	fedor.f	/^  1      continue$/;"	l	subroutine:dipoles	file:
1	fedor.f	/^  1     ereal=ee(1)$/;"	l	subroutine:rgni	file:
1	gauss.f	/^1       v1=2.*DPRAND()-1.$/;"	l	function:gasdev	file:
1	newmindist.f90	/^1  NCIT=NCIT+1$/;"	l	subroutine:NEWMINDIST	file:
1	odesd.f	/^1       kmax=kopt$/;"	l	subroutine:bsstep	file:
1	odesd.f	/^1     call rkck(y,dydx,n,x,h,ytemp,yerr)$/;"	l	subroutine:rkqs	file:
1	pyg.f90	/^1        IF (X >= XM) THEN$/;"	l	subroutine:BRENTMIN	file:
1	quench.f	/^     1                                     EREAL, EPREV(NP), DISTMIN, EPSSPHERE$/;"	l	subroutine:QUENCH	file:
1	quench.f	/^     1              P(3*(NATOMS\/2+J2-1)+1),P(3*(NATOMS\/2+J2-1)+2),P(3*(NATOMS\/2+J2-1)+3),RBCOORDS)$/;"	l	subroutine:QUENCH	file:
1	quench.f	/^     1              POTEL,' steps=',ITER,' RMS force=',RMS$/;"	l	subroutine:QUENCH	file:
1	sort.f	/^1     if(ir-l.lt.M)then$/;"	l	subroutine:Gsort	file:
1	takestepmsgb.f90	/^1        IF (X .GE. XM) THEN$/;"	l	subroutine:BRENTMINGB	file:
10	Alglue.f	/^   10 i = 1$/;"	l	subroutine:seval	file:
10	CSMinit.f90	/^10    CALL FLUSH(6)$/;"	l	subroutine:CSMMIN	file:
10	EAMal.f	/^   10 i = 1$/;"	l	subroutine:seval1	file:
10	EAMal.f	/^10     CONTINUE$/;"	l	subroutine:EAMal	file:
10	JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2C	file:
10	JM.f	/^10       CONTINUE$/;"	l	subroutine:JMEC	file:
10	MSorigc.f	/^10    FORMAT(A8, F20.17)$/;"	l	subroutine:MSORIGC	file:
10	Q4.f	/^10    continue$/;"	l	subroutine:ORDERQ4	file:
10	Zetterling.f	/^10    DO J1=1,NATOMS$/;"	l	subroutine:Z1	file:
10	Zetterling.f	/^10    DO J1=1,NATOMS$/;"	l	subroutine:Z2	file:
10	cgmin.f	/^10          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in cgmin')$/;"	l	subroutine:CGMIN	file:
10	dbptd.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWDMBLTD	file:
10	dbrent.f	/^10      IF(DX.GE.0.) THEN$/;"	l	function:DBRENT	file:
10	dgetrf.f	/^   10             CONTINUE$/;"	l	subroutine:DLASWP	file:
10	dgetrf.f	/^   10       CONTINUE$/;"	l	function:ILAENV	file:
10	dgetrf.f	/^   10       CONTINUE$/;"	l	subroutine:DGETRF	file:
10	dgetrf.f	/^   10 CONTINUE$/;"	l	subroutine:DGETF2	file:
10	dgetri.f	/^   10       CONTINUE$/;"	l	subroutine:DGETRI	file:
10	dgetri.f	/^   10    CONTINUE$/;"	l	subroutine:DTRTI2	file:
10	dgetri.f	/^   10    CONTINUE$/;"	l	subroutine:DTRTRI	file:
10	display_version.f90	/^10 format(a)$/;"	l	subroutine:display_version	file:
10	dlamch.f	/^   10    CONTINUE$/;"	l	subroutine:DLAMC1	file:
10	dlamch.f	/^   10    CONTINUE$/;"	l	subroutine:DLAMC2	file:
10	dlamch.f	/^   10 CONTINUE$/;"	l	subroutine:DLAMC4	file:
10	dlamch.f	/^   10 CONTINUE$/;"	l	subroutine:DLAMC5	file:
10	dlsode.f	/^   10          CONTINUE$/;"	l	subroutine:DGBSL	file:
10	dlsode.f	/^   10       CONTINUE$/;"	l	subroutine:DGESL	file:
10	dlsode.f	/^   10    CONTINUE$/;"	l	subroutine:DGBFA	file:
10	dlsode.f	/^   10 CONTINUE$/;"	l	function:IDAMAX	file:
10	dlsode.f	/^   10 CONTINUE$/;"	l	function:MYDDOT	file:
10	dlsode.f	/^   10 CONTINUE$/;"	l	subroutine:DSCAL	file:
10	dlsode.f	/^   10 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
10	dlsode.f	/^ 10     IC = IC*JJ$/;"	l	subroutine:DINTDY	file:
10	dlsode.f	/^ 10     RSAV(I) = RLS(I)$/;"	l	subroutine:DSRCOM	file:
10	dlsode.f	/^ 10     SUM = SUM + (V(I)*W(I))**2$/;"	l	function:DVNORM	file:
10	dlsode.f	/^ 10   CONTINUE$/;"	l	subroutine:DEWSET	file:
10	dlsode.f	/^ 10   FORMAT(1X,A)$/;"	l	subroutine:XERRWD	file:
10	dlsode.f	/^ 10   INIT = 0$/;"	l	subroutine:DLSODE	file:
10	dlsode.f	/^ 10   U = U*0.5D0$/;"	l	function:DUMACH	file:
10	dmblmorse.f90	/^10         ENDDO$/;"	l	subroutine:DMBLMORSE	file:
10	dmblmorse.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWDMBL	file:
10	dprand.f	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	dprand.f	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	dv.f90	/^10 format(a)$/;"	l	subroutine:display_version	file:
10	dzugutov.f	/^10    DO J1=1,NATOMS $/;"	l	subroutine:DZPOT	file:
10	eigsrt.f	/^10       CONTINUE$/;"	l	subroutine:EIGSRT	file:
10	f1dim.f	/^10    CONTINUE$/;"	l	function:F1DIM	file:
10	fdm.f	/^10    CONTINUE$/;"	l	subroutine:FDM	file:
10	fedor.f	/^   10      continue$/;"	l	function:ut0	file:
10	fedor.f	/^   10      continue$/;"	l	function:ut01	file:
10	fedor.f	/^   10    M = M - 1$/;"	l	function:PPVALU	file:
10	fedor.f	/^   10 C(4,M)=(C(1,M)-C(1,M-1))\/C(3,M)$/;"	l	subroutine:CUBSPL	file:
10	fedor.f	/^   10 continue$/;"	l	function:ut	file:
10	fedor.f	/^  10      continue$/;"	l	subroutine:dipoles	file:
10	fedor.f	/^  10      continue$/;"	l	subroutine:hmat	file:
10	fedor.f	/^  10      continue$/;"	l	subroutine:hmatd	file:
10	finalio.f	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	input.f	/^10    CONTINUE$/;"	l	subroutine:MYUPCASE	file:
10	input.f	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	input.f	/^10    M=1$/;"	l	file:
10	input.f	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	input.f	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	ljcapsidmodule.f90	/^10    IF ( H .EQ. 1 ) GOTO 40$/;"	l	subroutine:SVERT	file:
10	mc.F	/^10       IF ((XMOVERENORM.GT.3.0D0).OR.FIXD) THEN$/;"	l	subroutine:REN	file:
10	mc.F	/^10    CALL HSMOVE(COORDS(1:3*NATOMS,1:NPAR),1,NHSRESTART)$/;"	l	subroutine:REST	file:
10	mc.F	/^10    FORMAT('Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
10	minperm.f	/^   10 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
10	minperm.f	/^10            if(l .le. 1) goto 11$/;"	l	subroutine:minperm	file:
10	minpermdist.f90	/^10 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
10	mnbrak.f	/^10    IF(FB.GE.FC)THEN$/;"	l	subroutine:MNBRAK	file:
10	multpaha.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWMULTPAHA	file:
10	myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMGK	file:
10	myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMKK	file:
10	myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMSK	file:
10	mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBMV	file:
10	mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBSV	file:
10	mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPMV	file:
10	mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPSV	file:
10	mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRMV	file:
10	mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRSV	file:
10	mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR	file:
10	mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR2	file:
10	mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR	file:
10	mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR2	file:
10	mylapack.f	/^   10                CONTINUE$/;"	l	subroutine:DTBSV	file:
10	mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:DSYR	file:
10	mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGBMV	file:
10	mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGEMV	file:
10	mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSBMV	file:
10	mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSPMV	file:
10	mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSYMV	file:
10	mylapack.f	/^   10            CONTINUE$/;"	l	subroutine:SGER	file:
10	mylapack.f	/^   10          CONTINUE$/;"	l	subroutine:DPBTRF	file:
10	mylapack.f	/^   10    CONTINUE$/;"	l	function:LCE	file:
10	mylapack.f	/^   10    CONTINUE$/;"	l	function:LDE	file:
10	mylapack.f	/^   10    CONTINUE$/;"	l	function:LSE	file:
10	mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTF2	file:
10	mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTRS	file:
10	mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:SMAKE	file:
10	mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SMESSG	file:
10	mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SOPEN	file:
10	mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK1	file:
10	mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK2	file:
10	mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK3	file:
10	mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK4	file:
10	mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK5	file:
10	mylapack.f	/^   10 MI = 891$/;"	l	function:SBEG	file:
10	mylbfgs.f	/^10    CALL FLUSH(MYUNIT)$/;"	l	subroutine:MYLBFGS	file:
10	mysd.f	/^10    GNORM=DSQRT(DDOT(NOPT,GRAD,1,GRAD,1))$/;"	l	subroutine:MYSD	file:
10	newtip.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWNEWTIP	file:
10	odesd.f	/^10    CALL POTENTIAL(VARS,DYDX,ENERGY,.TRUE.,.FALSE.)$/;"	l	subroutine:ODESD	file:
10	orient.f	/^10    CONTINUE$/;"	l	subroutine:MYORIENT	file:
10	potential.f	/^10    CONTINUE$/;"	l	subroutine:POTENTIAL	file:
10	ptgrp.f	/^   10   ARR(I+1)=A$/;"	l	subroutine:PIKSR2	file:
10	ptgrp.f	/^ 10      RT(IDIR,J)=IBTAND(IDIR,J)\/MAX(IDIR,J)$/;"	l	subroutine:ROTM	file:
10	ptgrp.f	/^ 10   CONTINUE$/;"	l	function:ITOA	file:
10	ptgrp.f	/^ 10   V(I)=B(I)-A(I)$/;"	l	subroutine:XVEC	file:
10	ptgrp.f	/^10                   CONTINUE$/;"	l	subroutine:PTGRP	file:
10	ptgrp.f	/^10    A(I)=0.D0$/;"	l	subroutine:ZERO	file:
10	ptgrp.f	/^10    A(I)=B(I)+C(I)*IP$/;"	l	subroutine:VADD	file:
10	ptgrp.f	/^10    AT(J,I)=A(I,J)$/;"	l	subroutine:MTRANS	file:
10	ptgrp.f	/^10    B(J,I)=ZER$/;"	l	subroutine:EIG	file:
10	ptgrp.f	/^10    CONTINUE$/;"	l	subroutine:MATMUL	file:
10	ptgrp.f	/^10    CONTINUE$/;"	l	subroutine:SORTXYZ	file:
10	ptgrp.f	/^10    MYDOT=MYDOT+A(I)*B(I)$/;"	l	function:MYDOT	file:
10	ptgrp.f	/^10    Q=Q+X(I)**2$/;"	l	subroutine:NORMAL	file:
10	ptgrp.f	/^10    Z=Z+(A(I)-B(I))**2$/;"	l	function:FDIST	file:
10	pyg.f90	/^10    CONTINUE$/;"	l	subroutine:BRENTMIN	file:
10	quench.f	/^10    IF (PERMOPT) THEN ! lb415$/;"	l	subroutine:QUENCH	file:
10	saveit.f	/^10    CONTINUE$/;"	l	subroutine:A9INTESAVEIT	file:
10	saveit.f	/^10    CONTINUE$/;"	l	subroutine:GSAVEIT	file:
10	seed.f	/^10    CLOSE(10)$/;"	l	subroutine:GSEED	file:
10	sort2.f	/^10       CONTINUE$/;"	l	subroutine:GSORT2	file:
10	sort3.f	/^10       CONTINUE$/;"	l	subroutine:SORT3	file:
10	sort4.f	/^10       CONTINUE$/;"	l	subroutine:SORT4	file:
10	taboo.f	/^10          CONTINUE$/;"	l	subroutine:TABOO	file:
10	takestep.f	/^10       J2=3*J1$/;"	l	subroutine:TAKESTEP	file:
10	takestepmsgb.f90	/^10    CONTINUE$/;"	l	subroutine:BRENTMINGB	file:
10	tetrahedra.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWTDHD	file:
10	tn.f	/^   10 CONTINUE$/;"	l	subroutine:DXPY	file:
10	tn.f	/^10      ITEST = 2$/;"	l	subroutine:GETPTC	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:CNVTST	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:INITP3	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:LINDER	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:LMQN	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:MODLNP	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:MODZ	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:MONIT	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:NDIA3	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:NEGVEC	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:SETPAR	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:SSBFGS	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:STPMAX	file:
10	tn.f	/^10    CONTINUE$/;"	l	subroutine:ZTIME	file:
10	tosifumi.f	/^   10 CONTINUE$/;"	l	subroutine:NDHESS	file:
10	welch.f	/^   10       continue$/;"	l	subroutine:dgefa	file:
10	welch.f	/^   10       if (dabs(det(1)) .ge. 1.0d0) go to 20$/;"	l	subroutine:dgedi	file:
10	welch.f	/^   10 continue$/;"	l	subroutine:dgeco	file:
10	zwischen.f	/^10    CONTINUE$/;"	l	subroutine:ZWISCHEN	file:
100	JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3C	file:
100	Q4.f	/^100   CONTINUE$/;"	l	function:FAC	file:
100	bipartite.f90	/^100 CONTINUE$/;"	l	subroutine:BIPARTITE	file:
100	dgetrf.f	/^  100 CONTINUE$/;"	l	function:ILAENV	file:
100	dlsode.f	/^  100    CONTINUE$/;"	l	subroutine:DGBFA	file:
100	dlsode.f	/^  100 CONTINUE$/;"	l	subroutine:DGBSL	file:
100	dlsode.f	/^  100 CONTINUE$/;"	l	subroutine:DGESL	file:
100	dlsode.f	/^ 100  CALL DGESL (WM(3), N, N, IWM(21), X, 0)$/;"	l	subroutine:DSOLSY	file:
100	dlsode.f	/^ 100  CONTINUE$/;"	l	subroutine:DSRCOM	file:
100	dlsode.f	/^ 100  ELCO(1,1) = 1.0D0$/;"	l	subroutine:DCFODE	file:
100	dlsode.f	/^ 100  IF (LEVEL .NE. 2) RETURN$/;"	l	subroutine:XERRWD	file:
100	dlsode.f	/^ 100  IPUP = MITER$/;"	l	subroutine:DSTODE	file:
100	dlsode.f	/^ 100  LENP = N*N$/;"	l	subroutine:DPREPJ	file:
100	dlsode.f	/^ 100  UROUND = DUMACH()$/;"	l	subroutine:DLSODE	file:
100	fedor.f	/^  100 MFLAG =  0$/;"	l	subroutine:INTERV	file:
100	input.f	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	input.f	/^100   L=L+1$/;"	l	file:
100	ljcapsidmodule.f90	/^100        W(N) = W(N)\/V(K+L)$/;"	l	subroutine:SVERT	file:
100	minperm.f	/^  100 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
100	mylapack.f	/^  100                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
100	mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBMV	file:
100	mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBSV	file:
100	mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPMV	file:
100	mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPSV	file:
100	mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRMV	file:
100	mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRSV	file:
100	mylapack.f	/^  100          CONTINUE$/;"	l	subroutine:DTBSV	file:
100	mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGBMV	file:
100	mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGEMV	file:
100	mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSBMV	file:
100	mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSPMV	file:
100	mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSYMV	file:
100	mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK2	file:
100	mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK3	file:
100	mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK4	file:
100	mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK5	file:
100	mylapack.f	/^  100 CONTINUE$/;"	l	subroutine:SCHCK1	file:
100	ptgrp.f	/^  100  CONTINUE$/;"	l	function:LNBLNK	file:
100	ptgrp.f	/^ 100  CONTINUE$/;"	l	function:ITOA	file:
100	ptgrp.f	/^100   IF(DIFF.GT.ZER) GO TO 110$/;"	l	subroutine:EIG	file:
100	tn.f	/^100   CONTINUE$/;"	l	subroutine:MSLV	file:
100	tn.f	/^100   OLDF = FNEW$/;"	l	subroutine:LMQN	file:
100	tn.f	/^100   R = ZERO$/;"	l	subroutine:GETPTC	file:
100	welch.f	/^  100    continue$/;"	l	subroutine:dgedi	file:
100	welch.f	/^  100 continue$/;"	l	subroutine:dgeco	file:
1000	dgetrf.f	/^ 1000 CONTINUE$/;"	l	function:ILAENV	file:
1000	minperm.f	/^ 1000 END$/;"	l	subroutine:JOVOSAP	file:
1001	input.f	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	input.f	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	input.f	/^1001  FORMAT (80A1)$/;"	l	file:
101	minperm.f	/^  101    T=T+1$/;"	l	subroutine:JOVOSAP	file:
11	Ackland_wrapper.f	/^11    CONTINUE$/;"	l	subroutine:ACK	file:
11	EAMal.f	/^11    CONTINUE$/;"	l	subroutine:EAMal	file:
11	Farkas.f	/^11    continue$/;"	l	subroutine:splinegmin	file:
11	brent.f	/^11    CONTINUE$/;"	l	function:BRENT	file:
11	fedor.f	/^   11   continue$/;"	l	function:ut0	file:
11	fedor.f	/^   11   continue$/;"	l	function:ut01	file:
11	fedor.f	/^   11 IF(N.GT.2) GO TO 12$/;"	l	subroutine:CUBSPL	file:
11	fedor.f	/^   11 continue$/;"	l	function:ut	file:
11	fedor.f	/^  11      continue$/;"	l	subroutine:hmat	file:
11	fedor.f	/^  11      continue$/;"	l	subroutine:hmatd	file:
11	fedor.f	/^  11    continue$/;"	l	subroutine:dipoles	file:
11	input.f	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	minperm.f	/^11         enddo$/;"	l	subroutine:minperm	file:
11	minpermdist.f90	/^11 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
11	mylbfgs.f	/^11          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in mylbfgs')$/;"	l	subroutine:MYLBFGS	file:
11	mysd.f	/^11    DO J1=1,NOPT$/;"	l	subroutine:MYSD	file:
11	odesd.f	/^11      continue$/;"	l	subroutine:bsstep	file:
11	odesd.f	/^11      continue$/;"	l	subroutine:rzextr	file:
11	odesd.f	/^11    continue$/;"	l	subroutine:mmid	file:
11	odesd.f	/^11    continue$/;"	l	subroutine:pzextr	file:
11	odesd.f	/^11    continue$/;"	l	subroutine:rkck	file:
11	odesd.f	/^11    continue$/;"	l	subroutine:rkqs	file:
11	ptgrp.f	/^   11   CONTINUE$/;"	l	subroutine:PIKSR2	file:
11	ptgrp.f	/^11    X(I)=X(I)\/P    $/;"	l	subroutine:NORMAL	file:
11	quench.f	/^11    IF (WELCH) TOSI=.TRUE.$/;"	l	subroutine:QUENCH	file:
11	sort.f	/^11        continue$/;"	l	subroutine:Gsort	file:
11	takestep.f	/^11       RANDOM=(DPRAND()-0.5D0)*2.0D0$/;"	l	subroutine:TAKESTEP	file:
110	JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3C	file:
110	dgetrf.f	/^  110 CONTINUE$/;"	l	function:ILAENV	file:
110	dlsode.f	/^  110    CONTINUE$/;"	l	subroutine:DGBFA	file:
110	dlsode.f	/^ 110      PC(I) = PC(I-1) + FNQM1*PC(I)$/;"	l	subroutine:DCFODE	file:
110	dlsode.f	/^ 110     RLS(I) = RSAV(I)$/;"	l	subroutine:DSRCOM	file:
110	dlsode.f	/^ 110    WM(I+2) = 0.0D0$/;"	l	subroutine:DPREPJ	file:
110	dlsode.f	/^ 110  IF (NQ .LE. MAXORD) GO TO 160$/;"	l	subroutine:DSTODE	file:
110	dlsode.f	/^ 110  JSTART = 0$/;"	l	subroutine:DLSODE	file:
110	fedor.f	/^  110 MFLAG =  1$/;"	l	subroutine:INTERV	file:
110	input.f	/^110   RETURN$/;"	l	subroutine:READF	file:
110	ljcapsidmodule.f90	/^110        IF ( K .EQ. M ) GOTO 130$/;"	l	subroutine:SVERT	file:
110	mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBMV	file:
110	mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBSV	file:
110	mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPMV	file:
110	mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPSV	file:
110	mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRMV	file:
110	mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRSV	file:
110	mylapack.f	/^  110                CONTINUE$/;"	l	subroutine:DPBTRF	file:
110	mylapack.f	/^  110             CONTINUE$/;"	l	subroutine:DTBSV	file:
110	mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGBMV	file:
110	mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGEMV	file:
110	mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSBMV	file:
110	mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSPMV	file:
110	mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSYMV	file:
110	mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK1	file:
110	mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK2	file:
110	mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK3	file:
110	mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK4	file:
110	mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK5	file:
110	ptgrp.f	/^110      FORMAT(' The molecule belongs to a point group with doubly',$/;"	l	subroutine:PTGRP	file:
110	ptgrp.f	/^110   T=Q\/(DIFF+S)$/;"	l	subroutine:EIG	file:
110	tn.f	/^110      Y(I) = G(I) \/ DIAGB(I)$/;"	l	subroutine:MSLV	file:
110	tn.f	/^110    F = OLDF$/;"	l	subroutine:LMQN	file:
110	tn.f	/^110   CONTINUE$/;"	l	subroutine:INITP3	file:
110	tn.f	/^110   IF (ABSR .GT. RTSMLL) P = ABSR*RTSMLL$/;"	l	subroutine:GETPTC	file:
110	welch.f	/^  110       continue$/;"	l	subroutine:dgedi	file:
110	welch.f	/^  110    continue$/;"	l	subroutine:dgeco	file:
1100	dgetrf.f	/^ 1100 CONTINUE$/;"	l	function:ILAENV	file:
111	io1.f	/^111      READ(7,'(A)') FNAME$/;"	l	subroutine:IO1	file:
111	ljcapsidmodule.f90	/^111 CONTINUE$/;"	l	subroutine:GAYBERNE	file:
115	dlsode.f	/^ 115    RWORK(I+LYH-1) = Y(I)$/;"	l	subroutine:DLSODE	file:
12	EAMal.f	/^12       CONTINUE   $/;"	l	subroutine:EAMal	file:
12	Farkas.f	/^12    continue$/;"	l	subroutine:splinegmin	file:
12	bspt.F	/^12       CALL POTENTIAL(COORDS(:,MYNODE+1),GRAD, POTEL, .TRUE., .FALSE.)$/;"	l	subroutine:PTBASINSAMPLING	file:
12	fedor.f	/^   12    continue                     $/;"	l	function:ut0	file:
12	fedor.f	/^   12    continue                     $/;"	l	function:ut01	file:
12	fedor.f	/^   12 C(4,1)=C(3,3)$/;"	l	subroutine:CUBSPL	file:
12	input.f	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	keyword.f	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
12	odesd.f	/^12        continue$/;"	l	subroutine:bsstep	file:
12	odesd.f	/^12      continue$/;"	l	subroutine:mmid	file:
12	odesd.f	/^12      continue$/;"	l	subroutine:pzextr	file:
12	odesd.f	/^12      continue$/;"	l	subroutine:rkqs	file:
12	odesd.f	/^12      continue$/;"	l	subroutine:rzextr	file:
12	odesd.f	/^12    continue$/;"	l	subroutine:rkck	file:
12	ptgrp.f	/^   12   CONTINUE$/;"	l	subroutine:PIKSR2	file:
12	sort.f	/^12      continue$/;"	l	subroutine:Gsort	file:
12	takestep.f	/^12       RANDOM=(DPRAND()-0.5D0)*2.0D0$/;"	l	subroutine:TAKESTEP	file:
120	Farkas.f	/^120   continue$/;"	l	subroutine:ALINIT	file:
120	Farkas.f	/^120   continue$/;"	l	subroutine:NIINIT	file:
120	JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3C	file:
120	dlsode.f	/^  120 CONTINUE$/;"	l	subroutine:DGBFA	file:
120	dlsode.f	/^ 120      XPIN = XPIN + TSIGN*PC(I)\/(I+1)$/;"	l	subroutine:DCFODE	file:
120	dlsode.f	/^ 120     ILS(I) = ISAV(I)$/;"	l	subroutine:DSRCOM	file:
120	dlsode.f	/^ 120    RWORK(I+LEWT-1) = 1.0D0\/RWORK(I+LEWT-1)$/;"	l	subroutine:DLSODE	file:
120	dlsode.f	/^ 120    WM(I+2) = WM(I+2)*CON$/;"	l	subroutine:DPREPJ	file:
120	dlsode.f	/^ 120  NQ = MAXORD$/;"	l	subroutine:DSTODE	file:
120	io1.f	/^120         FORMAT('Run ',I3,': ',I9,' steps with temperature scaled by ',E15.8)$/;"	l	subroutine:IO1	file:
120	ljcapsidmodule.f90	/^120             T = T - W(I)*V(I+L)$/;"	l	subroutine:SVERT	file:
120	mylapack.f	/^  120                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
120	mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBMV	file:
120	mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBSV	file:
120	mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPMV	file:
120	mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPSV	file:
120	mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRMV	file:
120	mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRSV	file:
120	mylapack.f	/^  120          CONTINUE$/;"	l	subroutine:DTBSV	file:
120	mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGBMV	file:
120	mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGEMV	file:
120	mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSBMV	file:
120	mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSPMV	file:
120	mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSYMV	file:
120	mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK1	file:
120	mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK2	file:
120	mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK3	file:
120	mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK4	file:
120	mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK5	file:
120	ptgrp.f	/^120   C=1.0D0\/SQRT(1.0D0+T**2)$/;"	l	subroutine:EIG	file:
120	tn.f	/^120   CONTINUE$/;"	l	subroutine:INITP3	file:
120	tn.f	/^120   IFAIL = NWHY$/;"	l	subroutine:LMQN	file:
120	tn.f	/^120   SUMSQ = DSQRT(SUMSQ)$/;"	l	subroutine:GETPTC	file:
120	welch.f	/^  120       continue$/;"	l	subroutine:dgedi	file:
120	welch.f	/^  120 continue$/;"	l	subroutine:dgeco	file:
121	io1.f	/^121         READ(7,'(A)') TSTRING$/;"	l	subroutine:IO1	file:
122	Ackland_wrapper.f	/^122      CONTINUE$/;"	l	subroutine:ACK	file:
123	ljcapsidmodule.f90	/^123 CONTINUE $/;"	l	subroutine:PYGPERIODIC	file:
124	ljcapsidmodule.f90	/^124 CONTINUE$/;"	l	subroutine:PYGPERIODIC	file:
125	dlsode.f	/^ 125    EL(I) = ELCO(I,NQ)$/;"	l	subroutine:DSTODE	file:
13	Ackland_wrapper.f	/^13    CONTINUE$/;"	l	subroutine:ACK	file:
13	EAMal.f	/^13        CONTINUE$/;"	l	subroutine:EAMal	file:
13	fedor.f	/^   13   continue                     $/;"	l	function:ut0	file:
13	fedor.f	/^   13   continue                     $/;"	l	function:ut01	file:
13	io1.f	/^13       READ(91,'(A1)',END=14) DUMMY$/;"	l	subroutine:IO1	file:
13	odesd.f	/^13        continue$/;"	l	subroutine:rzextr	file:
13	odesd.f	/^13      continue$/;"	l	subroutine:bsstep	file:
13	odesd.f	/^13      continue$/;"	l	subroutine:pzextr	file:
13	odesd.f	/^13    continue$/;"	l	subroutine:mmid	file:
13	odesd.f	/^13    continue$/;"	l	subroutine:rkck	file:
13	quench.f	/^13       READ(91,'(A1)',END=14) DUMMY$/;"	l	subroutine:QUENCH	file:
130	Farkas.f	/^130   lfembed=i-1$/;"	l	subroutine:ALINIT	file:
130	Farkas.f	/^130   lfembed=i-1$/;"	l	subroutine:NIINIT	file:
130	dlsode.f	/^  130 CONTINUE$/;"	l	subroutine:DGBFA	file:
130	dlsode.f	/^ 130      ELCO(I+1,NQ) = RQ1FAC*PC(I)\/I$/;"	l	subroutine:DCFODE	file:
130	dlsode.f	/^ 130    TOL = MAX(TOL,RTOL(I))$/;"	l	subroutine:DLSODE	file:
130	ljcapsidmodule.f90	/^130        DO 140 I = M,N$/;"	l	subroutine:SVERT	file:
130	mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBMV	file:
130	mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBSV	file:
130	mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPMV	file:
130	mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPSV	file:
130	mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRMV	file:
130	mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRSV	file:
130	mylapack.f	/^  130                CONTINUE$/;"	l	subroutine:DPBTRF	file:
130	mylapack.f	/^  130             CONTINUE$/;"	l	subroutine:DTBSV	file:
130	mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK1	file:
130	mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK2	file:
130	mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK3	file:
130	mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK4	file:
130	mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK5	file:
130	ptgrp.f	/^130   CONTINUE$/;"	l	subroutine:EIG	file:
130	tn.f	/^130   Q = DSQRT(DABS(R+S))*DSQRT(DABS(R-S))$/;"	l	subroutine:GETPTC	file:
130	welch.f	/^  130    continue$/;"	l	subroutine:dgeco	file:
130	welch.f	/^  130    continue$/;"	l	subroutine:dgedi	file:
131	io1.f	/^131      CONTINUE$/;"	l	subroutine:IO1	file:
1334	mc.F	/^1334     format(4(i8,1x),' nmres nmcrd numpro nmsnap')$/;"	l	subroutine:MC	file:
1346	Natb.f	/^ 1346              vect(ij)=val$/;"	l	subroutine:entots	file:
14	EAMal.f	/^14        CONTINUE$/;"	l	subroutine:EAMal	file:
14	fedor.f	/^   14   continue $/;"	l	function:ut0	file:
14	fedor.f	/^   14   continue $/;"	l	function:ut01	file:
14	io1.f	/^14       CONTINUE$/;"	l	subroutine:IO1	file:
14	odesd.f	/^14        continue$/;"	l	subroutine:pzextr	file:
14	odesd.f	/^14      continue$/;"	l	subroutine:bsstep	file:
14	odesd.f	/^14      continue$/;"	l	subroutine:rzextr	file:
14	odesd.f	/^14    continue$/;"	l	subroutine:mmid	file:
14	odesd.f	/^14    continue$/;"	l	subroutine:rkck	file:
14	quench.f	/^14       CONTINUE$/;"	l	subroutine:QUENCH	file:
140	dlsode.f	/^ 140    CONTINUE$/;"	l	subroutine:DCFODE	file:
140	dlsode.f	/^ 140  CALL DCFODE (METH, ELCO, TESCO)$/;"	l	subroutine:DSTODE	file:
140	dlsode.f	/^ 140  IF (TOL .GT. 0.0D0) GO TO 160$/;"	l	subroutine:DLSODE	file:
140	ljcapsidmodule.f90	/^140             V(I+H) = W(I)$/;"	l	subroutine:SVERT	file:
140	mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBMV	file:
140	mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBSV	file:
140	mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPMV	file:
140	mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPSV	file:
140	mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRMV	file:
140	mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRSV	file:
140	mylapack.f	/^  140          CONTINUE$/;"	l	subroutine:DTBSV	file:
140	mylapack.f	/^  140       CONTINUE$/;"	l	subroutine:DPBTRF	file:
140	mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK1	file:
140	mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK2	file:
140	mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK4	file:
140	mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK5	file:
140	mylapack.f	/^  140 CONTINUE$/;"	l	subroutine:SCHCK3	file:
140	ptgrp.f	/^140   IF(N1.EQ.1) RETURN$/;"	l	subroutine:EIG	file:
140	tn.f	/^140   IF (XW .LT. ZERO) Q = -Q$/;"	l	subroutine:GETPTC	file:
140	welch.f	/^  140    continue$/;"	l	subroutine:dgedi	file:
140	welch.f	/^  140 continue$/;"	l	subroutine:dgeco	file:
15	Ackland_wrapper.f	/^15          CONTINUE$/;"	l	subroutine:ACK	file:
15	JM.f	/^15       CONTINUE$/;"	l	subroutine:JMEC	file:
15	dlsode.f	/^ 15     EWT(I) = RTOL(1)*ABS(YCUR(I)) + ATOL(1)$/;"	l	subroutine:DEWSET	file:
15	dlsode.f	/^ 15   C = IC$/;"	l	subroutine:DINTDY	file:
15	fedor.f	/^   15   continue                      $/;"	l	function:ut0	file:
15	fedor.f	/^   15   continue                      $/;"	l	function:ut01	file:
15	fedor.f	/^   15 C(4,1)=1.d0$/;"	l	subroutine:CUBSPL	file:
15	fedor.f	/^   15 CONTINUE$/;"	l	subroutine:sortv	file:
15	linmin.f	/^15    FB=F1DIM(BX)$/;"	l	subroutine:LINMIN	file:
15	minperm.f	/^   15    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
15	odesd.f	/^15      continue$/;"	l	subroutine:pzextr	file:
15	odesd.f	/^15    continue$/;"	l	subroutine:bsstep	file:
15	odesd.f	/^15    continue$/;"	l	subroutine:rkck	file:
15	ptgrp.f	/^15       CONTINUE$/;"	l	subroutine:MATMUL	file:
15	tn.f	/^15    CONTINUE$/;"	l	subroutine:CNVTST	file:
150	dlsode.f	/^ 150    CONTINUE$/;"	l	subroutine:DLSODE	file:
150	dlsode.f	/^ 150  DO 155 I = 1,L$/;"	l	subroutine:DSTODE	file:
150	ljcapsidmodule.f90	/^150   CONTINUE$/;"	l	subroutine:SVERT	file:
150	mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBMV	file:
150	mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBSV	file:
150	mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPMV	file:
150	mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPSV	file:
150	mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRMV	file:
150	mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRSV	file:
150	mylapack.f	/^  150             CONTINUE$/;"	l	subroutine:DTBSV	file:
150	mylapack.f	/^  150     CONTINUE$/;"	l	subroutine:SCHCK1	file:
150	mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:DPBTRF	file:
150	mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK2	file:
150	mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK3	file:
150	mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK4	file:
150	mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK5	file:
150	ptgrp.f	/^150   W1=A(I,I)$/;"	l	subroutine:EIG	file:
150	tn.f	/^150   A1 = A$/;"	l	subroutine:GETPTC	file:
150	welch.f	/^  150    continue$/;"	l	subroutine:dgeco	file:
150	welch.f	/^  150 continue$/;"	l	subroutine:dgedi	file:
155	dlsode.f	/^ 155    EL(I) = ELCO(I,NQ)$/;"	l	subroutine:DSTODE	file:
16	fedor.f	/^   16   continue                                           $/;"	l	function:ut0	file:
16	fedor.f	/^   16   continue                                           $/;"	l	function:ut01	file:
16	fedor.f	/^   16 C(4,1)=2.d0$/;"	l	subroutine:CUBSPL	file:
16	fedor.f	/^   16 continue$/;"	l	subroutine:sortv	file:
16	odesd.f	/^16        continue$/;"	l	subroutine:bsstep	file:
16	odesd.f	/^16      continue$/;"	l	subroutine:pzextr	file:
16	odesd.f	/^16    continue$/;"	l	subroutine:rkck	file:
160	dlsode.f	/^ 160  IF (H .EQ. HOLD) GO TO 200$/;"	l	subroutine:DSTODE	file:
160	dlsode.f	/^ 160  TOL = MAX(TOL,100.0D0*UROUND)$/;"	l	subroutine:DLSODE	file:
160	io1.f	/^160      FORMAT('Debug printing is on')$/;"	l	subroutine:IO1	file:
160	mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBMV	file:
160	mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBSV	file:
160	mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPMV	file:
160	mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPSV	file:
160	mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRMV	file:
160	mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRSV	file:
160	mylapack.f	/^  160          CONTINUE$/;"	l	subroutine:DTBSV	file:
160	mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK1	file:
160	mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK2	file:
160	mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK3	file:
160	mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK4	file:
160	mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK5	file:
160	ptgrp.f	/^160      FORMAT(' The highest order rotational axis is C',I2,' about ',I2)$/;"	l	subroutine:PTGRP	file:
160	ptgrp.f	/^160   B(MU,J)=W2$/;"	l	subroutine:EIG	file:
160	tn.f	/^160   IF ((A .NE. ZERO .OR. XW .GE. ZERO) .AND. (B .NE. ZERO .OR.$/;"	l	subroutine:GETPTC	file:
160	welch.f	/^  160 continue$/;"	l	subroutine:dgeco	file:
17	fedor.f	/^   17   continue                                                                $/;"	l	function:ut0	file:
17	fedor.f	/^   17   continue                                                                $/;"	l	function:ut01	file:
17	fedor.f	/^   17 CONTINUE$/;"	l	subroutine:sortv	file:
17	odesd.f	/^17    continue$/;"	l	subroutine:bsstep	file:
17	odesd.f	/^17    continue$/;"	l	subroutine:rkck	file:
17	ptgrp.f	/^17      CONTINUE$/;"	l	subroutine:SIAZ	file:
170	dlsode.f	/^ 170  RH = MAX(RH,HMIN\/ABS(H))$/;"	l	subroutine:DSTODE	file:
170	mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK1	file:
170	mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK2	file:
170	mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK3	file:
170	mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK4	file:
170	mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK5	file:
170	ptgrp.f	/^170   CONTINUE$/;"	l	subroutine:EIG	file:
170	tn.f	/^170   IF (STEP .LE. ZERO) A1 = STEP$/;"	l	subroutine:GETPTC	file:
175	dlsode.f	/^ 175  RH = MIN(RH,RMAX)$/;"	l	subroutine:DSTODE	file:
18	fedor.f	/^   18   continue     $/;"	l	function:ut0	file:
18	fedor.f	/^   18   continue     $/;"	l	function:ut01	file:
18	fedor.f	/^   18 IF(N.EQ.2) GO TO 25$/;"	l	subroutine:CUBSPL	file:
18	odesd.f	/^18    continue$/;"	l	subroutine:bsstep	file:
18	ptgrp.f	/^18         CONTINUE$/;"	l	subroutine:SIAZ	file:
180	dlsode.f	/^ 180      YH(I,J) = YH(I,J)*R$/;"	l	subroutine:DSTODE	file:
180	dlsode.f	/^ 180  RH = ABS(H0)*HMXI$/;"	l	subroutine:DLSODE	file:
180	io1.f	/^180      VECMN=SQUEEZER\/DSQRT(VECMN)$/;"	l	subroutine:IO1	file:
180	mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK1	file:
180	mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK2	file:
180	mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK3	file:
180	mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK4	file:
180	mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK5	file:
180	tn.f	/^180   IF (DABS(S) .LE. DABS(HALF*Q*R) .OR.$/;"	l	subroutine:GETPTC	file:
19	fedor.f	/^   19 DO 20 M=2,L$/;"	l	subroutine:CUBSPL	file:
190	dlsode.f	/^ 190    RWORK(I+LF0-1) = H0*RWORK(I+LF0-1)$/;"	l	subroutine:DLSODE	file:
190	io1.f	/^190      FORMAT('System will be squeezed into the shape defined by the '$/;"	l	subroutine:IO1	file:
190	keyword.f	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK1	file:
190	mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK2	file:
190	mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK3	file:
190	mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK4	file:
190	mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK5	file:
190	ptgrp.f	/^190         FORMAT(' The unique rotational axis is ',I1,'.')$/;"	l	subroutine:PTGRP	file:
190	tn.f	/^190   STEP = TOL$/;"	l	subroutine:GETPTC	file:
195	ljcapsidmodule.f90	/^195       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPELPSD	file:
1964	finalio.f	/^1964        CONTINUE$/;"	l	subroutine:FINALIO	file:
2	EAMal.f	/^2        CONTINUE$/;"	l	subroutine:EAMal	file:
2	brent.f	/^2       IF(ABS(D).GE.TOL1) THEN$/;"	l	function:BRENT	file:
2	fedor.f	/^    2 CONTINUE$/;"	l	function:ar2UT0	file:
2	fedor.f	/^    2 continue$/;"	l	function:ut	file:
2	fedor.f	/^   2      continue$/;"	l	subroutine:hmat	file:
2	fedor.f	/^   2      continue$/;"	l	subroutine:hmatd	file:
2	fedor.f	/^  2     continue$/;"	l	subroutine:dipoles	file:
2	odesd.f	/^2     do 17 k=1,kmax$/;"	l	subroutine:bsstep	file:
2	pyg.f90	/^2        IF (ABS(D) >= TOL1) THEN ! Arrive here with d computed either from parabolic fit, or$/;"	l	subroutine:BRENTMIN	file:
2	sort.f	/^2         arr(i+1,np)=a$/;"	l	subroutine:Gsort	file:
2	takestepmsgb.f90	/^2        IF (ABS(D) .GE. TOL1) THEN ! Arrive here with d computed either from parabolic fit, or$/;"	l	subroutine:BRENTMINGB	file:
20	Alglue.f	/^   20 k = (i+j)\/2$/;"	l	subroutine:seval	file:
20	CSMinit.f90	/^20    CALL CSMPOTGRAD(X,AA,ENEW,.TRUE.,GSAVE)$/;"	l	subroutine:CSMMIN	file:
20	EAMal.f	/^   20 k = (i+j)\/2$/;"	l	subroutine:seval1	file:
20	Farkas.f	/^20    continue$/;"	l	subroutine:ALINIT	file:
20	Farkas.f	/^20    continue$/;"	l	subroutine:NIINIT	file:
20	JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2C	file:
20	JM.f	/^20    CONTINUE$/;"	l	subroutine:JMEC	file:
20	convert.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	dbrent.f	/^20      IF(DABS(D).GE.QMAX1) THEN$/;"	l	function:DBRENT	file:
20	dgetrf.f	/^   20       CONTINUE$/;"	l	function:ILAENV	file:
20	dgetrf.f	/^   20       CONTINUE$/;"	l	subroutine:DLASWP	file:
20	dgetrf.f	/^   20    CONTINUE$/;"	l	subroutine:DGETRF	file:
20	dgetri.f	/^   20       CONTINUE$/;"	l	subroutine:DTRTRI	file:
20	dgetri.f	/^   20    CONTINUE$/;"	l	subroutine:DGETRI	file:
20	dgetri.f	/^   20    CONTINUE$/;"	l	subroutine:DTRTI2	file:
20	dlamch.f	/^   20    CONTINUE$/;"	l	subroutine:DLAMC1	file:
20	dlamch.f	/^   20    CONTINUE$/;"	l	subroutine:DLAMC2	file:
20	dlamch.f	/^   20    CONTINUE$/;"	l	subroutine:DLAMC4	file:
20	dlamch.f	/^   20 CONTINUE$/;"	l	subroutine:DLAMC5	file:
20	dlsode.f	/^   20       CONTINUE$/;"	l	subroutine:DGBSL	file:
20	dlsode.f	/^   20    CONTINUE$/;"	l	subroutine:DGESL	file:
20	dlsode.f	/^   20 CONTINUE$/;"	l	subroutine:DGBFA	file:
20	dlsode.f	/^   20 DMAX = ABS(DX(1))$/;"	l	function:IDAMAX	file:
20	dlsode.f	/^   20 M = MOD(N,4)$/;"	l	subroutine:MYDAXPY	file:
20	dlsode.f	/^   20 M = MOD(N,5)$/;"	l	function:MYDDOT	file:
20	dlsode.f	/^   20 M = MOD(N,5)$/;"	l	subroutine:DSCAL	file:
20	dlsode.f	/^ 20     DKY(I) = C*YH(I,L)$/;"	l	subroutine:DINTDY	file:
20	dlsode.f	/^ 20     ISAV(I) = ILS(I)$/;"	l	subroutine:DSRCOM	file:
20	dlsode.f	/^ 20   CONTINUE$/;"	l	subroutine:DEWSET	file:
20	dlsode.f	/^ 20   FORMAT(6X,'In above message,  I1 =',I10)$/;"	l	subroutine:XERRWD	file:
20	dlsode.f	/^ 20   IF (NEQ(1) .LE. 0) GO TO 604$/;"	l	subroutine:DLSODE	file:
20	eigsrt.f	/^20          CONTINUE$/;"	l	subroutine:EIGSRT	file:
20	fedor.f	/^   20 C(4,M)=G*C(3,M-1)+2.d0*(C(3,M)+C(3,M+1))$/;"	l	subroutine:CUBSPL	file:
20	fedor.f	/^   20 IF (X .GE. XT(IHI))              GO TO 40$/;"	l	subroutine:INTERV	file:
20	fedor.f	/^   20 continue$/;"	l	function:ut	file:
20	fedor.f	/^  20      continue$/;"	l	subroutine:hmatd	file:
20	fedor.f	/^  20    continue$/;"	l	subroutine:dipoles	file:
20	finalio.f	/^20          FORMAT('Si',3F20.10)$/;"	l	subroutine:FINALIO	file:
20	input.f	/^20    CONTINUE$/;"	l	subroutine:MYUPCASE	file:
20	input.f	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	input.f	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	input.f	/^20    LAST=M+79$/;"	l	file:
20	io1.f	/^20       FORMAT('Initial coordinates:')$/;"	l	subroutine:IO1	file:
20	linmin.f	/^20    CONTINUE$/;"	l	subroutine:LINMIN	file:
20	ljcapsidmodule.f90	/^20    J = J - M$/;"	l	subroutine:SVERT	file:
20	mc.F	/^20          CONTINUE$/;"	l	subroutine:REN	file:
20	mc.F	/^20          FORMAT('[',I2,']Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
20	mc.F	/^20    CONTINUE $/;"	l	subroutine:NEWRES	file:
20	minperm.f	/^   20 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
20	minperm.f	/^20               l2 = 2*l$/;"	l	subroutine:minperm	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGBMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGEMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSBMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSPMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSYMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBSV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPSV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRMV	file:
20	mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRSV	file:
20	mylapack.f	/^   20          CONTINUE$/;"	l	subroutine:DTBSV	file:
20	mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR	file:
20	mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR2	file:
20	mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR	file:
20	mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR2	file:
20	mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DPBTRF	file:
20	mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DSYR	file:
20	mylapack.f	/^   20     CONTINUE$/;"	l	subroutine:SGER	file:
20	mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTF2	file:
20	mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTRS	file:
20	mylapack.f	/^   20 CONTINUE$/;"	l	function:LCE	file:
20	mylapack.f	/^   20 CONTINUE$/;"	l	function:LDE	file:
20	mylapack.f	/^   20 CONTINUE$/;"	l	function:LSE	file:
20	mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SMAKE	file:
20	mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SOPEN	file:
20	mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK1	file:
20	mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK2	file:
20	mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK4	file:
20	mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK5	file:
20	mylapack.f	/^   20 J = J*MJ$/;"	l	function:SBEG	file:
20	mylapack.f	/^   20 NL = I$/;"	l	subroutine:SMESSG	file:
20	mylapack.f	/^   20 NN = NN + 1$/;"	l	subroutine:SCHCK3	file:
20	mylbfgs.f	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
20	orient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	ptgrp.f	/^ 20   CONTINUE$/;"	l	subroutine:ROTM	file:
20	ptgrp.f	/^20                      CONTINUE$/;"	l	subroutine:PTGRP	file:
20	ptgrp.f	/^20          CONTINUE$/;"	l	subroutine:MATMUL	file:
20	ptgrp.f	/^20    B(I,I)=ONE$/;"	l	subroutine:EIG	file:
20	saveit.f	/^20          CONTINUE$/;"	l	subroutine:A9INTESAVEIT	file:
20	saveit.f	/^20          CONTINUE$/;"	l	subroutine:GSAVEIT	file:
20	sort2.f	/^20    CONTINUE$/;"	l	subroutine:GSORT2	file:
20	sort3.f	/^20    CONTINUE$/;"	l	subroutine:SORT3	file:
20	sort4.f	/^20    CONTINUE$/;"	l	subroutine:SORT4	file:
20	tn.f	/^   20 M = MOD(N,4)$/;"	l	subroutine:DXPY	file:
20	tn.f	/^20       CONTINUE$/;"	l	subroutine:MODLNP	file:
20	tn.f	/^20      IF (FU .GT. FMIN) GO TO 60$/;"	l	subroutine:GETPTC	file:
20	tn.f	/^20    CONTINUE$/;"	l	subroutine:GTIMS	file:
20	tn.f	/^20    CONTINUE$/;"	l	subroutine:INITP3	file:
20	tn.f	/^20    CONTINUE$/;"	l	subroutine:LINDER	file:
20	tn.f	/^20    CONTINUE$/;"	l	subroutine:LMQN	file:
20	tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NDHESS	file:
20	tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NSHESS	file:
20	welch.f	/^   20          continue$/;"	l	subroutine:dgefa	file:
20	welch.f	/^   20       continue$/;"	l	subroutine:dgedi	file:
20	welch.f	/^   20 continue$/;"	l	subroutine:dgeco	file:
20	zwischen.f	/^20    CONTINUE$/;"	l	subroutine:ZWISCHEN	file:
200	dgetrf.f	/^  200 CONTINUE$/;"	l	function:ILAENV	file:
200	dlsode.f	/^ 200  FAC = DVNORM (N, SAVF, EWT)$/;"	l	subroutine:DPREPJ	file:
200	dlsode.f	/^ 200  IF (ABS(RC-1.0D0) .GT. CCMAX) IPUP = MITER$/;"	l	subroutine:DSTODE	file:
200	dlsode.f	/^ 200  NSLAST = NST$/;"	l	subroutine:DLSODE	file:
200	dlsode.f	/^ 200  PC(1) = 1.0D0$/;"	l	subroutine:DCFODE	file:
200	input.f	/^200   TERM=SPACE$/;"	l	file:
200	io1.f	/^200      FORMAT(3F20.10)$/;"	l	subroutine:IO1	file:
200	mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK1	file:
200	mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK2	file:
200	mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK3	file:
200	mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK4	file:
200	mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK5	file:
200	tn.f	/^200   E = B-A$/;"	l	subroutine:GETPTC	file:
21	EAMal.f	/^21      CONTINUE$/;"	l	subroutine:EAMal	file:
21	fedor.f	/^   21 IF(N.EQ.3.AND.IBCBEG.EQ.0) GO TO 22$/;"	l	subroutine:CUBSPL	file:
21	mc.F	/^21          FORMAT('Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
21	minperm.f	/^21               if (l2 .le. m) THEN ! split IF statements to avoid a segmentation fault$/;"	l	subroutine:minperm	file:
210	Natb.f	/^ 210             CONTINUE$/;"	l	subroutine:entots	file:
210	dlsode.f	/^ 210      PC(I) = PC(I-1) + FNQ*PC(I)$/;"	l	subroutine:DCFODE	file:
210	dlsode.f	/^ 210      YH1(I) = YH1(I) + YH1(I+NYH)$/;"	l	subroutine:DSTODE	file:
210	dlsode.f	/^ 210  IF ((TN - TOUT)*H .LT. 0.0D0) GO TO 250$/;"	l	subroutine:DLSODE	file:
210	io1.f	/^210      FORMAT('Initial smallest radius=',F15.5,' with shrink factor='$/;"	l	subroutine:IO1	file:
210	mylapack.f	/^  210            CONTINUE$/;"	l	subroutine:SCHCK3	file:
210	mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK1	file:
210	mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK2	file:
210	mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK4	file:
210	mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK5	file:
210	tn.f	/^210   IF (STEP .LT. SCXBND) GO TO 220$/;"	l	subroutine:GETPTC	file:
215	dlsode.f	/^ 215    CONTINUE$/;"	l	subroutine:DSTODE	file:
22	Alglue.f	/^22    CONTINUE$/;"	l	subroutine:ALGLUE	file:
22	EAMal.f	/^22         CONTINUE$/;"	l	subroutine:EAMal	file:
22	Farkas.f	/^22    CONTINUE$/;"	l	subroutine:FARKAS	file:
22	JM.f	/^22    CONTINUE$/;"	l	subroutine:JMEC	file:
22	Mgglue.f	/^22    CONTINUE$/;"	l	subroutine:MGGLUE	file:
22	Pbglue.f	/^22    CONTINUE$/;"	l	subroutine:PBGLUE	file:
22	fedor.f	/^   22 C(2,N)=2.d0*C(4,N)$/;"	l	subroutine:CUBSPL	file:
22	fedor.f	/^   22 continue$/;"	l	function:ut	file:
22	fedor.f	/^  22      continue$/;"	l	subroutine:hmatd	file:
22	fedor.f	/^  22    continue$/;"	l	subroutine:dipoles	file:
220	dlsode.f	/^ 220      ELCO(I,NQ) = PC(I)\/PC(2)$/;"	l	subroutine:DCFODE	file:
220	dlsode.f	/^ 220      WM(I+J1) = (FTEM(I) - SAVF(I))*FAC$/;"	l	subroutine:DPREPJ	file:
220	dlsode.f	/^ 220  M = 0$/;"	l	subroutine:DSTODE	file:
220	dlsode.f	/^ 220  TP = TN - HU*(1.0D0 + 100.0D0*UROUND)$/;"	l	subroutine:DLSODE	file:
220	mylapack.f	/^  220         CONTINUE$/;"	l	subroutine:SCHCK3	file:
220	mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK1	file:
220	mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK2	file:
220	mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK4	file:
220	mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK5	file:
220	tn.f	/^220   U = STEP$/;"	l	subroutine:GETPTC	file:
221	Natb.f	/^ 221              kkk=kkk+k$/;"	l	subroutine:entots	file:
223	Natb.f	/^ 223           CONTINUE$/;"	l	subroutine:entots	file:
23	Alglue.f	/^23       CONTINUE$/;"	l	subroutine:ALGLUE	file:
23	Farkas.f	/^23       CONTINUE$/;"	l	subroutine:FARKAS	file:
23	JM.f	/^23       CONTINUE$/;"	l	subroutine:JMEC	file:
23	Mgglue.f	/^23       CONTINUE$/;"	l	subroutine:MGGLUE	file:
23	Pbglue.f	/^23       CONTINUE$/;"	l	subroutine:PBGLUE	file:
23	mc.F	/^23          CONTINUE$/;"	l	subroutine:MC	file:
230	dlsode.f	/^ 230    CONTINUE$/;"	l	subroutine:DCFODE	file:
230	dlsode.f	/^ 230    CONTINUE$/;"	l	subroutine:DPREPJ	file:
230	dlsode.f	/^ 230    Y(I) = YH(I,1)$/;"	l	subroutine:DSTODE	file:
230	dlsode.f	/^ 230  TCRIT = RWORK(1)$/;"	l	subroutine:DLSODE	file:
230	mylapack.f	/^  230            CONTINUE$/;"	l	subroutine:SCHCK2	file:
230	mylapack.f	/^  230         CONTINUE$/;"	l	subroutine:SCHCK3	file:
230	mylapack.f	/^  230        CONTINUE$/;"	l	subroutine:SCHCK5	file:
230	mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK1	file:
230	mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK4	file:
235	mylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
24	JM.f	/^24              CONTINUE$/;"	l	subroutine:JMEC	file:
24	fedor.f	/^   24 C(2,N)=3.d0*C(4,N)+C(3,N)\/2.d0*C(2,N)$/;"	l	subroutine:CUBSPL	file:
240	dlsode.f	/^ 240  J = 3$/;"	l	subroutine:DPREPJ	file:
240	dlsode.f	/^ 240  TCRIT = RWORK(1)$/;"	l	subroutine:DLSODE	file:
240	mylapack.f	/^  240         CONTINUE$/;"	l	subroutine:SCHCK2	file:
240	mylapack.f	/^  240        CONTINUE$/;"	l	subroutine:SCHCK3	file:
240	mylapack.f	/^  240     CONTINUE$/;"	l	subroutine:SCHCK5	file:
240	mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK1	file:
240	mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK4	file:
240	mylbfgs.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
245	dlsode.f	/^ 245  HMX = ABS(TN) + ABS(H)$/;"	l	subroutine:DLSODE	file:
25	Ackland_wrapper.f	/^25       CONTINUE$/;"	l	subroutine:ACK	file:
25	JM.f	/^25    CONTINUE$/;"	l	subroutine:JMEC	file:
25	dlsode.f	/^ 25     EWT(I) = RTOL(1)*ABS(YCUR(I)) + ATOL(I)$/;"	l	subroutine:DEWSET	file:
25	dlsode.f	/^ 25   N = NEQ(1)$/;"	l	subroutine:DLSODE	file:
25	fedor.f	/^   25 IF(IBCEND-1) 26,30,24$/;"	l	subroutine:CUBSPL	file:
25	tn.f	/^25    CONTINUE$/;"	l	subroutine:GETPTC	file:
250	dlsode.f	/^ 250    J = J + NP1$/;"	l	subroutine:DPREPJ	file:
250	dlsode.f	/^ 250  CONTINUE$/;"	l	subroutine:DLSODE	file:
250	dlsode.f	/^ 250  DO 260 I = 1,N$/;"	l	subroutine:DSTODE	file:
250	mylapack.f	/^  250            CONTINUE$/;"	l	subroutine:SCHCK1	file:
250	mylapack.f	/^  250         CONTINUE$/;"	l	subroutine:SCHCK2	file:
250	mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK3	file:
250	mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK5	file:
250	mylapack.f	/^  250 CONTINUE$/;"	l	subroutine:SCHCK4	file:
250	ptgrp.f	/^250         IF (IREF.NE.0) THEN$/;"	l	subroutine:PTGRP	file:
2504	Natb.f	/^ 2504              CONTINUE    $/;"	l	subroutine:entots	file:
255	ptgrp.f	/^255            IF (IREF.NE.0) THEN$/;"	l	subroutine:PTGRP	file:
256	ptgrp.f	/^256               IF (IREF.EQ.0) THEN$/;"	l	subroutine:PTGRP	file:
2570	Natb.f	/^ 2570              grad(K)=GRD$/;"	l	subroutine:entots	file:
2572	Natb.f	/^ 2572              CONTINUE$/;"	l	subroutine:entots	file:
2584	Natb.f	/^ 2584              CONTINUE$/;"	l	subroutine:entots	file:
2585	Natb.f	/^ 2585            CONTINUE$/;"	l	subroutine:entots	file:
2586	Natb.f	/^ 2586                 GRD=GRD+VT(L,NOC)*VT(M,NOC)*HDER(K,ML)$/;"	l	subroutine:entots	file:
26	fedor.f	/^   26 IF(IBCBEG.GT.0) GO TO 22$/;"	l	subroutine:CUBSPL	file:
260	dlsode.f	/^ 260    ACOR(I) = 0.0D0$/;"	l	subroutine:DSTODE	file:
260	dlsode.f	/^ 260    RWORK(I+LEWT-1) = 1.0D0\/RWORK(I+LEWT-1)$/;"	l	subroutine:DLSODE	file:
260	mylapack.f	/^  260         CONTINUE$/;"	l	subroutine:SCHCK1	file:
260	mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK2	file:
260	mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK5	file:
260	mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK3	file:
260	mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK4	file:
260	ptgrp.f	/^260            FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:PTGRP	file:
2600	Natb.f	/^ 2600              CONTINUE$/;"	l	subroutine:entots	file:
2605	Natb.f	/^ 2605                 KKK=KKK+K      $/;"	l	subroutine:entots	file:
2610	Natb.f	/^ 2610            IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
265	ptgrp.f	/^265               FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:PTGRP	file:
266	ptgrp.f	/^266               FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:PTGRP	file:
2660	Natb.f	/^ 2660              DJ(L)=0.D0$/;"	l	subroutine:entots	file:
2670	Natb.f	/^ 2670         IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
2680	Natb.f	/^ 2680        CONTINUE$/;"	l	subroutine:entots	file:
2682	Natb.f	/^ 2682           IJQ=IJQ+3$/;"	l	subroutine:entots	file:
27	ptgrp.f	/^27      CONTINUE$/;"	l	subroutine:SIAZ	file:
270	dlsode.f	/^ 270  IF (MITER .NE. 0) GO TO 350$/;"	l	subroutine:DSTODE	file:
270	dlsode.f	/^ 270  TOLSF = UROUND*DVNORM (N, RWORK(LYH), RWORK(LEWT))$/;"	l	subroutine:DLSODE	file:
270	mylapack.f	/^  270         CONTINUE$/;"	l	subroutine:SCHCK1	file:
270	mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK2	file:
270	mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK5	file:
270	mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK3	file:
270	mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK4	file:
28	fedor.f	/^   28 G=-1.d0\/C(4,N-1)$/;"	l	subroutine:CUBSPL	file:
28	ptgrp.f	/^28         CONTINUE$/;"	l	subroutine:SIAZ	file:
280	dlsode.f	/^ 280  IF ((TN + H) .NE. TN) GO TO 290$/;"	l	subroutine:DLSODE	file:
280	mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK2	file:
280	mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK5	file:
280	mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK1	file:
280	mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK3	file:
280	mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK4	file:
29	fedor.f	/^   29 C(4,N)=G*C(3,N-1)+C(4,N)$/;"	l	subroutine:CUBSPL	file:
290	dlsode.f	/^ 290    Y(I) = SAVF(I) - ACOR(I)$/;"	l	subroutine:DSTODE	file:
290	dlsode.f	/^ 290  CONTINUE$/;"	l	subroutine:DLSODE	file:
290	mylapack.f	/^  290        CONTINUE$/;"	l	subroutine:SCHCK3	file:
290	mylapack.f	/^  290    CONTINUE$/;"	l	subroutine:SCHCK4	file:
290	mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK1	file:
290	mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK2	file:
290	mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK5	file:
3	brent.f	/^3     XMIN=X$/;"	l	function:BRENT	file:
3	fedor.f	/^    3 NB(J+1)=NB(J)+NB0(J)$/;"	l	function:ar2UT0	file:
3	fedor.f	/^    3 continue$/;"	l	function:ut	file:
3	odesd.f	/^3     red=min(red,REDMIN)$/;"	l	subroutine:bsstep	file:
3	pyg.f90	/^3     XMIN = X ! Arrive here ready to exit with best values.$/;"	l	subroutine:BRENTMIN	file:
3	sort.f	/^3       continue$/;"	l	subroutine:Gsort	file:
3	takestepmsgb.f90	/^3     XMIN = X ! Arrive here ready to exit with best values.$/;"	l	subroutine:BRENTMINGB	file:
30	Alglue.f	/^   30 dx = u - x(i)$/;"	l	subroutine:seval	file:
30	CSMinit.f90	/^30    NPT=POINT*N$/;"	l	subroutine:CSMMIN	file:
30	EAMal.f	/^   30 dx = u - x(i)$/;"	l	subroutine:seval1	file:
30	Farkas.f	/^30    CONTINUE    $/;"	l	subroutine:FARKAS	file:
30	Farkas.f	/^30    lfden=i-1$/;"	l	subroutine:ALINIT	file:
30	Farkas.f	/^30    lfden=i-1$/;"	l	subroutine:NIINIT	file:
30	JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2C	file:
30	Natb.f	/^ 30        CONTINUE$/;"	l	subroutine:entots	file:
30	Q4.f	/^30    CONTINUE$/;"	l	subroutine:ORDERQ4	file:
30	basinsampling.f90	/^30                 FORMAT('LA ',3F20.10)$/;"	l	subroutine:SAVEBINSTRUCTURES	file:
30	dbrent.f	/^30    CONTINUE$/;"	l	function:DBRENT	file:
30	dgetrf.f	/^   30       CONTINUE$/;"	l	function:ILAENV	file:
30	dgetrf.f	/^   30    CONTINUE$/;"	l	subroutine:DLASWP	file:
30	dgetri.f	/^   30          CONTINUE$/;"	l	subroutine:DGETRI	file:
30	dgetri.f	/^   30       CONTINUE$/;"	l	subroutine:DTRTRI	file:
30	dlamch.f	/^   30    CONTINUE$/;"	l	subroutine:DLAMC1	file:
30	dlamch.f	/^   30    CONTINUE$/;"	l	subroutine:DLAMC2	file:
30	dlamch.f	/^   30    CONTINUE$/;"	l	subroutine:DLAMC4	file:
30	dlamch.f	/^   30 CONTINUE$/;"	l	subroutine:DLAMC5	file:
30	dlsode.f	/^   30    CONTINUE$/;"	l	subroutine:DGBSL	file:
30	dlsode.f	/^   30    CONTINUE$/;"	l	subroutine:DGESL	file:
30	dlsode.f	/^   30 CONTINUE$/;"	l	function:IDAMAX	file:
30	dlsode.f	/^   30 CONTINUE$/;"	l	function:MYDDOT	file:
30	dlsode.f	/^   30 CONTINUE$/;"	l	subroutine:DGBFA	file:
30	dlsode.f	/^   30 CONTINUE$/;"	l	subroutine:DSCAL	file:
30	dlsode.f	/^   30 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
30	dlsode.f	/^ 30       IC = IC*JJ$/;"	l	subroutine:DINTDY	file:
30	dlsode.f	/^ 30   CONTINUE$/;"	l	subroutine:DEWSET	file:
30	dlsode.f	/^ 30   CONTINUE$/;"	l	subroutine:DLSODE	file:
30	dlsode.f	/^ 30   FORMAT(6X,'In above message,  I1 =',I10,3X,'I2 =',I10)$/;"	l	subroutine:XERRWD	file:
30	eigsrt.f	/^30    CONTINUE$/;"	l	subroutine:EIGSRT	file:
30	fedor.f	/^   30 DO 40 J1=1,L$/;"	l	subroutine:CUBSPL	file:
30	fedor.f	/^   30 continue$/;"	l	function:ut	file:
30	finalio.f	/^30          FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	input.f	/^30    CALL MYUPCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	input.f	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	input.f	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	io1.f	/^30             FORMAT(3F20.10)$/;"	l	subroutine:IO1	file:
30	ljcapsidmodule.f90	/^30         V(I) = V(I) - T*V(I+J)$/;"	l	subroutine:SVERT	file:
30	minperm.f	/^   30 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
30	minperm.f	/^ 30         IF (J.GT.N*MAXNEI) THEN$/;"	l	subroutine:minperm	file:
30	minpermdist.f90	/^30 NCHOOSE2=NCHOOSE2+1$/;"	l	subroutine:MINPERMDIST	file:
30	mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBMV	file:
30	mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBSV	file:
30	mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPMV	file:
30	mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPSV	file:
30	mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRMV	file:
30	mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRSV	file:
30	mylapack.f	/^   30                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
30	mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR	file:
30	mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR2	file:
30	mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR	file:
30	mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR2	file:
30	mylapack.f	/^   30                CONTINUE$/;"	l	subroutine:DTBSV	file:
30	mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:DSYR	file:
30	mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGBMV	file:
30	mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGEMV	file:
30	mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSBMV	file:
30	mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSPMV	file:
30	mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSYMV	file:
30	mylapack.f	/^   30            CONTINUE$/;"	l	subroutine:SGER	file:
30	mylapack.f	/^   30 CONTINUE$/;"	l	function:LCE	file:
30	mylapack.f	/^   30 CONTINUE$/;"	l	function:LDE	file:
30	mylapack.f	/^   30 CONTINUE$/;"	l	function:LSE	file:
30	mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:DPBTF2	file:
30	mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SMESSG	file:
30	mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SOPEN	file:
30	mylapack.f	/^   30 I = I*MI$/;"	l	function:SBEG	file:
30	mylapack.f	/^   30 IC = IC + 1$/;"	l	subroutine:SCHCK3	file:
30	mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK1	file:
30	mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK4	file:
30	mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK2	file:
30	mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK5	file:
30	mylbfgs.f	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	ptgrp.f	/^30             CONTINUE$/;"	l	subroutine:PTGRP	file:
30	ptgrp.f	/^30       CONTINUE$/;"	l	subroutine:MATMUL	file:
30	ptgrp.f	/^30    IF(ABS(A(JI,II)).GT.TOL2)IOFF=IOFF+1$/;"	l	subroutine:EIG	file:
30	tetherfunc.f90	/^30                 FORMAT('LA ',3F20.10)$/;"	l	subroutine:SAVEBINSTRUCTURES	file:
30	tetherfunc.f90	/^30                 FORMAT('LA ',3F20.10)$/;"	l	subroutine:SAVEBINSTRUCTURESMPI	file:
30	tn.f	/^   30 CONTINUE$/;"	l	subroutine:DXPY	file:
30	tn.f	/^30      FW = FMIN$/;"	l	subroutine:GETPTC	file:
30	tn.f	/^30    CONTINUE$/;"	l	subroutine:CRASH	file:
30	tn.f	/^30    CONTINUE$/;"	l	subroutine:GTIMS	file:
30	tn.f	/^30    CONTINUE$/;"	l	subroutine:INITP3	file:
30	tn.f	/^30    CONTINUE$/;"	l	subroutine:LINDER	file:
30	tn.f	/^30    CONTINUE$/;"	l	subroutine:MODLNP	file:
30	tn.f	/^30    IF (NWHY .LE. 1) GO TO 40$/;"	l	subroutine:LMQN	file:
30	welch.f	/^   30       continue$/;"	l	subroutine:dgefa	file:
30	welch.f	/^   30       if (dabs(det(1)) .lt. ten) go to 40$/;"	l	subroutine:dgedi	file:
30	welch.f	/^   30    continue$/;"	l	subroutine:dgeco	file:
300	dgetrf.f	/^  300 CONTINUE$/;"	l	function:ILAENV	file:
300	dlsode.f	/^ 300    ACOR(I) = SAVF(I)$/;"	l	subroutine:DSTODE	file:
300	dlsode.f	/^ 300  INIT = 1$/;"	l	subroutine:DLSODE	file:
300	dlsode.f	/^ 300  PHL0 = WM(2)$/;"	l	subroutine:DSOLSY	file:
300	dlsode.f	/^ 300  WM(2) = HL0$/;"	l	subroutine:DPREPJ	file:
300	mylapack.f	/^  300     CONTINUE$/;"	l	subroutine:SCHCK3	file:
300	mylapack.f	/^  300    CONTINUE$/;"	l	subroutine:SCHCK4	file:
300	mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK1	file:
300	mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK2	file:
300	mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK5	file:
3030	Natb.f	/^ 3030              format( 3(2x,i3),3(2x,f10.6))$/;"	l	subroutine:entots	file:
31	fedor.f	/^   31    IHI = ILO$/;"	l	subroutine:INTERV	file:
31	finalio.f	/^31                FORMAT('AM',3G25.15)$/;"	l	subroutine:FINALIO	file:
31	minperm.f	/^   31      CONTINUE$/;"	l	subroutine:JOVOSAP	file:
310	dlsode.f	/^ 310    Y(I) = Y(I) + R*(H*SAVF(I) - YH(I,2))$/;"	l	subroutine:DPREPJ	file:
310	dlsode.f	/^ 310  IF ((TN - TOUT)*H .LT. 0.0D0) GO TO 250$/;"	l	subroutine:DLSODE	file:
310	mylapack.f	/^  310        CONTINUE$/;"	l	subroutine:SCHCK3	file:
310	mylapack.f	/^  310    CONTINUE$/;"	l	subroutine:SCHCK4	file:
310	mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK1	file:
310	mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK2	file:
310	mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK5	file:
310	ptgrp.f	/^310      FORMAT(' Molecule rotated through ',F20.10,' degrees ',$/;"	l	subroutine:PTGRP	file:
32	Natb.f	/^ 32           CONTINUE$/;"	l	subroutine:entots	file:
320	dlsode.f	/^ 320    CONTINUE$/;"	l	subroutine:DPREPJ	file:
320	dlsode.f	/^ 320    WM(I+2) = 1.0D0\/DI$/;"	l	subroutine:DSOLSY	file:
320	mylapack.f	/^  320        CONTINUE$/;"	l	subroutine:SCHCK1	file:
320	mylapack.f	/^  320     CONTINUE$/;"	l	subroutine:SCHCK3	file:
320	mylapack.f	/^  320    CONTINUE$/;"	l	subroutine:SCHCK4	file:
320	mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK2	file:
320	mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK5	file:
320	ptgrp.f	/^320      CONTINUE$/;"	l	subroutine:PTGRP	file:
33	fedor.f	/^   33 continue$/;"	l	function:ut	file:
33	mc.F	/^33                FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' EVAP,REJ')$/;"	l	subroutine:MC	file:
330	dlsode.f	/^ 330  DO 340 I = 1,N$/;"	l	subroutine:DSOLSY	file:
330	dlsode.f	/^ 330  IERPJ = 1$/;"	l	subroutine:DPREPJ	file:
330	dlsode.f	/^ 330  IF ((TN - TOUT)*H .GE. 0.0D0) GO TO 400$/;"	l	subroutine:DLSODE	file:
330	mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK2	file:
330	mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK5	file:
330	mylapack.f	/^  330     CONTINUE$/;"	l	subroutine:SCHCK1	file:
330	mylapack.f	/^  330    CONTINUE$/;"	l	subroutine:SCHCK4	file:
330	mylapack.f	/^  330 CONTINUE$/;"	l	subroutine:SCHCK3	file:
330	ptgrp.f	/^330      CONTINUE$/;"	l	subroutine:PTGRP	file:
332	mc.F	/^332                  FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1x))$/;"	l	subroutine:MC	file:
333	takestep.f	/^333      CONTINUE$/;"	l	subroutine:TAKESTEP	file:
334	finalio.f	/^334      FORMAT(4(I8,1X),' NMRES NMCRD NUMPRO NMSNAP')$/;"	l	subroutine:FINALIO	file:
334	mc.F	/^334                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
34	mc.F	/^34                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
34	supermc.f	/^34             FORMAT('Super RAN,SPOTEL,SEPREV,NSSUC,NSFAIL=',3F15.7,2I6,' ACC')$/;"	l	subroutine:SUPERMC	file:
340	dlsode.f	/^ 340    X(I) = WM(I+2)*X(I)$/;"	l	subroutine:DSOLSY	file:
340	dlsode.f	/^ 340  IF ((TN - TOUT)*H .LT. 0.0D0) GO TO 345$/;"	l	subroutine:DLSODE	file:
340	mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK2	file:
340	mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK5	file:
340	mylapack.f	/^  340    CONTINUE$/;"	l	subroutine:SCHCK3	file:
340	mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK1	file:
340	mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK4	file:
340	ptgrp.f	/^340      ZANGS=180.D0\/(1.0D0*IHIGH)$/;"	l	subroutine:PTGRP	file:
345	dlsode.f	/^ 345  HMX = ABS(TN) + ABS(H)$/;"	l	subroutine:DLSODE	file:
35	dlsode.f	/^ 35     C = IC$/;"	l	subroutine:DINTDY	file:
35	dlsode.f	/^ 35     EWT(I) = RTOL(I)*ABS(YCUR(I)) + ATOL(1)$/;"	l	subroutine:DEWSET	file:
35	fedor.f	/^   35 ILO = 1$/;"	l	subroutine:INTERV	file:
350	dlsode.f	/^ 350  DO 360 I = 1,N$/;"	l	subroutine:DSTODE	file:
350	dlsode.f	/^ 350  HMX = ABS(TN) + ABS(H)$/;"	l	subroutine:DLSODE	file:
350	mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK1	file:
350	mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK2	file:
350	mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK5	file:
350	mylapack.f	/^  350 AVIGR = MAX(AVIGR,REAL(IGR))$/;"	l	subroutine:SCHCK4	file:
350	mylapack.f	/^  350 CONTINUE$/;"	l	subroutine:SCHCK3	file:
350	ptgrp.f	/^350            FORMAT(' S',I3,' axis exists.')$/;"	l	subroutine:PTGRP	file:
36	mc.F	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	subroutine:MC	file:
36	supermc.f	/^36             FORMAT('Super RAN,SPOTEL,SEPREV,NSSUC,NSFAIL=',3F15.7,2I6,' REJ')$/;"	l	subroutine:SUPERMC	file:
360	dlsode.f	/^ 360    Y(I) = H*SAVF(I) - (YH(I,2) + ACOR(I))$/;"	l	subroutine:DSTODE	file:
360	mylapack.f	/^  360        CONTINUE$/;"	l	subroutine:SCHCK3	file:
360	mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK1	file:
360	mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK2	file:
360	mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK5	file:
360	mylapack.f	/^  360 CONTINUE$/;"	l	subroutine:SCHCK4	file:
360	ptgrp.f	/^360      CONTINUE$/;"	l	subroutine:PTGRP	file:
37	mc.F	/^37    CONTINUE$/;"	l	subroutine:MC	file:
37	ptgrp.f	/^37      CONTINUE$/;"	l	subroutine:SIAZ	file:
370	mylapack.f	/^  370     CONTINUE$/;"	l	subroutine:SCHCK3	file:
370	mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK1	file:
370	mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK2	file:
370	mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK5	file:
38	ptgrp.f	/^38         CONTINUE$/;"	l	subroutine:SIAZ	file:
380	dlsode.f	/^ 380    Y(I) = YH(I,1) + EL(1)*ACOR(I)$/;"	l	subroutine:DSTODE	file:
380	mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK1	file:
380	mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK2	file:
380	mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK5	file:
380	mylapack.f	/^  380 CONTINUE$/;"	l	subroutine:SCHCK3	file:
390	dlsode.f	/^ 390  IERSL = 1$/;"	l	subroutine:DSOLSY	file:
390	mylapack.f	/^  390    CONTINUE$/;"	l	subroutine:SCHCK3	file:
390	mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK1	file:
390	mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK2	file:
390	mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK5	file:
390	ptgrp.f	/^390         FORMAT(' Horizontal plane of symmetry found.')$/;"	l	subroutine:PTGRP	file:
4	fedor.f	/^    4 CONTINUE$/;"	l	function:ar2UT0	file:
4	fedor.f	/^    4 continue$/;"	l	function:ut	file:
4	odesd.f	/^4     x=xnew$/;"	l	subroutine:bsstep	file:
4	sort.f	/^4       continue$/;"	l	subroutine:Gsort	file:
40	EAMal.f	/^40      CONTINUE$/;"	l	subroutine:EAMal	file:
40	Farkas.f	/^40       CONTINUE$/;"	l	subroutine:FARKAS	file:
40	JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2C	file:
40	Q4.f	/^40       CONTINUE$/;"	l	subroutine:ORDERQ4	file:
40	dbrent.f	/^40    XMIN=XX$/;"	l	function:DBRENT	file:
40	dgetrf.f	/^   40          CONTINUE$/;"	l	subroutine:DLASWP	file:
40	dgetri.f	/^   40       CONTINUE$/;"	l	subroutine:DGETRI	file:
40	dlsode.f	/^   40       CONTINUE$/;"	l	subroutine:DGBFA	file:
40	dlsode.f	/^   40    CONTINUE$/;"	l	subroutine:DGBSL	file:
40	dlsode.f	/^   40    CONTINUE$/;"	l	subroutine:DGESL	file:
40	dlsode.f	/^   40 MP1 = M + 1$/;"	l	function:MYDDOT	file:
40	dlsode.f	/^   40 MP1 = M + 1$/;"	l	subroutine:DSCAL	file:
40	dlsode.f	/^   40 MP1 = M + 1$/;"	l	subroutine:MYDAXPY	file:
40	dlsode.f	/^ 40       DKY(I) = C*YH(I,JP1) + S*DKY(I)$/;"	l	subroutine:DINTDY	file:
40	dlsode.f	/^ 40   CONTINUE$/;"	l	subroutine:DEWSET	file:
40	dlsode.f	/^ 40   FORMAT(6X,'In above message,  R1 =',D21.13)$/;"	l	subroutine:XERRWD	file:
40	dlsode.f	/^ 40   MAXORD = IWORK(5)$/;"	l	subroutine:DLSODE	file:
40	fedor.f	/^   40 C(2,J)=(C(2,J)-C(3,J)*C(2,J+1))\/C(4,J)$/;"	l	subroutine:CUBSPL	file:
40	fedor.f	/^   40 ISTEP = 1$/;"	l	subroutine:INTERV	file:
40	fedor.f	/^   40 continue$/;"	l	function:ut	file:
40	finalio.f	/^40             FORMAT('Si',3F20.10)$/;"	l	subroutine:FINALIO	file:
40	input.f	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	input.f	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	ljcapsidmodule.f90	/^40    IF ( V(K) .NE. 0. ) GOTO 60$/;"	l	subroutine:SVERT	file:
40	minperm.f	/^   40 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
40	minpermdist.f90	/^40 NCHOOSE2=0$/;"	l	subroutine:MINPERMDIST	file:
40	mylapack.f	/^   40                CONTINUE$/;"	l	subroutine:DPBTRF	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGBMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGEMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSBMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSPMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSYMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBSV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPSV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRMV	file:
40	mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRSV	file:
40	mylapack.f	/^   40          CONTINUE$/;"	l	subroutine:DTBSV	file:
40	mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR	file:
40	mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR2	file:
40	mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR	file:
40	mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR2	file:
40	mylapack.f	/^   40       CONTINUE$/;"	l	subroutine:DSYR	file:
40	mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SCHCK3	file:
40	mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SGER	file:
40	mylapack.f	/^   40 CONTINUE$/;"	l	subroutine:SMESSG	file:
40	mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK2	file:
40	mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK5	file:
40	mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK1	file:
40	mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK4	file:
40	ptgrp.f	/^40             CONTINUE$/;"	l	subroutine:PTGRP	file:
40	ptgrp.f	/^40        CONTINUE$/;"	l	subroutine:EIG	file:
40	ptgrp.f	/^40    J=1$/;"	l	subroutine:SORTXYZ	file:
40	tn.f	/^   40 MP1 = M + 1$/;"	l	subroutine:DXPY	file:
40	tn.f	/^40    A = ZERO$/;"	l	subroutine:GETPTC	file:
40	tn.f	/^40    CONTINUE$/;"	l	subroutine:GTIMS	file:
40	tn.f	/^40    CONTINUE$/;"	l	subroutine:LINDER	file:
40	tn.f	/^40    IF (MODET .GE. -1) WRITE(*,830) K$/;"	l	subroutine:MODLNP	file:
40	tn.f	/^40    NWHY = 2$/;"	l	subroutine:LMQN	file:
40	welch.f	/^   40       continue$/;"	l	subroutine:dgedi	file:
40	welch.f	/^   40    continue$/;"	l	subroutine:dgeco	file:
40	welch.f	/^   40    continue$/;"	l	subroutine:dgefa	file:
400	dgetrf.f	/^  400 CONTINUE$/;"	l	function:ILAENV	file:
400	dlsode.f	/^ 400  DO 410 I = 1,N$/;"	l	subroutine:DLSODE	file:
400	dlsode.f	/^ 400  IF (M .NE. 0) CRATE = MAX(0.2D0*CRATE,DEL\/DELP)$/;"	l	subroutine:DSTODE	file:
400	dlsode.f	/^ 400  ML = IWM(1)$/;"	l	subroutine:DPREPJ	file:
400	dlsode.f	/^ 400  ML = IWM(1)$/;"	l	subroutine:DSOLSY	file:
400	input.f	/^400   NEST=1$/;"	l	file:
400	mylapack.f	/^  400        CONTINUE$/;"	l	subroutine:SCHCK2	file:
400	mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK1	file:
400	mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK3	file:
400	mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK5	file:
400	ptgrp.f	/^400            CONTINUE$/;"	l	subroutine:PTGRP	file:
401	Natb.f	/^ 401           CONTINUE$/;"	l	subroutine:entots	file:
41	fedor.f	/^   41   ILO = IHI$/;"	l	subroutine:INTERV	file:
41	input.f	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	minperm.f	/^   41 L0=L$/;"	l	subroutine:JOVOSAP	file:
410	dlsode.f	/^ 410    WM(I+2) = 0.0D0$/;"	l	subroutine:DPREPJ	file:
410	dlsode.f	/^ 410    Y(I) = RWORK(I+LYH-1)$/;"	l	subroutine:DLSODE	file:
410	dlsode.f	/^ 410  IF (MITER .EQ. 0 .OR. JCUR .EQ. 1) GO TO 430$/;"	l	subroutine:DSTODE	file:
410	input.f	/^410   L=L+1$/;"	l	file:
410	mylapack.f	/^  410        CONTINUE$/;"	l	subroutine:SCHCK5	file:
410	mylapack.f	/^  410     CONTINUE$/;"	l	subroutine:SCHCK2	file:
410	mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK1	file:
410	mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK3	file:
410	ptgrp.f	/^410      FORMAT(' The molecule belongs to a point group with doubly', $/;"	l	subroutine:PTGRP	file:
42	input.f	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	minperm.f	/^   42 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
420	dlsode.f	/^ 420    WM(I+2) = WM(I+2)*CON$/;"	l	subroutine:DPREPJ	file:
420	dlsode.f	/^ 420  ISTATE = 2$/;"	l	subroutine:DLSODE	file:
420	mylapack.f	/^  420        CONTINUE$/;"	l	subroutine:SCHCK5	file:
420	mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK1	file:
420	mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK2	file:
420	mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK3	file:
43	minperm.f	/^   43 X(I)=J0$/;"	l	subroutine:JOVOSAP	file:
430	dlsode.f	/^ 430  ICF = 2$/;"	l	subroutine:DSTODE	file:
430	mylapack.f	/^  430           CONTINUE$/;"	l	subroutine:SCHCK5	file:
430	mylapack.f	/^  430    CONTINUE$/;"	l	subroutine:SCHCK2	file:
430	mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK1	file:
430	mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK3	file:
44	fedor.f	/^   44 continue$/;"	l	function:ut	file:
440	dlsode.f	/^ 440      YH1(I) = YH1(I) - YH1(I+NYH)$/;"	l	subroutine:DSTODE	file:
440	mylapack.f	/^  440        CONTINUE$/;"	l	subroutine:SCHCK5	file:
440	mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK1	file:
440	mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK2	file:
440	mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK3	file:
440	ptgrp.f	/^440         FORMAT(' ORBIT MATRIX:',(F10.6,\/))$/;"	l	subroutine:PTGRP	file:
445	dlsode.f	/^ 445    CONTINUE$/;"	l	subroutine:DSTODE	file:
45	dlsode.f	/^ 45     EWT(I) = RTOL(I)*ABS(YCUR(I)) + ATOL(I)$/;"	l	subroutine:DEWSET	file:
45	fedor.f	/^   45 IF (X .GE. XT(LXT))              GO TO 110$/;"	l	subroutine:INTERV	file:
45	seed.f	/^45       FORMAT('LA ',3F20.10)$/;"	l	subroutine:GSEED	file:
450	dlsode.f	/^ 450  JCUR = 0$/;"	l	subroutine:DSTODE	file:
450	mylapack.f	/^  450     CONTINUE$/;"	l	subroutine:SCHCK5	file:
450	mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK1	file:
450	mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK2	file:
450	mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK3	file:
46	seed.f	/^46       FORMAT('LB',3F20.10)$/;"	l	subroutine:GSEED	file:
460	mylapack.f	/^  460        CONTINUE$/;"	l	subroutine:SCHCK5	file:
460	mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK1	file:
460	mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK2	file:
460	mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK3	file:
470	dlsode.f	/^ 470      YH(I,J) = YH(I,J) + EL(J)*ACOR(I)$/;"	l	subroutine:DSTODE	file:
470	mylapack.f	/^  470        CONTINUE$/;"	l	subroutine:SCHCK5	file:
470	mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK2	file:
470	mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK3	file:
470	ptgrp.f	/^470         FORMAT(' Number of distinct orbits: ',i3,\/,' Summary of orbit sizes:')$/;"	l	subroutine:PTGRP	file:
480	mylapack.f	/^  480           CONTINUE$/;"	l	subroutine:SCHCK5	file:
480	mylapack.f	/^  480 CONTINUE$/;"	l	subroutine:SCHCK2	file:
480	ptgrp.f	/^480            FORMAT(2I3)$/;"	l	subroutine:PTGRP	file:
490	dlsode.f	/^ 490    YH(I,LMAX) = ACOR(I)$/;"	l	subroutine:DSTODE	file:
490	mylapack.f	/^  490        CONTINUE$/;"	l	subroutine:SCHCK5	file:
490	mylapack.f	/^  490 CONTINUE$/;"	l	subroutine:SCHCK2	file:
5	dlsode.f	/^    5 IX = 1$/;"	l	function:MYDDOT	file:
5	dlsode.f	/^    5 IX = 1$/;"	l	subroutine:MYDAXPY	file:
5	fedor.f	/^    5 continue$/;"	l	function:ar2UT0	file:
5	fedor.f	/^    5 continue$/;"	l	function:ut	file:
5	myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMGK	file:
5	myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMKK	file:
5	myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMSK	file:
5	sort.f	/^5       arr(l,np)=arr(j,np)$/;"	l	subroutine:Gsort	file:
5	tn.f	/^5        T = UP(I) - X(I)$/;"	l	subroutine:STPMAX	file:
5	tn.f	/^5        TOL = 1.D1 * EPSMCH * (DABS(UP(I)) + 1.D0)$/;"	l	subroutine:MODZ	file:
50	EAMal.f	/^50      CONTINUE$/;"	l	subroutine:EAMal	file:
50	Farkas.f	/^50    CONTINUE$/;"	l	subroutine:FARKAS	file:
50	JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2C	file:
50	dgetrf.f	/^   50    CONTINUE$/;"	l	subroutine:DLASWP	file:
50	dgetri.f	/^   50    CONTINUE$/;"	l	subroutine:DGETRI	file:
50	dlsode.f	/^   50    CONTINUE$/;"	l	subroutine:DGBFA	file:
50	dlsode.f	/^   50 CONTINUE$/;"	l	function:MYDDOT	file:
50	dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:DGBSL	file:
50	dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:DGESL	file:
50	dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:DSCAL	file:
50	dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
50	dlsode.f	/^ 50     CONTINUE$/;"	l	subroutine:DINTDY	file:
50	dlsode.f	/^ 50   FORMAT(6X,'In above,  R1 =',D21.13,3X,'R2 =',D21.13)$/;"	l	subroutine:XERRWD	file:
50	dlsode.f	/^ 50   HMAX = RWORK(6)$/;"	l	subroutine:DLSODE	file:
50	fedor.f	/^   50 C(4,I-1)=(DIVDF3\/DTAU)*(6.d0\/DTAU)$/;"	l	subroutine:CUBSPL	file:
50	fedor.f	/^   50 MIDDLE = (ILO + IHI)\/2$/;"	l	subroutine:INTERV	file:
50	fedor.f	/^   50 continue$/;"	l	function:ut	file:
50	finalio.f	/^50             FORMAT('LB',3F20.10)$/;"	l	subroutine:FINALIO	file:
50	input.f	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	input.f	/^50    L=L+1$/;"	l	file:
50	input.f	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	ljcapsidmodule.f90	/^50    WRITE(6,*) 'ERROR: ZERO PIVOT ENCOUNTERED'$/;"	l	subroutine:SVERT	file:
50	minperm.f	/^   50 I=FREE(K)$/;"	l	subroutine:JOVOSAP	file:
50	minpermdist.f90	/^50 DISTANCE=DBEST$/;"	l	subroutine:MINPERMDIST	file:
50	mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBMV	file:
50	mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBSV	file:
50	mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPMV	file:
50	mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPSV	file:
50	mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRMV	file:
50	mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRSV	file:
50	mylapack.f	/^   50                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
50	mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGBMV	file:
50	mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGEMV	file:
50	mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR	file:
50	mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR2	file:
50	mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR	file:
50	mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR2	file:
50	mylapack.f	/^   50                CONTINUE$/;"	l	subroutine:DTBSV	file:
50	mylapack.f	/^   50             CONTINUE$/;"	l	subroutine:DSYR	file:
50	mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSBMV	file:
50	mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSPMV	file:
50	mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSYMV	file:
50	mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK2	file:
50	mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK3	file:
50	mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK4	file:
50	mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK5	file:
50	mylapack.f	/^   50 CONTINUE$/;"	l	subroutine:SMESSG	file:
50	mylapack.f	/^   50 IC = IC + 1$/;"	l	subroutine:SCHCK1	file:
50	ptgrp.f	/^50    FORMAT(3(2X,F12.6))$/;"	l	subroutine:PTGRP	file:
50	ptgrp.f	/^50    P=ZER$/;"	l	subroutine:EIG	file:
50	tn.f	/^   50 CONTINUE$/;"	l	subroutine:DXPY	file:
50	tn.f	/^50    CONTINUE$/;"	l	subroutine:LMQN	file:
50	tn.f	/^50    CONTINUE$/;"	l	subroutine:MODLNP	file:
50	tn.f	/^50    RETURN$/;"	l	subroutine:LINDER	file:
50	tn.f	/^50    TOL = DABS(XMIN)*RELTOL + ABSTOL$/;"	l	subroutine:GETPTC	file:
50	welch.f	/^   50    continue$/;"	l	subroutine:dgeco	file:
50	welch.f	/^   50    continue$/;"	l	subroutine:dgedi	file:
50	welch.f	/^   50    continue$/;"	l	subroutine:dgefa	file:
500	dgetrf.f	/^  500 CONTINUE$/;"	l	function:ILAENV	file:
500	dlsode.f	/^ 500  KFLAG = KFLAG - 1$/;"	l	subroutine:DSTODE	file:
500	dlsode.f	/^ 500  ML = IWM(1)$/;"	l	subroutine:DPREPJ	file:
500	dlsode.f	/^ 500  MSG = 'DLSODE-  At current T (=R1), MXSTEP (=I1) steps   '$/;"	l	subroutine:DLSODE	file:
500	mylapack.f	/^  500     CONTINUE$/;"	l	subroutine:SCHCK5	file:
500	mylapack.f	/^  500 CONTINUE$/;"	l	subroutine:SCHCK2	file:
500	ptgrp.f	/^500      CONTINUE$/;"	l	subroutine:PTGRP	file:
51	input.f	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	minperm.f	/^   51    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
510	dlsode.f	/^ 510      YH1(I) = YH1(I) - YH1(I+NYH)$/;"	l	subroutine:DSTODE	file:
510	dlsode.f	/^ 510  EWTI = RWORK(LEWT+I-1)$/;"	l	subroutine:DLSODE	file:
510	mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK2	file:
510	mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK5	file:
510	ptgrp.f	/^510      FORMAT(' The smallest non-unit orbit contains ',i3,' members.',\/,$/;"	l	subroutine:PTGRP	file:
515	dlsode.f	/^ 515    CONTINUE$/;"	l	subroutine:DSTODE	file:
52	EAMal.f	/^52       CONTINUE$/;"	l	subroutine:EAMal	file:
52	input.f	/^52    I=I+1$/;"	l	file:
52	input.f	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	minperm.f	/^   52    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
520	dlsode.f	/^ 520  MSG = 'DLSODE-  At T (=R1), too much accuracy requested  '$/;"	l	subroutine:DLSODE	file:
520	dlsode.f	/^ 520  RHUP = 0.0D0$/;"	l	subroutine:DSTODE	file:
520	mylapack.f	/^  520 CONTINUE$/;"	l	subroutine:SCHCK5	file:
520	ptgrp.f	/^520      FORMAT(' Other members of this orbit are: ',100I4)$/;"	l	subroutine:PTGRP	file:
526	finalio.f	/^526         CONTINUE$/;"	l	subroutine:FINALIO	file:
53	EAMal.f	/^53     CONTINUE$/;"	l	subroutine:EAMal	file:
53	fedor.f	/^   53      IHI = MIDDLE$/;"	l	subroutine:INTERV	file:
53	minperm.f	/^   53    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
530	dlsode.f	/^ 530      Y(I) = Y(I) + R$/;"	l	subroutine:DPREPJ	file:
530	dlsode.f	/^ 530    SAVF(I) = ACOR(I) - YH(I,LMAX)$/;"	l	subroutine:DSTODE	file:
530	dlsode.f	/^ 530  MSG = 'DLSODE-  At T(=R1) and step size H(=R2), the error'$/;"	l	subroutine:DLSODE	file:
530	ptgrp.f	/^530               CONTINUE$/;"	l	subroutine:PTGRP	file:
54	EAMal.f	/^54     CONTINUE$/;"	l	subroutine:EAMal	file:
540	dlsode.f	/^ 540        WM(II+I) = (FTEM(I) - SAVF(I))*FAC$/;"	l	subroutine:DPREPJ	file:
540	dlsode.f	/^ 540  EXSM = 1.0D0\/L$/;"	l	subroutine:DSTODE	file:
540	dlsode.f	/^ 540  MSG = 'DLSODE-  At T (=R1) and step size H (=R2), the    '$/;"	l	subroutine:DLSODE	file:
55	dlsode.f	/^ 55   R = H**(-K)$/;"	l	subroutine:DINTDY	file:
55	fedor.f	/^   55 continue$/;"	l	function:ut	file:
550	dlsode.f	/^ 550      CONTINUE$/;"	l	subroutine:DPREPJ	file:
5500	Natb.f	/^ 5500   HDER(K,IJ)=0.D0$/;"	l	subroutine:entots	file:
56	EAMal.f	/^56     CONTINUE$/;"	l	subroutine:EAMal	file:
56	keyword.f	/^56          WRITE(MYUNIT,'(A,I6,A)') $/;"	l	subroutine:KEYWORD	file:
560	dlsode.f	/^ 560    CONTINUE$/;"	l	subroutine:DPREPJ	file:
560	dlsode.f	/^ 560  BIG = 0.0D0$/;"	l	subroutine:DLSODE	file:
560	dlsode.f	/^ 560  IF (RHSM .GE. RHUP) GO TO 570$/;"	l	subroutine:DSTODE	file:
57	keyword.f	/^57          READ(34,*,END=56) DUMMY$/;"	l	subroutine:KEYWORD	file:
57	tn.f	/^57    CONTINUE$/;"	l	subroutine:MSLV	file:
570	dlsode.f	/^ 570    CONTINUE$/;"	l	subroutine:DLSODE	file:
570	dlsode.f	/^ 570  IF (RHSM .LT. RHDN) GO TO 580$/;"	l	subroutine:DSTODE	file:
570	dlsode.f	/^ 570  II = MBAND + 2$/;"	l	subroutine:DPREPJ	file:
570	ptgrp.f	/^570               CALL ROTM(3,ANGMG,1,RM)$/;"	l	subroutine:PTGRP	file:
5700	Natb.f	/^ 5700        CONTINUE $/;"	l	subroutine:entots	file:
5720	Natb.f	/^ 5720           CONTINUE$/;"	l	subroutine:entots	file:
580	dlsode.f	/^ 580    II = II + MEBAND$/;"	l	subroutine:DPREPJ	file:
580	dlsode.f	/^ 580  DO 590 I = 1,N$/;"	l	subroutine:DLSODE	file:
580	dlsode.f	/^ 580  NEWQ = NQ - 1$/;"	l	subroutine:DSTODE	file:
580	ptgrp.f	/^580                  FORMAT(' Axis of order ',I1,' identified.')$/;"	l	subroutine:PTGRP	file:
590	dlsode.f	/^ 590    Y(I) = RWORK(I+LYH-1)$/;"	l	subroutine:DLSODE	file:
590	dlsode.f	/^ 590  NEWQ = L$/;"	l	subroutine:DSTODE	file:
590	ptgrp.f	/^590                           CONTINUE$/;"	l	subroutine:PTGRP	file:
6	EAMal.f	/^6       CONTINUE$/;"	l	subroutine:EAMal	file:
60	EAMal.f	/^60    CONTINUE$/;"	l	subroutine:EAMal	file:
60	dgetri.f	/^   60 CONTINUE$/;"	l	subroutine:DGETRI	file:
60	dlsode.f	/^   60       CONTINUE$/;"	l	subroutine:DGBFA	file:
60	dlsode.f	/^   60    CONTINUE$/;"	l	subroutine:DGBSL	file:
60	dlsode.f	/^   60    CONTINUE$/;"	l	subroutine:DGESL	file:
60	dlsode.f	/^   60 NS = N*INCX$/;"	l	function:MYDDOT	file:
60	dlsode.f	/^   60 NS = N*INCX$/;"	l	subroutine:MYDAXPY	file:
60	dlsode.f	/^ 60     DKY(I) = R*DKY(I)$/;"	l	subroutine:DINTDY	file:
60	dlsode.f	/^ 60   LYH = 21$/;"	l	subroutine:DLSODE	file:
60	finalio.f	/^60          FORMAT('AR ',3F20.10)$/;"	l	subroutine:FINALIO	file:
60	input.f	/^60    L=L+1$/;"	l	file:
60	input.f	/^60    M(I:I)=CHAR(L+I-1)$/;"	l	subroutine:READA	file:
60	input.f	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	ljcapsidmodule.f90	/^60    G = N + N$/;"	l	subroutine:SVERT	file:
60	minperm.f	/^   60    IF (K.EQ.0) THEN$/;"	l	subroutine:JOVOSAP	file:
60	minpermdist.f90	/^60 NCHOOSE1=0$/;"	l	subroutine:MINPERMDIST	file:
60	mylapack.f	/^   60                CONTINUE$/;"	l	subroutine:DPBTRF	file:
60	mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBMV	file:
60	mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBSV	file:
60	mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPMV	file:
60	mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPSV	file:
60	mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRMV	file:
60	mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRSV	file:
60	mylapack.f	/^   60          CONTINUE$/;"	l	subroutine:DTBSV	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGBMV	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGEMV	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSBMV	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPMV	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR2	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYMV	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR	file:
60	mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR2	file:
60	mylapack.f	/^   60       CONTINUE$/;"	l	subroutine:DSYR	file:
60	mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK1	file:
60	mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK2	file:
60	mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK3	file:
60	mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK4	file:
60	mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK5	file:
60	mylapack.f	/^   60 CONTINUE$/;"	l	subroutine:SMESSG	file:
60	ptgrp.f	/^60          CONTINUE$/;"	l	subroutine:PTGRP	file:
60	ptgrp.f	/^60       X(J)=-99999.D0$/;"	l	subroutine:SORTXYZ	file:
60	ptgrp.f	/^60    CONTINUE$/;"	l	subroutine:EIG	file:
60	tn.f	/^60    CONTINUE$/;"	l	subroutine:INITP3	file:
60	tn.f	/^60    CONTINUE$/;"	l	subroutine:LMQN	file:
60	tn.f	/^60    CONTINUE$/;"	l	subroutine:MSLV	file:
60	tn.f	/^60    IF (K .GT. 1) GO TO 70$/;"	l	subroutine:MODLNP	file:
60	tn.f	/^60    IF (U .LT. ZERO) GO TO 70$/;"	l	subroutine:GETPTC	file:
60	welch.f	/^   60       continue$/;"	l	subroutine:dgeco	file:
60	welch.f	/^   60    continue$/;"	l	subroutine:dgedi	file:
60	welch.f	/^   60 continue$/;"	l	subroutine:dgefa	file:
600	dgetrf.f	/^  600 CONTINUE $/;"	l	function:ILAENV	file:
600	dlsode.f	/^ 600    YH(I,NEWQ+1) = ACOR(I)*R$/;"	l	subroutine:DSTODE	file:
600	ptgrp.f	/^600            CONTINUE$/;"	l	subroutine:PTGRP	file:
601	dlsode.f	/^ 601  MSG = 'DLSODE-  ISTATE (=I1) illegal '$/;"	l	subroutine:DLSODE	file:
602	dlsode.f	/^ 602  MSG = 'DLSODE-  ITASK (=I1) illegal  '$/;"	l	subroutine:DLSODE	file:
603	dlsode.f	/^ 603  MSG = 'DLSODE-  ISTATE .GT. 1 but DLSODE not initialized '$/;"	l	subroutine:DLSODE	file:
604	dlsode.f	/^ 604  MSG = 'DLSODE-  NEQ (=I1) .LT. 1     '$/;"	l	subroutine:DLSODE	file:
605	dlsode.f	/^ 605  MSG = 'DLSODE-  ISTATE = 3 and NEQ increased (I1 to I2)  '$/;"	l	subroutine:DLSODE	file:
606	dlsode.f	/^ 606  MSG = 'DLSODE-  ITOL (=I1) illegal   '$/;"	l	subroutine:DLSODE	file:
607	dlsode.f	/^ 607  MSG = 'DLSODE-  IOPT (=I1) illegal   '$/;"	l	subroutine:DLSODE	file:
608	dlsode.f	/^ 608  MSG = 'DLSODE-  MF (=I1) illegal     '$/;"	l	subroutine:DLSODE	file:
609	dlsode.f	/^ 609  MSG = 'DLSODE-  ML (=I1) illegal.. .LT.0 or .GE.NEQ (=I2)'$/;"	l	subroutine:DLSODE	file:
61	finalio.f	/^61      FORMAT('ATOM',4X,i3,2X,A2,2X,A3,3X,i3,4X,F8.3,F8.3,F8.3,2X,'1.00',2X,'0.00',6X,'TPDB',1x,I3)$/;"	l	subroutine:FINALIO	file:
61	minperm.f	/^   61    T=T+1$/;"	l	subroutine:JOVOSAP	file:
61	ptgrp.f	/^61          CONTINUE$/;"	l	subroutine:PTGRP	file:
610	dlsode.f	/^ 610  IALTH = 3$/;"	l	subroutine:DSTODE	file:
610	dlsode.f	/^ 610  MSG = 'DLSODE-  MU (=I1) illegal.. .LT.0 or .GE.NEQ (=I2)'$/;"	l	subroutine:DLSODE	file:
610	ptgrp.f	/^610         CONTINUE$/;"	l	subroutine:PTGRP	file:
611	dlsode.f	/^ 611  MSG = 'DLSODE-  MAXORD (=I1) .LT. 0  '$/;"	l	subroutine:DLSODE	file:
612	dlsode.f	/^ 612  MSG = 'DLSODE-  MXSTEP (=I1) .LT. 0  '$/;"	l	subroutine:DLSODE	file:
613	dlsode.f	/^ 613  MSG = 'DLSODE-  MXHNIL (=I1) .LT. 0  '$/;"	l	subroutine:DLSODE	file:
614	dlsode.f	/^ 614  MSG = 'DLSODE-  TOUT (=R1) behind T (=R2)      '$/;"	l	subroutine:DLSODE	file:
615	dlsode.f	/^ 615  MSG = 'DLSODE-  HMAX (=R1) .LT. 0.0  '$/;"	l	subroutine:DLSODE	file:
616	dlsode.f	/^ 616  MSG = 'DLSODE-  HMIN (=R1) .LT. 0.0  '$/;"	l	subroutine:DLSODE	file:
617	dlsode.f	/^ 617  CONTINUE$/;"	l	subroutine:DLSODE	file:
618	dlsode.f	/^ 618  CONTINUE$/;"	l	subroutine:DLSODE	file:
619	dlsode.f	/^ 619  MSG = 'DLSODE-  RTOL(I1) is R1 .LT. 0.0        '$/;"	l	subroutine:DLSODE	file:
62	minperm.f	/^   62    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
620	dlsode.f	/^ 620  IF ((KFLAG .EQ. 0) .AND. (RH .LT. 1.1D0)) GO TO 610$/;"	l	subroutine:DSTODE	file:
620	dlsode.f	/^ 620  MSG = 'DLSODE-  ATOL(I1) is R1 .LT. 0.0        '$/;"	l	subroutine:DLSODE	file:
620	ptgrp.f	/^620      CONTINUE$/;"	l	subroutine:PTGRP	file:
621	dlsode.f	/^ 621  EWTI = RWORK(LEWT+I-1)$/;"	l	subroutine:DLSODE	file:
622	dlsode.f	/^ 622  CONTINUE$/;"	l	subroutine:DLSODE	file:
623	dlsode.f	/^ 623  CONTINUE$/;"	l	subroutine:DLSODE	file:
624	dlsode.f	/^ 624  CONTINUE$/;"	l	subroutine:DLSODE	file:
625	dlsode.f	/^ 625  CONTINUE$/;"	l	subroutine:DLSODE	file:
626	dlsode.f	/^ 626  MSG = 'DLSODE-  At start of problem, too much accuracy   '$/;"	l	subroutine:DLSODE	file:
627	dlsode.f	/^ 627  MSG = 'DLSODE-  Trouble in DINTDY.  ITASK = I1, TOUT = R1'$/;"	l	subroutine:DLSODE	file:
63	minperm.f	/^   63    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
630	dlsode.f	/^ 630  NQ = NEWQ$/;"	l	subroutine:DSTODE	file:
630	ptgrp.f	/^630   ANG=180.D0$/;"	l	subroutine:PTGRP	file:
632	finalio.f	/^632            FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1X))$/;"	l	subroutine:FINALIO	file:
64	EAMal.f	/^64    CONTINUE$/;"	l	subroutine:EAMal	file:
64	minperm.f	/^   64    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
640	dlsode.f	/^ 640  IF (KFLAG .EQ. -10) GO TO 660$/;"	l	subroutine:DSTODE	file:
640	ptgrp.f	/^640         FORMAT(' Reflection in plane ',i2,' is a valid symmetry operation.')$/;"	l	subroutine:PTGRP	file:
645	dlsode.f	/^ 645    Y(I) = YH(I,1)$/;"	l	subroutine:DSTODE	file:
65	cgmin.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:CGMIN	file:
65	finalio.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:FINALIO	file:
65	input.f	/^65    DO 70 I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	input.f	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	minpermdist.f90	/^65 NCHOOSE1=NCHOOSE1+1$/;"	l	subroutine:MINPERMDIST	file:
65	mylbfgs.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:MYLBFGS	file:
65	quench.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:QUENCH	file:
65	tn.f	/^65    CONTINUE$/;"	l	subroutine:MSLV	file:
650	dlsode.f	/^ 650    YH(I,2) = H*SAVF(I)$/;"	l	subroutine:DSTODE	file:
650	ptgrp.f	/^650         FORMAT(' C2 rotation about ',i2,' is a valid symmetry operation ')$/;"	l	subroutine:PTGRP	file:
651	ptgrp.f	/^651   Q(1:3*NATOMS)=QSAVE(1:3*NATOMS) ! otherwise the CofM can be reset differently $/;"	l	subroutine:PTGRP	file:
652	ptgrp.f	/^652   CONTINUE$/;"	l	subroutine:PTGRP	file:
653	ptgrp.f	/^653            FORMAT(A80)$/;"	l	subroutine:PTGRP	file:
654	mc.F	/^654      CALL QUENCH(.FALSE.,JP,ITERATIONS,TIME,BRUN,QDONE,SCREENC)$/;"	l	subroutine:NEWRES	file:
660	dlsode.f	/^ 660  KFLAG = -1$/;"	l	subroutine:DSTODE	file:
666	JM.f	/^666      CLOSE(33)$/;"	l	subroutine:JMEC	file:
67	input.f	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
670	dlsode.f	/^ 670  KFLAG = -2$/;"	l	subroutine:DSTODE	file:
680	dlsode.f	/^ 680  KFLAG = -3$/;"	l	subroutine:DSTODE	file:
680	ptgrp.f	/^680      FORMAT(' The molecule possesses an inversion center. ')$/;"	l	subroutine:PTGRP	file:
683	finalio.f	/^683         FORMAT(3(I6,1X),F8.4,1X,I5,' STUCT SNAP T T TID')$/;"	l	subroutine:FINALIO	file:
683	mc.F	/^683                  FORMAT(3(i6,1x),f8.4,1x,i5,' stuct snap t T Tid')$/;"	l	subroutine:MC	file:
690	dlsode.f	/^ 690  RMAX = 10.0D0$/;"	l	subroutine:DSTODE	file:
690	ptgrp.f	/^690   FORMAT ('Symmetry bits: ',3(1X,I3))$/;"	l	subroutine:PTGRP	file:
7	fedor.f	/^    7 COEF(1,K,J)=ENF(N1+K-1)$/;"	l	function:ar2UT0	file:
70	Farkas.f	/^70    continue$/;"	l	subroutine:ALINIT	file:
70	Farkas.f	/^70    continue$/;"	l	subroutine:NIINIT	file:
70	dlsode.f	/^   70          CONTINUE$/;"	l	subroutine:DGBFA	file:
70	dlsode.f	/^   70          CONTINUE$/;"	l	subroutine:DGBSL	file:
70	dlsode.f	/^   70       CONTINUE$/;"	l	subroutine:DGESL	file:
70	dlsode.f	/^   70 CONTINUE$/;"	l	function:MYDDOT	file:
70	dlsode.f	/^   70 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
70	dlsode.f	/^ 70     CONTINUE$/;"	l	subroutine:DLSODE	file:
70	input.f	/^70    ITEM=0$/;"	l	file:
70	input.f	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	input.f	/^70    M(I:I)=SPACE$/;"	l	subroutine:READA	file:
70	input.f	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	ljcapsidmodule.f90	/^70              W(I) = 0.$/;"	l	subroutine:SVERT	file:
70	minperm.f	/^   70    IF (MIN.EQ.0) GOTO 80$/;"	l	subroutine:JOVOSAP	file:
70	mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBMV	file:
70	mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBSV	file:
70	mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPMV	file:
70	mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPSV	file:
70	mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRMV	file:
70	mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRSV	file:
70	mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGBMV	file:
70	mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGEMV	file:
70	mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR	file:
70	mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR2	file:
70	mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR	file:
70	mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR2	file:
70	mylapack.f	/^   70                CONTINUE$/;"	l	subroutine:DTBSV	file:
70	mylapack.f	/^   70             CONTINUE$/;"	l	subroutine:DSYR	file:
70	mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSBMV	file:
70	mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSPMV	file:
70	mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSYMV	file:
70	mylapack.f	/^   70       CONTINUE$/;"	l	subroutine:DPBTRF	file:
70	mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK2	file:
70	mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK4	file:
70	mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK5	file:
70	mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SCHCK3	file:
70	mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SMESSG	file:
70	ptgrp.f	/^70    CONTINUE$/;"	l	subroutine:EIG	file:
70	ptgrp.f	/^70    CONTINUE$/;"	l	subroutine:SORTXYZ	file:
70	quench.f	/^70          FORMAT(1X,'QUENCH NUMBER ',I6,' final energy=',F20.10,' RMS force=',E20.10)$/;"	l	subroutine:QUENCH	file:
70	tn.f	/^70    A = U$/;"	l	subroutine:GETPTC	file:
70	tn.f	/^70    CONTINUE$/;"	l	subroutine:INITP3	file:
70	tn.f	/^70    CONTINUE$/;"	l	subroutine:LMQN	file:
70	tn.f	/^70    CONTINUE$/;"	l	subroutine:MODLNP	file:
70	welch.f	/^   70          continue$/;"	l	subroutine:dgeco	file:
70	welch.f	/^   70 continue$/;"	l	subroutine:dgedi	file:
70	welch.f	/^   70 continue$/;"	l	subroutine:dgefa	file:
700	dgetrf.f	/^  700 CONTINUE$/;"	l	function:ILAENV	file:
700	dlsode.f	/^ 700  ISTATE = -3$/;"	l	subroutine:DLSODE	file:
700	dlsode.f	/^ 700  R = 1.0D0\/TESCO(2,NQU)$/;"	l	subroutine:DSTODE	file:
71	input.f	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	minperm.f	/^   71    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
710	dlsode.f	/^ 710    ACOR(I) = ACOR(I)*R$/;"	l	subroutine:DSTODE	file:
72	input.f	/^72    AD=I$/;"	l	subroutine:READF	file:
720	dlsode.f	/^ 720  HOLD = H$/;"	l	subroutine:DSTODE	file:
73	mc.F	/^73                   FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' TABOO')$/;"	l	subroutine:MC	file:
75	seed.f	/^75    FORMAT('Coordinates:')$/;"	l	subroutine:GSEED	file:
750	ptgrp.f	/^750      FORMAT(' The full molecular point group is ',A4,'.')$/;"	l	subroutine:PTGRP	file:
760	ptgrp.f	/^760   FORMAT(' Distance tolerance=',F12.5,' Inertia tolerance=',F12.5,' Orbit tolerance=',F12.5)  $/;"	l	subroutine:PTGRP	file:
770	ptgrp.f	/^770   FORMAT(80('*'))$/;"	l	subroutine:PTGRP	file:
7777	ptmc.F	/^7777        RANDOM=DPRAND()$/;"	l	subroutine:PARALLELTEMPERING	file:
790	ptgrp.f	/^790   FORMAT(' The largest Abelian subgroup of the full molecular point group is ',A4,'.')$/;"	l	subroutine:PTGRP	file:
8	takestep.f	/^8        IF (NCORE(NP).GT.0) THEN$/;"	l	subroutine:TAKESTEP	file:
80	Farkas.f	/^80    lfpair=i-1$/;"	l	subroutine:ALINIT	file:
80	Farkas.f	/^80    lfpair=i-1$/;"	l	subroutine:NIINIT	file:
80	dftb.f	/^80       FORMAT(3F15.5)$/;"	l	subroutine:DFTB	file:
80	dlsode.f	/^   80       CONTINUE$/;"	l	subroutine:DGBFA	file:
80	dlsode.f	/^   80       CONTINUE$/;"	l	subroutine:DGBSL	file:
80	dlsode.f	/^   80    CONTINUE$/;"	l	subroutine:DGESL	file:
80	dlsode.f	/^ 80     RWORK(I+LSAVF-1) = RWORK(I+LWM-1)$/;"	l	subroutine:DLSODE	file:
80	dlsode.f	/^ 80   MSG = 'DINTDY-  K (=I1) illegal      '$/;"	l	subroutine:DINTDY	file:
80	input.f	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	input.f	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	ljcapsidmodule.f90	/^80         IF ( K .EQ. N ) GOTO 100$/;"	l	subroutine:SVERT	file:
80	minperm.f	/^   80    I=LAB(J)$/;"	l	subroutine:JOVOSAP	file:
80	mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBMV	file:
80	mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBSV	file:
80	mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPMV	file:
80	mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPSV	file:
80	mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRMV	file:
80	mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRSV	file:
80	mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DPBTRF	file:
80	mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DTBSV	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGBMV	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGEMV	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSBMV	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPMV	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR2	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYMV	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR	file:
80	mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR2	file:
80	mylapack.f	/^   80       CONTINUE$/;"	l	subroutine:DSYR	file:
80	mylapack.f	/^   80     CONTINUE$/;"	l	subroutine:SCHCK1	file:
80	mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK2	file:
80	mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK3	file:
80	mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK4	file:
80	mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK5	file:
80	ptgrp.f	/^80    S=SQRT(0.250D0*(P-R)**2+Q**2)$/;"	l	subroutine:EIG	file:
80	quench.f	/^80          FORMAT(A2,3F20.10)$/;"	l	subroutine:QUENCH	file:
80	seed.f	/^80    FORMAT(3F15.5)$/;"	l	subroutine:GSEED	file:
80	tn.f	/^80    CONTINUE$/;"	l	subroutine:INITP3	file:
80	tn.f	/^80    CONTINUE$/;"	l	subroutine:MODLNP	file:
80	tn.f	/^80    IRESET = IRESET + 1$/;"	l	subroutine:LMQN	file:
80	tn.f	/^80    XW = U$/;"	l	subroutine:GETPTC	file:
80	welch.f	/^   80       continue$/;"	l	subroutine:dgeco	file:
80	welch.f	/^   80       continue$/;"	l	subroutine:dgedi	file:
800	dgetrf.f	/^  800 CONTINUE$/;"	l	function:ILAENV	file:
800	dlsode.f	/^ 800  MSG = 'DLSODE-  Run aborted.. apparent infinite loop     '$/;"	l	subroutine:DLSODE	file:
800	input.f	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
800	tn.f	/^800   FORMAT(' ',I4,1X,I4,1X,I4,1X,1PD22.15,2X,1PD15.8)$/;"	l	subroutine:MONIT	file:
800	tn.f	/^800   FORMAT(' ',\/\/,' ENTERING MODLNP')$/;"	l	subroutine:MODLNP	file:
800	tn.f	/^800   FORMAT(' ',\/\/8X,'DMIN =',1PD12.4,'  DMAX =',1PD12.4,$/;"	l	subroutine:INITP3	file:
800	tn.f	/^800   FORMAT(' *** EMAT NEGATIVE:  ',1PD16.8)$/;"	l	subroutine:NDIA3	file:
800	tn.f	/^800   FORMAT(\/\/' NIT   NF   CG', 9X, 'F', 21X, 'GTG',\/\/)$/;"	l	subroutine:LMQN	file:
800	tn.f	/^800   FORMAT(\/\/,' WARNING: TN ERROR CODE =', I3)$/;"	l	subroutine:TN	file:
800	tn.f	/^800   FORMAT(\/\/\/' OUTPUT FROM LINEAR SEARCH')$/;"	l	subroutine:LSOUT	file:
81	input.f	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
810	tn.f	/^810   FORMAT('  TOL AND EPS'\/2D25.14)$/;"	l	subroutine:LSOUT	file:
810	tn.f	/^810   FORMAT(' ',I3,1X,I4,1X,I4,1X,1PD22.15,2X,1PD15.8)$/;"	l	subroutine:LMQN	file:
810	tn.f	/^810   FORMAT(' ',\/\/,' ### ITERATION ',I2,' ###')$/;"	l	subroutine:MODLNP	file:
820	tn.f	/^820   FORMAT('  CURRENT UPPER AND LOWER BOUNDS'\/2D25.14)$/;"	l	subroutine:LSOUT	file:
820	tn.f	/^820   FORMAT(' ALPHA',1PD16.8)$/;"	l	subroutine:MODLNP	file:
830	tn.f	/^830   FORMAT('  STRICT UPPER BOUND'\/D25.14)$/;"	l	subroutine:LSOUT	file:
830	tn.f	/^830   FORMAT(' G(T)Z POSITIVE AT ITERATION ',I2,$/;"	l	subroutine:MODLNP	file:
840	tn.f	/^840   FORMAT('  XW, FW, GW'\/3D25.14)$/;"	l	subroutine:LSOUT	file:
840	tn.f	/^840   FORMAT(' ',10X,'HESSIAN NOT POSITIVE-DEFINITE')$/;"	l	subroutine:MODLNP	file:
850	tn.f	/^850   FORMAT('  XMIN, FMIN, GMIN'\/3D25.14)$/;"	l	subroutine:LSOUT	file:
850	tn.f	/^850   FORMAT(' ',\/,8X,'MODLAN TRUNCATED AFTER ',I3,' ITERATIONS',$/;"	l	subroutine:MODLNP	file:
860	tn.f	/^860   FORMAT('  NEW ESTIMATE'\/2D25.14)$/;"	l	subroutine:LSOUT	file:
860	tn.f	/^860   FORMAT(' PRECONDITIONING NOT POSITIVE-DEFINITE')$/;"	l	subroutine:MODLNP	file:
870	tn.f	/^870   FORMAT('  ILOC AND ITEST'\/2I3)$/;"	l	subroutine:LSOUT	file:
88	Q4.f	/^88       CONTINUE$/;"	l	subroutine:SHINIT	file:
888	bspt.F	/^888      DO K=1,NATOMS ! COORDS have to be resaved because we have to use noreset to be able to calc distance $/;"	l	subroutine:PTBASINSAMPLING	file:
89	Q4.f	/^89    CONTINUE$/;"	l	subroutine:SHINIT	file:
9	takestep.f	/^9        RANATOM=NINT(0.5D0+NATOMS*DPRAND())$/;"	l	subroutine:TAKESTEP	file:
90	dlsode.f	/^   90       CONTINUE$/;"	l	subroutine:DGBFA	file:
90	dlsode.f	/^   90    CONTINUE$/;"	l	subroutine:DGBSL	file:
90	dlsode.f	/^   90    CONTINUE$/;"	l	subroutine:DGESL	file:
90	dlsode.f	/^ 90   IF (MITER .GT. 0) RWORK(LWM) = SQRT(UROUND)$/;"	l	subroutine:DLSODE	file:
90	dlsode.f	/^ 90   MSG = 'DINTDY-  T (=R1) illegal      '$/;"	l	subroutine:DINTDY	file:
90	fedor.f	/^   90 MFLAG = -1$/;"	l	subroutine:INTERV	file:
90	input.f	/^90    BLANK=.TRUE.$/;"	l	file:
90	ljcapsidmodule.f90	/^90              W(I) = W(I) - T*V(I+J)$/;"	l	subroutine:SVERT	file:
90	minperm.f	/^   90 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
90	mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBMV	file:
90	mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBSV	file:
90	mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPMV	file:
90	mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPSV	file:
90	mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRMV	file:
90	mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRSV	file:
90	mylapack.f	/^   90             CONTINUE$/;"	l	subroutine:DTBSV	file:
90	mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGBMV	file:
90	mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGEMV	file:
90	mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSBMV	file:
90	mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSPMV	file:
90	mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSYMV	file:
90	mylapack.f	/^   90       CONTINUE$/;"	l	subroutine:DPBTRF	file:
90	mylapack.f	/^   90     CONTINUE$/;"	l	subroutine:SCHCK3	file:
90	mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK1	file:
90	mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK2	file:
90	mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK4	file:
90	mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK5	file:
90	ptgrp.f	/^90    ALP=SUM+S$/;"	l	subroutine:EIG	file:
90	tn.f	/^90    CONTINUE$/;"	l	subroutine:INITP3	file:
90	tn.f	/^90    CONTINUE$/;"	l	subroutine:MODLNP	file:
90	tn.f	/^90    IFAIL = 0$/;"	l	subroutine:LMQN	file:
90	tn.f	/^90    TWOTOL = TOL + TOL$/;"	l	subroutine:GETPTC	file:
90	welch.f	/^   90       continue$/;"	l	subroutine:dgedi	file:
90	welch.f	/^   90    continue$/;"	l	subroutine:dgeco	file:
900	dgetrf.f	/^  900 CONTINUE$/;"	l	function:ILAENV	file:
900	input.f	/^900   IF (CAT) THEN$/;"	l	file:
9001	mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,'  M =',I4,', N = ',I4,\/,' INCX = ',$/;"	l	subroutine:SCHCK4	file:
9001	mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK1	file:
9001	mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK2	file:
9001	mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK5	file:
9001	mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTIONS = ',$/;"	l	subroutine:SCHCK3	file:
9011	mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9011	mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9011	mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9011	mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9011	mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9021	mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9021	mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9021	mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9021	mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9021	mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9031	mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK1	file:
9031	mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK2	file:
9031	mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK3	file:
9031	mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK4	file:
9031	mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK5	file:
9041	mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK1	file:
9041	mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK2	file:
9041	mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK3	file:
9041	mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK4	file:
9041	mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK5	file:
9051	mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK1	file:
9051	mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK2	file:
9051	mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK3	file:
9051	mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK4	file:
9051	mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK5	file:
95	JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3C	file:
95	dbpg.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPDB	file:
95	dlsode.f	/^ 95     RWORK(I) = 0.0D0$/;"	l	subroutine:DLSODE	file:
95	gbcalamitic.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TKSTDCELPSD	file:
95	ljcapsidmodule.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPELPSD	file:
95	lwotp.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPLWOTP	file:
95	multisitepy.f90	/^95 DO WHILE(OVERLAPT)$/;"	l	subroutine:TAKESTEPMULTISITEPY	file:
950	input.f	/^950   CHAR(L)=SPACE$/;"	l	file:
98	Q4.f	/^98       CONTINUE$/;"	l	subroutine:SHINIT	file:
99	Q4.f	/^99    CONTINUE$/;"	l	subroutine:SHINIT	file:
99	fedor.f	/^   99 PPVALU = PPSUM$/;"	l	function:PPVALU	file:
99	input.f	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
999	ljcapsidmodule.f90	/^999    CONTINUE      $/;"	l	subroutine:OLDPARAMONOV	file:
999	ljcapsidmodule.f90	/^999 CONTINUE$/;"	l	subroutine:GAYBERNE	file:
9999	dgetrf.f	/^ 9999 FORMAT( ' ** On entry to ', A6, ' parameter number ', I2, ' had ',$/;"	l	subroutine:XERBLA	file:
9999	dlamch.f	/^ 9999 FORMAT( \/ \/ ' WARNING. The value EMIN may be incorrect:-',$/;"	l	subroutine:DLAMC2	file:
9999	ptmc.F	/^9999       continue$/;"	l	subroutine:PARALLELTEMPERING	file:
99999	fedor.f	/^99999                                   RETURN$/;"	l	subroutine:INTERV	file:
A	modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts
A	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts_trans_97
A9DISTCHECK	mc.F	/^      SUBROUTINE A9DISTCHECK(/;"	s
A9DUMPPDB	amber9dummy.f90	/^SUBROUTINE A9DUMPPDB(/;"	s
A9INTE	mc.F	/^      SUBROUTINE A9INTE(/;"	s
A9INTEDUMPLOWEST	mc.F	/^      SUBROUTINE A9INTEDUMPLOWEST(/;"	s
A9INTESAVEIT	saveit.f	/^      SUBROUTINE A9INTESAVEIT(/;"	s
A9INTET	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET,/;"	v	module:COMMONS
A9INTET	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET,/;"	v	module:COMMONS
A9RESTOATOM	amber9dummy.f90	/^SUBROUTINE A9RESTOATOM(/;"	s
AAtoEuler	ljcapsidmodule.f90	/^      SUBROUTINE AAtoEuler(/;"	s
AAtoSites	multisitepy.f90	/^      SUBROUTINE AAtoSites(/;"	s
ABTHRESH	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH,/;"	v	module:COMMONS
ABTHRESH	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH,/;"	v	module:COMMONS
ACCRAT	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:COMMONS
ACCRAT	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:COMMONS
ACCREJ	mc.F	/^      SUBROUTINE ACCREJ(/;"	s
ACESOLV	modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT, NEWCONFT, SELECTT, ACESOLV$/;"	v	module:MODCHARMM
ACEUPSTEP	modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT, RMSSAVE, NEWCONFST, ACEUPSTEP$/;"	v	module:MODCHARMM
ACK	Ackland_wrapper.f	/^      SUBROUTINE ACK(/;"	s
ACKLANDID	commons.f90	/^     &        CPS, CPF, ACKLANDID,/;"	v	module:COMMONS
ACKLANDID	commons.o.f90	/^     &        CPS, CPF, ACKLANDID,/;"	v	module:COMMONS
ACKLANDT	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT,/;"	v	module:COMMONS
ACKLANDT	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT,/;"	v	module:COMMONS
ACTHRESH	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH,/;"	v	module:COMMONS
ACTHRESH	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH,/;"	v	module:COMMONS
AEZR1	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:LJCAPSIDMODULE
AEZR1	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:PYMODULE
AEZR2	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:LJCAPSIDMODULE
AEZR2	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:PYMODULE
ALGLUE	Alglue.f	/^      SUBROUTINE ALGLUE /;"	s
ALGLUET	commons.f90	/^     &        EAMALT, ALGLUET,/;"	v	module:COMMONS
ALGLUET	commons.o.f90	/^     &        EAMALT, ALGLUET,/;"	v	module:COMMONS
ALINIT	Farkas.f	/^      SUBROUTINE ALINIT$/;"	s
ALPHA	modconsts.f90	/^     &                 EPSs,EPSp,ALPHA$/;"	v	module:consts
ALPHA	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,KAPPA,SIGMA,&$/;"	v	module:consts_trans_97
ALPHACC	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC,/;"	v	module:COMMONS
ALPHACC	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC,/;"	v	module:COMMONS
ALPHACH	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH,/;"	v	module:COMMONS
ALPHACH	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH,/;"	v	module:COMMONS
ALPHAHH	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH,/;"	v	module:COMMONS
ALPHAHH	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH,/;"	v	module:COMMONS
ALPHAM	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM,/;"	v	module:COMMONS
ALPHAM	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM,/;"	v	module:COMMONS
ALPHAP	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP,/;"	v	module:COMMONS
ALPHAP	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP,/;"	v	module:COMMONS
AMBER	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER,/;"	v	module:COMMONS
AMBER	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER,/;"	v	module:COMMONS
AMBERENERGIES	amber9dummy.f90	/^SUBROUTINE AMBERENERGIES(/;"	s
AMBERENERGIEST	modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS, GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST$/;"	v	module:MODAMBER9
AMBERFINALIO	amber9dummy.f90	/^SUBROUTINE AMBERFINALIO(/;"	s
AMBERICT	modamber9.f90	/^logical:: AMBERICT,/;"	v	module:MODAMBER9
AMBERINTERFACE	amber9dummy.f90	/^SUBROUTINE AMBERINTERFACE(/;"	s
AMBERSECDER	amber9dummy.f90	/^SUBROUTINE AMBERSECDER(/;"	s
AMBERSEED	modamb.f90	/^      LOGICAL AMBERSEED,/;"	v	module:MODAMBER
AMBERT	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST, &$/;"	v	module:COMMONS
AMBERT	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST, &$/;"	v	module:COMMONS
AMBIT	modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT,/;"	v	module:MODAMBER9
AMBOLDPERTT	modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT, AMBOLDPERTT$/;"	v	module:MODAMBER9
AMBPERTT	modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,/;"	v	module:MODAMBER9
AMBSTEPT	modamber9.f90	/^logical:: AMBERICT, AMBSTEPT,/;"	v	module:MODAMBER9
AMBWORD	keyword.f	60;"	c	subroutine:KEYWORD
AMCHNMAX	modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX,/;"	v	module:MODAMBER9
AMCHNMIN	modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN,/;"	v	module:MODAMBER9
AMCHPMAX	modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX,/;"	v	module:MODAMBER9
AMCHPMIN	modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX, AMCHPMIN$/;"	v	module:MODAMBER9
AMCUT	modamb.f90	/^      LOGICAL AMCUT$/;"	v	module:MODAMBER
AMHGLOBALS	amhdummy.f	/^      MODULE AMHGLOBALS$/;"	m
AMHT	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT,/;"	v	module:COMMONS
AMHT	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT,/;"	v	module:COMMONS
AMH_INTERFACES	amhdummy.f	/^      MODULE AMH_INTERFACES$/;"	m
AMINOA	commons.f90	/^      CHARACTER AMINOA(/;"	v	module:COMMONS
AMINOA	commons.o.f90	/^      CHARACTER AMINOA(/;"	v	module:COMMONS
AMM	commons.f90	/^     &                 COULTEMP, APP, AMM,/;"	v	module:COMMONS
AMM	commons.o.f90	/^     &                 COULTEMP, APP, AMM,/;"	v	module:COMMONS
ANGMAG	ptgrp.f	/^        DOUBLE PRECISION FUNCTION ANGMAG(/;"	f
ANGST	commons.f90	/^     &        FRAUSIT, ANGST,/;"	v	module:COMMONS
ANGST	commons.o.f90	/^     &        FRAUSIT, ANGST,/;"	v	module:COMMONS
ANV	commons.f90	/^      INTEGER,ALLOCATABLE :: ANV(/;"	v	module:COMMONS
ANV	commons.o.f90	/^      INTEGER,ALLOCATABLE :: ANV(/;"	v	module:COMMONS
APM	commons.f90	/^     &                 COULTEMP, APP, AMM, APM,/;"	v	module:COMMONS
APM	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM,/;"	v	module:COMMONS
APP	commons.f90	/^     &                 COULTEMP, APP,/;"	v	module:COMMONS
APP	commons.o.f90	/^     &                 COULTEMP, APP,/;"	v	module:COMMONS
AREPCC	dftb.f	/^      SUBROUTINE AREPCC(/;"	s
ARGON	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON,/;"	v	module:COMMONS
ARGON	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON,/;"	v	module:COMMONS
ARMA	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,/;"	v	module:COMMONS
ARMA	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,/;"	v	module:COMMONS
ARMB	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB,/;"	v	module:COMMONS
ARMB	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB,/;"	v	module:COMMONS
ARMT	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT,/;"	v	module:COMMONS
ARMT	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT,/;"	v	module:COMMONS
ARNO	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO,/;"	v	module:COMMONS
ARNO	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO,/;"	v	module:COMMONS
ARRAYS	mylapack.f	1033;"	c	subroutine:SCHCK3
ARRAYS	mylapack.f	112;"	c	subroutine:SCHCK1
ARRAYS	mylapack.f	1508;"	c	subroutine:SCHCK4
ARRAYS	mylapack.f	1830;"	c	subroutine:SCHCK5
ARRAYS	mylapack.f	548;"	c	subroutine:SCHCK2
ASAOOS	commons.f90	/^       LOGICAL :: PATCHY, ASAOOS$/;"	v	module:COMMONS
ASAOOS	commons.o.f90	/^       LOGICAL :: PATCHY, ASAOOS$/;"	v	module:COMMONS
ASAOOSPOT	asaoos.f90	/^SUBROUTINE ASAOOSPOT /;"	s
ASAR1	fedor.f	/^           SUBROUTINE ASAR1(/;"	s
ASHE1	fedor.f	/^           SUBROUTINE ASHE1(/;"	s
ASTEP	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP,/;"	v	module:COMMONS
ASTEP	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP,/;"	v	module:COMMONS
ATGRAD	AT.f	/^      SUBROUTINE ATGRAD(/;"	s
ATOL	vgw.f90	/^     DOUBLE PRECISION :: E_ZERO,BL,ATOL$/;"	v	module:VGWSP
ATOM	molinfo.f90	/^    TYPE ATOM$/;"	t	module:MOLINFO
ATOM1	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMGROUPAXIS	modamber9.f90	/^      INTEGER, ALLOCATABLE :: ATOMGROUPAXIS(/;"	v	module:MODAMBER9
ATOMGROUPNAMES	modamber9.f90	/^      CHARACTER(LEN=10), ALLOCATABLE :: ATOMGROUPNAMES(/;"	v	module:MODAMBER9
ATOMGROUPPSELECT	modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(:),ATOMGROUPPSELECT(/;"	v	module:MODAMBER9
ATOMGROUPS	modamber9.f90	/^      LOGICAL, ALLOCATABLE :: ATOMGROUPS(/;"	v	module:MODAMBER9
ATOMGROUPSCALING	modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(/;"	v	module:MODAMBER9
ATOMICMASS	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: ATOMICMASS=/;"	v	module:VGW
ATOMICMASS	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: ATOMICMASS=/;"	v	module:VGWSP
ATOMPAIR	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
ATOMSINALIST	modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST,/;"	v	module:MODAMBER9
ATOMSINALISTLOGICAL	modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL,/;"	v	module:MODAMBER9
ATOMSINBLIST	modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST, ATOMSINBLIST,/;"	v	module:MODAMBER9
ATOMSINBLISTLOGICAL	modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL, ATOMSINBLISTLOGICAL,/;"	v	module:MODAMBER9
ATOMSINCLIST	modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST, ATOMSINBLIST, ATOMSINCLIST /;"	v	module:MODAMBER9
ATOMSINCLISTLOGICAL	modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL, ATOMSINBLISTLOGICAL, ATOMSINCLISTLOGICAL$/;"	v	module:MODAMBER9
ATOM_ID	molinfo.f90	/^        INTEGER            :: ATOM_ID /;"	k	type:ATOM
ATOM_NAME	molinfo.f90	/^        CHARACTER (LEN=10) :: ATOM_NAME /;"	k	type:ATOM
AVEP	amhdummy.f	/^      DOUBLE PRECISION AVEP(/;"	v	module:AMHGLOBALS
AVOID	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID,/;"	v	module:COMMONS
AVOID	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID,/;"	v	module:COMMONS
AVOIDDIST	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST,/;"	v	module:COMMONS
AVOIDDIST	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST,/;"	v	module:COMMONS
AXT	AT.f	/^      SUBROUTINE AXT(/;"	s
AXTELL	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL,/;"	v	module:COMMONS
AXTELL	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL,/;"	v	module:COMMONS
A_BLN	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(/;"	v	module:COMMONS
A_BLN	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(/;"	v	module:COMMONS
Arad	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,Arad /;"	v	module:MODAMBER9
B	modconsts.f90	/^      DOUBL/;"	v	module:consts
B	modconsts_trans_97.f90	/^      DOUBL/;"	v	module:consts_trans_97
BASINSAMPLING	basinsampling.f90	/^      SUBROUTINE BASINSAMPLING$/;"	s
BC_MDI	modamber9.f90	/^integer BC_MDI /;"	v	module:MODAMBER9
BC_MDR	modamber9.f90	/^integer BC_MDR /;"	v	module:MODAMBER9
BEADLETTER	commons.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:COMMONS
BEADLETTER	commons.o.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:COMMONS
BETA	modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts
BETA	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts_trans_97
BFGS	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS,/;"	v	module:COMMONS
BFGS	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS,/;"	v	module:COMMONS
BIN	BLJcluster.f	32;"	c	subroutine:LJPSHIFTBINC
BIN	bspt.F	74;"	c	subroutine:PTBASINSAMPLING
BIN	finalio.f	44;"	c	subroutine:FINALIO
BIN	hsmove.f	27;"	c	subroutine:HSMOVE
BIN	io1.f	36;"	c	subroutine:IO1
BIN	keyword.f	48;"	c	subroutine:KEYWORD
BIN	ljpbin.f	51;"	c	subroutine:LJPBIN
BIN	ljpshift.f	49;"	c	subroutine:LJPSHIFT
BIN	modamb.f90	/^      LOGICAL BIN$/;"	v	module:MODAMBER
BIN	ptmc.F	51;"	c	subroutine:PARALLELTEMPERING
BINARY	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY,/;"	v	module:COMMONS
BINARY	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY,/;"	v	module:COMMONS
BINSTRUCTURES	commons.f90	/^     &        PTMC, BINSTRUCTURES,/;"	v	module:COMMONS
BINSTRUCTURES	commons.o.f90	/^     &        PTMC, BINSTRUCTURES,/;"	v	module:COMMONS
BIPARTITE	bipartite.f90	/^SUBROUTINE BIPARTITE(/;"	s
BL	vgw.f90	/^     DOUBLE/;"	v	module:VGW
BL	vgw.f90	/^     DOUBLE/;"	v	module:VGWSP
BLJCLUSTER	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD, & $/;"	v	module:COMMONS
BLJCLUSTER	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD, & $/;"	v	module:COMMONS
BLJSITE	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE,/;"	v	module:COMMONS
BLJSITE	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE,/;"	v	module:COMMONS
BLN	BLN.f	/^      SUBROUTINE BLN(/;"	s
BLNSSTRUCT	commons.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:COMMONS
BLNSSTRUCT	commons.o.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:COMMONS
BLNT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT,/;"	v	module:COMMONS
BLNT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT,/;"	v	module:COMMONS
BLOCK	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK,/;"	v	module:COMMONS
BLOCK	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK,/;"	v	module:COMMONS
BONDAGE	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA, REPULSE, BONDAGE,/;"	v	module:distance
BOXLX	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ, &$/;"	v	module:COMMONS
BOXLX	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ, &$/;"	v	module:COMMONS
BOXLY	commons.f90	/^     &                 BOXLX, BOXLY,/;"	v	module:COMMONS
BOXLY	commons.o.f90	/^     &                 BOXLX, BOXLY,/;"	v	module:COMMONS
BOXLZ	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ,/;"	v	module:COMMONS
BOXLZ	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ,/;"	v	module:COMMONS
BOXSIZE	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,NCWALL,BOXSIZE,/;"	v	module:MODCHARMM
BOXT	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT,/;"	v	module:MODCHARMM
BQMAX	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,/;"	v	module:COMMONS
BQMAX	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,/;"	v	module:COMMONS
BRENT	brent.f	/^      FUNCTION BRENT(/;"	f
BRENTMIN	pyg.f90	/^      SUBROUTINE BRENTMIN /;"	s
BRENTMINGB	takestepmsgb.f90	/^      SUBROUTINE BRENTMINGB /;"	s
BSMIN	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN,/;"	v	module:COMMONS
BSMIN	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN,/;"	v	module:COMMONS
BSNEW	keyword.f	53;"	c	subroutine:KEYWORD
BSNEW	odesd.f	29;"	c	subroutine:ODESD
BSPT	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT,/;"	v	module:COMMONS
BSPT	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT,/;"	v	module:COMMONS
BSPTDUMPFRQ	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ,/;"	v	module:COMMONS
BSPTDUMPFRQ	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ,/;"	v	module:COMMONS
BSPTQMAX	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3, &$/;"	v	module:COMMONS
BSPTQMAX	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3, &$/;"	v	module:COMMONS
BSPTQMIN	commons.f90	/^     &                 BSPTQMAX, BSPTQMIN,/;"	v	module:COMMONS
BSPTQMIN	commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN,/;"	v	module:COMMONS
BSPTRESTART	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART,/;"	v	module:COMMONS
BSPTRESTART	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART,/;"	v	module:COMMONS
BSWL	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL,/;"	v	module:COMMONS
BSWL	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL,/;"	v	module:COMMONS
BUFFER	input.f	105;"	c	subroutine:INPUT
BUFFER	input.f	344;"	c	block data:INBLK
BUFFER	input.f	380;"	c	subroutine:READF
BUFFER	input.f	589;"	c	subroutine:READK
BUFFER	input.f	651;"	c	subroutine:READA
BUFFER	input.f	732;"	c	subroutine:READCH
BUFFER	input.f	756;"	c	subroutine:GETF
BUFFER	input.f	810;"	c	subroutine:GETA
BUFFER	input.f	871;"	c	subroutine:REREAD
BUFFER	input.f	916;"	c	subroutine:REPORT
BUFINF	input.f	107;"	c	subroutine:INPUT
BUFINF	input.f	346;"	c	block data:INBLK
BUFINF	input.f	382;"	c	subroutine:READF
BUFINF	input.f	591;"	c	subroutine:READK
BUFINF	input.f	653;"	c	subroutine:READA
BUFINF	input.f	734;"	c	subroutine:READCH
BUFINF	input.f	758;"	c	subroutine:GETF
BUFINF	input.f	812;"	c	subroutine:GETA
BUFINF	input.f	873;"	c	subroutine:REREAD
BUFINF	input.f	918;"	c	subroutine:REPORT
BUFINF	io1.f	44;"	c	subroutine:IO1
BUFINF	keyword.f	43;"	c	subroutine:KEYWORD
BUILD_RHO_SITE	Ackland_metals.f90	/^      SUBROUTINE BUILD_RHO_SITE(/;"	s
BUILD_V_SITE	Ackland_metals.f90	/^       SUBROUTINE BUILD_V_SITE(/;"	s
B_BLN	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(/;"	v	module:COMMONS
B_BLN	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(/;"	v	module:COMMONS
B_FACTOR	molinfo.f90	/^        DOUBLE PRECISION   :: B_FACTOR /;"	k	type:ATOM
CALCULATEDDISTANCE	basinsampling.f90	/^      FUNCTION CALCULATEDDISTANCE(/;"	f	subroutine:BASINSAMPLING
CALC_GRADIENTBLN	BLN.f	/^      SUBROUTINE CALC_GRADIENTBLN(/;"	s
CALC_INT_COORDSBLN	BLN.f	/^      SUBROUTINE CALC_INT_COORDSBLN(/;"	s
CAP	modamb.f90	/^      LOGICAL AMBERSEED, CAP$/;"	v	module:MODAMBER
CAPS	capsid.f	38;"	c	subroutine:FCAPSID
CAPS	finalio.f	50;"	c	subroutine:FINALIO
CAPS	io1.f	41;"	c	subroutine:IO1
CAPS	keyword.f	55;"	c	subroutine:KEYWORD
CAPS	newcapsid.f90	16;"	c	subroutine:NEWCAPSID
CAPSID	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID,/;"	v	module:COMMONS
CAPSID	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID,/;"	v	module:COMMONS
CAPSIDIO	finalio.f	/^      SUBROUTINE CAPSIDIO(/;"	s
CART	modamb.f90	/^      LOGICAL CART$/;"	v	module:MODAMBER
CAT	input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CCKJ	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,/;"	v	module:COMMONS
CCKJ	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,/;"	v	module:COMMONS
CEIG	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG,/;"	v	module:COMMONS
CEIG	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG,/;"	v	module:COMMONS
CENT	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT,/;"	v	module:COMMONS
CENT	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT,/;"	v	module:COMMONS
CENTRE2	centre.f	/^      SUBROUTINE CENTRE2(/;"	s
CENTRECOM	centrecom.f	/^      SUBROUTINE CENTRECOM(/;"	s
CENTX	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX,/;"	v	module:COMMONS
CENTX	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX,/;"	v	module:COMMONS
CENTXY	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY,/;"	v	module:COMMONS
CENTXY	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY,/;"	v	module:COMMONS
CENTY	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY,/;"	v	module:COMMONS
CENTY	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY,/;"	v	module:COMMONS
CENTZ	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ,/;"	v	module:COMMONS
CENTZ	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ,/;"	v	module:COMMONS
CGCONST	vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(3), CGG(3), CGG2(3), CGCONST$/;"	v	module:VGWSP
CGCONST	vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(3), CGG2(3), CGCONST,/;"	v	module:VGW
CGG	vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(3), CGG(/;"	v	module:VGWSP
CGG	vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(/;"	v	module:VGW
CGG2	vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(3), CGG(3), CGG2(/;"	v	module:VGWSP
CGG2	vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(3), CGG2(/;"	v	module:VGW
CGK	vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(/;"	v	module:VGWSP
CGK	vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(/;"	v	module:VGW
CGMIN	cgmin.f	/^      SUBROUTINE CGMIN(/;"	s
CHAIN_ID	molinfo.f90	/^        INTEGER            :: CHAIN_ID /;"	k	type:ATOM
CHANGE_TEMP	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP,/;"	v	module:COMMONS
CHANGE_TEMP	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP,/;"	v	module:COMMONS
CHAR	input.f	/^      CHARA/;"	v	block data:INBLK
CHARGE	molinfo.f90	/^        DOUBLE PRECISION   :: CHARGE /;"	k	type:ATOM
CHARMMENERGIES	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES,/;"	v	module:COMMONS
CHARMMENERGIES	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES,/;"	v	module:COMMONS
CHARMMTYPE	modcharmm.f90	/^      INTEGER :: CHARMMTYPE,/;"	v	module:MODCHARMM
CHECKCHIRALITY	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY,/;"	v	module:COMMONS
CHECKCHIRALITY	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY,/;"	v	module:COMMONS
CHECKCISTRANSALWAYS	modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS,/;"	v	module:MODAMBER9
CHECKCISTRANSALWAYSDNA	modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL, SETCHIRAL, CHECKCISTRANSALWAYSRNA, CHECKCISTRANSALWAYSDNA$/;"	v	module:MODAMBER9
CHECKCISTRANSALWAYSRNA	modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL, SETCHIRAL, CHECKCISTRANSALWAYSRNA,/;"	v	module:MODAMBER9
CHECKD	checkd.f90	/^      SUBROUTINE CHECKD(/;"	s
CHECKDT	commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT,/;"	v	module:COMMONS
CHECKDT	commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT,/;"	v	module:COMMONS
CHECKFLATNESS	basinsampling.f90	/^      FUNCTION CHECKFLATNESS(/;"	f	subroutine:BASINSAMPLING
CHECKMARKOVT	commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT,/;"	v	module:COMMONS
CHECKMARKOVT	commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT,/;"	v	module:COMMONS
CHECK_CISTRANS_PROTEIN	amber9dummy.f90	/^SUBROUTINE CHECK_CISTRANS_PROTEIN(/;"	s
CHECK_SIDECHAIN	amber9dummy.f90	/^subroutine CHECK_SIDECHAIN(/;"	s
CHFREQ	modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ,/;"	v	module:MODCHARMM
CHGETICVAL	amber9dummy.f90	/^subroutine CHGETICVAL(/;"	s
CHI	modconsts.f90	/^      DOUBLE PRECISION CHI,/;"	v	module:consts
CHI	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,/;"	v	module:consts_trans_97
CHIRAL	modamber9.f90	/^integer, dimension(:), allocatable :: CHIRAL$/;"	v	module:MODAMBER9
CHIRAL	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,CHIRAL /;"	v	module:MODCHARMM
CHKUCP	tn.f	/^      SUBROUTINE CHKUCP(/;"	s
CHMDFREQ	modcharmm.f90	/^      INTEGER :: CHMDFREQ,/;"	v	module:MODCHARMM
CHMDPAR	modcharmm.f90	/^      CHARACTER(LEN=500) :: CHMDPAR$/;"	v	module:MODCHARMM
CHMDT	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT, RMST, SPHERET, CHMDT$/;"	v	module:MODCHARMM
CHNMAX	modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN, CHPMAX, CHNMIN, CHNMAX$/;"	v	module:MODCHARMM
CHNMIN	modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN, CHPMAX, CHNMIN,/;"	v	module:MODCHARMM
CHNRES	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES,/;"	v	module:COMMONS
CHNRES	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES,/;"	v	module:COMMONS
CHPMAX	modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN, CHPMAX,/;"	v	module:MODCHARMM
CHPMIN	modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN,/;"	v	module:MODCHARMM
CHRIGIDROTT	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT,/;"	v	module:MODCHARMM
CHRIGIDTRANST	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST,/;"	v	module:MODCHARMM
CHRMMT	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT,/;"	v	module:COMMONS
CHRMMT	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT,/;"	v	module:COMMONS
CHSEEDI	modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI,/;"	v	module:MODCHARMM
CHSEEDJ	modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ,/;"	v	module:MODCHARMM
CHSEEDK	modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ, CHSEEDK /;"	v	module:MODCHARMM
CLEANUP_VGW	vgw.f90	/^SUBROUTINE CLEANUP_VGW$/;"	s
CLEANUP_VGWSP	vgw.f90	/^SUBROUTINE CLEANUP_VGWSP$/;"	s
CLEAR	input.f	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CMPMAT	ptgrp.f	/^      SUBROUTINE CMPMAT(/;"	s
CNVTST	tn.f	/^      SUBROUTINE CNVTST(/;"	s
CO	potential.f	33;"	c	subroutine:POTENTIAL
COLDFUSION	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION,/;"	v	module:COMMONS
COLDFUSION	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION,/;"	v	module:COMMONS
COLDFUSIONLIMIT	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT,/;"	v	module:COMMONS
COLDFUSIONLIMIT	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT,/;"	v	module:COMMONS
COMMONS	commons.f90	/^      MODULE COMMONS$/;"	m
COMMONS	commons.o.f90	/^      MODULE COMMONS$/;"	m
COMP	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP,/;"	v	module:COMMONS
COMP	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP,/;"	v	module:COMMONS
COMPARE2	ptgrp.f	/^      SUBROUTINE COMPARE2(/;"	s
COMPRESS	compress.f	/^      SUBROUTINE COMPRESS(/;"	s
COMPRESST	commons.f90	/^     &        BLJCLUSTER, COMPRESST,/;"	v	module:COMMONS
COMPRESST	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST,/;"	v	module:COMMONS
CONJG	commons.f90	/^     &        ZETT2, RESTART, CONJG,/;"	v	module:COMMONS
CONJG	commons.o.f90	/^     &        ZETT2, RESTART, CONJG,/;"	v	module:COMMONS
CONPOT	vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM, CONPOT$/;"	v	module:VGW
CONPOT	vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM, CONPOT,/;"	v	module:VGWSP
CONVERT	convert.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT2	convert.f	/^      SUBROUTINE CONVERT2(/;"	s
COOP	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP,/;"	v	module:COMMONS
COOP	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP,/;"	v	module:COMMONS
COOPCUT	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT,/;"	v	module:COMMONS
COOPCUT	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT,/;"	v	module:COMMONS
COORCOMP	modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,COORCOMP,/;"	v	module:MODCHARMM
COORDS	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:COMMONS
COORDS	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:COMMONS
COORDSO	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,COORDSO$/;"	v	module:COMMONS
COORDSO	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,COORDSO$/;"	v	module:COMMONS
COREFRAC	commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC,/;"	v	module:COMMONS
COREFRAC	commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC,/;"	v	module:COMMONS
COULN	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN,/;"	v	module:COMMONS
COULN	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN,/;"	v	module:COMMONS
COULQ	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ,/;"	v	module:COMMONS
COULQ	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ,/;"	v	module:COMMONS
COULSWAP	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP,/;"	v	module:COMMONS
COULSWAP	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP,/;"	v	module:COMMONS
COULTEMP	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP, &$/;"	v	module:COMMONS
COULTEMP	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP, &$/;"	v	module:COMMONS
COUNTATOMS	func.f90	/^SUBROUTINE COUNTATOMS$/;"	s	module:FUNC
CPF	commons.f90	/^     &        CPS, CPF,/;"	v	module:COMMONS
CPF	commons.o.f90	/^     &        CPS, CPF,/;"	v	module:COMMONS
CPFACTORFG	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG,/;"	v	module:COMMONS
CPFACTORFG	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG,/;"	v	module:COMMONS
CPFACTORSG	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG,/;"	v	module:COMMONS
CPFACTORSG	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG,/;"	v	module:COMMONS
CPMD	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD,/;"	v	module:COMMONS
CPMD	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD,/;"	v	module:COMMONS
CPS	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS, &$/;"	v	module:COMMONS
CPS	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS, &$/;"	v	module:COMMONS
CQMAX	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS, &$/;"	v	module:COMMONS
CQMAX	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS, &$/;"	v	module:COMMONS
CR	vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(3), CV(3), CR,/;"	v
CRASH	tn.f	/^      SUBROUTINE CRASH(/;"	s
CSMAV	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
CSMAV	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
CSMAVVAL	potential.f	52;"	c	subroutine:POTENTIAL
CSMC2	CSMinit.f90	/^SUBROUTINE CSMC2(/;"	s
CSMC2H	CSMinit.f90	/^SUBROUTINE CSMC2H(/;"	s
CSMC2V	CSMinit.f90	/^SUBROUTINE CSMC2V(/;"	s
CSMC3	CSMinit.f90	/^SUBROUTINE CSMC3(/;"	s
CSMC3H	CSMinit.f90	/^SUBROUTINE CSMC3H(/;"	s
CSMC3V	CSMinit.f90	/^SUBROUTINE CSMC3V(/;"	s
CSMC4	CSMinit.f90	/^SUBROUTINE CSMC4(/;"	s
CSMC4H	CSMinit.f90	/^SUBROUTINE CSMC4H(/;"	s
CSMC4V	CSMinit.f90	/^SUBROUTINE CSMC4V(/;"	s
CSMC5	CSMinit.f90	/^SUBROUTINE CSMC5(/;"	s
CSMC5H	CSMinit.f90	/^SUBROUTINE CSMC5H(/;"	s
CSMC5V	CSMinit.f90	/^SUBROUTINE CSMC5V(/;"	s
CSMC6	CSMinit.f90	/^SUBROUTINE CSMC6(/;"	s
CSMC6H	CSMinit.f90	/^SUBROUTINE CSMC6H(/;"	s
CSMC6V	CSMinit.f90	/^SUBROUTINE CSMC6V(/;"	s
CSMC7	CSMinit.f90	/^SUBROUTINE CSMC7(/;"	s
CSMCI	CSMinit.f90	/^SUBROUTINE CSMCI(/;"	s
CSMCS	CSMinit.f90	/^SUBROUTINE CSMCS(/;"	s
CSMD2	CSMinit.f90	/^SUBROUTINE CSMD2(/;"	s
CSMD2D	CSMinit.f90	/^SUBROUTINE CSMD2D(/;"	s
CSMD2H	CSMinit.f90	/^SUBROUTINE CSMD2H(/;"	s
CSMD3	CSMinit.f90	/^SUBROUTINE CSMD3(/;"	s
CSMD3D	CSMinit.f90	/^SUBROUTINE CSMD3D(/;"	s
CSMD3H	CSMinit.f90	/^SUBROUTINE CSMD3H(/;"	s
CSMD4	CSMinit.f90	/^SUBROUTINE CSMD4(/;"	s
CSMD4D	CSMinit.f90	/^SUBROUTINE CSMD4D(/;"	s
CSMD4H	CSMinit.f90	/^SUBROUTINE CSMD4H(/;"	s
CSMD5	CSMinit.f90	/^SUBROUTINE CSMD5(/;"	s
CSMD5D	CSMinit.f90	/^SUBROUTINE CSMD5D(/;"	s
CSMD5H	CSMinit.f90	/^SUBROUTINE CSMD5H(/;"	s
CSMD6	CSMinit.f90	/^SUBROUTINE CSMD6(/;"	s
CSMD6D	CSMinit.f90	/^SUBROUTINE CSMD6D(/;"	s
CSMD6H	CSMinit.f90	/^SUBROUTINE CSMD6H(/;"	s
CSMEPS	commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM, CSMEPS$/;"	v	module:COMMONS
CSMEPS	commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM, CSMEPS$/;"	v	module:COMMONS
CSMGETOPS	CSMinit.f90	/^SUBROUTINE CSMGETOPS$/;"	s
CSMGP	commons.f90	/^      CHARACTER(LEN=3) :: CSMGP,/;"	v	module:COMMONS
CSMGP	commons.o.f90	/^      CHARACTER(LEN=3) :: CSMGP,/;"	v	module:COMMONS
CSMGPINDEX	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX,/;"	v	module:COMMONS
CSMGPINDEX	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX,/;"	v	module:COMMONS
CSMGUIDEGP	commons.f90	/^      CHARACTER(LEN=3) :: CSMGP, CSMGUIDEGP$/;"	v	module:COMMONS
CSMGUIDEGP	commons.o.f90	/^      CHARACTER(LEN=3) :: CSMGP, CSMGUIDEGP$/;"	v	module:COMMONS
CSMGUIDEGPINDEX	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX,/;"	v	module:COMMONS
CSMGUIDEGPINDEX	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX,/;"	v	module:COMMONS
CSMGUIDENORM	commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM,/;"	v	module:COMMONS
CSMGUIDENORM	commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM,/;"	v	module:COMMONS
CSMGUIDET	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION, &$/;"	v	module:COMMONS
CSMGUIDET	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION, &$/;"	v	module:COMMONS
CSMI	CSMinit.f90	/^SUBROUTINE CSMI(/;"	s
CSMIH	CSMinit.f90	/^SUBROUTINE CSMIH(/;"	s
CSMIMAGES	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CSMIMAGES(/;"	v	module:COMMONS
CSMIMAGES	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CSMIMAGES(/;"	v	module:COMMONS
CSMINIT	CSMinit.f90	/^SUBROUTINE CSMINIT$/;"	s
CSMMAXIT	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT,/;"	v	module:COMMONS
CSMMAXIT	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT,/;"	v	module:COMMONS
CSMMIN	CSMinit.f90	/^SUBROUTINE CSMMIN(/;"	s
CSMNORM	commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM,/;"	v	module:COMMONS
CSMNORM	commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM,/;"	v	module:COMMONS
CSMO	CSMinit.f90	/^SUBROUTINE CSMO(/;"	s
CSMOH	CSMinit.f90	/^SUBROUTINE CSMOH(/;"	s
CSMPMAT	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(/;"	v	module:COMMONS
CSMPMAT	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(/;"	v	module:COMMONS
CSMPOTGRAD	CSMinit.f90	/^SUBROUTINE CSMPOTGRAD(/;"	s
CSMQUENCHES	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES,/;"	v	module:COMMONS
CSMQUENCHES	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES,/;"	v	module:COMMONS
CSMROT	CSMinit.f90	/^SUBROUTINE CSMROT(/;"	s
CSMS4	CSMinit.f90	/^SUBROUTINE CSMS4(/;"	s
CSMS6	CSMinit.f90	/^SUBROUTINE CSMS6(/;"	s
CSMS8	CSMinit.f90	/^SUBROUTINE CSMS8(/;"	s
CSMSTEPS	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS,/;"	v	module:COMMONS
CSMSTEPS	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS,/;"	v	module:COMMONS
CSMT	CSMinit.f90	/^SUBROUTINE CSMT(/;"	s
CSMT	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT,/;"	v	module:COMMONS
CSMT	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT,/;"	v	module:COMMONS
CSMTD	CSMinit.f90	/^SUBROUTINE CSMTD(/;"	s
CSMTH	CSMinit.f90	/^SUBROUTINE CSMTH(/;"	s
CUBSPL	fedor.f	/^             SUBROUTINE CUBSPL(/;"	s
CURRENTIMP	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,/;"	v	module:COMMONS
CURRENTIMP	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,/;"	v	module:COMMONS
CUTOFF	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF,/;"	v	module:COMMONS
CUTOFF	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF,/;"	v	module:COMMONS
CUTT	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT,/;"	v	module:COMMONS
CUTT	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT,/;"	v	module:COMMONS
CV	vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(3), CV(/;"	v
C_BLN	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(/;"	v	module:COMMONS
C_BLN	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(/;"	v	module:COMMONS
CalculatedDistance	tetherfunc.f90	/^      function CalculatedDistance(/;"	f	module:tetherfunc
CheckFlatness	tetherfunc.f90	/^      function CheckFlatness(/;"	f	module:tetherfunc
D	modconsts.f90	/^      DO/;"	v	module:consts
D	modconsts_trans_97.f90	/^      DO/;"	v	module:consts_trans_97
D1	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D1(/;"	f
D2	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D2(/;"	f
D3	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D3(/;"	f
D4	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D4(/;"	f
D5	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D5(/;"	f
D5HT	commons.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT, D5HT$/;"	v	module:COMMONS
D5HT	commons.o.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT, D5HT$/;"	v	module:COMMONS
D6	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D6(/;"	f
D7	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D7(/;"	f
D8	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D8(/;"	f
D9	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D9(/;"	f
DA	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DA(/;"	f
DAESTAT	modcharmm.f90	/^      LOGICAL :: DAESTAT,/;"	v	module:MODCHARMM
DAMCCA	dftb.f	/^      SUBROUTINE DAMCCA(/;"	s
DAMCCB	dftb.f	/^      SUBROUTINE DAMCCB(/;"	s
DATOM1	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1,/;"	v	module:MODAMBER
DATOM2	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1, DATOM2 /;"	v	module:MODAMBER
DB	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DB(/;"	f
DBEPSAB	commons.f90	/^     &                 DBEPSBB, DBEPSAB,/;"	v	module:COMMONS
DBEPSAB	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB,/;"	v	module:COMMONS
DBEPSBB	commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC, &    $/;"	v	module:COMMONS
DBEPSBB	commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC, &    $/;"	v	module:COMMONS
DBLPYT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT,/;"	v	module:COMMONS
DBLPYT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT,/;"	v	module:COMMONS
DBPMU	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU,/;"	v	module:COMMONS
DBPMU	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU,/;"	v	module:COMMONS
DBPT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT,/;"	v	module:COMMONS
DBPT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT,/;"	v	module:COMMONS
DBPTDT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT,/;"	v	module:COMMONS
DBPTDT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT,/;"	v	module:COMMONS
DBRENT	dbrent.f	/^      FUNCTION DBRENT(/;"	f
DBRENTT	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT,/;"	v	module:COMMONS
DBRENTT	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT,/;"	v	module:COMMONS
DBSIGAB	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB,/;"	v	module:COMMONS
DBSIGAB	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB,/;"	v	module:COMMONS
DBSIGBB	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB,/;"	v	module:COMMONS
DBSIGBB	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB,/;"	v	module:COMMONS
DC	rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DC(/;"	f
DC6CC	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC,/;"	v	module:COMMONS
DC6CC	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC,/;"	v	module:COMMONS
DC6CH	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH,/;"	v	module:COMMONS
DC6CH	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH,/;"	v	module:COMMONS
DC6HH	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH,/;"	v	module:COMMONS
DC6HH	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH,/;"	v	module:COMMONS
DCFODE	dlsode.f	/^      SUBROUTINE DCFODE /;"	s
DCOOMMGK	myblas.f	/^      subroutine DCOOMMGK(/;"	s
DCOOMMKK	myblas.f	/^      subroutine DCOOMMKK(/;"	s
DCOOMMSK	myblas.f	/^      subroutine DCOOMMSK(/;"	s
DEBUG	commons.f90	/^      LOGICAL DEBUG,/;"	v	module:COMMONS
DEBUG	commons.o.f90	/^      LOGICAL DEBUG,/;"	v	module:COMMONS
DECAY	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY,/;"	v	module:COMMONS
DECAY	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY,/;"	v	module:COMMONS
DECAYPARAM	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM,/;"	v	module:COMMONS
DECAYPARAM	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM,/;"	v	module:COMMONS
DEFANTHRACENE	paha.f90	/^      SUBROUTINE DEFANTHRACENE(/;"	s
DEFBENZENE	paha.f90	/^      SUBROUTINE DEFBENZENE(/;"	s
DEFBENZOPERYLENE	paha.f90	/^      SUBROUTINE DEFBENZOPERYLENE(/;"	s
DEFBISANTHENE	paha.f90	/^      SUBROUTINE DEFBISANTHENE(/;"	s
DEFBNZN	newpah.f90	/^      SUBROUTINE DEFBNZN(/;"	s
DEFBNZNW99	pahw99.f90	/^      SUBROUTINE DEFBNZNW99(/;"	s
DEFCAPSID	newcapsid.f90	/^      SUBROUTINE DEFCAPSID(/;"	s
DEFCIRCUMCORONENE	paha.f90	/^      SUBROUTINE DEFCIRCUMCORONENE(/;"	s
DEFCORONENE	paha.f90	/^      SUBROUTINE DEFCORONENE(/;"	s
DEFCORONN	newpah.f90	/^      SUBROUTINE DEFCORONN(/;"	s
DEFDMBL	dmblmorse.f90	/^      SUBROUTINE DEFDMBL(/;"	s
DEFDUM	dbpg.f90	/^      SUBROUTINE DEFDUM(/;"	s
DEFHEXABENZOCORONENE	paha.f90	/^      SUBROUTINE DEFHEXABENZOCORONENE(/;"	s
DEFINEPYMULTISITES	multisitepy.f90	/^      SUBROUTINE DEFINEPYMULTISITES$/;"	s
DEFINE_PATCHES	patchy.f90	/^SUBROUTINE DEFINE_PATCHES(/;"	s
DEFLINROD	linrod.f90	/^      SUBROUTINE DEFLINROD(/;"	s
DEFLWOTP	lwotp.f90	/^      SUBROUTINE DEFLWOTP(/;"	s
DEFMOL	msgayberne.f90	/^      SUBROUTINE DEFMOL(/;"	s
DEFMSPY	multisitepy.f90	/^      SUBROUTINE DEFMSPY(/;"	s
DEFMSTBIN	mstbin.f90	/^      SUBROUTINE DEFMSTBIN(/;"	s
DEFMULT2STOCK	multstock.f90	/^      SUBROUTINE DEFMULT2STOCK(/;"	s
DEFMULT3STOCK	multstock.f90	/^      SUBROUTINE DEFMULT3STOCK(/;"	s
DEFMULT4STOCK	multstock.f90	/^      SUBROUTINE DEFMULT4STOCK(/;"	s
DEFMULT5STOCK	multstock.f90	/^      SUBROUTINE DEFMULT5STOCK(/;"	s
DEFNAPHTHALENE	paha.f90	/^      SUBROUTINE DEFNAPHTHALENE(/;"	s
DEFOCTABENZOCORONENE	paha.f90	/^      SUBROUTINE DEFOCTABENZOCORONENE(/;"	s
DEFOVALENE	paha.f90	/^      SUBROUTINE DEFOVALENE(/;"	s
DEFPAHA	paha.f90	/^      SUBROUTINE DEFPAHA(/;"	s
DEFPERYLENE	paha.f90	/^      SUBROUTINE DEFPERYLENE(/;"	s
DEFPHENANTHRENE	paha.f90	/^      SUBROUTINE DEFPHENANTHRENE(/;"	s
DEFPYRENE	paha.f90	/^      SUBROUTINE DEFPYRENE(/;"	s
DEFPYRN	newpah.f90	/^      SUBROUTINE DEFPYRN(/;"	s
DEFSTOCK	stockaa.f90	/^      SUBROUTINE DEFSTOCK(/;"	s
DEFTD	dbptd.f90	/^      SUBROUTINE DEFTD(/;"	s
DEFTDHD	tetrahedra.f90	/^      SUBROUTINE DEFTDHD(/;"	s
DEFTIP1	newtip.f90	/^      SUBROUTINE DEFTIP1(/;"	s
DEFTIP2	newtip.f90	/^      SUBROUTINE DEFTIP2(/;"	s
DEFTIP3	newtip.f90	/^      SUBROUTINE DEFTIP3(/;"	s
DEFTIP4	newtip.f90	/^      SUBROUTINE DEFTIP4(/;"	s
DEFTIP5	newtip.f90	/^      SUBROUTINE DEFTIP5(/;"	s
DEFWATERPDC	waterpdc.f90	/^      SUBROUTINE DEFWATERPDC /;"	s
DEFWATERPKZ	waterpkz.f90	/^      SUBROUTINE DEFWATERPKZ(/;"	s
DELRC	commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC,/;"	v	module:COMMONS
DELRC	commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC,/;"	v	module:COMMONS
DELTA	modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,/;"	v	module:consts
DELTA	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,/;"	v	module:consts_trans_97
DENDAT	Pbglue.f	116;"	c	block data:PB
DENDAT	Pbglue.f	187;"	c	subroutine:rh
DENDAT	Pbglue.f	217;"	c	subroutine:drh
DERHAM	frausi.f	/^      SUBROUTINE DERHAM(/;"	s
DERIVS1	MSorig.f	/^      SUBROUTINE DERIVS1(/;"	s
DERIVS1C	MSorigc.f	/^      SUBROUTINE DERIVS1C(/;"	s
DERIVS1T97	MStrans.97.f	/^      SUBROUTINE DERIVS1T97(/;"	s
DEROV	frausi.f	/^      SUBROUTINE DEROV(/;"	s
DEWSET	dlsode.f	/^      SUBROUTINE DEWSET /;"	s
DF1T	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T,/;"	v	module:COMMONS
DF1T	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T,/;"	v	module:COMMONS
DF1grad	DF1.f	/^      SUBROUTINE DF1grad(/;"	s
DFDERIV1	dftb.f	/^      SUBROUTINE DFDERIV1(/;"	s
DFPMIN	ddfpmin.f	/^      SUBROUTINE DFPMIN(/;"	s
DFTB	dftb.f	/^      SUBROUTINE DFTB(/;"	s
DFTBT	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT,/;"	v	module:COMMONS
DFTBT	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT,/;"	v	module:COMMONS
DGBFA	dlsode.f	/^      SUBROUTINE DGBFA /;"	s
DGBSL	dlsode.f	/^      SUBROUTINE DGBSL /;"	s
DGESL	dlsode.f	/^      SUBROUTINE DGESL /;"	s
DGETF2	dgetrf.f	/^      SUBROUTINE DGETF2(/;"	s
DGETRF	dgetrf.f	/^      SUBROUTINE DGETRF(/;"	s
DGETRI	dgetri.f	/^      SUBROUTINE DGETRI(/;"	s
DGUESS	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS,/;"	v	module:COMMONS
DGUESS	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS,/;"	v	module:COMMONS
DIAG	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: DIAG /;"	v	module:distance
DIFFRACTT	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT,/;"	v	module:COMMONS
DIFFRACTT	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT,/;"	v	module:COMMONS
DINTDY	dlsode.f	/^      SUBROUTINE DINTDY /;"	s
DIP	welch.f	/^      SUBROUTINE DIP(/;"	s
DIPGRAD	welch.f	/^      SUBROUTINE DIPGRAD(/;"	s
DIPOL	fedor.f	1459;"	c	subroutine:dipoles
DIPOL	fedor.f	1671;"	c	subroutine:fenergy
DIPOL	fedor.f	2624;"	c	function:UTN
DIPOLE	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE,/;"	v	module:COMMONS
DIPOLE	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE,/;"	v	module:COMMONS
DIRCOS	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:,:) :: DIRCOS /;"	v	module:distance
DISPLAYGRADIENT	patchy.f90	/^SUBROUTINE DISPLAYGRADIENT(/;"	s
DISTFAC	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC,/;"	v	module:COMMONS
DISTFAC	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC,/;"	v	module:COMMONS
DLAMC1	dlamch.f	/^      SUBROUTINE DLAMC1(/;"	s
DLAMC2	dlamch.f	/^      SUBROUTINE DLAMC2(/;"	s
DLAMC3	dlamch.f	/^      DOUBLE PRECISION FUNCTION DLAMC3(/;"	f
DLAMC4	dlamch.f	/^      SUBROUTINE DLAMC4(/;"	s
DLAMC5	dlamch.f	/^      SUBROUTINE DLAMC5(/;"	s
DLAMCH	dlamch.f	/^      DOUBLE PRECISION FUNCTION DLAMCH(/;"	f
DLASWP	dgetrf.f	/^      SUBROUTINE DLASWP(/;"	s
DLS001	dlsode.f	1235;"	c	subroutine:DLSODE
DLS001	dlsode.f	1982;"	c	subroutine:DINTDY
DLS001	dlsode.f	2107;"	c	subroutine:DPREPJ
DLS001	dlsode.f	2289;"	c	subroutine:DSOLSY
DLS001	dlsode.f	2369;"	c	subroutine:DSRCOM
DLS001	dlsode.f	2499;"	c	subroutine:DSTODE
DLSODE	dlsode.f	/^      SUBROUTINE DLSODE /;"	s
DL_POLY	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY,/;"	v	module:COMMONS
DL_POLY	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY,/;"	v	module:COMMONS
DMBLMORSE	dmblmorse.f90	/^      SUBROUTINE DMBLMORSE(/;"	s
DMBLMT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT,/;"	v	module:COMMONS
DMBLMT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT,/;"	v	module:COMMONS
DMBLTD	dbptd.f90	/^      SUBROUTINE DMBLTD /;"	s
DMIN	mc.F	1285;"	c	subroutine:TRANSITION
DOGROUPROT	modamber9.f90	/^      LOGICAL :: GROUPROTT, DOGROUPROT=/;"	v	module:MODAMBER9
DOMOVEREST	commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL, DOMOVEREST$/;"	v	module:COMMONS
DOMOVEREST	commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL, DOMOVEREST$/;"	v	module:COMMONS
DONTMOVE	commons.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(/;"	v	module:COMMONS
DONTMOVE	commons.o.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(/;"	v	module:COMMONS
DONTMOVEALL	commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL,/;"	v	module:COMMONS
DONTMOVEALL	commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL,/;"	v	module:COMMONS
DONTMOVECENTRE	commons.f90	/^      INTEGER :: NDONTMOVE, DONTMOVECENTRE$/;"	v	module:COMMONS
DONTMOVECENTRE	commons.o.f90	/^      INTEGER :: NDONTMOVE, DONTMOVECENTRE$/;"	v	module:COMMONS
DONTMOVEGROUPT	commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT,/;"	v	module:COMMONS
DONTMOVEGROUPT	commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT,/;"	v	module:COMMONS
DONTMOVEGROUPTYPE	commons.f90	/^      CHARACTER (LEN=2) :: DONTMOVEGROUPTYPE$/;"	v	module:COMMONS
DONTMOVEGROUPTYPE	commons.o.f90	/^      CHARACTER (LEN=2) :: DONTMOVEGROUPTYPE$/;"	v	module:COMMONS
DONTMOVERADIUS	commons.f90	/^      DOUBLE PRECISION :: DONTMOVERADIUS$/;"	v	module:COMMONS
DONTMOVERADIUS	commons.o.f90	/^      DOUBLE PRECISION :: DONTMOVERADIUS$/;"	v	module:COMMONS
DONTMOVERES	commons.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(:),DONTMOVERES(/;"	v	module:COMMONS
DONTMOVERES	commons.o.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(:),DONTMOVERES(/;"	v	module:COMMONS
DONTMOVEREST	commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST,/;"	v	module:COMMONS
DONTMOVEREST	commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST,/;"	v	module:COMMONS
DONTMOVET	commons.f90	/^      LOGICAL :: DONTMOVET,/;"	v	module:COMMONS
DONTMOVET	commons.o.f90	/^      LOGICAL :: DONTMOVET,/;"	v	module:COMMONS
DOVECC	dftb.f	/^      SUBROUTINE DOVECC(/;"	s
DPBTF2	mylapack.f	/^      SUBROUTINE DPBTF2(/;"	s
DPBTRF	mylapack.f	/^      SUBROUTINE DPBTRF(/;"	s
DPBTRS	mylapack.f	/^      SUBROUTINE DPBTRS(/;"	s
DPI1RMvec	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:LJCAPSIDMODULE
DPI1RMvec	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:PYMODULE
DPI2RMvec	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:LJCAPSIDMODULE
DPI2RMvec	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:PYMODULE
DPI3RMvec	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:LJCAPSIDMODULE
DPI3RMvec	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:PYMODULE
DPMU	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(:), DPMU(/;"	v	module:COMMONS
DPMU	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(:), DPMU(/;"	v	module:COMMONS
DPRAND	dprand.f	/^        DOUBLE PRECISION FUNCTION DPRAND(/;"	f
DPREPJ	dlsode.f	/^      SUBROUTINE DPREPJ /;"	s
DREPCC	dftb.f	/^      SUBROUTINE DREPCC(/;"	s
DSCAL	dlsode.f	/^      SUBROUTINE DSCAL /;"	s
DSOLSY	dlsode.f	/^      SUBROUTINE DSOLSY /;"	s
DSRCOM	dlsode.f	/^      SUBROUTINE DSRCOM /;"	s
DSTODE	dlsode.f	/^      SUBROUTINE DSTODE /;"	s
DSYR	mylapack.f	/^      SUBROUTINE DSYR /;"	s
DTBSV	mylapack.f	/^      SUBROUTINE DTBSV /;"	s
DTRTI2	dgetri.f	/^      SUBROUTINE DTRTI2(/;"	s
DTRTRI	dgetri.f	/^      SUBROUTINE DTRTRI(/;"	s
DTSGI	modamber9.f90	107;"	c	module:MODAMBER9
DTSGL	modamber9.f90	110;"	c	module:MODAMBER9
DUMACH	dlsode.f	/^      DOUBLE PRECISION FUNCTION DUMACH /;"	f
DUMBBELLP	dbpg.f90	/^      SUBROUTINE DUMBBELLP /;"	s
DUMPFILE	commons.f90	/^      CHARACTER(LEN=130) DUMPFILE,/;"	v	module:COMMONS
DUMPFILE	commons.o.f90	/^      CHARACTER(LEN=130) DUMPFILE,/;"	v	module:COMMONS
DUMPINT	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT,/;"	v	module:COMMONS
DUMPINT	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT,/;"	v	module:COMMONS
DUMPJ	mc.F	/^      SUBROUTINE DUMPJ(/;"	s
DUMPMODEN	modamber9.f90	/^      logical, dimension(:), allocatable :: DUMPMODEN$/;"	v	module:MODAMBER9
DUMPQUT	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT,/;"	v	module:COMMONS
DUMPQUT	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT,/;"	v	module:COMMONS
DUMPSTATE	GMINdump.f90	/^SUBROUTINE DUMPSTATE(/;"	s
DUMPSTEPST	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST,/;"	v	module:COMMONS
DUMPSTEPST	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST,/;"	v	module:COMMONS
DUMPSTRUCTURES	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES,/;"	v	module:COMMONS
DUMPSTRUCTURES	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES,/;"	v	module:COMMONS
DUMPT	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT,/;"	v	module:COMMONS
DUMPT	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT,/;"	v	module:COMMONS
DUMPVUNIT	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT,/;"	v	module:COMMONS
DUMPVUNIT	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT,/;"	v	module:COMMONS
DUMPXYZUNIT	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT,/;"	v	module:COMMONS
DUMPXYZUNIT	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT,/;"	v	module:COMMONS
DUMSUM	dlsode.f	/^      SUBROUTINE DUMSUM(/;"	s
DVNORM	dlsode.f	/^      DOUBLE PRECISION FUNCTION DVNORM /;"	f
DXPY	tn.f	/^      SUBROUTINE DXPY(/;"	s
DZ	Zetterling.f	240;"	c	subroutine:Z2
DZ	Zetterling.f	65;"	c	subroutine:Z1
DZ	dzugutov.f	49;"	c	subroutine:DZPOT
DZP1	commons.f90	/^      DOUBLE PRECISION :: DZP1,/;"	v	module:COMMONS
DZP1	commons.o.f90	/^      DOUBLE PRECISION :: DZP1,/;"	v	module:COMMONS
DZP2	commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2,/;"	v	module:COMMONS
DZP2	commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2,/;"	v	module:COMMONS
DZP3	commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3,/;"	v	module:COMMONS
DZP3	commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3,/;"	v	module:COMMONS
DZP4	commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4,/;"	v	module:COMMONS
DZP4	commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4,/;"	v	module:COMMONS
DZP5	commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5,/;"	v	module:COMMONS
DZP5	commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5,/;"	v	module:COMMONS
DZP6	commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6,/;"	v	module:COMMONS
DZP6	commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6,/;"	v	module:COMMONS
DZP7	commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6, DZP7$/;"	v	module:COMMONS
DZP7	commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6, DZP7$/;"	v	module:COMMONS
DZPOT	dzugutov.f	/^      SUBROUTINE DZPOT(/;"	s
DZTEST	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST,/;"	v	module:COMMONS
DZTEST	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST,/;"	v	module:COMMONS
D_BLN	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(:), D_BLN(/;"	v	module:COMMONS
D_BLN	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(:), D_BLN(/;"	v	module:COMMONS
DumpEveryNthQuench	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench,/;"	v	module:COMMONS
DumpEveryNthQuench	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench,/;"	v	module:COMMONS
EAMALT	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT, &$/;"	v	module:COMMONS
EAMALT	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT, &$/;"	v	module:COMMONS
EAMLJ	EAMLJ_sub.f	/^      SUBROUTINE EAMLJ(/;"	s
EAMLJCOMM	EAMLJ_sub.f	124;"	c	function:func
EAMLJCOMM	EAMLJ_sub.f	35;"	c	subroutine:EAMLJ
EAMLJCOMM	keyword.f	50;"	c	subroutine:KEYWORD
EAMLJT	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT,/;"	v	module:COMMONS
EAMLJT	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT,/;"	v	module:COMMONS
EAMP	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP,/;"	v	module:COMMONS
EAMP	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP,/;"	v	module:COMMONS
EAMal	EAMal.f	/^      SUBROUTINE EAMal(/;"	s
ECF	ljcapsidmodule.f90	/^SUBROUTINE ECF(/;"	s
ECFDC	takestepmsgb.f90	/^      SUBROUTINE ECFDC /;"	s
ECHO	input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECONV	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5, &$/;"	v	module:COMMONS
ECONV	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5, &$/;"	v	module:COMMONS
EFAC	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,/;"	v	module:COMMONS
EFAC	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,/;"	v	module:COMMONS
EFIELD	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD,/;"	v	module:COMMONS
EFIELD	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD,/;"	v	module:COMMONS
EFIELDT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT,/;"	v	module:COMMONS
EFIELDT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT,/;"	v	module:COMMONS
EIG	ptgrp.f	/^      SUBROUTINE EIG(/;"	s
EIGSRT	eigsrt.f	/^      SUBROUTINE EIGSRT(/;"	s
ELEMENT	molinfo.f90	/^        CHARACTER (LEN=5)  :: ELEMENT /;"	k	type:ATOM
ELLIPSOIDROTATION	ljcapsidmodule.f90	/^      SUBROUTINE ELLIPSOIDROTATION /;"	s
ELLIPSOIDT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT,/;"	v	module:COMMONS
ELLIPSOIDT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT,/;"	v	module:COMMONS
ELLMAT	pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(:,:),ELLST2(:,:),ELLMAT(/;"	v	module:PYMODULE
ELLST1	pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(/;"	v	module:PYMODULE
ELLST2	pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(:,:),ELLST2(/;"	v	module:PYMODULE
ELPSDRTMT	gbcalamitic.f90	/^      SUBROUTINE ELPSDRTMT /;"	s
ENERGY2INDEX	basinsampling.f90	/^      FUNCTION ENERGY2INDEX(/;"	f	subroutine:BASINSAMPLING
ENUMERATE	enumerate.f90	/^SUBROUTINE ENUMERATE(/;"	s
EPREV	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV /;"	v	module:COMMONS
EPREV	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV /;"	v	module:COMMONS
EPS	modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(/;"	v	module:consts_trans_97
EPS11	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ, &$/;"	v	module:COMMONS
EPS11	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ, &$/;"	v	module:COMMONS
EPS12	commons.f90	/^     &                 EPS11, EPS22, EPS12,/;"	v	module:COMMONS
EPS12	commons.o.f90	/^     &                 EPS11, EPS22, EPS12,/;"	v	module:COMMONS
EPS22	commons.f90	/^     &                 EPS11, EPS22,/;"	v	module:COMMONS
EPS22	commons.o.f90	/^     &                 EPS11, EPS22,/;"	v	module:COMMONS
EPSILON	vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(3), CGG2(3), CGCONST, EPSILON$/;"	v	module:VGW
EPSILON	vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON,/;"	v	module:VGWSP
EPSNOT	commons.f90	/^     &                 SIGNOT, EPSNOT,/;"	v	module:COMMONS
EPSNOT	commons.o.f90	/^     &                 SIGNOT, EPSNOT,/;"	v	module:COMMONS
EPSR	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(3,3), &$/;"	v	module:COMMONS
EPSR	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(3,3), &$/;"	v	module:COMMONS
EPSSPHERE	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE,/;"	v	module:COMMONS
EPSSPHERE	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE,/;"	v	module:COMMONS
EPSp	modconsts.f90	/^     &                 EPSs,EPSp,/;"	v	module:consts
EPSp	modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(4),EPSs,EPSp,/;"	v	module:consts_trans_97
EPSs	modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,Vpppi,KAPPA,&$/;"	v	module:consts
EPSs	modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(4),EPSs,/;"	v	module:consts_trans_97
EQUIL	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL,/;"	v	module:COMMONS
EQUIL	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL,/;"	v	module:COMMONS
ESA	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(/;"	v	module:COMMONS
ESA	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(/;"	v	module:COMMONS
ESAVE	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ESAVE(/;"	v	module:COMMONS
ESAVE	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ESAVE(/;"	v	module:COMMONS
EV	EAMal.f	34;"	c	subroutine:EAMal
EV	basinsampling.f90	52;"	c	subroutine:BASINSAMPLING
EV	bspt.F	76;"	c	subroutine:PTBASINSAMPLING
EV	capsid.f	37;"	c	subroutine:FCAPSID
EV	lj.f	255;"	c	subroutine:LJCUT
EV	mc.F	37;"	c	subroutine:MC
EV	mylbfgs.f	51;"	c	subroutine:MYLBFGS
EV	potential.f	49;"	c	subroutine:POTENTIAL
EV	qdtest.f	29;"	c	subroutine:QDTEST
EV	qdtest2.f	29;"	c	subroutine:QDTEST2
EV	rad.f	30;"	c	subroutine:RAD
EV	rad.f	87;"	c	subroutine:RADR
EV	sc.f	31;"	c	subroutine:SC
EV	strand.f	36;"	c	subroutine:STRAND
EV	symmetry.f90	59;"	c	subroutine:SYMMETRY
EVASH4	Q4.f	/^      SUBROUTINE EVASH4(/;"	s
EVSTEPT	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT,/;"	v	module:COMMONS
EVSTEPT	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT,/;"	v	module:COMMONS
EXCHPROB	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB,/;"	v	module:COMMONS
EXCHPROB	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB,/;"	v	module:COMMONS
EXPD	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD,/;"	v	module:COMMONS
EXPD	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD,/;"	v	module:COMMONS
EXPFAC	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC,/;"	v	module:COMMONS
EXPFAC	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC,/;"	v	module:COMMONS
E_WRITE	amhdummy.f	/^	SUBROUTINE E_WRITE(/;"	s	module:AMH_INTERFACES
E_WRITE	amhdummy.f	/^       SUBROUTINE E_WRITE(/;"	s
E_ZERO	vgw.f90	/^     DOUBLE PRECISION :: E_ZERO,/;"	v	module:VGWSP
E_ZERO	vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(6), E_ZERO,/;"	v	module:VGW
EllipsoidsAAtoPolar	ljcapsidmodule.f90	/^SUBROUTINE EllipsoidsAAtoPolar(/;"	s
Energy2Index	tetherfunc.f90	/^      function Energy2Index(/;"	f	module:tetherfunc
ExtrapolationPercent	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent,/;"	v	module:COMMONS
ExtrapolationPercent	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent,/;"	v	module:COMMONS
F1COM	modf1com.f90	/^MODULE F1COM$/;"	m
F1DIM	f1dim.f	/^      FUNCTION F1DIM(/;"	f
FAC	Q4.f	/^      DOUBLE PRECISION FUNCTION FAC(/;"	f
FACTOR	commons.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ, FACTOR /;"	v	module:COMMONS
FACTOR	commons.o.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ, FACTOR /;"	v	module:COMMONS
FAIL	MSorig.f	41;"	c	subroutine:MSORIG
FAIL	MSorigc.f	44;"	c	subroutine:MSORIGC
FAIL	MStrans.97.f	57;"	c	subroutine:MSTRANS97
FAIL	cgmin.f	38;"	c	subroutine:CGMIN
FAIL	dftb.f	55;"	c	subroutine:DFTB
FAIL	frausi.f	58;"	c	subroutine:FRAUSI
FAIL	linmin.f	35;"	c	subroutine:LINMIN
FAIL	mnbrak.f	31;"	c	subroutine:MNBRAK
FAIL	potential.f	48;"	c	subroutine:POTENTIAL
FAKEWATER	modamb.f90	/^      LOGICAL FAKEWATER,/;"	v	module:MODAMBER
FAL	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL,/;"	v	module:COMMONS
FAL	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL,/;"	v	module:COMMONS
FARKAS	Farkas.f	/^      SUBROUTINE FARKAS(/;"	s
FCAPSID	capsid.f	/^      SUBROUTINE FCAPSID(/;"	s
FD	fd.f	/^      SUBROUTINE FD(/;"	s
FD5H	commons.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD, FD5H$/;"	v	module:COMMONS
FD5H	commons.o.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD, FD5H$/;"	v	module:COMMONS
FDIST	ptgrp.f	/^      Double Precision FUNCTION FDIST(/;"	f
FDM	fdm.f	/^      SUBROUTINE FDM(/;"	s
FF	main.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	program:GMIN
FF	qmod.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	module:QMODULE
FIELDT	commons.f90	/^      LOGICAL :: FIELDT,/;"	v	module:COMMONS
FIELDT	commons.o.f90	/^      LOGICAL :: FIELDT,/;"	v	module:COMMONS
FIH	commons.f90	/^      DOUBLE PRECISION :: FOH, FIH,/;"	v	module:COMMONS
FIH	commons.o.f90	/^      DOUBLE PRECISION :: FOH, FIH,/;"	v	module:COMMONS
FILEEXISTS	io_sanity.f90	/^FUNCTION FILEEXISTS(/;"	f
FILELENGTH	io_sanity.f90	/^FUNCTION FILELENGTH(/;"	f
FIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: FIN(/;"	v	program:GMIN
FINALCUTOFF	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF,/;"	v	module:COMMONS
FINALCUTOFF	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF,/;"	v	module:COMMONS
FINALIO	finalio.f	/^      SUBROUTINE FINALIO$/;"	s
FINALQ	finalq.f	/^      SUBROUTINE FINALQ$/;"	s
FIX	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX,/;"	v	module:COMMONS
FIX	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX,/;"	v	module:COMMONS
FIXBIN	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN,/;"	v	module:COMMONS
FIXBIN	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN,/;"	v	module:COMMONS
FIXBOTH	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH,/;"	v	module:COMMONS
FIXBOTH	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH,/;"	v	module:COMMONS
FIXCOM	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM,/;"	v	module:COMMONS
FIXCOM	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM,/;"	v	module:COMMONS
FIXD	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD,/;"	v	module:COMMONS
FIXD	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD,/;"	v	module:COMMONS
FIXDIHEFLAG	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG,/;"	v	module:COMMONS
FIXDIHEFLAG	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG,/;"	v	module:COMMONS
FIXIMAGE	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE,/;"	v	module:COMMONS
FIXIMAGE	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE,/;"	v	module:COMMONS
FIXSTEP	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP,/;"	v	module:COMMONS
FIXSTEP	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP,/;"	v	module:COMMONS
FIXT	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT,/;"	v	module:COMMONS
FIXT	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT,/;"	v	module:COMMONS
FIXTEMP	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP,/;"	v	module:COMMONS
FIXTEMP	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP,/;"	v	module:COMMONS
FNI	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI,/;"	v	module:COMMONS
FNI	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI,/;"	v	module:COMMONS
FOH	commons.f90	/^      DOUBLE PRECISION :: FOH,/;"	v	module:COMMONS
FOH	commons.o.f90	/^      DOUBLE PRECISION :: FOH,/;"	v	module:COMMONS
FRAUSI	frausi.f	/^      SUBROUTINE FRAUSI(/;"	s
FRAUSIDER	frausi.f	/^      SUBROUTINE FRAUSIDER(/;"	s
FRAUSIT	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG, &$/;"	v	module:COMMONS
FRAUSIT	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG, &$/;"	v	module:COMMONS
FREEZE	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZEC/;"	v	module:COMMONS
FREEZE	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZEC/;"	v	module:COMMONS
FREEZEALL	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL,/;"	v	module:COMMONS
FREEZEALL	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL,/;"	v	module:COMMONS
FREEZECORE	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE,/;"	v	module:COMMONS
FREEZECORE	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE,/;"	v	module:COMMONS
FREEZEGROUPT	commons.f90	/^      LOGICAL :: FREEZEGROUPT$/;"	v	module:COMMONS
FREEZEGROUPT	commons.o.f90	/^      LOGICAL :: FREEZEGROUPT$/;"	v	module:COMMONS
FREEZEGROUPTYPE	commons.f90	/^      CHARACTER (LEN=2) :: FREEZEGROUPTYPE$/;"	v	module:COMMONS
FREEZEGROUPTYPE	commons.o.f90	/^      CHARACTER (LEN=2) :: FREEZEGROUPTYPE$/;"	v	module:COMMONS
FREEZERES	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES,/;"	v	module:COMMONS
FREEZERES	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES,/;"	v	module:COMMONS
FROT	modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT,/;"	v	module:MODCHARMM
FROZEN	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN /;"	v	module:COMMONS
FROZEN	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN /;"	v	module:COMMONS
FROZENAMBER	modamber9.f90	/^LOGICAL, ALLOCATABLE,DIMENSION(:) :: FROZENAMBER$/;"	v	module:MODAMBER9
FROZENRES	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZENRES /;"	v	module:COMMONS
FROZENRES	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZENRES /;"	v	module:COMMONS
FS	FS.f	/^      SUBROUTINE FS /;"	s
FST	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST,/;"	v	module:COMMONS
FST	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST,/;"	v	module:COMMONS
FTD	commons.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD,/;"	v	module:COMMONS
FTD	commons.o.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD,/;"	v	module:COMMONS
FTRANS	modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS,/;"	v	module:MODCHARMM
FUDGE	modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(4),EPSs,EPSp,FUDGE$/;"	v	module:consts_trans_97
FUNC	func.f90	/^MODULE FUNC$/;"	m
Fembed	Ackland_metals.f90	/^        double precision function Fembed(/;"	f
Fembed_d	Ackland_metals.f90	/^        double precision function Fembed_d(/;"	f
Fembed_dd	Ackland_metals.f90	/^        double precision function Fembed_dd(/;"	f
FixedEndMoveT	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT,/;"	v	module:COMMONS
FixedEndMoveT	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT,/;"	v	module:COMMONS
G46	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46,/;"	v	module:COMMONS
G46	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46,/;"	v	module:COMMONS
GAMMA	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA,/;"	v	module:COMMONS
GAMMA	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA,/;"	v	module:COMMONS
GATOM	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM,/;"	v	module:COMMONS
GATOM	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM,/;"	v	module:COMMONS
GAUSSEE	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(/;"	v	module:COMMONS
GAUSSEE	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(/;"	v	module:COMMONS
GAUSSENERGYPB	vgw.f90	/^SUBROUTINE GAUSSENERGYPB(/;"	s
GAUSSKK	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSKK(/;"	v	module:COMMONS
GAUSSKK	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSKK(/;"	v	module:COMMONS
GAUSST	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST,/;"	v	module:COMMONS
GAUSST	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST,/;"	v	module:COMMONS
GAYBERNE	ljcapsidmodule.f90	/^SUBROUTINE GAYBERNE(/;"	s
GAYBERNEDCT	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT,/;"	v	module:COMMONS
GAYBERNEDCT	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT,/;"	v	module:COMMONS
GAYBERNESECDER	ljcapsidmodule.f90	/^SUBROUTINE GAYBERNESECDER(/;"	s
GAYBERNET	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,/;"	v	module:COMMONS
GAYBERNET	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,/;"	v	module:COMMONS
GBANISOTROPYR	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ, &$/;"	v	module:COMMONS
GBANISOTROPYR	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ, &$/;"	v	module:COMMONS
GBCALAMITIC	gbcalamitic.f90	/^      SUBROUTINE GBCALAMITIC /;"	s
GBCHI	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI,/;"	v	module:COMMONS
GBCHI	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI,/;"	v	module:COMMONS
GBCHIPRM	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM,/;"	v	module:COMMONS
GBCHIPRM	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM,/;"	v	module:COMMONS
GBDDP	gbddp.f90	/^      SUBROUTINE GBDDP /;"	s
GBDISCOTIC	gbdiscotic.f90	/^      SUBROUTINE GBDISCOTIC /;"	s
GBDPEPS	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS,/;"	v	module:COMMONS
GBDPEPS	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS,/;"	v	module:COMMONS
GBDPFCT	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT,/;"	v	module:COMMONS
GBDPFCT	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT,/;"	v	module:COMMONS
GBDPMU	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU,/;"	v	module:COMMONS
GBDPMU	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU,/;"	v	module:COMMONS
GBDPT	commons.f90	/^     &        GBT, GBDT, GBDPT,/;"	v	module:COMMONS
GBDPT	commons.o.f90	/^     &        GBT, GBDT, GBDPT,/;"	v	module:COMMONS
GBDT	commons.f90	/^     &        GBT, GBDT,/;"	v	module:COMMONS
GBDT	commons.o.f90	/^     &        GBT, GBDT,/;"	v	module:COMMONS
GBEPSNOT	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT,/;"	v	module:COMMONS
GBEPSNOT	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT,/;"	v	module:COMMONS
GBGTP	ljcapsidmodule.f90	/^      SUBROUTINE GBGTP(/;"	s
GBINIT	ljcapsidmodule.f90	/^      SUBROUTINE GBINIT(/;"	s
GBKAPPA	commons.f90	/^     &                 EPSR, GBKAPPA,/;"	v	module:COMMONS
GBKAPPA	commons.o.f90	/^     &                 EPSR, GBKAPPA,/;"	v	module:COMMONS
GBKAPPRM	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM,/;"	v	module:COMMONS
GBKAPPRM	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM,/;"	v	module:COMMONS
GBMU	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,/;"	v	module:COMMONS
GBMU	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,/;"	v	module:COMMONS
GBNU	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU,/;"	v	module:COMMONS
GBNU	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU,/;"	v	module:COMMONS
GBSIGNOT	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
GBSIGNOT	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
GBT	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY, &$/;"	v	module:COMMONS
GBT	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY, &$/;"	v	module:COMMONS
GBWELLDEPTHR	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,/;"	v	module:COMMONS
GBWELLDEPTHR	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,/;"	v	module:COMMONS
GCHARMMFAIL	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,/;"	v	module:MODCHARMM
GD	mylbfgs.f	50;"	c	subroutine:MYLBFGS
GD	potential.f	50;"	c	subroutine:POTENTIAL
GEM	gem.f90	/^      SUBROUTINE GEM /;"	s
GEMRC	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC,/;"	v	module:COMMONS
GEMRC	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC,/;"	v	module:COMMONS
GEMT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT,/;"	v	module:COMMONS
GEMT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT,/;"	v	module:COMMONS
GETA	input.f	/^      SUBROUTINE GETA(/;"	s
GETDISPLACEMENT	basinsampling.f90	/^      REAL(8) FUNCTION GETDISPLACEMENT(/;"	f	subroutine:BASINSAMPLING
GETF	input.f	/^      SUBROUTINE GETF(/;"	s
GETI	input.f	/^      SUBROUTINE GETI(/;"	s
GETICCOORDS	amber9dummy.f90	/^subroutine GETICCOORDS(/;"	s
GETORBITS	getorbits.f90	/^SUBROUTINE GETORBITS(/;"	s
GETPTC	tn.f	/^      SUBROUTINE GETPTC(/;"	s
GETS	input.f	/^      SUBROUTINE GETS(/;"	s
GETSEEDATM	amber9dummy.f90	/^subroutine  GETSEEDATM(/;"	s
GET_ATOMS	molinfo.f90	/^        TYPE(ATOM) FUNCTION GET_ATOMS(/;"	f	module:MOLINFO
GFIELD	gauss.f	/^      SUBROUTINE GFIELD(/;"	s
GKSMALL	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(:), GKSMALL(/;"	v	module:COMMONS
GKSMALL	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(:), GKSMALL(/;"	v	module:COMMONS
GLUDAT	Pbglue.f	118;"	c	block data:PB
GLUDAT	Pbglue.f	246;"	c	subroutine:uu
GLUDAT	Pbglue.f	270;"	c
GMAX	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX,/;"	v	module:COMMONS
GMAX	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX,/;"	v	module:COMMONS
GMIN	main.f90	/^      PROGRAM GMIN$/;"	p
GMODES	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES,/;"	v	module:COMMONS
GMODES	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES,/;"	v	module:COMMONS
GOODSTRUCTURE1	modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS, GOODSTRUCTURE1,/;"	v	module:MODAMBER9
GOODSTRUCTURE2	modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS, GOODSTRUCTURE1, GOODSTRUCTURE2,/;"	v	module:MODAMBER9
GROUND	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND,/;"	v	module:COMMONS
GROUND	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND,/;"	v	module:COMMONS
GROUPCENTRE	commons.f90	/^      INTEGER :: GROUPCENTRE$/;"	v	module:COMMONS
GROUPCENTRE	commons.o.f90	/^      INTEGER :: GROUPCENTRE$/;"	v	module:COMMONS
GROUPRADIUS	commons.f90	/^      DOUBLE PRECISION :: GROUPRADIUS$/;"	v	module:COMMONS
GROUPRADIUS	commons.o.f90	/^      DOUBLE PRECISION :: GROUPRADIUS$/;"	v	module:COMMONS
GROUPROTATION	grouprotation.f90	/^      SUBROUTINE GROUPROTATION(/;"	s
GROUPROTFREQ	modamber9.f90	/^      INTEGER :: GROUPROTFREQ,/;"	v	module:MODAMBER9
GROUPROTT	modamber9.f90	/^      LOGICAL :: GROUPROTT,/;"	v	module:MODAMBER9
GSAVEIT	saveit.f	/^      SUBROUTINE GSAVEIT(/;"	s
GSEED	seed.f	/^      SUBROUTINE GSEED$/;"	s
GSORT2	sort2.f	/^      SUBROUTINE GSORT2(/;"	s
GTIMS	tn.f	/^      SUBROUTINE GTIMS(/;"	s
GUIDECUT	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT,/;"	v	module:COMMONS
GUIDECUT	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT,/;"	v	module:COMMONS
GUPTA	Gupta.f	/^      SUBROUTINE GUPTA /;"	s
GUPTAT	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT,/;"	v	module:COMMONS
GUPTAT	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT,/;"	v	module:COMMONS
GetDisplacement	tetherfunc.f90	/^      real(8) function GetDisplacement(/;"	f	module:tetherfunc
Gsort	sort.f	/^      SUBROUTINE Gsort(/;"	s
HAMCCA	dftb.f	/^      SUBROUTINE HAMCCA(/;"	s
HAMCCB	dftb.f	/^      SUBROUTINE HAMCCB(/;"	s
HAMIL	frausi.f	/^      SUBROUTINE HAMIL(/;"	s
HARM_AMH	commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH,/;"	v	module:COMMONS
HARM_AMH	commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH,/;"	v	module:COMMONS
HBINS	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,&$/;"	v	module:COMMONS
HBINS	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,&$/;"	v	module:COMMONS
HDIST	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(/;"	v	module:COMMONS
HDIST	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(/;"	v	module:COMMONS
HESS	commons.f90	/^      DOUBLE PRECISION :: HESS(/;"	v	module:COMMONS
HESS	commons.o.f90	/^      DOUBLE PRECISION :: HESS(/;"	v	module:COMMONS
HESS	modhess.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS /;"	v	module:MODHESS
HISTFAC	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC,/;"	v	module:COMMONS
HISTFAC	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC,/;"	v	module:COMMONS
HISTFACMUL	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE, &$/;"	v	module:COMMONS
HISTFACMUL	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE, &$/;"	v	module:COMMONS
HISTMAX	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX,/;"	v	module:COMMONS
HISTMAX	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX,/;"	v	module:COMMONS
HISTMIN	commons.f90	/^     &                 TRENORM, HISTMIN,/;"	v	module:COMMONS
HISTMIN	commons.o.f90	/^     &                 TRENORM, HISTMIN,/;"	v	module:COMMONS
HISTSMOOTH	commons.f90	/^     &        TETHER, HISTSMOOTH,/;"	v	module:COMMONS
HISTSMOOTH	commons.o.f90	/^     &        TETHER, HISTSMOOTH,/;"	v	module:COMMONS
HISTVALS	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS,/;"	v	module:COMMONS
HISTVALS	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS,/;"	v	module:COMMONS
HIT	commons.f90	/^     &        SORTT, HIT,/;"	v	module:COMMONS
HIT	commons.o.f90	/^     &        SORTT, HIT,/;"	v	module:COMMONS
HPERCENT	commons.f90	/^     &                 HISTFACMUL, HPERCENT,/;"	v	module:COMMONS
HPERCENT	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT,/;"	v	module:COMMONS
HPTGRP	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP,/;"	v	module:COMMONS
HPTGRP	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP,/;"	v	module:COMMONS
HSMOVE	hsmove.f	/^      SUBROUTINE HSMOVE(/;"	s
HWEIGHT	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(:), HWEIGHT(/;"	v	module:COMMONS
HWEIGHT	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(:), HWEIGHT(/;"	v	module:COMMONS
Hfunc	Ackland_metals.f90	/^	double precision function Hfunc(/;"	f
Hfunc0	Ackland_metals.f90	/^	double precision function Hfunc0(/;"	f
Horig	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: Horig /;"	v	module:distance
Hwindows	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows,/;"	v	module:COMMONS
Hwindows	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows,/;"	v	module:COMMONS
I	ljcapsidmodule.f90	/^ IN/;"	v	module:LJCAPSIDMODULE
I	pymodule.f90	/^ IN/;"	v	module:PYMODULE
I	vgw.f90	/^  IN/;"	v
I1_AMH	commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH, I1_AMH$/;"	v	module:COMMONS
I1_AMH	commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH, I1_AMH$/;"	v	module:COMMONS
I3	ljcapsidmodule.f90	/^ DOUBLE PRECISION ::I3(/;"	v	module:LJCAPSIDMODULE
I3	pymodule.f90	/^ DOUBLE PRECISION :: I3(/;"	v	module:PYMODULE
IATNUM	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  IATNUM /;"	v	module:COMMONS
IATNUM	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  IATNUM /;"	v	module:COMMONS
IC_COORDS	modamber9.f90	/^integer, dimension(:,:),allocatable:: IC_COORDS$/;"	v	module:MODAMBER9
IC_IMPROP	modamber9.f90	/^character(len=3), dimension(:), allocatable:: IC_IMPROP$/;"	v	module:MODAMBER9
IDAMAX	dlsode.f	/^      INTEGER FUNCTION IDAMAX /;"	f
IDIVF	modamb.f90	/^      INTEGER PN,IDIVF,/;"	v	module:MODAMBER
IEEECK	dgetrf.f	/^      INTEGER          FUNCTION IEEECK(/;"	f
IGNOREBIN	commons.f90	/^      LOGICAL, ALLOCATABLE ::  IGNOREBIN(/;"	v	module:COMMONS
IGNOREBIN	commons.o.f90	/^      LOGICAL, ALLOCATABLE ::  IGNOREBIN(/;"	v	module:COMMONS
IHT	commons.f90	/^      LOGICAL :: FIELDT, OHT, IHT,/;"	v	module:COMMONS
IHT	commons.o.f90	/^      LOGICAL :: FIELDT, OHT, IHT,/;"	v	module:COMMONS
ILAENV	dgetrf.f	/^      INTEGER          FUNCTION ILAENV(/;"	f
INBLK	input.f	/^      BLOCK DATA INBLK$/;"	b
INERTIA	ptgrp.f	/^      SUBROUTINE INERTIA(/;"	s
INFILE	commons.f90	/^      CHARACTER(LEN=80) :: INFILE=/;"	v	module:COMMONS
INFILE	commons.o.f90	/^      CHARACTER(LEN=80) :: INFILE=/;"	v	module:COMMONS
INITIALISELJCAPSIDMODEL	ljcapsidmodule.f90	/^SUBROUTINE INITIALISELJCAPSIDMODEL$/;"	s
INITIALISEPYGPERIODIC	ljcapsidmodule.f90	/^SUBROUTINE INITIALISEPYGPERIODIC$/;"	s
INITIALIZE_VGW	vgw.f90	/^SUBROUTINE INITIALIZE_VGW(/;"	s
INITIALIZE_VGWSP	vgw.f90	/^SUBROUTINE INITIALIZE_VGWSP(/;"	s
INITP3	tn.f	/^      SUBROUTINE INITP3(/;"	s
INITPC	tn.f	/^      SUBROUTINE INITPC(/;"	s
INITROT	modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART, INITROT,/;"	v	module:MODCHARMM
INPUT	input.f	/^      SUBROUTINE INPUT(/;"	s
INPUTI	input.f	/^      SUBROUTINE INPUTI(/;"	s
INTEDUMPFILE	commons.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME, INTEDUMPFILE$/;"	v	module:COMMONS
INTEDUMPFILE	commons.o.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME, INTEDUMPFILE$/;"	v	module:COMMONS
INTEFF	main.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	program:GMIN
INTEFF	qmod.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	module:QMODULE
INTEFINALIO	amber9dummy.f90	/^SUBROUTINE INTEFINALIO(/;"	s
INTEQMIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	program:GMIN
INTEQMIN	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:QMODULE
INTEQMINP	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	program:GMIN
INTEQMINP	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:QMODULE
INTERESTORE	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE,/;"	v	module:COMMONS
INTERESTORE	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE,/;"	v	module:COMMONS
INTERV	fedor.f	/^      SUBROUTINE INTERV(/;"	s
INTH_ALIGN	dummyoptim.f90	/^SUBROUTINE INTH_ALIGN(/;"	s
INTMINPERMT	modamber9.f90	/^logical :: INTMINPERMT=/;"	v	module:MODAMBER9
INTMINT	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT,/;"	v	module:COMMONS
INTMINT	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT,/;"	v	module:COMMONS
INVDET	vgw.f90	/^SUBROUTINE INVDET(/;"	s
INVERSION_THROUGH_ORIGIN	transforms.f90	/^    FUNCTION INVERSION_THROUGH_ORIGIN(/;"	f	module:TRANSFORMS
INVERSION_THROUGH_POINT	transforms.f90	/^    FUNCTION INVERSION_THROUGH_POINT(/;"	f	module:TRANSFORMS
INVKAP	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP,/;"	v	module:COMMONS
INVKAP	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP,/;"	v	module:COMMONS
IO1	io1.f	/^      SUBROUTINE IO1$/;"	s
ION	Natb.f	28;"	c	subroutine:NATB
ION	Natb.f	77;"	c	subroutine:entots
IPHASE	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,IPHASE$/;"	v	module:MODAMBER
IPK	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,/;"	v	module:MODAMBER
IPN	modamb.f90	/^      INTEGER PN,IDIVF,PN2,PN3,IPN$/;"	v	module:MODAMBER
IPS	modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,/;"	v	module:MODAMBER9
IRES	amhdummy.f	/^      INTEGER IRES(/;"	v	module:AMHGLOBALS
ISEED	modcharmm.f90	/^      INTEGER :: ISEED,/;"	v	module:MODCHARMM
ISGEND	modamber9.f90	/^      integer ISGSTA,ISGEND,/;"	v	module:MODAMBER9
ISGSTA	modamber9.f90	/^      integer ISGSTA,/;"	v	module:MODAMBER9
ISTEP	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP,/;"	v	module:COMMONS
ISTEP	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP,/;"	v	module:COMMONS
IS_SIDECHAIN	modamber9.f90	/^logical, dimension(:), allocatable :: IS_SIDECHAIN$/;"	v	module:MODAMBER9
ITOA	ptgrp.f	/^       CHARACTER*(*) FUNCTION ITOA(/;"	f
IUMACH	dlsode.f	/^      INTEGER FUNCTION IUMACH(/;"	f
IXSAV	dlsode.f	/^      INTEGER FUNCTION IXSAV /;"	f
J	ljcapsidmodule.f90	/^ INTEGER          :: I, J,/;"	v	module:LJCAPSIDMODULE
J	pymodule.f90	/^ INTEGER          :: I, J,/;"	v	module:PYMODULE
J	vgw.f90	/^  INTEGER :: N, I, J$/;"	v
J1	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:LJCAPSIDMODULE
J1	main.f90	/^      INTEGER J1,/;"	v	program:GMIN
J1	pymodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:PYMODULE
J2	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:LJCAPSIDMODULE
J2	main.f90	/^      INTEGER J1,J2,/;"	v	program:GMIN
J2	pymodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:PYMODULE
J3	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:LJCAPSIDMODULE
J3	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:PYMODULE
J4	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:LJCAPSIDMODULE
J4	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:PYMODULE
J5	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:LJCAPSIDMODULE
J5	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:PYMODULE
J6	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:LJCAPSIDMODULE
J6	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:PYMODULE
JAC	vgw.f90	/^SUBROUTINE JAC$/;"	s
JDUMP	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP,/;"	v	module:COMMONS
JDUMP	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP,/;"	v	module:COMMONS
JM2C	JM.f	/^      SUBROUTINE JM2C /;"	s
JM3C	JM.f	/^      SUBROUTINE JM3C /;"	s
JMEC	JM.f	/^      SUBROUTINE JMEC(/;"	s
JMT	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT,/;"	v	module:COMMONS
JMT	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT,/;"	v	module:COMMONS
JOVOSAP	minperm.f	/^      SUBROUTINE JOVOSAP(/;"	s
JUMPINT	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT,/;"	v	module:COMMONS
JUMPINT	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT,/;"	v	module:COMMONS
JUMPM	mc.F	/^      SUBROUTINE JUMPM(/;"	s
JUMPMOVE	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE,/;"	v	module:COMMONS
JUMPMOVE	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE,/;"	v	module:COMMONS
JUMPTO	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO,/;"	v	module:COMMONS
JUMPTO	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO,/;"	v	module:COMMONS
K1	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:LJCAPSIDMODULE
K1	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:PYMODULE
K2	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:LJCAPSIDMODULE
K2	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:PYMODULE
KAPPA	modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,Vpppi,KAPPA,/;"	v	module:consts
KAPPA	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,KAPPA,/;"	v	module:consts_trans_97
KAPPANEW	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA, REPULSE, BONDAGE, KAPPANEW /;"	v	module:distance
KEEPSYM	takestep.f	/^      SUBROUTINE KEEPSYM(/;"	s
KEGEN	gauss.f	/^      SUBROUTINE KEGEN$/;"	s
KEYWORD	keyword.f	/^      SUBROUTINE KEYWORD$/;"	s
KKJ	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ,/;"	v	module:COMMONS
KKJ	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ,/;"	v	module:COMMONS
KTWN	modamber9.f90	/^      double precision :: KTWN$/;"	v	module:MODAMBER9
KTWNT	modamber9.f90	/^      logical :: KTWNT$/;"	v	module:MODAMBER9
LAMBDA	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA,/;"	v	module:distance
LB2	LB2.f	/^      SUBROUTINE LB2(/;"	s
LB2T	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T,/;"	v	module:COMMONS
LB2T	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T,/;"	v	module:COMMONS
LB3	io1.f	35;"	c	subroutine:IO1
LBFGST	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST,/;"	v	module:COMMONS
LBFGST	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST,/;"	v	module:COMMONS
LCE	mylapack.f	/^      LOGICAL FUNCTION LCE(/;"	f
LDE	mylapack.f	/^      LOGICAL FUNCTION LDE(/;"	f
LEAPDIHE	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE,/;"	v	module:COMMONS
LEAPDIHE	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE,/;"	v	module:COMMONS
LHISTVALS	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS, LHISTVALS /;"	v	module:COMMONS
LHISTVALS	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS, LHISTVALS /;"	v	module:COMMONS
LIGMOVET	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,/;"	v	module:COMMONS
LIGMOVET	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,/;"	v	module:COMMONS
LINDER	tn.f	/^      SUBROUTINE LINDER(/;"	s
LINMIN	linmin.f	/^      SUBROUTINE LINMIN(/;"	s
LINROD	linrod.f90	/^      SUBROUTINE LINROD /;"	s
LINRODT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT,/;"	v	module:COMMONS
LINRODT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT,/;"	v	module:COMMONS
LJ	lj.f	/^      SUBROUTINE LJ(/;"	s
LJA1	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA1=/;"	v	module:VGW
LJA2	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA1=35.14249661727566D0, LJA2=/;"	v	module:VGW
LJA3	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA3=/;"	v	module:VGW
LJA4	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA3=13.25329843520143D0, LJA4=/;"	v	module:VGW
LJA5	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA5=/;"	v	module:VGW
LJA6	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA5=1.671802581756990D0, LJA6=/;"	v	module:VGW
LJATT_BLN	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(/;"	v	module:COMMONS
LJATT_BLN	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(/;"	v	module:COMMONS
LJC1	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC1=/;"	v	module:VGW
LJC2	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC1=31279960.65933084D0, LJC2=/;"	v	module:VGW
LJC3	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC3=/;"	v	module:VGW
LJC4	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC3=91092.34069670191D0, LJC4=/;"	v	module:VGW
LJC5	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC5=/;"	v	module:VGW
LJC6	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC5=-8.46844309983970D0, LJC6=/;"	v	module:VGW
LJCAPSIDMODEL	ljcapsidmodule.f90	/^SUBROUTINE LJCAPSIDMODEL /;"	s
LJCAPSIDMODULE	ljcapsidmodule.f90	/^MODULE LJCAPSIDMODULE$/;"	m
LJCAPSIDT	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT,/;"	v	module:COMMONS
LJCAPSIDT	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT,/;"	v	module:COMMONS
LJCOUL	ljcoulomb.f	/^      SUBROUTINE LJCOUL(/;"	s
LJCOULT	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT,/;"	v	module:COMMONS
LJCOULT	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT,/;"	v	module:COMMONS
LJCUT	lj.f	/^      SUBROUTINE LJCUT(/;"	s
LJDIFF	lj.f	/^      SUBROUTINE LJDIFF(/;"	s
LJEPSILON	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON,/;"	v	module:COMMONS
LJEPSILON	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON,/;"	v	module:COMMONS
LJG	vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(/;"	v	module:VGW
LJG	vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON, LJG(/;"	v	module:VGWSP
LJG2	vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(/;"	v	module:VGW
LJG2	vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON, LJG(NGAUSS), LJK(NGAUSS), LJG2(/;"	v	module:VGWSP
LJK	vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(/;"	v	module:VGW
LJK	vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON, LJG(NGAUSS), LJK(/;"	v	module:VGWSP
LJMFT	commons.f90	/^     &        OTPT, LJMFT,/;"	v	module:COMMONS
LJMFT	commons.o.f90	/^     &        OTPT, LJMFT,/;"	v	module:COMMONS
LJPBIN	ljpbin.f	/^      SUBROUTINE LJPBIN(/;"	s
LJPBING	ljpbin.f	/^      SUBROUTINE LJPBING(/;"	s
LJPBINS	ljpbin.f	/^      SUBROUTINE LJPBINS(/;"	s
LJPSHIFT	ljpshift.f	/^      SUBROUTINE LJPSHIFT(/;"	s
LJPSHIFTBINC	BLJcluster.f	/^      SUBROUTINE LJPSHIFTBINC(/;"	s
LJPSHIFTG	ljpshift.f	/^      SUBROUTINE LJPSHIFTG(/;"	s
LJPSHIFTGBINC	BLJcluster.f	/^      SUBROUTINE LJPSHIFTGBINC(/;"	s
LJPSHIFTS	ljpshift.f	/^      SUBROUTINE LJPSHIFTS(/;"	s
LJREP_BLN	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(/;"	v	module:COMMONS
LJREP_BLN	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(/;"	v	module:COMMONS
LJS	lj.f	/^      SUBROUTINE LJS(/;"	s
LJSIGMA	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA,/;"	v	module:COMMONS
LJSIGMA	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA,/;"	v	module:COMMONS
LJSITE	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE,/;"	v	module:COMMONS
LJSITE	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE,/;"	v	module:COMMONS
LJSITEATTR	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR,/;"	v	module:COMMONS
LJSITEATTR	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR,/;"	v	module:COMMONS
LJSITECOORDS	commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(/;"	v	module:COMMONS
LJSITECOORDS	commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(/;"	v	module:COMMONS
LJSITECOORDST	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES, &$/;"	v	module:COMMONS
LJSITECOORDST	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES, &$/;"	v	module:COMMONS
LMQN	tn.f	/^      SUBROUTINE LMQN /;"	s
LNBLNK	ptgrp.f	/^       INTEGER FUNCTION LNBLNK /;"	f
LNDET	vgw.f90	/^SUBROUTINE LNDET(/;"	s
LNP	vgw.f90	/^SUBROUTINE LNP(/;"	s
LNPS	vgw.f90	/^SUBROUTINE LNPS(/;"	s
LOCALSAMPLET	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET,/;"	v	module:COMMONS
LOCALSAMPLET	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET,/;"	v	module:COMMONS
LOCALSTEEREDMINT	modamber9.f90	/^LOGICAL :: STEEREDMINT, LOCALSTEEREDMINT$/;"	v	module:MODAMBER9
LOCASE	input.f	/^      ENTRY LOCASE(/;"	e	subroutine:MYUPCASE
LPRSQ	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ,/;"	v	module:COMMONS
LPRSQ	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ,/;"	v	module:COMMONS
LSAME	dgetri.f	/^      LOGICAL          FUNCTION LSAME(/;"	f
LSE	mylapack.f	/^      LOGICAL FUNCTION LSE(/;"	f
LSOUT	tn.f	/^      SUBROUTINE LSOUT(/;"	s
LSQDFR	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR,/;"	v	module:COMMONS
LSQDFR	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR,/;"	v	module:COMMONS
LSYS	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS,/;"	v	module:COMMONS
LSYS	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS,/;"	v	module:COMMONS
LWCNSTA	commons.f90	/^     &                 LWRCUT, LWCNSTA,/;"	v	module:COMMONS
LWCNSTA	commons.o.f90	/^     &                 LWRCUT, LWCNSTA,/;"	v	module:COMMONS
LWCNSTB	commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB,/;"	v	module:COMMONS
LWCNSTB	commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB,/;"	v	module:COMMONS
LWOTP	lwotp.f90	/^      SUBROUTINE  LWOTP /;"	s
LWOTPC	lwotp.f90	/^      SUBROUTINE  LWOTPC /;"	s
LWOTPT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT,/;"	v	module:COMMONS
LWOTPT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT,/;"	v	module:COMMONS
LWRCUT	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT, &$/;"	v	module:COMMONS
LWRCUT	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT, &$/;"	v	module:COMMONS
LWRCUT2SQ	commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ,/;"	v	module:COMMONS
LWRCUT2SQ	commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ,/;"	v	module:COMMONS
LWRCUTSQ	commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ,/;"	v	module:COMMONS
LWRCUTSQ	commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ,/;"	v	module:COMMONS
MAKEOLIGOSTART	modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART,/;"	v	module:MODCHARMM
MAKEOLIGOT	modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT,/;"	v	module:MODCHARMM
MASSARRY	vgw.f90	/^     DOUBLE PRECISION, ALLOCATABLE, SAVE :: MASSARRY(/;"	v	module:VGW
MASSARRY	vgw.f90	/^     DOUBLE PRECISION, ALLOCATABLE, SAVE :: MASSARRY(/;"	v	module:VGWSP
MASSES	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MASSES(/;"	v	module:COMMONS
MASSES	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MASSES(/;"	v	module:COMMONS
MATDIFF	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF,/;"	v	module:COMMONS
MATDIFF	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF,/;"	v	module:COMMONS
MATMUL	ptgrp.f	/^      SUBROUTINE MATMUL(/;"	s
MATMULV	ptgrp.f	/^      SUBROUTINE MATMULV(/;"	s
MATRIX_TRANSFORM	transforms.f90	/^    FUNCTION MATRIX_TRANSFORM(/;"	f	module:TRANSFORMS
MAXBFGS	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS,/;"	v	module:COMMONS
MAXBFGS	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS,/;"	v	module:COMMONS
MAXEFALL	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL,/;"	v	module:COMMONS
MAXEFALL	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL,/;"	v	module:COMMONS
MAXERISE	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE,/;"	v	module:COMMONS
MAXERISE	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE,/;"	v	module:COMMONS
MAXINTERACTIONS	commons.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(3), MAXINTERACTIONS$/;"	v	module:COMMONS
MAXINTERACTIONS	commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(3), MAXINTERACTIONS$/;"	v	module:COMMONS
MAXIT	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT,/;"	v	module:COMMONS
MAXIT	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT,/;"	v	module:COMMONS
MAXIT2	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2,/;"	v	module:COMMONS
MAXIT2	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2,/;"	v	module:COMMONS
MAXSAVE	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE,/;"	v	module:COMMONS
MAXSAVE	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE,/;"	v	module:COMMONS
MB	MB.f	/^      SUBROUTINE MB(/;"	s
MBFINISH1	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,/;"	v	module:COMMONS
MBFINISH1	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,/;"	v	module:COMMONS
MBFINISH2	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,/;"	v	module:COMMONS
MBFINISH2	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,/;"	v	module:COMMONS
MBHEIGHT1	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,/;"	v	module:COMMONS
MBHEIGHT1	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,/;"	v	module:COMMONS
MBHEIGHT2	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,/;"	v	module:COMMONS
MBHEIGHT2	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,/;"	v	module:COMMONS
MBSTART1	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,/;"	v	module:COMMONS
MBSTART1	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,/;"	v	module:COMMONS
MBSTART2	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,/;"	v	module:COMMONS
MBSTART2	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,/;"	v	module:COMMONS
MC	mc.F	/^      SUBROUTINE MC(/;"	s
MCCycles	commons.f90	/^     &        NINTS, NumberOfTrajectories, &$/;"	v	module:COMMONS
MCCycles	commons.o.f90	/^     &        NINTS, NumberOfTrajectories, &$/;"	v	module:COMMONS
MCCyclesEquilibration	commons.f90	/^     &        MCCycles, MCCyclesEquilibration,/;"	v	module:COMMONS
MCCyclesEquilibration	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration,/;"	v	module:COMMONS
MCHPR1	tn.f	/^      DOUBLE PRECISION FUNCTION MCHPR1(/;"	f
MCRUNS	mcruns.f	/^      SUBROUTINE MCRUNS(/;"	s
MCSTEPS	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,&$/;"	v	module:COMMONS
MCSTEPS	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,&$/;"	v	module:COMMONS
MDSTEPT	modamber9.f90	/^      LOGICAL MDSTEPT,/;"	v	module:MODAMBER9
ME1	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,/;"	v	module:COMMONS
ME1	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,/;"	v	module:COMMONS
ME2	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,/;"	v	module:COMMONS
ME2	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,/;"	v	module:COMMONS
ME3	commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3,/;"	v	module:COMMONS
ME3	commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3,/;"	v	module:COMMONS
METAL	Natb.f	29;"	c	subroutine:NATB
METAL	Natb.f	547;"	c	subroutine:ftss
METAL	Natb.f	598;"	c	subroutine:ftsz
METAL	Natb.f	651;"	c	subroutine:frss
METAL	Natb.f	83;"	c	subroutine:entots
MFINISH	commons.f90	/^     &                 MSTART,MFINISH,/;"	v	module:COMMONS
MFINISH	commons.o.f90	/^     &                 MSTART,MFINISH,/;"	v	module:COMMONS
MGBWATER	modamb.f90	/^      LOGICAL FAKEWATER, MGBWATER$/;"	v	module:MODAMBER
MGGLUE	Mgglue.f	/^      SUBROUTINE MGGLUE /;"	s
MGGLUET	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET,/;"	v	module:COMMONS
MGGLUET	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET,/;"	v	module:COMMONS
MINIM	hsmove.f	/^      DOUBLE PRECISION FUNCTION MINIM(/;"	f
MINOMEGA	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA,/;"	v	module:COMMONS
MINOMEGA	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA,/;"	v	module:COMMONS
MINPERMDIST	minpermdist.f90	/^SUBROUTINE MINPERMDIST(/;"	s
MM	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM,/;"	v	module:COMMONS
MM	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM,/;"	v	module:COMMONS
MME2WRAPPER	amber9dummy.f90	/^SUBROUTINE MME2WRAPPER(/;"	s
MMEINITWRAPPER	amber9dummy.f90	/^SUBROUTINE MMEINITWRAPPER(/;"	s
MMRSDPT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT,/;"	v	module:COMMONS
MMRSDPT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT,/;"	v	module:COMMONS
MNBRAK	mnbrak.f	/^      SUBROUTINE MNBRAK(/;"	s
MODAMBER	modamb.f90	/^      MODULE MODAMBER /;"	m
MODAMBER9	modamber9.f90	/^      MODULE MODAMBER9 /;"	m
MODCHARMM	modcharmm.f90	/^MODULE MODCHARMM$/;"	m
MODCOMMONDEINIT	commons.f90	/^      SUBROUTINE MODCOMMONDEINIT$/;"	s	module:COMMONS
MODCOMMONDEINIT	commons.o.f90	/^      SUBROUTINE MODCOMMONDEINIT$/;"	s	module:COMMONS
MODCOMMONINIT	commons.f90	/^      SUBROUTINE MODCOMMONINIT$/;"	s	module:COMMONS
MODCOMMONINIT	commons.o.f90	/^      SUBROUTINE MODCOMMONINIT$/;"	s	module:COMMONS
MODEL1	model1.f90	/^SUBROUTINE MODEL1(/;"	s
MODEL1T	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T,/;"	v	module:COMMONS
MODEL1T	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T,/;"	v	module:COMMONS
MODHESS	modhess.f90	/^MODULE MODHESS$/;"	m
MODLNP	tn.f	/^      SUBROUTINE MODLNP(/;"	s
MODMXATMS	modmxatms.f90	/^MODULE MODMXATMS$/;"	m
MODZ	tn.f	/^      SUBROUTINE MODZ(/;"	s
MOLINFO	molinfo.f90	/^MODULE MOLINFO$/;"	m
MOL_INFO	molinfo.f90	/^    TYPE(ATOM), DIMENSION(:), PRIVATE, SAVE :: MOL_INFO$/;"	v	module:MOLINFO
MON1	modcharmm.f90	/^      INTEGER  :: MON1(/;"	v	module:MODCHARMM
MON2	modcharmm.f90	/^      INTEGER  :: MON1(2),MON2(/;"	v	module:MODCHARMM
MONIT	tn.f	/^      SUBROUTINE MONIT(/;"	s
MORSE	morse.f	/^      SUBROUTINE MORSE(/;"	s
MORSET	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET,/;"	v	module:COMMONS
MORSET	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET,/;"	v	module:COMMONS
MOVABLEATOMLIST	commons.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLIST /;"	v	module:COMMONS
MOVABLEATOMLIST	commons.o.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLIST /;"	v	module:COMMONS
MOVABLEATOMLISTLOGICAL	commons.f90	/^      LOGICAL,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLISTLOGICAL /;"	v	module:COMMONS
MOVABLEATOMLISTLOGICAL	commons.o.f90	/^      LOGICAL,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLISTLOGICAL /;"	v	module:COMMONS
MOVABLEATOMST	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST,/;"	v	module:COMMONS
MOVABLEATOMST	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST,/;"	v	module:COMMONS
MOVESHELLT	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT,/;"	v	module:COMMONS
MOVESHELLT	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT,/;"	v	module:COMMONS
MPIT	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT,/;"	v	module:COMMONS
MPIT	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT,/;"	v	module:COMMONS
MREQ	commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ,/;"	v	module:COMMONS
MREQ	commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ,/;"	v	module:COMMONS
MRHO11	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11,/;"	v	module:COMMONS
MRHO11	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11,/;"	v	module:COMMONS
MRHO12	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12,/;"	v	module:COMMONS
MRHO12	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12,/;"	v	module:COMMONS
MRHO22	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22,/;"	v	module:COMMONS
MRHO22	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22,/;"	v	module:COMMONS
MSBCOORDS	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBCOORDS(/;"	v	module:COMMONS
MSBCOORDS	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBCOORDS(/;"	v	module:COMMONS
MSBE	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBE(/;"	v	module:COMMONS
MSBE	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBE(/;"	v	module:COMMONS
MSGAYBERNE	msgayberne.f90	/^      SUBROUTINE MSGAYBERNE /;"	s
MSGBT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT, &$/;"	v	module:COMMONS
MSGBT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT, &$/;"	v	module:COMMONS
MSLV	tn.f	/^      SUBROUTINE MSLV(/;"	s
MSOLVE	tn.f	/^      SUBROUTINE MSOLVE(/;"	s
MSORIG	MSorig.f	/^      SUBROUTINE MSORIG(/;"	s
MSORIGC	MSorigc.f	/^      SUBROUTINE MSORIGC(/;"	s
MSORIGT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY, &$/;"	v	module:COMMONS
MSORIGT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY, &$/;"	v	module:COMMONS
MSPYGT	commons.f90	/^     &        MSGBT, MSPYGT,/;"	v	module:COMMONS
MSPYGT	commons.o.f90	/^     &        MSGBT, MSPYGT,/;"	v	module:COMMONS
MSSTOCKT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT,/;"	v	module:COMMONS
MSSTOCKT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT,/;"	v	module:COMMONS
MSTART	commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(3), &$/;"	v	module:COMMONS
MSTART	commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(3), &$/;"	v	module:COMMONS
MSTBIN	mstbin.f90	/^      SUBROUTINE MSTBIN(/;"	s
MSTBINT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT,/;"	v	module:COMMONS
MSTBINT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT,/;"	v	module:COMMONS
MSTRANS97	MStrans.97.f	/^      SUBROUTINE MSTRANS97(/;"	s
MSTRANST	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST,/;"	v	module:COMMONS
MSTRANST	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST,/;"	v	module:COMMONS
MTRANS	ptgrp.f	/^      SUBROUTINE MTRANS(/;"	s
MTRXIN	pyg.f90	/^      SUBROUTINE MTRXIN(/;"	s
MTRXINGB	takestepmsgb.f90	/^      SUBROUTINE MTRXINGB(/;"	s
MULLERBROWNT	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT,/;"	v	module:COMMONS
MULLERBROWNT	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT,/;"	v	module:COMMONS
MULTISITEPY	multisitepy.f90	/^      SUBROUTINE MULTISITEPY /;"	s
MULTISITEPY2	multisitepy.f90	/^      SUBROUTINE MULTISITEPY2 /;"	s
MULTISITEPYT	commons.f90	/^     &        CSMGUIDET, MULTISITEPYT$/;"	v	module:COMMONS
MULTISITEPYT	commons.o.f90	/^     &        CSMGUIDET, MULTISITEPYT$/;"	v	module:COMMONS
MULTPAHA	multpaha.f90	/^      SUBROUTINE MULTPAHA /;"	s
MULTPAHAT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,& $/;"	v	module:COMMONS
MULTPAHAT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,& $/;"	v	module:COMMONS
MULTSTOCK	multstock.f90	/^      SUBROUTINE MULTSTOCK /;"	s
MUPDATE	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE,/;"	v	module:COMMONS
MUPDATE	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE,/;"	v	module:COMMONS
MXATMS	modmxatms.f90	/^      INTEGER :: MXATMS=/;"	v	module:MODMXATMS
MYBUNIT	commons.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT,/;"	v	module:COMMONS
MYBUNIT	commons.o.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT,/;"	v	module:COMMONS
MYCPU_TIME	mycpu_time.f90	/^SUBROUTINE MYCPU_TIME(/;"	s
MYCROSS	ptgrp.f	/^      SUBROUTINE MYCROSS(/;"	s
MYCUTHB	modcharmm.f90	/^      DOUBLE PRECISION :: MYCUTHB,/;"	v	module:MODCHARMM
MYCUTHBA	modcharmm.f90	/^      DOUBLE PRECISION :: MYCUTHB,MYCUTHBA$/;"	v	module:MODCHARMM
MYDAXPY	dlsode.f	/^      SUBROUTINE MYDAXPY /;"	s
MYDDOT	dlsode.f	/^      DOUBLE PRECISION FUNCTION MYDDOT /;"	f
MYDOT	ptgrp.f	/^      DOUBLE PRECISION FUNCTION MYDOT(/;"	f
MYEUNIT	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT, &$/;"	v	module:COMMONS
MYEUNIT	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT, &$/;"	v	module:COMMONS
MYFILENAME	commons.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME,/;"	v	module:COMMONS
MYFILENAME	commons.o.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME,/;"	v	module:COMMONS
MYLBFGS	mylbfgs.f	/^      SUBROUTINE MYLBFGS(/;"	s
MYMATMUL	ptgrp.f	/^      SUBROUTINE MYMATMUL(/;"	s
MYMUNIT	commons.f90	/^     &        MYEUNIT, MYMUNIT,/;"	v	module:COMMONS
MYMUNIT	commons.o.f90	/^     &        MYEUNIT, MYMUNIT,/;"	v	module:COMMONS
MYNODE	commons.f90	/^     &        lhbins, sampledbins, MYNODE,/;"	v	module:COMMONS
MYNODE	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE,/;"	v	module:COMMONS
MYORIENT	orient.f	/^      SUBROUTINE MYORIENT(/;"	s
MYPOT	basinsampling.f90	50;"	c	subroutine:BASINSAMPLING
MYPOT	bspt.F	75;"	c	subroutine:PTBASINSAMPLING
MYPOT	cgmin.f	37;"	c	subroutine:CGMIN
MYPOT	finalq.f	37;"	c	subroutine:FINALQ
MYPOT	main.f90	34;"	c	program:GMIN
MYPOT	mc.F	1471;"	c	subroutine:REST
MYPOT	mc.F	1618;"	c	subroutine:REN
MYPOT	mc.F	1786;"	c	subroutine:NEWRES
MYPOT	mc.F	38;"	c	subroutine:MC
MYPOT	mylbfgs.f	47;"	c	subroutine:MYLBFGS
MYPOT	ptmc.F	52;"	c	subroutine:PARALLELTEMPERING
MYPOT	symmetry.f90	56;"	c	subroutine:SYMMETRY
MYPOT	symmetry2.f90	49;"	c	subroutine:SYMMETRY2
MYPOT	symmetrycsm.f90	39;"	c	subroutine:SYMMETRYCSM
MYPOWER	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER,/;"	v	module:COMMONS
MYPOWER	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER,/;"	v	module:COMMONS
MYPUNIT	commons.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT, MYPUNIT$/;"	v	module:COMMONS
MYPUNIT	commons.o.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT, MYPUNIT$/;"	v	module:COMMONS
MYRESET	mc.F	/^      SUBROUTINE MYRESET(/;"	s
MYRUNIT	commons.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT,/;"	v	module:COMMONS
MYRUNIT	commons.o.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT,/;"	v	module:COMMONS
MYSD	mysd.f	/^      SUBROUTINE MYSD(/;"	s
MYSDT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT,/;"	v	module:COMMONS
MYSDT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT,/;"	v	module:COMMONS
MYUNIT	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT,/;"	v	module:COMMONS
MYUNIT	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT,/;"	v	module:COMMONS
MYUPCASE	input.f	/^      SUBROUTINE MYUPCASE(/;"	s
MaximalTemperature	commons.f90	/^     &                 MinimalTemperature, MaximalTemperature,/;"	v	module:COMMONS
MaximalTemperature	commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature,/;"	v	module:COMMONS
Mfunc	Ackland_metals.f90	/^	double precision function Mfunc(/;"	f
Mfunc_d	Ackland_metals.f90	/^	double precision function Mfunc_d(/;"	f
Mfunc_dd	Ackland_metals.f90	/^        double precision function Mfunc_dd(/;"	f
MinimalTemperature	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL, &$/;"	v	module:COMMONS
MinimalTemperature	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL, &$/;"	v	module:COMMONS
N	vgw.f90	/^  INT/;"	v
N3_ATOM	vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM,/;"	v	module:VGW
N3_ATOM	vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM,/;"	v	module:VGWSP
NACCEPT	commons.f90	/^      INTEGER :: NATOMS, NACCEPT,/;"	v	module:COMMONS
NACCEPT	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT,/;"	v	module:COMMONS
NATB	Natb.f	/^        SUBROUTINE NATB(/;"	s
NATBT	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT,/;"	v	module:COMMONS
NATBT	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT,/;"	v	module:COMMONS
NATOMS	commons.f90	/^      INTEGER :: NATOMS,/;"	v	module:COMMONS
NATOMS	commons.o.f90	/^      INTEGER :: NATOMS,/;"	v	module:COMMONS
NATOMSINA	modamber9.f90	/^INTEGER :: NATOMSINA,/;"	v	module:MODAMBER9
NATOMSINB	modamber9.f90	/^INTEGER :: NATOMSINA, NATOMSINB,/;"	v	module:MODAMBER9
NATOMSINC	modamber9.f90	/^INTEGER :: NATOMSINA, NATOMSINB, NATOMSINC$/;"	v	module:MODAMBER9
NCAPT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT,/;"	v	module:COMMONS
NCAPT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT,/;"	v	module:COMMONS
NCARBON	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON,/;"	v	module:COMMONS
NCARBON	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON,/;"	v	module:COMMONS
NCHENCALLS	modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS,/;"	v	module:MODCHARMM
NCHIRAL	modamber9.f90	/^integer, dimension(:), allocatable :: NCHIRAL$/;"	v	module:MODAMBER9
NCHIRAL	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,NCHIRAL /;"	v	module:MODCHARMM
NCMP	commons.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(:), NCMP(/;"	v	module:COMMONS
NCMP	commons.o.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(:), NCMP(/;"	v	module:COMMONS
NCOM	modf1com.f90	/^      integer :: NCOM$/;"	v	module:F1COM
NCOOP	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP,/;"	v	module:COMMONS
NCOOP	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP,/;"	v	module:COMMONS
NCORE	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE,/;"	v	module:COMMONS
NCORE	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE,/;"	v	module:COMMONS
NCRBN	commons.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(/;"	v	module:COMMONS
NCRBN	commons.o.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(/;"	v	module:COMMONS
NCWALL	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,NCWALL,/;"	v	module:MODCHARMM
NDHESS	tosifumi.f	/^      SUBROUTINE NDHESS(/;"	s
NDIA3	tn.f	/^      SUBROUTINE NDIA3(/;"	s
NDIHEDRALS	modamb.f90	/^      INTEGER  match,bean,bondnumber,t, NDIHEDRALS$/;"	v	module:MODAMBER
NDONTMOVE	commons.f90	/^      INTEGER :: NDONTMOVE,/;"	v	module:COMMONS
NDONTMOVE	commons.o.f90	/^      INTEGER :: NDONTMOVE,/;"	v	module:COMMONS
NDUMMY	main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(/;"	v	program:GMIN
NDUMMY2	main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(:), NDUMMY2(/;"	v	program:GMIN
NDUMMY3	main.f90	/^      INTEGER J1,J2,NDUMMY3,/;"	v	program:GMIN
NEGVEC	tn.f	/^      SUBROUTINE NEGVEC(/;"	s
NENRPER	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER,/;"	v	module:COMMONS
NENRPER	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER,/;"	v	module:COMMONS
NEON	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON,/;"	v	module:COMMONS
NEON	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON,/;"	v	module:COMMONS
NEQUIL	commons.f90	/^     &                 PTSTEPS, NEQUIL,/;"	v	module:COMMONS
NEQUIL	commons.o.f90	/^     &                 PTSTEPS, NEQUIL,/;"	v	module:COMMONS
NEVL	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES, &$/;"	v	module:COMMONS
NEVL	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES, &$/;"	v	module:COMMONS
NEVS	commons.f90	/^     &        NEVL, NEVS,/;"	v	module:COMMONS
NEVS	commons.o.f90	/^     &        NEVL, NEVS,/;"	v	module:COMMONS
NEW	MSorig.f	42;"	c	subroutine:MSORIG
NEW	MSorigc.f	45;"	c	subroutine:MSORIGC
NEWCAPSID	newcapsid.f90	/^      SUBROUTINE NEWCAPSID /;"	s
NEWCONFST	modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT, RMSSAVE, NEWCONFST,/;"	v	module:MODCHARMM
NEWCONFT	modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT, NEWCONFT,/;"	v	module:MODCHARMM
NEWINERTIA	newinertia.f	/^      SUBROUTINE NEWINERTIA(/;"	s
NEWJUMP	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP,/;"	v	module:COMMONS
NEWJUMP	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP,/;"	v	module:COMMONS
NEWMINDIST	newmindist.f90	/^SUBROUTINE NEWMINDIST(/;"	s
NEWPAH	newpah.f90	/^      SUBROUTINE NEWPAH /;"	s
NEWRES	mc.F	/^      SUBROUTINE NEWRES(/;"	s
NEWRESTART	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART,/;"	v	module:COMMONS
NEWRESTART	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART,/;"	v	module:COMMONS
NEWRESTART_MD	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD,/;"	v	module:COMMONS
NEWRESTART_MD	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD,/;"	v	module:COMMONS
NEWRES_TEMP	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP,/;"	v	module:COMMONS
NEWRES_TEMP	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP,/;"	v	module:COMMONS
NEWROTGEOM	newmindist.f90	/^SUBROUTINE NEWROTGEOM(/;"	s
NEWROTGEOMSTOCK	newmindist.f90	/^SUBROUTINE NEWROTGEOMSTOCK(/;"	s
NEWTIP	newtip.f90	/^      SUBROUTINE NEWTIP(/;"	s
NFIX	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX,/;"	v	module:COMMONS
NFIX	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX,/;"	v	module:COMMONS
NFIXSEG	modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS, NREPEAT, NKNOWN, NFIXSEG$/;"	v	module:MODCHARMM
NFREEZE	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE,/;"	v	module:COMMONS
NFREEZE	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE,/;"	v	module:COMMONS
NGAUSS	vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=3, NGAUSS=/;"	v	module:VGWSP
NGBSITE	commons.f90	/^      INTEGER  NGBSITE,/;"	v	module:COMMONS
NGBSITE	commons.o.f90	/^      INTEGER  NGBSITE,/;"	v	module:COMMONS
NGROUPS	modamber9.f90	/^      INTEGER :: GROUPROTFREQ, NGROUPS$/;"	v	module:MODAMBER9
NHSMOVE	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE,/;"	v	module:COMMONS
NHSMOVE	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE,/;"	v	module:COMMONS
NHSRESTART	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART,/;"	v	module:COMMONS
NHSRESTART	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART,/;"	v	module:COMMONS
NICTOT	modamber9.f90	/^integer, dimension(:), allocatable :: NICTOT /;"	v	module:MODAMBER9
NIINIT	Farkas.f	/^      SUBROUTINE NIINIT$/;"	s
NINTS	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP, &$/;"	v	module:COMMONS
NINTS	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP, &$/;"	v	module:COMMONS
NINTV	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE, &$/;"	v	module:COMMONS
NINTV	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE, &$/;"	v	module:COMMONS
NINT_AMH	commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH,/;"	v	module:COMMONS
NINT_AMH	commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH,/;"	v	module:COMMONS
NKNOWN	modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS, NREPEAT, NKNOWN,/;"	v	module:MODCHARMM
NMOVABLEATOMS	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS,/;"	v	module:COMMONS
NMOVABLEATOMS	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS,/;"	v	module:COMMONS
NMRES	amhdummy.f	/^      INTEGER NMRES$/;"	v	module:AMHGLOBALS
NMSBSAVE	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE,/;"	v	module:COMMONS
NMSBSAVE	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE,/;"	v	module:COMMONS
NN	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN,/;"	v	module:COMMONS
NN	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN,/;"	v	module:COMMONS
NNBIPS	modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST/;"	v	module:MODAMBER9
NNBIPST	modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST,/;"	v	module:MODAMBER9
NOCISTRANS	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS,/;"	v	module:COMMONS
NOCISTRANS	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS,/;"	v	module:COMMONS
NOCISTRANSDNA	modamber9.f90	/^      LOGICAL NOCISTRANSDNA,/;"	v	module:MODAMBER9
NOCISTRANSRNA	modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA,/;"	v	module:MODAMBER9
NOMEGAC	modamber9.f90	/^integer, dimension(:), allocatable :: NOMEGAC$/;"	v	module:MODAMBER9
NOMEGAC	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,/;"	v	module:MODCHARMM
NOPHIPSIT	modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT,/;"	v	module:MODCHARMM
NORESET	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET,/;"	v	module:COMMONS
NORESET	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET,/;"	v	module:COMMONS
NORMAL	ptgrp.f	/^      SUBROUTINE NORMAL(/;"	s
NPAHT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT,/;"	v	module:COMMONS
NPAHT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT,/;"	v	module:COMMONS
NPAIRS	commons.f90	/^      INTEGER :: NPAIRS$/;"	v	module:COMMONS
NPAIRS	commons.o.f90	/^      INTEGER :: NPAIRS$/;"	v	module:COMMONS
NPAR	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR,/;"	v	module:COMMONS
NPAR	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR,/;"	v	module:COMMONS
NPERMGROUP	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP,/;"	v	module:COMMONS
NPERMGROUP	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP,/;"	v	module:COMMONS
NPERMSIZE	commons.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v	module:COMMONS
NPERMSIZE	commons.o.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v	module:COMMONS
NPHIPSI	modamber9.f90	/^integer, dimension(:), allocatable :: NPHIPSI$/;"	v	module:MODAMBER9
NPHIPSI	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,/;"	v	module:MODCHARMM
NPS	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS,/;"	v	module:COMMONS
NPS	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS,/;"	v	module:COMMONS
NPTOTAL	main.f90	/^      INTEGER J1,J2,NDUMMY3,NPTOTAL$/;"	v	program:GMIN
NPYSITE	commons.f90	/^      INTEGER  NGBSITE, NPYSITE,/;"	v	module:COMMONS
NPYSITE	commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE,/;"	v	module:COMMONS
NQ	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ,/;"	v	module:COMMONS
NQ	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ,/;"	v	module:COMMONS
NQUENCH	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH,/;"	v	module:COMMONS
NQUENCH	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH,/;"	v	module:COMMONS
NRBSITES	commons.f90	/^     &        HBINS, NRBSITES,/;"	v	module:COMMONS
NRBSITES	commons.o.f90	/^     &        HBINS, NRBSITES,/;"	v	module:COMMONS
NRBSITES1	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1,/;"	v	module:COMMONS
NRBSITES1	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1,/;"	v	module:COMMONS
NRELAX	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX,/;"	v	module:COMMONS
NRELAX	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX,/;"	v	module:COMMONS
NRENORM	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM,/;"	v	module:COMMONS
NRENORM	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM,/;"	v	module:COMMONS
NRENSTUCK	commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,/;"	v	module:COMMONS
NRENSTUCK	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,/;"	v	module:COMMONS
NREPEAT	modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS, NREPEAT,/;"	v	module:MODCHARMM
NRUNS	commons.f90	/^     &        MCSTEPS(3), NRUNS,/;"	v	module:COMMONS
NRUNS	commons.o.f90	/^     &        MCSTEPS(3), NRUNS,/;"	v	module:COMMONS
NS	commons.f90	/^     &        NINTV, NSE/;"	v	module:COMMONS
NS	commons.o.f90	/^     &        NINTV, NSE/;"	v	module:COMMONS
NSACCEPT	commons.f90	/^     &        NSUPER, NSACCEPT,/;"	v	module:COMMONS
NSACCEPT	commons.o.f90	/^     &        NSUPER, NSACCEPT,/;"	v	module:COMMONS
NSAVE	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE,/;"	v	module:COMMONS
NSAVE	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE,/;"	v	module:COMMONS
NSAVEINTE	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE,/;"	v	module:COMMONS
NSAVEINTE	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE,/;"	v	module:COMMONS
NSEED	commons.f90	/^     &        NINTV, NSEED,/;"	v	module:COMMONS
NSEED	commons.o.f90	/^     &        NINTV, NSEED,/;"	v	module:COMMONS
NSEGATOMS	modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS,/;"	v	module:MODCHARMM
NSETS	commons.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v	module:COMMONS
NSETS	commons.o.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v	module:COMMONS
NSHESS	tosifumi.f	/^      SUBROUTINE NSHESS(/;"	s
NSIDECHAIN	modamber9.f90	/^integer, dimension(:), allocatable :: NSIDECHAIN$/;"	v	module:MODAMBER9
NSIDECHAIN	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,/;"	v	module:MODCHARMM
NSSTOP	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP,/;"	v	module:COMMONS
NSSTOP	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP,/;"	v	module:COMMONS
NSTEP	vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM, CONPOT, NSTEP$/;"	v	module:VGWSP
NSUPER	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN, &$/;"	v	module:COMMONS
NSUPER	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN, &$/;"	v	module:COMMONS
NSUPERSTEP	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP,/;"	v	module:COMMONS
NSUPERSTEP	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP,/;"	v	module:COMMONS
NSURFMOVES	commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE, NSURFMOVES /;"	v	module:COMMONS
NSURFMOVES	commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE, NSURFMOVES /;"	v	module:COMMONS
NSYMINTERVAL	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL,/;"	v	module:COMMONS
NSYMINTERVAL	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL,/;"	v	module:COMMONS
NSYMQMAX	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX,/;"	v	module:COMMONS
NSYMQMAX	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX,/;"	v	module:COMMONS
NSYMREM	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=/;"	v	module:COMMONS
NSYMREM	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=/;"	v	module:COMMONS
NSpline	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline,/;"	v	module:COMMONS
NSpline	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline,/;"	v	module:COMMONS
NT	commons.f90	/^      INTE/;"	v	module:COMMONS
NT	commons.o.f90	/^      INTE/;"	v	module:COMMONS
NTAB	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB,/;"	v	module:COMMONS
NTAB	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB,/;"	v	module:COMMONS
NTARGETS	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS,/;"	v	module:COMMONS
NTARGETS	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS,/;"	v	module:COMMONS
NTIPT	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT,/;"	v	module:COMMONS
NTIPT	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT,/;"	v	module:COMMONS
NTW_ANGLES	modamber9.f90	/^integer:: NTW_ANGLES /;"	v	module:MODAMBER9
NTempPoints	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints,/;"	v	module:COMMONS
NTempPoints	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints,/;"	v	module:COMMONS
NUMBER_OF_ATOMS	func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	main.f90	/^      INTEGER :: NUMBER_OF_ATOMS$/;"	v	program:GMIN
NUMPRO	amhdummy.f	/^      INTEGER NUMPRO$/;"	v	module:AMHGLOBALS
NUMPRO_AMH	commons.f90	/^      INTEGER NUMPRO_AMH,/;"	v	module:COMMONS
NUMPRO_AMH	commons.o.f90	/^      INTEGER NUMPRO_AMH,/;"	v	module:COMMONS
NUM_G	vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=3, NUM_G=/;"	v	module:VGW
NUM_TO_CHAR	amhdummy.f	/^      SUBROUTINE NUM_TO_CHAR(/;"	s
NVAR	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR,/;"	v	module:COMMONS
NVAR	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR,/;"	v	module:COMMONS
NVEC	commons.f90	/^     &        NINTV, NSEED, NVEC,/;"	v	module:COMMONS
NVEC	commons.o.f90	/^     &        NINTV, NSEED, NVEC,/;"	v	module:COMMONS
NVECTORS	commons.f90	/^     &        NEVL, NEVS, NVECTORS,/;"	v	module:COMMONS
NVECTORS	commons.o.f90	/^     &        NEVL, NEVS, NVECTORS,/;"	v	module:COMMONS
N_ATOM	vgw.f90	/^     INTEGER, SAVE :: N_ATOM,/;"	v	module:VGW
N_ATOM	vgw.f90	/^     INTEGER, SAVE :: N_ATOM,/;"	v	module:VGWSP
N_DIM	vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=/;"	v	module:VGW
N_DIM	vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=/;"	v	module:VGWSP
NumberOfTrajectories	commons.f90	/^     &        NINTS, NumberOfTrajectories,/;"	v	module:COMMONS
NumberOfTrajectories	commons.o.f90	/^     &        NINTS, NumberOfTrajectories,/;"	v	module:COMMONS
OBJCTF	pyg.f90	/^      SUBROUTINE OBJCTF(/;"	s
OBJCTFGB	takestepmsgb.f90	/^      SUBROUTINE OBJCTFGB(/;"	s
OCCUPANCY	molinfo.f90	/^        DOUBLE PRECISION   :: OCCUPANCY /;"	k	type:ATOM
ODDCHARGE	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE,/;"	v	module:COMMONS
ODDCHARGE	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE,/;"	v	module:COMMONS
ODDTHOMSON	thomson.f	/^      SUBROUTINE ODDTHOMSON(/;"	s
ODESD	odesd.f	/^      SUBROUTINE ODESD(/;"	s
ODIHET	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET,/;"	v	module:MODCHARMM
OEINTT	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT, ORGYT, OHYDRGYT, OEINTT$/;"	v	module:MODCHARMM
OFFSET	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:LJCAPSIDMODULE
OFFSET	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:PYMODULE
OHT	commons.f90	/^      LOGICAL :: FIELDT, OHT,/;"	v	module:COMMONS
OHT	commons.o.f90	/^      LOGICAL :: FIELDT, OHT,/;"	v	module:COMMONS
OHYDRGYT	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT, ORGYT, OHYDRGYT,/;"	v	module:MODCHARMM
OLDECF	ljcapsidmodule.f90	/^SUBROUTINE OLDECF(/;"	s
OLDECF2	ljcapsidmodule.f90	/^SUBROUTINE OLDECF2(/;"	s
OLDECFcheck	ljcapsidmodule.f90	/^SUBROUTINE OLDECFcheck(/;"	s
OLDPARAMONOV	ljcapsidmodule.f90	/^       SUBROUTINE OLDPARAMONOV(/;"	s
OMEGAC	modamber9.f90	/^integer, dimension(:), allocatable :: OMEGAC$/;"	v	module:MODAMBER9
OMEGAC	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,/;"	v	module:MODCHARMM
OMEGAT	modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT,/;"	v	module:MODCHARMM
OMOVE	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE, OMOVE /;"	v	module:COMMONS
OMOVE	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE, OMOVE /;"	v	module:COMMONS
OMOVI	amhdummy.f	/^      INTEGER OMOVI$/;"	v	module:AMHGLOBALS
ONHBT	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT,/;"	v	module:MODCHARMM
ONNHBT	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT,/;"	v	module:MODCHARMM
OPENDATA	io_sanity.f90	/^FUNCTION OPENDATA(/;"	f
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OPENINPUT	io_sanity.f90	/^FUNCTION OPENINPUT(/;"	f
ORDERQ4	Q4.f	/^      SUBROUTINE ORDERQ4(/;"	s
ORGYT	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT, ORGYT,/;"	v	module:MODCHARMM
ORMSDT	modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT,/;"	v	module:MODCHARMM
ORTHO	ortho.f	/^      SUBROUTINE ORTHO(/;"	s
OSASAT	modcharmm.f90	/^      LOGICAL :: OSASAT,/;"	v	module:MODCHARMM
OST	pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(/;"	v	module:PYMODULE
OSTEP	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP,/;"	v	module:COMMONS
OSTEP	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP,/;"	v	module:COMMONS
OTPT	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID, FREEZE, &$/;"	v	module:COMMONS
OTPT	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID, FREEZE, &$/;"	v	module:COMMONS
OVECC	dftb.f	/^      SUBROUTINE OVECC(/;"	s
OVERL	frausi.f	/^      SUBROUTINE OVERL(/;"	s
P46	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46,/;"	v	module:COMMONS
P46	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46,/;"	v	module:COMMONS
P46MERDIFF	p46merdiff.f	/^        SUBROUTINE P46MERDIFF(/;"	s
PACHECO	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO,/;"	v	module:COMMONS
PACHECO	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO,/;"	v	module:COMMONS
PAH	pah.f	/^      SUBROUTINE PAH(/;"	s
PAHA	paha.f90	/^      SUBROUTINE PAHA /;"	s
PAHAT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT,/;"	v	module:COMMONS
PAHAT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT,/;"	v	module:COMMONS
PAHID	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID,/;"	v	module:COMMONS
PAHID	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID,/;"	v	module:COMMONS
PAHT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT,/;"	v	module:COMMONS
PAHT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT,/;"	v	module:COMMONS
PAHW99	pahw99.f90	/^      SUBROUTINE PAHW99(/;"	s
PAHW99T	commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T,/;"	v	module:COMMONS
PAHW99T	commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T,/;"	v	module:COMMONS
PAIRDIST	commons.f90	/^      INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:COMMONS
PAIRDIST	commons.o.f90	/^      INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:COMMONS
PAIRDISTANCE	operations.f90	/^FUNCTION PAIRDISTANCE(/;"	f
PAIRDISTT	commons.f90	/^      LOGICAL :: PAIRDISTT$/;"	v	module:COMMONS
PAIRDISTT	commons.o.f90	/^      LOGICAL :: PAIRDISTT$/;"	v	module:COMMONS
PARALLELT	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT,/;"	v	module:COMMONS
PARALLELT	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT,/;"	v	module:COMMONS
PARALLELTEMPERING	ptmc.F	/^      SUBROUTINE PARALLELTEMPERING$/;"	s
PARAMB2	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,/;"	v	module:COMMONS
PARAMB2	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,/;"	v	module:COMMONS
PARAMONOVCUTOFF	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF,/;"	v	module:COMMONS
PARAMONOVCUTOFF	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF,/;"	v	module:COMMONS
PARAMONOVNUMFIRSTDER	ljcapsidmodule.f90	/^SUBROUTINE PARAMONOVNUMFIRSTDER(/;"	s
PARAMONOVPBCX	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T, &$/;"	v	module:COMMONS
PARAMONOVPBCX	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T, &$/;"	v	module:COMMONS
PARAMONOVPBCY	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY,/;"	v	module:COMMONS
PARAMONOVPBCY	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY,/;"	v	module:COMMONS
PARAMONOVPBCZ	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ,/;"	v	module:COMMONS
PARAMONOVPBCZ	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ,/;"	v	module:COMMONS
PARAMONOVSECDER	ljcapsidmodule.f90	/^SUBROUTINE PARAMONOVSECDER(/;"	s
PARAMONOVT	commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT,/;"	v	module:COMMONS
PARAMONOVT	commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT,/;"	v	module:COMMONS
PARAMS	JM.f	168;"	c	subroutine:JM2C
PARAMS	JM.f	222;"	c	subroutine:JM3C
PARAMS	JM.f	42;"	c	subroutine:JMEC
PARAMa1	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,/;"	v	module:COMMONS
PARAMa1	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,/;"	v	module:COMMONS
PARAMa2	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,/;"	v	module:COMMONS
PARAMa2	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,/;"	v	module:COMMONS
PARAMb1	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,/;"	v	module:COMMONS
PARAMb1	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,/;"	v	module:COMMONS
PARAMc1	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,/;"	v	module:COMMONS
PARAMc1	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,/;"	v	module:COMMONS
PARAMc2	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,/;"	v	module:COMMONS
PARAMc2	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,/;"	v	module:COMMONS
PATCHY	commons.f90	/^       LOGICAL :: PATCHY,/;"	v	module:COMMONS
PATCHY	commons.o.f90	/^       LOGICAL :: PATCHY,/;"	v	module:COMMONS
PATCHYPAIR	patchy.f90	/^SUBROUTINE PATCHYPAIR /;"	s
PATCHYPOT	patchy.f90	/^SUBROUTINE PATCHYPOT /;"	s
PATOM1	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1,/;"	v	module:COMMONS
PATOM1	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1,/;"	v	module:COMMONS
PATOM2	commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2,/;"	v	module:COMMONS
PATOM2	commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2,/;"	v	module:COMMONS
PB	Pbglue.f	/^      BLOCK DATA PB$/;"	b
PBGLUE	Pbglue.f	/^      SUBROUTINE PBGLUE /;"	s
PBGLUET	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET,/;"	v	module:COMMONS
PBGLUET	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET,/;"	v	module:COMMONS
PCALL	io1.f	39;"	c	subroutine:IO1
PCALL	keyword.f	61;"	c	subroutine:KEYWORD
PCALL	potential.f	51;"	c	subroutine:POTENTIAL
PCALL	saveit.f	105;"	c	subroutine:A9INTESAVEIT
PCALL	saveit.f	29;"	c	subroutine:GSAVEIT
PCUT	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT,/;"	v	module:COMMONS
PCUT	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT,/;"	v	module:COMMONS
PCUTOFF	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF,/;"	v	module:COMMONS
PCUTOFF	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF,/;"	v	module:COMMONS
PEPSILON0	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,/;"	v	module:COMMONS
PEPSILON0	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,/;"	v	module:COMMONS
PEPSILON1	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,&$/;"	v	module:COMMONS
PEPSILON1	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,&$/;"	v	module:COMMONS
PEPSILONATTR	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(3), &$/;"	v	module:COMMONS
PEPSILONATTR	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(3), &$/;"	v	module:COMMONS
PERIODIC	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC,/;"	v	module:COMMONS
PERIODIC	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC,/;"	v	module:COMMONS
PERMDIST	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST,/;"	v	module:COMMONS
PERMDIST	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST,/;"	v	module:COMMONS
PERMGROUP	commons.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v	module:COMMONS
PERMGROUP	commons.o.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v	module:COMMONS
PERMOPT	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT,/;"	v	module:COMMONS
PERMOPT	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT,/;"	v	module:COMMONS
PERMU	modperm.f90	/^MODULE PERMU$/;"	m
PERMUTE	commons.f90	/^      INTEGER, ALLOCATABLE :: PERMUTE(/;"	v	module:COMMONS
PERMUTE	commons.o.f90	/^      INTEGER, ALLOCATABLE :: PERMUTE(/;"	v	module:COMMONS
PERTHRESH	modamber9.f90	/^double precision:: PERTHRESH /;"	v	module:MODAMBER9
PERTURBGEOMETRY	basinsampling.f90	/^      FUNCTION PERTURBGEOMETRY(/;"	f	subroutine:BASINSAMPLING
PFORCE	commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE,/;"	v	module:COMMONS
PFORCE	commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE,/;"	v	module:COMMONS
PHASE	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,/;"	v	module:MODAMBER
PHASE2	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,/;"	v	module:MODAMBER
PHASE3	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,/;"	v	module:MODAMBER
PHIPSI	modamber9.f90	/^integer, dimension(:), allocatable :: PHIPSI$/;"	v	module:MODAMBER9
PHIPSI	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,/;"	v	module:MODCHARMM
PI	vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: PI=/;"	v	module:VGWSP
PIKSR2	ptgrp.f	/^        SUBROUTINE PIKSR2(/;"	s
PIVOTP	modcharmm.f90	/^      DOUBLE PRECISION :: PIVOTP,/;"	v	module:MODCHARMM
PK	modamb.f90	/^      DOUBLE PRECISION PK,/;"	v	module:MODAMBER
PK2	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,/;"	v	module:MODAMBER
PK3	modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,/;"	v	module:MODAMBER
PLACERMAX	modcharmm.f90	/^      DOUBLE PRECISION :: PLACERMIN, PLACERMAX$/;"	v	module:MODCHARMM
PLACERMIN	modcharmm.f90	/^      DOUBLE PRECISION :: PLACERMIN,/;"	v	module:MODCHARMM
PLUS	commons.f90	/^     &        STAR, PLUS,/;"	v	module:COMMONS
PLUS	commons.o.f90	/^     &        STAR, PLUS,/;"	v	module:COMMONS
PN	modamb.f90	/^      INTEGER PN,/;"	v	module:MODAMBER
PN2	modamb.f90	/^      INTEGER PN,IDIVF,PN2,/;"	v	module:MODAMBER
PN3	modamb.f90	/^      INTEGER PN,IDIVF,PN2,PN3,/;"	v	module:MODAMBER
PNEWJUMP	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP,/;"	v	module:COMMONS
PNEWJUMP	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP,/;"	v	module:COMMONS
PORFUNCS	porfuncs.f90	/^MODULE PORFUNCS$/;"	m
POTDAT	Pbglue.f	121;"	c	block data:PB
POTDAT	Pbglue.f	294;"	c
POTDAT	Pbglue.f	325;"	c
POTEL	main.f90	/^      DOUBLE PRECISION POTEL$/;"	v	program:GMIN
POTENTIAL	potential.f	/^      SUBROUTINE POTENTIAL(/;"	s
PPVALU	fedor.f	/^      DOUBLE PRECISION FUNCTION PPVALU(/;"	f
PRC60	PachecoC60.f	/^      SUBROUTINE PRC60(/;"	s
PROGRESS	commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS,/;"	v	module:COMMONS
PROGRESS	commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS,/;"	v	module:COMMONS
PROJ	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES, &$/;"	v	module:COMMONS
PROJ	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES, &$/;"	v	module:COMMONS
PROJI	projI.f90	/^SUBROUTINE PROJI(/;"	s
PROJIH	projIh.f90	/^SUBROUTINE PROJIH(/;"	s
PROJIHINIT	projIh.f90	/^SUBROUTINE PROJIHINIT(/;"	s
PROJIHT	commons.f90	/^     &        PROJIT, PROJIHT,/;"	v	module:COMMONS
PROJIHT	commons.o.f90	/^     &        PROJIT, PROJIHT,/;"	v	module:COMMONS
PROJIINIT	projI.f90	/^SUBROUTINE PROJIINIT(/;"	s
PROJIT	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL, &$/;"	v	module:COMMONS
PROJIT	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL, &$/;"	v	module:COMMONS
PROT	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,/;"	v	module:MODCHARMM
PRTFRQ	commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ,/;"	v	module:COMMONS
PRTFRQ	commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ,/;"	v	module:COMMONS
PSCALEFAC1	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(/;"	v	module:COMMONS
PSCALEFAC1	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(/;"	v	module:COMMONS
PSCALEFAC1vec	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC1vec	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:PYMODULE
PSCALEFAC2	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(/;"	v	module:COMMONS
PSCALEFAC2	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(/;"	v	module:COMMONS
PSCALEFAC2vec	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC2vec	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:PYMODULE
PSIGMA0	commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(/;"	v	module:COMMONS
PSIGMA0	commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(/;"	v	module:COMMONS
PSIGMAATTR	commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(/;"	v	module:COMMONS
PSIGMAATTR	commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(/;"	v	module:COMMONS
PST	pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(/;"	v	module:PYMODULE
PTBASINSAMPLING	bspt.F	/^      SUBROUTINE PTBASINSAMPLING$/;"	s
PTEMAX	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX,/;"	v	module:COMMONS
PTEMAX	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX,/;"	v	module:COMMONS
PTEMIN	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN,/;"	v	module:COMMONS
PTEMIN	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN,/;"	v	module:COMMONS
PTGP	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(/;"	v	module:COMMONS
PTGP	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(/;"	v	module:COMMONS
PTGPGUIDE	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(:,:,:), PTGPGUIDE(/;"	v	module:COMMONS
PTGPGUIDE	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(:,:,:), PTGPGUIDE(/;"	v	module:COMMONS
PTGROUP	commons.f90	/^      CHARACTER(LEN=4), ALLOCATABLE, DIMENSION(:) :: PTGROUP /;"	v	module:COMMONS
PTGROUP	commons.o.f90	/^      CHARACTER(LEN=4), ALLOCATABLE, DIMENSION(:) :: PTGROUP /;"	v	module:COMMONS
PTGRP	ptgrp.f	/^      SUBROUTINE PTGRP(/;"	s
PTMC	commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T, & $/;"	v	module:COMMONS
PTMC	commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T, & $/;"	v	module:COMMONS
PTRANS	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,/;"	v	module:MODCHARMM
PTSTEPS	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB, &$/;"	v	module:COMMONS
PTSTEPS	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB, &$/;"	v	module:COMMONS
PTTMAX	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX,/;"	v	module:COMMONS
PTTMAX	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX,/;"	v	module:COMMONS
PTTMIN	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN,/;"	v	module:COMMONS
PTTMIN	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN,/;"	v	module:COMMONS
PULLT	commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT,/;"	v	module:COMMONS
PULLT	commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT,/;"	v	module:COMMONS
PYA1	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(/;"	v	module:COMMONS
PYA1	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(/;"	v	module:COMMONS
PYA11	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(/;"	v	module:COMMONS
PYA11	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(/;"	v	module:COMMONS
PYA12	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(/;"	v	module:COMMONS
PYA12	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(/;"	v	module:COMMONS
PYA1bin	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(/;"	v	module:COMMONS
PYA1bin	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(/;"	v	module:COMMONS
PYA2	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(/;"	v	module:COMMONS
PYA2	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(/;"	v	module:COMMONS
PYA21	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(/;"	v	module:COMMONS
PYA21	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(/;"	v	module:COMMONS
PYA22	commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(/;"	v	module:COMMONS
PYA22	commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(/;"	v	module:COMMONS
PYA2bin	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(:,:), PYA2bin(/;"	v	module:COMMONS
PYA2bin	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(:,:), PYA2bin(/;"	v	module:COMMONS
PYBINARYT	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT,/;"	v	module:COMMONS
PYBINARYT	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT,/;"	v	module:COMMONS
PYBINARYTYPE1	commons.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1,/;"	v	module:COMMONS
PYBINARYTYPE1	commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1,/;"	v	module:COMMONS
PYDPEPS	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS,/;"	v	module:COMMONS
PYDPEPS	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS,/;"	v	module:COMMONS
PYDPFCT	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT,/;"	v	module:COMMONS
PYDPFCT	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT,/;"	v	module:COMMONS
PYDPMU	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU,/;"	v	module:COMMONS
PYDPMU	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU,/;"	v	module:COMMONS
PYEPSNOT	commons.f90	/^     &                 PYSIGNOT, PYEPSNOT,/;"	v	module:COMMONS
PYEPSNOT	commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT,/;"	v	module:COMMONS
PYG	pyg.f90	/^      SUBROUTINE PYG /;"	s
PYGDP	pygdp.f90	/^      SUBROUTINE PYGDP /;"	s
PYGDPT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT,/;"	v	module:COMMONS
PYGDPT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT,/;"	v	module:COMMONS
PYGPERIODIC	ljcapsidmodule.f90	/^      SUBROUTINE PYGPERIODIC /;"	s
PYGPERIODICT	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT,/;"	v	module:COMMONS
PYGPERIODICT	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT,/;"	v	module:COMMONS
PYGT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT,/;"	v	module:COMMONS
PYGT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT,/;"	v	module:COMMONS
PYMODULE	pymodule.f90	/^ MODULE PYMODULE$/;"	m
PYOVERLAPTHRESH	commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH,/;"	v	module:COMMONS
PYOVERLAPTHRESH	commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH,/;"	v	module:COMMONS
PYPES	ljcapsidmodule.f90	/^SUBROUTINE PYPES(/;"	s
PYSIGNOT	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT, &$/;"	v	module:COMMONS
PYSIGNOT	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT, &$/;"	v	module:COMMONS
PYSITEORIENTATIONS	multisitepy.f90	/^      SUBROUTINE PYSITEORIENTATIONS /;"	s
PYSWAP	commons.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(/;"	v	module:COMMONS
PYSWAP	commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(/;"	v	module:COMMONS
PerturbGeometry	tetherfunc.f90	/^      function PerturbGeometry(/;"	f	module:tetherfunc
PrintXyz	tetherfunc.f90	/^      subroutine PrintXyz(/;"	s	module:tetherfunc
Q	vgw.f90	/^  DOUBLE PRECISION :: Q(/;"	v
Q4	Q4.f	/^      DOUBLE PRECISION FUNCTION Q4(/;"	f
Q4C	cgmin.f	39;"	c	subroutine:CGMIN
Q4C	mc.F	40;"	c	subroutine:MC
Q4C	mylbfgs.f	48;"	c	subroutine:MYLBFGS
Q4COEF	Q4.f	143;"	c	subroutine:EVASH4
Q4COEF	Q4.f	67;"	c	subroutine:SHINIT
Q4T	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T,/;"	v	module:COMMONS
Q4T	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T,/;"	v	module:COMMONS
QCUTOFF	modamb.f90	/^      DOUBLE PRECISION  QCUTOFF,/;"	v	module:MODAMBER
QD2T	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T,/;"	v	module:COMMONS
QD2T	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T,/;"	v	module:COMMONS
QDLIMIT	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT,/;"	v	module:COMMONS
QDLIMIT	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT,/;"	v	module:COMMONS
QDT	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT,/;"	v	module:COMMONS
QDT	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT,/;"	v	module:COMMONS
QDTEST	qdtest.f	/^      SUBROUTINE QDTEST(/;"	s
QDTEST2	qdtest2.f	/^      SUBROUTINE QDTEST2(/;"	s
QMIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	program:GMIN
QMIN	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:QMODULE
QMINAV	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(/;"	v	module:COMMONS
QMINAV	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(/;"	v	module:COMMONS
QMINP	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	program:GMIN
QMINP	qmod.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:QMODULE
QMINPCSMAV	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
QMINPCSMAV	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
QMODULE	qmod.f90	/^MODULE QMODULE$/;"	m
QORDER_BLJ	qorderparam_blj.f90	/^      SUBROUTINE QORDER_BLJ(/;"	s
QORDER_LJ	qorderparam_lj.f90	/^      SUBROUTINE QORDER_LJ(/;"	s
QTSALLIS	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS,/;"	v	module:COMMONS
QTSALLIS	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS,/;"	v	module:COMMONS
QUAD	quad.f	/^      SUBROUTINE QUAD(/;"	s
QUADT	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT,/;"	v	module:COMMONS
QUADT	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT,/;"	v	module:COMMONS
QUCENTRE	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE,/;"	v	module:COMMONS
QUCENTRE	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE,/;"	v	module:COMMONS
QUENCH	quench.f	/^      SUBROUTINE QUENCH(/;"	s
QUENCHDOS	commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS,/;"	v	module:COMMONS
QUENCHDOS	commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS,/;"	v	module:COMMONS
QUENCHFRQ	commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ,/;"	v	module:COMMONS
QUENCHFRQ	commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ,/;"	v	module:COMMONS
R	dist.f90	/^DOUBLE PRE/;"	v	module:distance
RAD	rad.f	/^      SUBROUTINE RAD(/;"	s
RAD	vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(3), CV(3), CR, RAD$/;"	v
RADIFT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT,/;"	v	module:COMMONS
RADIFT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT,/;"	v	module:COMMONS
RADIUS	commons.f90	/^     &                 CQMAX, RADIUS,/;"	v	module:COMMONS
RADIUS	commons.o.f90	/^     &                 CQMAX, RADIUS,/;"	v	module:COMMONS
RADR	rad.f	/^      SUBROUTINE RADR(/;"	s
RANDDP	dprand.f	18;"	c	subroutine:SDPRND
RANDDP	dprand.f	62;"	c	function:DPRAND
RANDOMSEEDT	commons.f90	/^     &        AMBERT, RANDOMSEEDT,/;"	v	module:COMMONS
RANDOMSEEDT	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT,/;"	v	module:COMMONS
RANGESQ	commons.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ,/;"	v	module:COMMONS
RANGESQ	commons.o.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ,/;"	v	module:COMMONS
RBIO	finalio.f	/^      SUBROUTINE RBIO(/;"	s
RBSTLA	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(/;"	v	module:COMMONS
RBSTLA	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(/;"	v	module:COMMONS
RBUV	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(/;"	v	module:COMMONS
RBUV	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(/;"	v	module:COMMONS
RC	modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,/;"	v	module:consts
RC	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,/;"	v	module:consts_trans_97
RCM	vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(/;"	v
RCONST	ljpshift.f	261;"	c	subroutine:LJPSHIFTG
RCONST	ljpshift.f	322;"	c	subroutine:LJPSHIFTS
RCONST	ljpshift.f	50;"	c	subroutine:LJPSHIFT
RCONSTBIN	BLJcluster.f	230;"	c	subroutine:LJPSHIFTGBINC
RCONSTBIN	BLJcluster.f	33;"	c	subroutine:LJPSHIFTBINC
RCUTOFF	modamb.f90	/^      DOUBLE PRECISION  QCUTOFF, RCUTOFF,/;"	v	module:MODAMBER
READA	input.f	/^      SUBROUTINE READA(/;"	s
READCH	input.f	/^      SUBROUTINE READCH(/;"	s
READF	input.f	/^      SUBROUTINE READF(/;"	s
READI	input.f	/^      SUBROUTINE READI(/;"	s
READK	input.f	/^      SUBROUTINE READK(/;"	s
READL	input.f	/^      ENTRY READL(/;"	e	subroutine:READU
READRST	io_sanity.f90	/^FUNCTION READRST(/;"	f
READSNGL	input.f	/^      SUBROUTINE READSNGL(/;"	s
READTOBUFFER	io_sanity.f90	/^FUNCTION READTOBUFFER(/;"	f
READU	input.f	/^      SUBROUTINE READU(/;"	s
READ_CMD_ARGS	read_cmd_args.f90	/^SUBROUTINE READ_CMD_ARGS$/;"	s
REALNATOMS	ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:LJCAPSIDMODULE
REALNATOMS	pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:PYMODULE
REALQCUTOFF	modamb.f90	/^      DOUBLE PRECISION  QCUTOFF, RCUTOFF, REALQCUTOFF,/;"	v	module:MODAMBER
REALRCUTOFF	modamb.f90	/^      DOUBLE PRECISION  QCUTOFF, RCUTOFF, REALQCUTOFF, REALRCUTOFF$/;"	v	module:MODAMBER
RECORD_STAT	basinsampling.f90	/^      SUBROUTINE RECORD_STAT(/;"	s	subroutine:BASINSAMPLING
REFCOORD	modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,/;"	v	module:MODCHARMM
REFIHB	modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: REFIHB,/;"	v	module:MODCHARMM
REFJHB	modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: REFIHB,REFJHB,/;"	v	module:MODCHARMM
REFKHB	modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: REFIHB,REFJHB,REFKHB$/;"	v	module:MODCHARMM
REFLECT	ptgrp.f	/^      SUBROUTINE REFLECT(/;"	s
REFNHB	modcharmm.f90	/^      INTEGER  :: REFNHB$/;"	v	module:MODCHARMM
REFPPSANGLE	modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,COORCOMP,REFPPSANGLE /;"	v	module:MODCHARMM
REN	mc.F	/^      SUBROUTINE REN(/;"	s
RENORM	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM,/;"	v	module:COMMONS
RENORM	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM,/;"	v	module:COMMONS
REORIENT	reorient.f90	/^SUBROUTINE REORIENT(/;"	s
REPATF	modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS, REPATF,/;"	v	module:MODCHARMM
REPATL	modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS, REPATF, REPATL /;"	v	module:MODCHARMM
REPORT	input.f	/^      SUBROUTINE REPORT(/;"	s
REPPHIF	modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: REPPHIF,/;"	v	module:MODCHARMM
REPPHIL	modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: REPPHIF, REPPHIL /;"	v	module:MODCHARMM
REPULSE	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA, REPULSE,/;"	v	module:distance
REQ11	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11,/;"	v	module:COMMONS
REQ11	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11,/;"	v	module:COMMONS
REQ12	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12,/;"	v	module:COMMONS
REQ12	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12,/;"	v	module:COMMONS
REQ22	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22,/;"	v	module:COMMONS
REQ22	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22,/;"	v	module:COMMONS
REREAD	input.f	/^      SUBROUTINE REREAD(/;"	s
RESEED	reseed.f	/^      SUBROUTINE RESEED(/;"	s
RESIZE	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE,/;"	v	module:COMMONS
RESIZE	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE,/;"	v	module:COMMONS
RESIZET	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET,/;"	v	module:COMMONS
RESIZET	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET,/;"	v	module:COMMONS
REST	mc.F	/^      SUBROUTINE REST(/;"	s
RESTART	commons.f90	/^     &        ZETT2, RESTART,/;"	v	module:COMMONS
RESTART	commons.o.f90	/^     &        ZETT2, RESTART,/;"	v	module:COMMONS
RESTORESTATE	GMINdump.f90	/^SUBROUTINE RESTORESTATE(/;"	s
RESTORET	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET,/;"	v	module:COMMONS
RESTORET	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET,/;"	v	module:COMMONS
RES_ID	molinfo.f90	/^        INTEGER            :: RES_ID /;"	k	type:ATOM
RES_NAME	molinfo.f90	/^        CHARACTER (LEN=10) :: RES_NAME /;"	k	type:ATOM
RGCL2	commons.f90	/^     &        PROJ, RGCL2,/;"	v	module:COMMONS
RGCL2	commons.o.f90	/^     &        PROJ, RGCL2,/;"	v	module:COMMONS
RHO	commons.f90	/^     DOUBLE PRECISION RHO,/;"	v	module:COMMONS
RHO	commons.o.f90	/^     DOUBLE PRECISION RHO,/;"	v	module:COMMONS
RHOC10H	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H,/;"	v	module:COMMONS
RHOC10H	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H,/;"	v	module:COMMONS
RHOC20H	commons.f90	/^     &                 RHOCH10, RHOC20H,/;"	v	module:COMMONS
RHOC20H	commons.o.f90	/^     &                 RHOCH10, RHOC20H,/;"	v	module:COMMONS
RHOCC0	commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12, &$/;"	v	module:COMMONS
RHOCC0	commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12, &$/;"	v	module:COMMONS
RHOCC10	commons.f90	/^     &                 RHOCC0, RHOCC10,/;"	v	module:COMMONS
RHOCC10	commons.o.f90	/^     &                 RHOCC0, RHOCC10,/;"	v	module:COMMONS
RHOCC20	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,/;"	v	module:COMMONS
RHOCC20	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,/;"	v	module:COMMONS
RHOCH0	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0,/;"	v	module:COMMONS
RHOCH0	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0,/;"	v	module:COMMONS
RHOCH10	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, &$/;"	v	module:COMMONS
RHOCH10	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, &$/;"	v	module:COMMONS
RHOCH20	commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20,/;"	v	module:COMMONS
RHOCH20	commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20,/;"	v	module:COMMONS
RHOHH0	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0,/;"	v	module:COMMONS
RHOHH0	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0,/;"	v	module:COMMONS
RHOHH10	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10,/;"	v	module:COMMONS
RHOHH10	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10,/;"	v	module:COMMONS
RHOHH20	commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20,/;"	v	module:COMMONS
RHOHH20	commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20,/;"	v	module:COMMONS
RHS	vgw.f90	/^SUBROUTINE RHS(/;"	s
RHSS	vgw.f90	/^SUBROUTINE RHSS(/;"	s
RIGID	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID,/;"	v	module:COMMONS
RIGID	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID,/;"	v	module:COMMONS
RINGROTSCALE	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE,/;"	v	module:COMMONS
RINGROTSCALE	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE,/;"	v	module:COMMONS
RKMIN	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN,/;"	v	module:COMMONS
RKMIN	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN,/;"	v	module:COMMONS
RK_R	commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR, &$/;"	v	module:COMMONS
RK_R	commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR, &$/;"	v	module:COMMONS
RK_THETA	commons.f90	/^     &                 RK_R, RK_THETA,/;"	v	module:COMMONS
RK_THETA	commons.o.f90	/^     &                 RK_R, RK_THETA,/;"	v	module:COMMONS
RMDRVT	rigidbaa.f90	/^      SUBROUTINE RMDRVT(/;"	s
RMIvec	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:LJCAPSIDMODULE
RMIvec	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:PYMODULE
RMS	commons.f90	/^     &                 TFAC(3), RMS,/;"	v	module:COMMONS
RMS	commons.o.f90	/^     &                 TFAC(3), RMS,/;"	v	module:COMMONS
RMSBEST	modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: RMSBEST,/;"	v	module:MODCHARMM
RMSCOOR	modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: RMSBEST,RMSCOOR /;"	v	module:MODCHARMM
RMSLIMIT	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,/;"	v	module:MODCHARMM
RMSSAVE	modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT, RMSSAVE,/;"	v	module:MODCHARMM
RMST	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT, RMST,/;"	v	module:MODCHARMM
RMSTOL	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,/;"	v	module:MODCHARMM
ROTAMERT	modamber9.f90	/^      LOGICAL :: ROTAMERT$/;"	v	module:MODAMBER9
ROTATE_ABOUT_AXIS_ORIGIN	transforms.f90	/^   FUNCTION ROTATE_ABOUT_AXIS_ORIGIN(/;"	f	module:TRANSFORMS
ROTATE_ABOUT_XYZ	transforms.f90	/^    FUNCTION ROTATE_ABOUT_XYZ(/;"	f	module:TRANSFORMS
ROTATION	takestepmsgb.f90	/^      SUBROUTINE ROTATION /;"	s
ROTCENTRE	modamber9.f90	/^      INTEGER :: ROTMAXCHANGE, ROTCENTRE$/;"	v	module:MODAMBER9
ROTCUTOFF	modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW, ROTCUTOFF /;"	v	module:MODAMBER9
ROTM	ptgrp.f	/^      SUBROUTINE ROTM(/;"	s
ROTMAT	lwotp.f90	/^      SUBROUTINE ROTMAT /;"	s
ROTMAX	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,/;"	v	module:MODCHARMM
ROTMAXCHANGE	modamber9.f90	/^      INTEGER :: ROTMAXCHANGE,/;"	v	module:MODAMBER9
ROTOCCUW	modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW,/;"	v	module:MODAMBER9
ROTPSELECT	modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT,/;"	v	module:MODAMBER9
ROTXZ	orient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTZT	modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART, INITROT, TRANSXYT, ROTZT$/;"	v	module:MODCHARMM
RPRO	modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,/;"	v	module:MODCHARMM
S2	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2,/;"	v	module:distance
SACCRAT	commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT,/;"	v	module:COMMONS
SACCRAT	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT,/;"	v	module:COMMONS
SAVEBINSTRUCTURES	basinsampling.f90	/^    SUBROUTINE SAVEBINSTRUCTURES(/;"	s	subroutine:BASINSAMPLING
SAVEBINSTRUCTURES	tetherfunc.f90	/^    SUBROUTINE SAVEBINSTRUCTURES(/;"	s	module:tetherfunc
SAVEBINSTRUCTURESMPI	tetherfunc.f90	/^    SUBROUTINE SAVEBINSTRUCTURESMPI(/;"	s	module:tetherfunc
SAVEQ	commons.f90	/^     &        SORTT, HIT, SAVEQ,/;"	v	module:COMMONS
SAVEQ	commons.o.f90	/^     &        SORTT, HIT, SAVEQ,/;"	v	module:COMMONS
SBEG	mylapack.f	/^      FUNCTION SBEG(/;"	f
SC	sc.f	/^      SUBROUTINE SC(/;"	s
SCC	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC,/;"	v	module:COMMONS
SCC	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC,/;"	v	module:COMMONS
SCEPS	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS,/;"	v	module:COMMONS
SCEPS	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS,/;"	v	module:COMMONS
SCHCK1	mylapack.f	/^      SUBROUTINE SCHCK1(/;"	s
SCHCK2	mylapack.f	/^      SUBROUTINE SCHCK2(/;"	s
SCHCK3	mylapack.f	/^      SUBROUTINE SCHCK3(/;"	s
SCHCK4	mylapack.f	/^      SUBROUTINE SCHCK4(/;"	s
SCHCK5	mylapack.f	/^      SUBROUTINE SCHCK5(/;"	s
SCREENC	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SCT	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT,/;"	v	module:COMMONS
SCT	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT,/;"	v	module:COMMONS
SDIFF	mylapack.f	/^      FUNCTION SDIFF(/;"	f
SDPRND	dprand.f	/^        SUBROUTINE SDPRND /;"	s
SDTOL	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL,/;"	v	module:COMMONS
SDTOL	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL,/;"	v	module:COMMONS
SEEDT	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT,/;"	v	module:COMMONS
SEEDT	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT,/;"	v	module:COMMONS
SEED_AMH	commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,/;"	v	module:COMMONS
SEED_AMH	commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,/;"	v	module:COMMONS
SEGMENTT	modcharmm.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: SEGMENTT$/;"	v	module:MODCHARMM
SEG_NAME	molinfo.f90	/^        CHARACTER (LEN=10) :: SEG_NAME /;"	k	type:ATOM
SELECTT	modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT, NEWCONFT, SELECTT,/;"	v	module:MODCHARMM
SELFT	commons.f90	/^     &        FRAUSIT, ANGST, SELFT,/;"	v	module:COMMONS
SELFT	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT,/;"	v	module:COMMONS
SETCENT	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT,/;"	v	module:COMMONS
SETCENT	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT,/;"	v	module:COMMONS
SETCENTRE	centre.f	/^      SUBROUTINE SETCENTRE(/;"	s
SETCHIRAL	modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL, SETCHIRAL,/;"	v	module:MODAMBER9
SETPAR	tn.f	/^      SUBROUTINE SETPAR(/;"	s
SETS	commons.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v	module:COMMONS
SETS	commons.o.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v	module:COMMONS
SETUCR	tn.f	/^      SUBROUTINE SETUCR(/;"	s
SETUPAMB	amber9dummy.f90	/^SUBROUTINE SETUPAMB(/;"	s
SET_ATOMS	molinfo.f90	/^        LOGICAL FUNCTION SET_ATOMS(/;"	f	module:MOLINFO
SET_CHECK_CHIRAL	amber9dummy.f90	/^SUBROUTINE SET_CHECK_CHIRAL(/;"	s
SGBMV	mylapack.f	/^      SUBROUTINE SGBMV(/;"	s
SGEMV	mylapack.f	/^      SUBROUTINE SGEMV(/;"	s
SGER	mylapack.f	/^      SUBROUTINE SGER(/;"	s
SHELLMOVEMAX	commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX,/;"	v	module:COMMONS
SHELLMOVEMAX	commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX,/;"	v	module:COMMONS
SHELLMOVES	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: SHELLMOVES /;"	v	module:COMMONS
SHELLMOVES	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: SHELLMOVES /;"	v	module:COMMONS
SHELLPROB	commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB,/;"	v	module:COMMONS
SHELLPROB	commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB,/;"	v	module:COMMONS
SHIFTCUT	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT,/;"	v	module:COMMONS
SHIFTCUT	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT,/;"	v	module:COMMONS
SHINIT	Q4.f	/^      SUBROUTINE SHINIT$/;"	s
SIAZ	ptgrp.f	/^      SUBROUTINE SIAZ(/;"	s
SIDECHAIN	modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,/;"	v	module:MODCHARMM
SIDECHAINP	modcharmm.f90	/^      DOUBLE PRECISION :: PIVOTP, SIDECHAINP$/;"	v	module:MODCHARMM
SIG	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG,/;"	v	module:COMMONS
SIG	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG,/;"	v	module:COMMONS
SIG2	vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(6), E_ZERO, SIGMA, SIG2,/;"	v	module:VGW
SIGMA	modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,KAPPA,SIGMA,/;"	v	module:consts_trans_97
SIGMA	vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(6), E_ZERO, SIGMA,/;"	v	module:VGW
SIGMA	vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA,/;"	v	module:VGWSP
SIGMAF	commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF,/;"	v	module:COMMONS
SIGMAF	commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF,/;"	v	module:COMMONS
SIGMASQ	commons.f90	/^       DOUBLE PRECISION :: SIGMASQ,/;"	v	module:COMMONS
SIGMASQ	commons.o.f90	/^       DOUBLE PRECISION :: SIGMASQ,/;"	v	module:COMMONS
SIGNOT	commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
SIGNOT	commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
SISW	SiSW.f	/^      subroutine SISW(/;"	s
SITE	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(/;"	v	module:COMMONS
SITE	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(/;"	v	module:COMMONS
SITEBF	multisitepy.f90	/^      SUBROUTINE SITEBF /;"	s
SITECOORDS	pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(:,:),ELLST2(:,:),ELLMAT(:,:,:),SITECOORDS(/;"	v	module:PYMODULE
SKIPBL	input.f	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SMAKE	mylapack.f	/^      SUBROUTINE SMAKE(/;"	s
SMESSG	mylapack.f	/^      SUBROUTINE SMESSG(/;"	s
SMINATOMA	modamber9.f90	/^INTEGER :: SMINATOMA,/;"	v	module:MODAMBER9
SMINATOMB	modamber9.f90	/^INTEGER :: SMINATOMA, SMINATOMB$/;"	v	module:MODAMBER9
SMINDISTFINISH	modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH,/;"	v	module:MODAMBER9
SMINDISTSTART	modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC, SMINDISTSTART,/;"	v	module:MODAMBER9
SMINK	modamber9.f90	/^DOUBLE PRECISION :: SMINK,/;"	v	module:MODAMBER9
SMINKCURRENT	modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH, SMINKCURRENT$/;"	v	module:MODAMBER9
SMINKINC	modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC,/;"	v	module:MODAMBER9
SOPEN	mylapack.f	/^      SUBROUTINE SOPEN(/;"	s
SORT3	sort3.f	/^      SUBROUTINE SORT3(/;"	s
SORT4	sort4.f	/^      SUBROUTINE SORT4(/;"	s
SORT5	supermc.f	/^      SUBROUTINE SORT5(/;"	s
SORTN	hsmove.f	/^      SUBROUTINE SORTN(/;"	s
SORTT	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT, &$/;"	v	module:COMMONS
SORTT	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT, &$/;"	v	module:COMMONS
SORTXYZ	ptgrp.f	/^      SUBROUTINE SORTXYZ(/;"	s
SPHERERAD	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,NCWALL,BOXSIZE,SPHERERAD$/;"	v	module:MODCHARMM
SPHERET	modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT, RMST, SPHERET,/;"	v	module:MODCHARMM
SQUEEZED	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED,/;"	v	module:COMMONS
SQUEEZED	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED,/;"	v	module:COMMONS
SQUEEZER	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER,/;"	v	module:COMMONS
SQUEEZER	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER,/;"	v	module:COMMONS
SQUEEZET	commons.f90	/^     &        MSORIGT, SQUEEZET,/;"	v	module:COMMONS
SQUEEZET	commons.o.f90	/^     &        MSORIGT, SQUEEZET,/;"	v	module:COMMONS
SSBFGS	tn.f	/^      SUBROUTINE SSBFGS(/;"	s
SSBMV	mylapack.f	/^      SUBROUTINE SSBMV(/;"	s
SSPMV	mylapack.f	/^      SUBROUTINE SSPMV(/;"	s
SSPR	mylapack.f	/^      SUBROUTINE SSPR(/;"	s
SSPR2	mylapack.f	/^      SUBROUTINE SSPR2(/;"	s
SSYMV	mylapack.f	/^      SUBROUTINE SSYMV(/;"	s
SSYR	mylapack.f	/^      SUBROUTINE SSYR(/;"	s
SSYR2	mylapack.f	/^      SUBROUTINE SSYR2(/;"	s
ST	cgmin.f	36;"	c	subroutine:CGMIN
ST	linmin.f	34;"	c	subroutine:LINMIN
STAKESTEP	supermc.f	/^      SUBROUTINE STAKESTEP(/;"	s
STAR	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE, &$/;"	v	module:COMMONS
STAR	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE, &$/;"	v	module:COMMONS
STBMV	mylapack.f	/^      SUBROUTINE STBMV(/;"	s
STBSV	mylapack.f	/^      SUBROUTINE STBSV(/;"	s
STCHRG	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(/;"	v	module:COMMONS
STCHRG	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(/;"	v	module:COMMONS
STEEREDMINT	modamber9.f90	/^LOGICAL :: STEEREDMINT,/;"	v	module:MODAMBER9
STEP	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP,/;"	v	module:COMMONS
STEP	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP,/;"	v	module:COMMONS
STEP1	tn.f	/^      DOUBLE PRECISION FUNCTION STEP1(/;"	f
STEPANGLE	modcharmm.f90	/^      DOUBLE PRECISION :: RPRO, STEPBOND, STEPANGLE,/;"	v	module:MODCHARMM
STEPBOND	modcharmm.f90	/^      DOUBLE PRECISION :: RPRO, STEPBOND,/;"	v	module:MODCHARMM
STEPDIHE	modcharmm.f90	/^      DOUBLE PRECISION :: RPRO, STEPBOND, STEPANGLE, STEPDIHE$/;"	v	module:MODCHARMM
STEPOUT	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT,/;"	v	module:COMMONS
STEPOUT	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT,/;"	v	module:COMMONS
STICKY	sticky.f	/^      SUBROUTINE STICKY(/;"	s
STICKYSIG	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG,/;"	v	module:COMMONS
STICKYSIG	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG,/;"	v	module:COMMONS
STICKYT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT,/;"	v	module:COMMONS
STICKYT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT,/;"	v	module:COMMONS
STOCK	stock.f	/^      SUBROUTINE STOCK(/;"	s
STOCKAA	stockaa.f90	/^      SUBROUTINE STOCKAA /;"	s
STOCKAAT	commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT,/;"	v	module:COMMONS
STOCKAAT	commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT,/;"	v	module:COMMONS
STOCKLAMBDA	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA,/;"	v	module:COMMONS
STOCKLAMBDA	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA,/;"	v	module:COMMONS
STOCKMU	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU,/;"	v	module:COMMONS
STOCKMU	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU,/;"	v	module:COMMONS
STOCKT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT,/;"	v	module:COMMONS
STOCKT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT,/;"	v	module:COMMONS
STPMAX	tn.f	/^      SUBROUTINE STPMAX(/;"	s
STPMV	mylapack.f	/^      SUBROUTINE STPMV(/;"	s
STPSV	mylapack.f	/^      SUBROUTINE STPSV(/;"	s
STRAND	strand.f	/^      SUBROUTINE STRAND(/;"	s
STRANDT	commons.f90	/^     &        OTPT, LJMFT, STRANDT,/;"	v	module:COMMONS
STRANDT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT,/;"	v	module:COMMONS
STRANSITION	supermc.f	/^      SUBROUTINE STRANSITION(/;"	s
STRING	ptgrp.f	/^      CHARACTER(LEN=4) FUNCTION STRING(/;"	f
STRMV	mylapack.f	/^      SUBROUTINE STRMV(/;"	s
STRSV	mylapack.f	/^      SUBROUTINE STRSV(/;"	s
SUBSCR	tn.f	1024;"	c	subroutine:INITPC
SUBSCR	tn.f	1085;"	c	subroutine:SETPAR
SUBSCR	tn.f	155;"	c	subroutine:LMQN
SUBSCR	tn.f	888;"	c	subroutine:GTIMS
SUBSCR	tn.f	926;"	c	subroutine:MSOLVE
SUPERMC	supermc.f	/^      SUBROUTINE SUPERMC(/;"	s
SUPERSTEP	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP,/;"	v	module:COMMONS
SUPERSTEP	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP,/;"	v	module:COMMONS
SUPSTEP	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP,/;"	v	module:COMMONS
SUPSTEP	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP,/;"	v	module:COMMONS
SVERT	ljcapsidmodule.f90	/^      SUBROUTINE SVERT(/;"	s
SVtype	dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: SVtype /;"	v	module:distance
SW	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW,/;"	v	module:COMMONS
SW	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW,/;"	v	module:COMMONS
SWAPMOVEST	commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST,/;"	v	module:COMMONS
SWAPMOVEST	commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST,/;"	v	module:COMMONS
SWT	commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT,/;"	v	module:COMMONS
SWT	commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT,/;"	v	module:COMMONS
SWTHREE	SW.f	/^      SUBROUTINE SWTHREE(/;"	s
SWTWO	SW.f	/^      SUBROUTINE SWTWO(/;"	s
SYMMETRIZE	commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART, &$/;"	v	module:COMMONS
SYMMETRIZE	commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART, &$/;"	v	module:COMMONS
SYMMETRIZECSM	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM,/;"	v	module:COMMONS
SYMMETRIZECSM	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM,/;"	v	module:COMMONS
SYMMETRY	symmetry.f90	/^SUBROUTINE SYMMETRY(/;"	s
SYMMETRY2	symmetry2.f90	/^SUBROUTINE SYMMETRY2(/;"	s
SYMMETRYCSM	symmetrycsm.f90	/^SUBROUTINE SYMMETRYCSM(/;"	s
SYMREM	commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(/;"	v	module:COMMONS
SYMREM	commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(/;"	v	module:COMMONS
SYMTOL1	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1,/;"	v	module:COMMONS
SYMTOL1	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1,/;"	v	module:COMMONS
SYMTOL2	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2,/;"	v	module:COMMONS
SYMTOL2	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2,/;"	v	module:COMMONS
SYMTOL3	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3,/;"	v	module:COMMONS
SYMTOL3	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3,/;"	v	module:COMMONS
SYMTOL4	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4,/;"	v	module:COMMONS
SYMTOL4	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4,/;"	v	module:COMMONS
SYMTOL5	commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5,/;"	v	module:COMMONS
SYMTOL5	commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5,/;"	v	module:COMMONS
SYS	commons.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	module:COMMONS
SYS	commons.o.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	module:COMMONS
SaveNth	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth,/;"	v	module:COMMONS
SaveNth	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth,/;"	v	module:COMMONS
SwapProb	commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb,/;"	v	module:COMMONS
SwapProb	commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb,/;"	v	module:COMMONS
T12FAC	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC,/;"	v	module:COMMONS
T12FAC	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC,/;"	v	module:COMMONS
TABOO	taboo.f	/^      SUBROUTINE TABOO(/;"	s
TABOOT	commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT,/;"	v	module:COMMONS
TABOOT	commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT,/;"	v	module:COMMONS
TAKESTEP	takestep.f	/^      SUBROUTINE TAKESTEP(/;"	s
TAKESTEPDB	dbpg.f90	/^      SUBROUTINE TAKESTEPDB /;"	s
TAKESTEPELLIPSOIDS	ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPELLIPSOIDS(/;"	s
TAKESTEPELPSD	ljcapsidmodule.f90	/^      SUBROUTINE TAKESTEPELPSD /;"	s
TAKESTEPGB	ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPGB(/;"	s
TAKESTEPLJC	ljcoulomb.f	/^      SUBROUTINE TAKESTEPLJC(/;"	s
TAKESTEPLWOTP	lwotp.f90	/^      SUBROUTINE TAKESTEPLWOTP /;"	s
TAKESTEPMSGB	takestepmsgb.f90	/^      SUBROUTINE TAKESTEPMSGB /;"	s
TAKESTEPMSPY	takestepmspy.f90	/^      SUBROUTINE TAKESTEPMSPY /;"	s
TAKESTEPMULTISITEPY	multisitepy.f90	/^      SUBROUTINE TAKESTEPMULTISITEPY /;"	s
TAKESTEPPARAM	ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPPARAM(/;"	s
TAKESTEPSWAPMOVES	ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPSWAPMOVES(/;"	s
TARGET	commons.f90	/^      LOGICAL DEBUG, TARGET,/;"	v	module:COMMONS
TARGET	commons.o.f90	/^      LOGICAL DEBUG, TARGET,/;"	v	module:COMMONS
TARGETS	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TARGETS(/;"	v	module:COMMONS
TARGETS	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TARGETS(/;"	v	module:COMMONS
TAU	vgw.f90	/^     DOUBLE PRECISION, ALLOCATABLE, SAVE :: MASSARRY(:), TAU(/;"	v	module:VGWSP
TAUMAX	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX,/;"	v	module:COMMONS
TAUMAX	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX,/;"	v	module:COMMONS
TAUMAX	vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX,/;"	v	module:VGWSP
TAUMAX	vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX,/;"	v	module:VGW
TAUMAXFULL	commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX, &$/;"	v	module:COMMONS
TAUMAXFULL	commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX, &$/;"	v	module:COMMONS
TCOORDS	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: TCOORDS$/;"	v	module:COMMONS
TCOORDS	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: TCOORDS$/;"	v	module:COMMONS
TDHDT	commons.f90	/^     &        MULTPAHAT, TDHDT,/;"	v	module:COMMONS
TDHDT	commons.o.f90	/^     &        MULTPAHAT, TDHDT,/;"	v	module:COMMONS
TDT	commons.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT,/;"	v	module:COMMONS
TDT	commons.o.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT,/;"	v	module:COMMONS
TEIPS	modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,/;"	v	module:MODAMBER9
TEMP	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP,/;"	v	module:COMMONS
TEMP	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP,/;"	v	module:COMMONS
TEMPPARAM	modamber9.f90	/^      DOUBLE PRECISION, PARAMETER :: TEMPPARAM /;"	v	module:MODAMBER9
TEMPS	commons.f90	/^     &                 TFAC(3), RMS, TEMPS,/;"	v	module:COMMONS
TEMPS	commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS,/;"	v	module:COMMONS
TEST	input.f	923;"	c	subroutine:REPORT
TESTSYMOP	ptgrp.f	/^      SUBROUTINE TESTSYMOP(/;"	s
TETHER	commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT, & $/;"	v	module:COMMONS
TETHER	commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT, & $/;"	v	module:COMMONS
TETRAHEDRA	tetrahedra.f90	/^      SUBROUTINE TETRAHEDRA /;"	s
TFAC	commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA, &$/;"	v	module:COMMONS
TFAC	commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA, &$/;"	v	module:COMMONS
THOMSON	thomson.f	/^      SUBROUTINE THOMSON(/;"	s
THOMSONANGTOC	thomson.f	/^      SUBROUTINE THOMSONANGTOC(/;"	s
THOMSONCTOANG	thomson.f	/^      SUBROUTINE THOMSONCTOANG(/;"	s
THOMSONT	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT,/;"	v	module:COMMONS
THOMSONT	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT,/;"	v	module:COMMONS
THRESHOLDT	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT,/;"	v	module:COMMONS
THRESHOLDT	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT,/;"	v	module:COMMONS
TINY	modamb.f90	/^      DOUBLE PRECISION TINY$/;"	v	module:MODAMBER
TIP	commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP,/;"	v	module:COMMONS
TIP	commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP,/;"	v	module:COMMONS
TIP4P	tip.f	/^      SUBROUTINE TIP4P(/;"	s
TIPID	commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID,/;"	v	module:COMMONS
TIPID	commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID,/;"	v	module:COMMONS
TIPIO	finalio.f	/^      SUBROUTINE TIPIO(/;"	s
TKSTDCELPSD	gbcalamitic.f90	/^      SUBROUTINE TKSTDCELPSD /;"	s
TLANGV	modamber9.f90	/^      LOGICAL TSGLD,TLANGV,/;"	v	module:MODAMBER9
TMOVE	commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE,/;"	v	module:COMMONS
TMOVE	commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE,/;"	v	module:COMMONS
TMPCOORDS	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TMPCOORDS(/;"	v	program:GMIN
TN	tn.f	/^      SUBROUTINE TN /;"	s
TNT	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT,/;"	v	module:COMMONS
TNT	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT,/;"	v	module:COMMONS
TOLB	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB,/;"	v	module:COMMONS
TOLB	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB,/;"	v	module:COMMONS
TOLD	commons.f90	/^     &                 ECONV, TOLD,/;"	v	module:COMMONS
TOLD	commons.o.f90	/^     &                 ECONV, TOLD,/;"	v	module:COMMONS
TOLE	commons.f90	/^     &                 ECONV, TOLD, TOLE,/;"	v	module:COMMONS
TOLE	commons.o.f90	/^     &                 ECONV, TOLD, TOLE,/;"	v	module:COMMONS
TOMEGAC	modcharmm.f90	/^      LOGICAL :: TOMEGAC,/;"	v	module:MODCHARMM
TOSI	commons.f90	/^     &        PROJ, RGCL2, TOSI,/;"	v	module:COMMONS
TOSI	commons.o.f90	/^     &        PROJ, RGCL2, TOSI,/;"	v	module:COMMONS
TOSIFUMI	tosifumi.f	/^      SUBROUTINE TOSIFUMI(/;"	s
TOT	io1.f	38;"	c	subroutine:IO1
TOT	mc.F	1472;"	c	subroutine:REST
TOT	mc.F	1619;"	c	subroutine:REN
TOT	mc.F	39;"	c	subroutine:MC
TOT	potential.f	56;"	c	subroutine:POTENTIAL
TOT	saveit.f	104;"	c	subroutine:A9INTESAVEIT
TOT	saveit.f	28;"	c	subroutine:GSAVEIT
TOT	symmetry.f90	57;"	c	subroutine:SYMMETRY
TOT	symmetry2.f90	50;"	c	subroutine:SYMMETRY2
TOT	symmetrycsm.f90	40;"	c	subroutine:SYMMETRYCSM
TPAHA	commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA,/;"	v	module:COMMONS
TPAHA	commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA,/;"	v	module:COMMONS
TRACKDATAT	commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT,/;"	v	module:COMMONS
TRACKDATAT	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT,/;"	v	module:COMMONS
TRANS	trans.f	/^      DOUBLE PRECISION FUNCTION TRANS(/;"	f
TRANSFORMS	transforms.f90	/^MODULE TRANSFORMS$/;"	m
TRANSITION	mc.F	/^      SUBROUTINE TRANSITION(/;"	s
TRANSLATE	transforms.f90	/^    FUNCTION TRANSLATE(/;"	f	module:TRANSFORMS
TRANSMAX	modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,/;"	v	module:MODCHARMM
TRANSXYT	modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART, INITROT, TRANSXYT,/;"	v	module:MODCHARMM
TRENORM	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,& $/;"	v	module:COMMONS
TRENORM	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,& $/;"	v	module:COMMONS
TSALLIST	commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST,/;"	v	module:COMMONS
TSALLIST	commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST,/;"	v	module:COMMONS
TSGLD	modamber9.f90	/^      LOGICAL TSGLD,/;"	v	module:MODAMBER9
TSIDECHAIN	modcharmm.f90	/^      LOGICAL :: TOMEGAC,TSIDECHAIN /;"	v	module:MODCHARMM
TSTAR	commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR,/;"	v	module:COMMONS
TSTAR	commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR,/;"	v	module:COMMONS
TSTART	commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART,/;"	v	module:COMMONS
TSTART	commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART,/;"	v	module:COMMONS
TUNNELT	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT,/;"	v	module:COMMONS
TUNNELT	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT,/;"	v	module:COMMONS
TVIPS	modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,TVIPS$/;"	v	module:MODAMBER9
TWOD	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD,/;"	v	module:COMMONS
TWOD	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD,/;"	v	module:COMMONS
TWOPLUS	commons.f90	/^     &        STAR, PLUS, TWOPLUS,/;"	v	module:COMMONS
TWOPLUS	commons.o.f90	/^     &        STAR, PLUS, TWOPLUS,/;"	v	module:COMMONS
TW_DIFFP	modamber9.f90	/^double precision, dimension(:), allocatable :: TW_DIFFP$/;"	v	module:MODAMBER9
TW_SIDECHAIN	modamber9.f90	/^integer, dimension(:), allocatable :: TW_SIDECHAIN$/;"	v	module:MODAMBER9
TargetWL	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL,/;"	v	module:COMMONS
TargetWL	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL,/;"	v	module:COMMONS
TetheredWL	tether.f90	/^      subroutine TetheredWL$/;"	s
U	vgw.f90	/^     DOUB/;"	v	module:VGW
UACHIRAL	modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL,/;"	v	module:MODAMBER9
UNFREEZERES	commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES,/;"	v	module:COMMONS
UNFREEZERES	commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES,/;"	v	module:COMMONS
UTN	fedor.f	/^                 DOUBLE PRECISION FUNCTION UTN(/;"	f
VADD	ptgrp.f	/^      SUBROUTINE VADD(/;"	s
VAT	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,/;"	v	module:COMMONS
VAT	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,/;"	v	module:COMMONS
VATO	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,  VATO /;"	v	module:COMMONS
VATO	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,  VATO /;"	v	module:COMMONS
VEC	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VEC(/;"	v	module:COMMONS
VEC	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VEC(/;"	v	module:COMMONS
VECT	modconsts_trans_97.f90	/^     &                 ALPHA,VECT(/;"	v	module:consts_trans_97
VGW	commons.f90	/^     &        LJSITECOORDST, VGW,/;"	v	module:COMMONS
VGW	commons.o.f90	/^     &        LJSITECOORDST, VGW,/;"	v	module:COMMONS
VGW	vgw.f90	/^MODULE VGW$/;"	m
VGWQUENCH	vgw.f90	/^SUBROUTINE VGWQUENCH(/;"	s
VGWQUENCHSP	vgw.f90	/^SUBROUTINE VGWQUENCHSP(/;"	s
VGWSP	vgw.f90	/^MODULE VGWSP$/;"	m
VGWTOL	commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL,/;"	v	module:COMMONS
VGWTOL	commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL,/;"	v	module:COMMONS
VIEWDMBL	dmblmorse.f90	/^      SUBROUTINE VIEWDMBL(/;"	s
VIEWDMBLTD	dbptd.f90	/^      SUBROUTINE VIEWDMBLTD(/;"	s
VIEWMULTPAHA	multpaha.f90	/^      SUBROUTINE VIEWMULTPAHA(/;"	s
VIEWNEWTIP	newtip.f90	/^      SUBROUTINE VIEWNEWTIP(/;"	s
VIEWPATCHY	patchy.f90	/^SUBROUTINE VIEWPATCHY(/;"	s
VIEWPATCHYCURR	patchy.f90	/^SUBROUTINE VIEWPATCHYCURR(/;"	s
VIEWTDHD	tetrahedra.f90	/^      SUBROUTINE VIEWTDHD(/;"	s
VISITPROP	commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP,/;"	v	module:COMMONS
VISITPROP	commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP,/;"	v	module:COMMONS
VT	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: VT$/;"	v	module:COMMONS
VT	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: VT$/;"	v	module:COMMONS
Vpot	Ackland_metals.f90	/^        double precision function Vpot(/;"	f
Vpot_d	Ackland_metals.f90	/^        double precision function Vpot_d(/;"	f
Vpot_dd	Ackland_metals.f90	/^        double precision function Vpot_dd(/;"	f
Vpppi	modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,Vpppi,/;"	v	module:consts
Vppsig	modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,/;"	v	module:consts
Vspsig	modconsts.f90	/^     &                 Vsssig,Vspsig,/;"	v	module:consts
Vsssig	modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,&$/;"	v	module:consts
WALESAMH_INITIAL	amhdummy.f	/^      SUBROUTINE WALESAMH_INITIAL(/;"	s
WALESAMH_INTERFACE	amhdummy.f	/^      SUBROUTINE WALESAMH_INTERFACE(/;"	s
WATERDCT	commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT,/;"	v	module:COMMONS
WATERDCT	commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT,/;"	v	module:COMMONS
WATERKZT	commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT,/;"	v	module:COMMONS
WATERKZT	commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT,/;"	v	module:COMMONS
WATERPDC	waterpdc.f90	/^      SUBROUTINE WATERPDC /;"	s
WATERPKZ	waterpkz.f90	/^      SUBROUTINE WATERPKZ /;"	s
WATERSTEP	modamb.f90	/^      LOGICAL WATERSTEP$/;"	v	module:MODAMBER
WEIGHT	molinfo.f90	/^        DOUBLE PRECISION   :: WEIGHT /;"	k	type:ATOM
WEL	welch.f	/^      SUBROUTINE WEL(/;"	s
WELCH	commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH,/;"	v	module:COMMONS
WELCH	commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH,/;"	v	module:COMMONS
WEN	wenzel.f	/^      SUBROUTINE WEN(/;"	s
WENERGY	welch.f	/^      SUBROUTINE WENERGY(/;"	s
WENZEL	commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL,/;"	v	module:COMMONS
WENZEL	commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL,/;"	v	module:COMMONS
WGRAD	welch.f	/^      SUBROUTINE WGRAD(/;"	s
WRITECRD	io_sanity.f90	/^FUNCTION WRITECRD(/;"	f
WRITEPDB	io_sanity.f90	/^FUNCTION WRITEPDB(/;"	f
WRITERST	io_sanity.f90	/^FUNCTION WRITERST(/;"	f
XERBLA	dgetrf.f	/^      SUBROUTINE XERBLA(/;"	s
XERRWD	dlsode.f	/^      SUBROUTINE XERRWD /;"	s
XINSAVE	commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: XINSAVE(/;"	v	module:COMMONS
XINSAVE	commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: XINSAVE(/;"	v	module:COMMONS
XMOVERENORM	commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM,/;"	v	module:COMMONS
XMOVERENORM	commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM,/;"	v	module:COMMONS
XMUL	commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,/;"	v	module:COMMONS
XMUL	commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,/;"	v	module:COMMONS
XQM	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM,/;"	v	module:COMMONS
XQM	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM,/;"	v	module:COMMONS
XQP	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP,/;"	v	module:COMMONS
XQP	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP,/;"	v	module:COMMONS
XSETF	dlsode.f	/^      SUBROUTINE XSETF /;"	s
XSETUN	dlsode.f	/^      SUBROUTINE XSETUN /;"	s
XVEC	ptgrp.f	/^      SUBROUTINE XVEC(/;"	s
Y	qorderparam_blj.f90	/^	COMPLEX function Y(/;"	f
Y2	qorderparam_lj.f90	/^	COMPLEX function Y2(/;"	f
Z1	Zetterling.f	/^      SUBROUTINE Z1(/;"	s
Z2	Zetterling.f	/^      SUBROUTINE Z2(/;"	s
ZERO	ptgrp.f	/^      SUBROUTINE ZERO(/;"	s
ZETT1	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1,/;"	v	module:COMMONS
ZETT1	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1,/;"	v	module:COMMONS
ZETT2	commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1, &$/;"	v	module:COMMONS
ZETT2	commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1, &$/;"	v	module:COMMONS
ZSTAR	commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR,/;"	v	module:COMMONS
ZSTAR	commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR,/;"	v	module:COMMONS
ZSYM	commons.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: ZSYM /;"	v	module:COMMONS
ZSYM	commons.o.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: ZSYM /;"	v	module:COMMONS
ZTIME	tn.f	/^      SUBROUTINE ZTIME(/;"	s
ZWISCHEN	zwischen.f	/^      SUBROUTINE ZWISCHEN(/;"	s
a	modamb.f90	/^      INTEGER  a,/;"	v	module:MODAMBER
aa1	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  aa1,/;"	v	module:MODAMBER
aa2	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  aa1, aa2,/;"	v	module:MODAMBER
aa3	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  aa1, aa2, aa3 /;"	v	module:MODAMBER
actualomega	modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(50), actualphi(50), actualpsi(50), actualomega(/;"	v	module:MODAMBER
actualphi	modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(50), actualphi(/;"	v	module:MODAMBER
actualpsi	modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(50), actualphi(50), actualpsi(/;"	v	module:MODAMBER
ag	modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,/;"	v	module:MODAMBER9
alpb	modamber9.f90	/^      iwatpr,nsolw,igb,alpb,/;"	v	module:MODAMBER9
alpha	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: alpha /;"	v	module:MODAMBER
alrh	Alglue.f	/^      SUBROUTINE alrh(/;"	s
aluu	Alglue.f	/^      SUBROUTINE aluu(/;"	s
alv2	Alglue.f	/^      SUBROUTINE alv2(/;"	s
amber_deallocate_stacks	amber9dummy.f90	/^subroutine amber_deallocate_stacks(/;"	s
amber_readcoords	amber9dummy.f90	/^subroutine amber_readcoords(/;"	s
ambercount	modamb.f90	/^      INTEGER ambercount,/;"	v	module:MODAMBER
amberdump	finalio.f	/^      SUBROUTINE amberdump(/;"	s
ambergcount	modamb.f90	/^      INTEGER ambercount, ambergcount$/;"	v	module:MODAMBER
amberstr	modamber9.f90	/^      CHARACTER(len=20) :: amberstr$/;"	v	module:MODAMBER9
amberstr1	modamber9.f90	/^      CHARACTER(len=8)  :: amberstr1$/;"	v	module:MODAMBER9
ambfinalio_node	modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,ambxyz_unit,ambrst_unit,ambfinalio_node$/;"	v	module:MODAMBER9
ambpdb_unit	modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,/;"	v	module:MODAMBER9
ambrst_unit	modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,ambxyz_unit,ambrst_unit,/;"	v	module:MODAMBER9
ambxyz_unit	modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,ambxyz_unit,/;"	v	module:MODAMBER9
ang	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,ang,/;"	v	module:MODAMBER
angle	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,/;"	v	module:LJCAPSIDMODULE
angle	pymodule.f90	/^ DOUBLE PRECISION :: angle,/;"	v	module:PYMODULE
angle2	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,/;"	v	module:LJCAPSIDMODULE
angle2	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,/;"	v	module:PYMODULE
ans	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,/;"	v	module:MODAMBER
answer	modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,/;"	v	module:MODAMBER
ar2UT0	fedor.f	/^          DOUBLE PRECISION  FUNCTION ar2UT0(/;"	f
arms	modamb.f90	/^      DOUBLE PRECISION arms$/;"	v	module:MODAMBER
arnoenergy	fedor.f	/^      subroutine arnoenergy(/;"	s
atmass1	modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1, coords, atmass1$/;"	v	module:MODAMBER9
atnum	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  atnum,/;"	v	module:MODAMBER
atoms	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,/;"	v	module:MODAMBER
attr	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(/;"	v	module:PYMODULE
ax	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,/;"	v	module:MODAMBER
ay	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,/;"	v	module:MODAMBER
az	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,/;"	v	module:MODAMBER
b	modamb.f90	/^      INTEGER  a,b,/;"	v	module:MODAMBER
bc_lesi	modamber9.f90	/^integer bc_lesr,bc_lesi$/;"	v	module:MODAMBER9
bc_lesr	modamber9.f90	/^integer bc_lesr,/;"	v	module:MODAMBER9
bean	modamb.f90	/^      INTEGER  match,bean,/;"	v	module:MODAMBER
belly	modamber9.f90	/^logical belly,/;"	v	module:MODAMBER9
bellymask	modamber9.f90	/^character(len=256) restraintmask,bellymask,/;"	v	module:MODAMBER9
benergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,/;"	v	module:MODAMBER
bg	modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,/;"	v	module:MODAMBER9
bondarray	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) ::  bondarray /;"	v	module:MODAMBER
bondedto	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  atnum, bondedto,/;"	v	module:MODAMBER
bondnumber	modamb.f90	/^      INTEGER  match,bean,bondnumber,/;"	v	module:MODAMBER
bonds	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: bonds /;"	v	module:MODAMBER
bottom	modamb.f90	/^      DOUBLE PRECISION  top,bottom,/;"	v	module:MODAMBER
box	modamber9.f90	/^double precision box,/;"	v	module:MODAMBER9
boxi	modamber9.f90	128;"	c	module:MODAMBER9
boxr	modamber9.f90	121;"	c	module:MODAMBER9
bsstep	odesd.f	/^      SUBROUTINE bsstep(/;"	s
bx	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,/;"	v	module:MODAMBER
by	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,/;"	v	module:MODAMBER
bz	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,/;"	v	module:MODAMBER
c	modamb.f90	/^      INTEGER  a,b,c,/;"	v	module:MODAMBER
calc_dyn	p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_energy	p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_energyBLN	BLN.f	/^      subroutine calc_energyBLN(/;"	s
calc_gradient	p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_int_coords	p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
carrms	modamber9.f90	/^   double precision carrms$/;"	v	module:MODAMBER9
cfarkas	Farkas.f	157;"	c	subroutine:NIINIT
cfarkas	Farkas.f	248;"	c	subroutine:ALINIT
cfarkas	Farkas.f	39;"	c	subroutine:FARKAS
cg	modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,cg$/;"	v	module:MODAMBER9
check	modamb.f90	/^      CHARACTER(LEN=10)  check$/;"	v	module:MODAMBER
check_chirality	amber9dummy.f90	/^subroutine check_chirality(/;"	s
check_cistrans_dna	amber9dummy.f90	/^subroutine check_cistrans_dna(/;"	s
check_cistrans_rna	amber9dummy.f90	/^subroutine check_cistrans_rna(/;"	s
chiarray1	modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1,/;"	v	module:MODAMBER9
chiarray2	modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1, chiarray2$/;"	v	module:MODAMBER9
chiral	modamb.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: chiral$/;"	v	module:MODAMBER
chiralarray	modamb.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:,:) :: chiralarray$/;"	v	module:MODAMBER
chngmask	modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask,/;"	v	module:MODAMBER9
cisarray1	modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1,/;"	v	module:MODAMBER9
cisarray2	modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2,/;"	v	module:MODAMBER9
clambda	modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,/;"	v	module:MODAMBER9
coef	qorderparam_blj.f90	/^	DOUBLE PRECISION function coef(/;"	f
coef2	qorderparam_lj.f90	/^	DOUBLE PRECISION function coef2(/;"	f
colin	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,/;"	v	module:MODAMBER
comp	modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,/;"	v	module:MODAMBER9
consts	modconsts.f90	/^MODULE consts$/;"	m
consts_trans_97	modconsts_trans_97.f90	/^MODULE consts_trans_97 /;"	m
coords	modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1/;"	v	module:MODAMBER9
coords1	modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1,/;"	v	module:MODAMBER9
count	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,ang,imp,count$/;"	v	module:MODAMBER
cpin	modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes, &$/;"	v	module:MODAMBER9
cpout	modamber9.f90	/^      cpin, cpout,/;"	v	module:MODAMBER9
cprestrt	modamber9.f90	/^      cpin, cpout, cprestrt,/;"	v	module:MODAMBER9
cut	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,/;"	v	module:LJCAPSIDMODULE
cut	modamber9.f90	/^double precision box,cut,/;"	v	module:MODAMBER9
cut	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,/;"	v	module:PYMODULE
cut_inner	modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,/;"	v	module:MODAMBER9
cutcap	modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb, &$/;"	v	module:MODAMBER9
cx	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,/;"	v	module:MODAMBER
cy	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,/;"	v	module:MODAMBER
cz	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,/;"	v	module:MODAMBER
d	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,/;"	v	module:MODAMBER
d	mododesd.f90	/^    do/;"	v	module:odesdsavear
dEbydx	modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx, dvdwEbydy, dvdwEbydz,&$/;"	v	module:MODAMBER
dEbydy	modamb.f90	/^                                                   & dEbydx, dEbydy,/;"	v	module:MODAMBER
dEbydz	modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz,/;"	v	module:MODAMBER
da1	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1,/;"	v	module:MODAMBER
da2	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1, da2,/;"	v	module:MODAMBER
da3	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1, da2, da3,/;"	v	module:MODAMBER
da4	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1, da2, da3, da4 /;"	v	module:MODAMBER
dangEbydx	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,/;"	v	module:MODAMBER
dangEbydy	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,dangEbydy,/;"	v	module:MODAMBER
dangEbydz	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,dangEbydy, dangEbydz,/;"	v	module:MODAMBER
dbondEbydx	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx,/;"	v	module:MODAMBER
dbondEbydy	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy,/;"	v	module:MODAMBER
dbondEbydz	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz,/;"	v	module:MODAMBER
dcoomm	myblas.f	/^      subroutine dcoomm(/;"	s
ddelta	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3, ddelta,/;"	v	module:MODAMBER
ddelta2	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3, ddelta, ddelta2,/;"	v	module:MODAMBER
ddelta3	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3, ddelta, ddelta2, ddelta3 /;"	v	module:MODAMBER
degto	modamb.f90	/^      DOUBLE PRECISION kt(42,42,42),to(42,42,42),degto(/;"	v	module:MODAMBER
delta_dirac	Ackland_metals.f90	/^        double precision function delta_dirac(/;"	f
denom	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,/;"	v	module:MODAMBER
derphi	dzugutov.f	/^      subroutine derphi(/;"	s
derphiz1	Zetterling.f	/^      subroutine derphiz1(/;"	s
derphiz2	Zetterling.f	/^      subroutine derphiz2(/;"	s
devang	modamber9.f90	/^   double precision f,enmr,devdis,devang,/;"	v	module:MODAMBER9
devdis	modamber9.f90	/^   double precision f,enmr,devdis,/;"	v	module:MODAMBER9
devtor	modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,/;"	v	module:MODAMBER9
dgeco	welch.f	/^      subroutine dgeco(/;"	s
dgedi	welch.f	/^      subroutine dgedi(/;"	s
dgefa	welch.f	/^      subroutine dgefa(/;"	s
did	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi, did,/;"	v	module:MODAMBER
dielc	modamber9.f90	/^double precision box,cut,scnb,scee,dielc,/;"	v	module:MODAMBER9
dielec	modamb.f90	/^      DOUBLE PRECISION dielec$/;"	v	module:MODAMBER
dimpEbydx	modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx,/;"	v	module:MODAMBER
dimpEbydy	modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx, dimpEbydy,/;"	v	module:MODAMBER
dimpEbydz	modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx, dimpEbydy, dimpEbydz,/;"	v	module:MODAMBER
dipoles	fedor.f	/^        subroutine dipoles(/;"	s
display_version	display_version.f90	/^subroutine display_version(/;"	s
display_version	dv.f90	/^subroutine display_version(/;"	s	module:dv
distance	dist.f90	/^MODULE distance /;"	m
dn	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dn,/;"	v	module:MODAMBER
dn2	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dn, dn2,/;"	v	module:MODAMBER
dn3	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dn, dn2, dn3 /;"	v	module:MODAMBER
doligmove	modamber9.f90	/^      LOGICAL :: doligmove=/;"	v	module:MODAMBER9
dparam	modamb.f90	/^      DOUBLE PRECISION rstar,epsilon,dparam$/;"	v	module:MODAMBER
dphi	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi,/;"	v	module:MODAMBER
dqEbydx	modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx, dimpEbydy, dimpEbydz,&$/;"	v	module:MODAMBER
dqEbydy	modamb.f90	/^                                                   & dqEbydx, dqEbydy,/;"	v	module:MODAMBER
dqEbydz	modamb.f90	/^                                                   & dqEbydx, dqEbydy, dqEbydz /;"	v	module:MODAMBER
drh	Pbglue.f	/^      SUBROUTINE drh /;"	s
drjar	modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,drjar$/;"	v	module:MODAMBER9
drms	modamber9.f90	/^      tol,taur,dx0,drms,/;"	v	module:MODAMBER9
dsplint	Farkas.f	/^      SUBROUTINE dsplint(/;"	s
dt	modamber9.f90	/^double precision t,dt,/;"	v	module:MODAMBER9
dtorsEbydx	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,dangEbydy, dangEbydz,& $/;"	v	module:MODAMBER
dtorsEbydy	modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy,/;"	v	module:MODAMBER
dtorsEbydz	modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz,/;"	v	module:MODAMBER
dv	dv.f90	/^module dv$/;"	m
dvdwEbydx	modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx,/;"	v	module:MODAMBER
dvdwEbydy	modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx, dvdwEbydy,/;"	v	module:MODAMBER
dvdwEbydz	modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx, dvdwEbydy, dvdwEbydz,/;"	v	module:MODAMBER
dvn	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi, did, dvn,/;"	v	module:MODAMBER
dvn2	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi, did, dvn, dvn2 /;"	v	module:MODAMBER
dvn3	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3,/;"	v	module:MODAMBER
dx	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,dx,/;"	v	module:MODAMBER
dx0	modamber9.f90	/^      tol,taur,dx0,/;"	v	module:MODAMBER9
dy	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,dx,dy,/;"	v	module:MODAMBER
dz	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,dx,dy,dz$/;"	v	module:MODAMBER
e	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,/;"	v	module:MODAMBER
eadev	modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,/;"	v	module:MODAMBER9
ebdev	modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,/;"	v	module:MODAMBER9
ehecl2	fedor.f	/^      subroutine ehecl2(/;"	s
ekeles	modamber9.f90	/^double precision scaltles,tempsules,ekeles,/;"	v	module:MODAMBER9
ekinles0	modamber9.f90	/^double precision ekinles0,/;"	v	module:MODAMBER9
ekmhles	modamber9.f90	/^double precision ekmhles,/;"	v	module:MODAMBER9
ekphles	modamber9.f90	/^double precision ekmhles,ekphles$/;"	v	module:MODAMBER9
ene	modamber9.f90	/^   double precision ene(/;"	v	module:MODAMBER9
energyar	fedor.f	/^      subroutine energyar(/;"	s
enmr	modamber9.f90	/^   double precision f,enmr,/;"	v	module:MODAMBER9
ensave	modamber9.f90	/^double precision scalm,pencut,ensave,/;"	v	module:MODAMBER9
entots	Natb.f	/^        SUBROUTINE entots(/;"	s
epsilon	modamb.f90	/^      DOUBLE PRECISION rstar,epsilon,/;"	v	module:MODAMBER
epsilon1	ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:LJCAPSIDMODULE
epsilon1	pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:PYMODULE
erstop	modamber9.f90	/^logical belly, erstop,/;"	v	module:MODAMBER9
ev	mc.F	1287;"	c	subroutine:TRANSITION
ev	mc.F	1517;"	c	subroutine:ACCREJ
ev	tether.f90	63;"	c	subroutine:TetheredWL
evbin	modamber9.f90	/^      cpin, cpout, cprestrt, evbin,/;"	v	module:MODAMBER9
evbout	modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout,/;"	v	module:MODAMBER9
evbt	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,/;"	v	module:MODAMBER9
ew_type	modamber9.f90	/^integer verbose,netfrc,     ew_type,/;"	v	module:MODAMBER9
ewcntrl	modamber9.f90	245;"	c	module:MODAMBER9
extdiel	modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,/;"	v	module:MODAMBER9
extra_logical	modamber9.f90	65;"	c	module:MODAMBER9
extraboxdim	modamber9.f90	/^double precision extraboxdim$/;"	v	module:MODAMBER9
extrasamberdp	modamber9.f90	315;"	c	module:MODAMBER9
extrasamberint	modamber9.f90	314;"	c	module:MODAMBER9
f	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,/;"	v	module:MODAMBER
f	modamber9.f90	/^   double precision f,/;"	v	module:MODAMBER9
facc	modamber9.f90	/^character owrite, facc$/;"	v	module:MODAMBER9
fcap	modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,/;"	v	module:MODAMBER9
fcut	Ackland_metals.f90	/^	double precision  function fcut(/;"	f
fcut_d	Ackland_metals.f90	/^	double precision  function fcut_d(/;"	f
fcut_dd	Ackland_metals.f90	/^	double precision function fcut_dd(/;"	f
fenergy	fedor.f	/^      subroutine fenergy(/;"	s
filename	modamb.f90	/^      CHARACTER(LEN=20)  filename$/;"	v	module:MODAMBER
files	modamber9.f90	189;"	c	module:MODAMBER9
fin	modperm.f90	/^    double precision, allocatable :: fin(/;"	v	module:PERMU
fish	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,/;"	v	module:MODAMBER
fix_dip	modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip,/;"	v	module:MODAMBER9
fix_quad	modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip, &$/;"	v	module:MODAMBER9
flush	porfuncs.f90	/^subroutine flush(/;"	s	module:PORFUNCS
fork_subr	porfuncs.f90	/^          subroutine fork_subr(/;"	s	module:PORFUNCS
fphi	Ackland_metals.f90	/^       double precision function fphi(/;"	f
fphi_d	Ackland_metals.f90	/^       double precision function fphi_d(/;"	f
fphi_dd	Ackland_metals.f90	/^       double precision function fphi_dd(/;"	f
fpsi	Ackland_metals.f90	/^       double precision function fpsi(/;"	f
fpsi_d	Ackland_metals.f90	/^       double precision function fpsi_d(/;"	f
fpsi_dd	Ackland_metals.f90	/^       double precision function fpsi_dd(/;"	f
frameon	modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon,/;"	v	module:MODAMBER9
freqe	modamber9.f90	/^      vecs, radii, freqe,/;"	v	module:MODAMBER9
frss	Natb.f	/^        subroutine frss(/;"	s
fsmax	modamber9.f90	/^          solvph,rgbmax,fsmax,/;"	v	module:MODAMBER9
fswitchbeta	modamber9.f90	/^double precision fswitchbeta$/;"	v	module:MODAMBER9
ftss	Natb.f	/^        subroutine ftss(/;"	s
ftsz	Natb.f	/^        subroutine ftsz(/;"	s
func	EAMLJ_sub.f	/^      funct/;"	f
fvarphi	Ackland_metals.f90	/^       double precision function fvarphi /;"	f
fvarphi_d	Ackland_metals.f90	/^       double precision function fvarphi_d /;"	f
fvarphi_dd	Ackland_metals.f90	/^       double precision function fvarphi_dd /;"	f
g	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,/;"	v	module:MODAMBER
g46merdiff	g46merdiff.f	/^        subroutine g46merdiff(/;"	s
gamma_ln	modamber9.f90	/^          kappa,offset,surften,gamma_ln,/;"	v	module:MODAMBER9
gasdev	gauss.f	/^      FUNCTION gasdev(/;"	f
gbalpha	modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,  & !32$/;"	v	module:MODAMBER9
gbbeta	modamber9.f90	/^          gbalpha,gbbeta,/;"	v	module:MODAMBER9
gbgamma	modamber9.f90	/^          gbalpha,gbbeta,gbgamma,/;"	v	module:MODAMBER9
gbneckscale	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,/;"	v	module:MODAMBER9
gbsa	modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,           &!41$/;"	v	module:MODAMBER9
genimpparams	modamb.f90	/^      DOUBLE PRECISION midimpparams(4,6),genimpparams(/;"	v	module:MODAMBER
gentorsparams	modamb.f90	/^      DOUBLE PRECISION gentorsparams(/;"	v	module:MODAMBER
getarg_subr	porfuncs.f90	/^          subroutine getarg_subr(/;"	s	module:PORFUNCS
getpid_subr	porfuncs.f90	/^          subroutine getpid_subr(/;"	s	module:PORFUNCS
gfunc	Ackland_metals.f90	/^	double precision function gfunc(/;"	f
gfunc_d	Ackland_metals.f90	/^	double precision function gfunc_d(/;"	f
gfunc_dd	Ackland_metals.f90	/^	double precision function gfunc_dd(/;"	f
gparam_array	g46merdiff.f	/^        subroutine gparam_array(/;"	s
gpes	modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes,/;"	v	module:MODAMBER9
grnd	fedor.f	/^      subroutine grnd(/;"	s
groupbuffer	modamber9.f90	/^character(len=4096) groupbuffer$/;"	v	module:MODAMBER9
groups	modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,/;"	v	module:MODAMBER9
h	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,/;"	v	module:MODAMBER
hdistconstraint	commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint,/;"	v	module:COMMONS
hdistconstraint	commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint,/;"	v	module:COMMONS
hecl2ut0	fedor.f	/^      DOUBLE PRECISION function hecl2ut0(/;"	f
hmat	fedor.f	/^      subroutine hmat(/;"	s
hmatd	fedor.f	/^      subroutine hmatd(/;"	s
hulp	modamber9.f90	77;"	c	module:MODAMBER9
i	modamb.f90	/^      INTEGER  a,b,c,io/;"	v	module:MODAMBER
i01	modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01,/;"	v	module:MODAMBER9
i02	modamber9.f90	/^      mxsub,natyp,npdec,i02,/;"	v	module:MODAMBER9
i04	modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,/;"	v	module:MODAMBER9
i06	modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,/;"	v	module:MODAMBER9
i08	modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,/;"	v	module:MODAMBER9
i10	modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10,/;"	v	module:MODAMBER9
i24	modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba, &$/;"	v	module:MODAMBER9
i26	modamber9.f90	/^      i24,i26,/;"	v	module:MODAMBER9
i28	modamber9.f90	/^      i24,i26,i28,/;"	v	module:MODAMBER9
i30	modamber9.f90	/^      i24,i26,i28,i30,/;"	v	module:MODAMBER9
i32	modamber9.f90	/^      i24,i26,i28,i30,i32,/;"	v	module:MODAMBER9
i34	modamber9.f90	/^      i24,i26,i28,i30,i32,i34,/;"	v	module:MODAMBER9
i36	modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,/;"	v	module:MODAMBER9
i38	modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,/;"	v	module:MODAMBER9
i40	modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40,/;"	v	module:MODAMBER9
i42	modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40, &$/;"	v	module:MODAMBER9
i44	modamber9.f90	/^      i42,i44,/;"	v	module:MODAMBER9
i46	modamber9.f90	/^      i42,i44,i46,/;"	v	module:MODAMBER9
i48	modamber9.f90	/^      i42,i44,i46,i48,/;"	v	module:MODAMBER9
i50	modamber9.f90	/^      i42,i44,i46,i48,i50,/;"	v	module:MODAMBER9
i52	modamber9.f90	/^      i42,i44,i46,i48,i50,i52,/;"	v	module:MODAMBER9
i54	modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,/;"	v	module:MODAMBER9
i56	modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,/;"	v	module:MODAMBER9
i58	modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,/;"	v	module:MODAMBER9
i64	modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,/;"	v	module:MODAMBER9
i65	modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,/;"	v	module:MODAMBER9
i68	modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68,/;"	v	module:MODAMBER9
i70	modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68, &$/;"	v	module:MODAMBER9
i72	modamber9.f90	/^      i70,i72,/;"	v	module:MODAMBER9
i74	modamber9.f90	/^      i70,i72,i74,/;"	v	module:MODAMBER9
i76	modamber9.f90	/^      i70,i72,i74,i76,/;"	v	module:MODAMBER9
i78	modamber9.f90	/^      i70,i72,i74,i76,i78,/;"	v	module:MODAMBER9
i79	modamber9.f90	/^      i70,i72,i74,i76,i78,i79,/;"	v	module:MODAMBER9
i80	modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,/;"	v	module:MODAMBER9
i82	modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,/;"	v	module:MODAMBER9
i84	modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,/;"	v	module:MODAMBER9
i86	modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86,/;"	v	module:MODAMBER9
ia1	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1,/;"	v	module:MODAMBER
ia2	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1, ia2,/;"	v	module:MODAMBER
ia3	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1, ia2, ia3,/;"	v	module:MODAMBER
ia4	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1, ia2, ia3, ia4 /;"	v	module:MODAMBER
iargc_subr	porfuncs.f90	/^subroutine iargc_subr(/;"	s	module:PORFUNCS
ibelly	modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,/;"	v	module:MODAMBER9
ibellygp	modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp,/;"	v	module:MODAMBER9
ibgwat	modamber9.f90	/^      ntmin,irest,jfastw,                &!33$/;"	v	module:MODAMBER9
icfe	modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,/;"	v	module:MODAMBER9
icnstph	modamber9.f90	/^      idecomp,icnstph,/;"	v	module:MODAMBER9
icnstrgp	modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp, &$/;"	v	module:MODAMBER9
iconstreff	modamber9.f90	/^      rbornstat,ivcap,iconstreff,/;"	v	module:MODAMBER9
icphidx	modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,/;"	v	module:MODAMBER9
icpptcnt	modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt,/;"	v	module:MODAMBER9
icpresst	modamber9.f90	/^      icpstinf,icpresst,/;"	v	module:MODAMBER9
icpstinf	modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86, &$/;"	v	module:MODAMBER9
icptpair	modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,/;"	v	module:MODAMBER9
icptrsct	modamber9.f90	/^      icpstinf,icpresst,icptrsct,/;"	v	module:MODAMBER9
idecomp	modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,    &!59$/;"	v	module:MODAMBER9
idelta	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi, ivn, idelta,/;"	v	module:MODAMBER
ienwat	modamber9.f90	/^      ibgwat,ienwat,/;"	v	module:MODAMBER9
ier	modamber9.f90	/^integer ier$/;"	v	module:MODAMBER9
iesp	modamber9.f90	/^      neb,vv,tmode,ipol,iesp,/;"	v	module:MODAMBER9
ievb	modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,/;"	v	module:MODAMBER9
ifbox	modamber9.f90	/^integer ntb,ifbox,/;"	v	module:MODAMBER9
ifcap	modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,/;"	v	module:MODAMBER9
ifpert	modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,/;"	v	module:MODAMBER9
ifswitch	modamber9.f90	/^integer ifswitch,/;"	v	module:MODAMBER9
ig	modamber9.f90	/^integer nrp,nspm,ig,/;"	v	module:MODAMBER9
igb	modamber9.f90	/^      iwatpr,nsolw,igb,/;"	v	module:MODAMBER9
ih	modamber9.f90	/^   character(len=4), dimension(:), allocatable :: ih$/;"	v	module:MODAMBER9
ihwtnm	modamber9.f90	/^character(len=4) iwtnm,iowtnm,ihwtnm$/;"	v	module:MODAMBER9
iiba	modamber9.f90	/^      iibh,ijbh,iicbh,iiba,/;"	v	module:MODAMBER9
iibh	modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10, &$/;"	v	module:MODAMBER9
iicba	modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba,/;"	v	module:MODAMBER9
iicbh	modamber9.f90	/^      iibh,ijbh,iicbh,/;"	v	module:MODAMBER9
iifstwr	modamber9.f90	/^      iifstwt,iifstwr,/;"	v	module:MODAMBER9
iifstwt	modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01, &$/;"	v	module:MODAMBER9
ijba	modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,/;"	v	module:MODAMBER9
ijbh	modamber9.f90	/^      iibh,ijbh,/;"	v	module:MODAMBER9
imask1	modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy, &$/;"	v	module:MODAMBER9
imask2	modamber9.f90	/^      imask1,imask2,/;"	v	module:MODAMBER9
imin	modamber9.f90	/^      ntrx,npscal,imin,/;"	v	module:MODAMBER9
imp	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,ang,imp,/;"	v	module:MODAMBER
impenergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,impenergy,/;"	v	module:MODAMBER
in1	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi, ivn, idelta, in1 /;"	v	module:MODAMBER
induced	modamber9.f90	/^      fix_quad,  mpoltype,   induced,/;"	v	module:MODAMBER9
init	fedor.f	2722;"	c	subroutine:ehecl2
init	modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,/;"	v	module:MODAMBER9
inmr02	modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,/;"	v	module:MODAMBER9
inpcrd	modamber9.f90	/^character(len=256) mdin, mdout, inpcrd,/;"	v	module:MODAMBER9
inpdip	modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,/;"	v	module:MODAMBER9
intdiel	modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,/;"	v	module:MODAMBER9
intreq	modamber9.f90	/^integer       intreq,/;"	v	module:MODAMBER9
iorwat	modamber9.f90	/^      ibgwat,ienwat,iorwat,/;"	v	module:MODAMBER9
ios	modamb.f90	/^      INTEGER  a,b,c,ios,/;"	v	module:MODAMBER
ioutfm	modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,/;"	v	module:MODAMBER9
iowtnm	modamber9.f90	/^character(len=4) iwtnm,iowtnm,/;"	v	module:MODAMBER9
ipairs	modamber9.f90	/^   integer, dimension(:), allocatable :: ix, ipairs$/;"	v	module:MODAMBER9
iphi	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi,/;"	v	module:MODAMBER
ipnlty	modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,/;"	v	module:MODAMBER9
ipol	modamber9.f90	/^      neb,vv,tmode,ipol,/;"	v	module:MODAMBER9
iprint	modamber9.f90	/^integer nmropt,iprint,/;"	v	module:MODAMBER9
iprr	modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,/;"	v	module:MODAMBER9
iprw	modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,iprw$/;"	v	module:MODAMBER9
iredir	modamber9.f90	/^integer iredir(/;"	v	module:MODAMBER9
irespa	modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,/;"	v	module:MODAMBER9
irespa2	modamber9.f90	/^integer ifswitch, irespa2,/;"	v	module:MODAMBER9
irest	modamber9.f90	/^      ntmin,irest,/;"	v	module:MODAMBER9
irlreq	modamber9.f90	/^integer       intreq,irlreq,/;"	v	module:MODAMBER9
iscale	modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,/;"	v	module:MODAMBER9
ischrgd	modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd,/;"	v	module:MODAMBER9
isftrp	modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,isftrp$/;"	v	module:MODAMBER9
ishake	modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,/;"	v	module:MODAMBER9
isolvp	modamber9.f90	/^      ntcm,nscm,isolvp,/;"	v	module:MODAMBER9
itgtfitgp	modamber9.f90	/^      icnstrgp,itgtfitgp,/;"	v	module:MODAMBER9
itgtrmsgp	modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,/;"	v	module:MODAMBER9
iuse	modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,/;"	v	module:MODAMBER9
ivcap	modamber9.f90	/^      rbornstat,ivcap,/;"	v	module:MODAMBER9
ivn	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi, ivn,/;"	v	module:MODAMBER
iwatpr	modamber9.f90	/^      ibgwat,ienwat,iorwat,              &!36$/;"	v	module:MODAMBER9
iwrap	modamber9.f90	/^      gbsa,vrand,iwrap,/;"	v	module:MODAMBER9
iwtnm	modamber9.f90	/^character(len=4) iwtnm,/;"	v	module:MODAMBER9
ix	modamber9.f90	/^   integer, dimension(:), allocatable :: ix,/;"	v	module:MODAMBER9
iyammp	modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,/;"	v	module:MODAMBER9
j	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,/;"	v	module:MODAMBER
jar	modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,jar$/;"	v	module:MODAMBER9
jfastw	modamber9.f90	/^      ntmin,irest,jfastw,/;"	v	module:MODAMBER9
k	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,/;"	v	module:MODAMBER
kappa	modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,  & !25$/;"	v	module:MODAMBER9
kevb	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,/;"	v	module:MODAMBER9
klambda	modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,klambda,/;"	v	module:MODAMBER9
kr	modamb.f90	/^      DOUBLE PRECISION kr(/;"	v	module:MODAMBER
kt	modamb.f90	/^      DOUBLE PRECISION kt(/;"	v	module:MODAMBER
l	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,/;"	v	module:MODAMBER
l105	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp, &$/;"	v	module:MODAMBER9
l110	modamber9.f90	/^      l105,l110,/;"	v	module:MODAMBER9
l115	modamber9.f90	/^      l105,l110,l115,/;"	v	module:MODAMBER9
l120	modamber9.f90	/^      l105,l110,l115,l120,/;"	v	module:MODAMBER9
l125	modamber9.f90	/^      l105,l110,l115,l120,l125,/;"	v	module:MODAMBER9
l130	modamber9.f90	/^      l105,l110,l115,l120,l125,l130,/;"	v	module:MODAMBER9
l135	modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,/;"	v	module:MODAMBER9
l140	modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,/;"	v	module:MODAMBER9
l145	modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,/;"	v	module:MODAMBER9
l15	modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt, &$/;"	v	module:MODAMBER9
l150	modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150,/;"	v	module:MODAMBER9
l165	modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150, &$/;"	v	module:MODAMBER9
l170	modamber9.f90	/^      l165,l170,/;"	v	module:MODAMBER9
l175	modamber9.f90	/^      l165,l170,l175,/;"	v	module:MODAMBER9
l180	modamber9.f90	/^      l165,l170,l175,l180,/;"	v	module:MODAMBER9
l185	modamber9.f90	/^      l165,l170,l175,l180,l185,/;"	v	module:MODAMBER9
l186	modamber9.f90	/^      l165,l170,l175,l180,l185,l186,/;"	v	module:MODAMBER9
l187	modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,/;"	v	module:MODAMBER9
l188	modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,/;"	v	module:MODAMBER9
l189	modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,/;"	v	module:MODAMBER9
l190	modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190,/;"	v	module:MODAMBER9
l36	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,/;"	v	module:MODAMBER9
l45	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,/;"	v	module:MODAMBER9
l50	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50,/;"	v	module:MODAMBER9
l60	modamber9.f90	/^      lcrdr,l60,/;"	v	module:MODAMBER9
l65	modamber9.f90	/^      lcrdr,l60,l65,/;"	v	module:MODAMBER9
l75	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,/;"	v	module:MODAMBER9
l80	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,/;"	v	module:MODAMBER9
l85	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,/;"	v	module:MODAMBER9
l90	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,/;"	v	module:MODAMBER9
l95	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,/;"	v	module:MODAMBER9
l96	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,/;"	v	module:MODAMBER9
l97	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,/;"	v	module:MODAMBER9
l98	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,/;"	v	module:MODAMBER9
l99	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,/;"	v	module:MODAMBER9
label	modamb.f90	/^      CHARACTER, ALLOCATABLE, DIMENSION(:) ::  label$/;"	v	module:MODAMBER
lambda	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,/;"	v	module:MODAMBER
lasth	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth,/;"	v	module:MODAMBER9
lasti	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,/;"	v	module:MODAMBER9
lastpr	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth, &$/;"	v	module:MODAMBER9
lastr	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,/;"	v	module:MODAMBER9
lcpcrg	modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190, &$/;"	v	module:MODAMBER9
lcpene	modamber9.f90	/^      lcpcrg,lcpene,/;"	v	module:MODAMBER9
lcrd	modamber9.f90	/^      l15,lwinv,lpol,lcrd,/;"	v	module:MODAMBER9
lcrdr	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50, &$/;"	v	module:MODAMBER9
lenic	modamber9.f90	/^integer:: lenic$/;"	v	module:MODAMBER9
lesfac	modamber9.f90	/^double precision lesfac(/;"	v	module:MODAMBER9
lesr	modamber9.f90	98;"	c	module:MODAMBER9
lfac	modamber9.f90	/^double precision lesfac(maxlestyp*maxlestyp),lfac$/;"	v	module:MODAMBER9
lforce	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,/;"	v	module:MODAMBER9
lfrctmp	modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp,/;"	v	module:MODAMBER9
lfsg	modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,/;"	v	module:MODAMBER9
lhbins	commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows, & $/;"	v	module:COMMONS
lhbins	commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows, & $/;"	v	module:COMMONS
ligcartstep	modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep,/;"	v	module:MODAMBER9
ligmovefreq	modamber9.f90	/^      INTEGER :: ligmovefreq$/;"	v	module:MODAMBER9
ligrotscale	modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale,/;"	v	module:MODAMBER9
ligtransstep	modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep, ligtransstep$/;"	v	module:MODAMBER9
listupdate	modamb.f90	/^      INTEGER qlistcount, rlistcount, listupdate$/;"	v	module:MODAMBER
lmass	modamber9.f90	/^      lcrdr,l60,l65,lmass,/;"	v	module:MODAMBER9
lnHarmFreq	commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq,/;"	v	module:COMMONS
lnHarmFreq	commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq,/;"	v	module:COMMONS
lnmr01	modamber9.f90	/^integer       intreq,irlreq,lnmr01,/;"	v	module:MODAMBER9
lnsrch	dlnsrch.f	/^      SUBROUTINE lnsrch(/;"	s
loopatom	modamb.f90	/^      INTEGER loopatom(/;"	v	module:MODAMBER
lpol	modamber9.f90	/^      l15,lwinv,lpol,/;"	v	module:MODAMBER9
lpolp	modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp,/;"	v	module:MODAMBER9
lvel	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,/;"	v	module:MODAMBER9
lvel2	modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,/;"	v	module:MODAMBER9
lvsg	modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,/;"	v	module:MODAMBER9
lwinv	modamber9.f90	/^      l15,lwinv,/;"	v	module:MODAMBER9
m02	modamber9.f90	/^      lcpcrg,lcpene, &$/;"	v	module:MODAMBER9
m04	modamber9.f90	/^      m02,m04,/;"	v	module:MODAMBER9
m06	modamber9.f90	/^      m02,m04,m06,/;"	v	module:MODAMBER9
m08	modamber9.f90	/^      m02,m04,m06,m08,/;"	v	module:MODAMBER9
m10	modamber9.f90	/^      m02,m04,m06,m08,m10,/;"	v	module:MODAMBER9
m12	modamber9.f90	/^      m02,m04,m06,m08,m10,m12,/;"	v	module:MODAMBER9
m14	modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,/;"	v	module:MODAMBER9
m16	modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,/;"	v	module:MODAMBER9
m18	modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,/;"	v	module:MODAMBER9
mass	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: mass /;"	v	module:MODAMBER
master	modamber9.f90	/^logical master$/;"	v	module:MODAMBER9
match	modamb.f90	/^      INTEGER  match,/;"	v	module:MODAMBER
maxcyc	modamber9.f90	/^      ntrx,npscal,imin,maxcyc,/;"	v	module:MODAMBER9
maxdup	modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,/;"	v	module:MODAMBER9
maxles	modamber9.f90	/^integer maxles,/;"	v	module:MODAMBER9
maxlesadj	modamber9.f90	/^integer maxles,maxlestyp,maxlesadj$/;"	v	module:MODAMBER9
maxlestyp	modamber9.f90	/^integer maxles,maxlestyp,/;"	v	module:MODAMBER9
maxmem	modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,/;"	v	module:MODAMBER9
maxsub	modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,/;"	v	module:MODAMBER9
mdcrd	modamber9.f90	/^      refc, mdvel, mden, mdcrd,/;"	v	module:MODAMBER9
mdcrd_unit	modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,/;"	v	module:MODAMBER9
mddip	modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,/;"	v	module:MODAMBER9
mden	modamber9.f90	/^      refc, mdvel, mden,/;"	v	module:MODAMBER9
mdiamber	modamber9.f90	171;"	c	module:MODAMBER9
mdin	modamber9.f90	/^character(len=256) mdin,/;"	v	module:MODAMBER9
mdinfo	modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo,/;"	v	module:MODAMBER9
mdinfo_unit	modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,/;"	v	module:MODAMBER9
mdout	modamber9.f90	/^character(len=256) mdin, mdout,/;"	v	module:MODAMBER9
mdr	modamber9.f90	142;"	c	module:MODAMBER9
mds	modamber9.f90	153;"	c	module:MODAMBER9
mdvel	modamber9.f90	/^      refc, mdvel,/;"	v	module:MODAMBER9
memory	modamber9.f90	216;"	c	module:MODAMBER9
mgrh	Mgglue.f	/^      SUBROUTINE mgrh(/;"	s
mguu	Mgglue.f	/^      SUBROUTINE mguu(/;"	s
mgv2	Mgglue.f	/^      SUBROUTINE mgv2(/;"	s
midimpparams	modamb.f90	/^      DOUBLE PRECISION midimpparams(/;"	v	module:MODAMBER
mincor	modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor,/;"	v	module:MODAMBER9
minperm	minperm.f	/^      subroutine minperm(/;"	s
mmid	odesd.f	/^      SUBROUTINE mmid(/;"	s
mmtsb_setup_file	modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout, mmtsb_setup_file$/;"	v	module:MODAMBER9
mpoltype	modamber9.f90	/^      fix_quad,  mpoltype,/;"	v	module:MODAMBER9
mu	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,/;"	v	module:MODAMBER
mxadjmsk	modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,/;"	v	module:MODAMBER9
mxsub	modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs, &$/;"	v	module:MODAMBER9
mypot	tether.f90	61;"	c	subroutine:TetheredWL
myunit2	modamber9.f90	/^   integer :: myunitnew,myunit2,/;"	v	module:MODAMBER9
myunitnew	modamber9.f90	/^   integer :: myunitnew,/;"	v	module:MODAMBER9
n_amb_calls	modamber9.f90	/^      INTEGER :: n_amb_calls=/;"	v	module:MODAMBER9
natbel	modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,/;"	v	module:MODAMBER9
natc	modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm, &$/;"	v	module:MODAMBER9
natcap	modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,/;"	v	module:MODAMBER9
native	modamber9.f90	/^   integer native,/;"	v	module:MODAMBER9
natom	modamber9.f90	/^integer       natom,/;"	v	module:MODAMBER9
nattgtfit	modamber9.f90	/^      natc,nattgtfit,/;"	v	module:MODAMBER9
nattgtrms	modamber9.f90	/^      natc,nattgtfit,nattgtrms,/;"	v	module:MODAMBER9
natyp	modamber9.f90	/^      mxsub,natyp,/;"	v	module:MODAMBER9
nbin1	modamb.f90	/^      INTEGER nbin1,/;"	v	module:MODAMBER
nbin2	modamb.f90	/^      INTEGER nbin1, nbin2,/;"	v	module:MODAMBER
nbin3	modamb.f90	/^      INTEGER nbin1, nbin2, nbin3,/;"	v	module:MODAMBER
nbin4	modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4,/;"	v	module:MODAMBER
nbin5	modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4, nbin5,/;"	v	module:MODAMBER
nbin6	modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4, nbin5, nbin6,/;"	v	module:MODAMBER
nbin7	modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4, nbin5, nbin6, nbin7$/;"	v	module:MODAMBER
nbit	modamber9.f90	/^integer ntb,ifbox,numpk,nbit,/;"	v	module:MODAMBER9
nbona	modamber9.f90	/^integer       natom,nres,nbonh,nbona,/;"	v	module:MODAMBER9
nbonh	modamber9.f90	/^integer       natom,nres,nbonh,/;"	v	module:MODAMBER9
nbper	modamber9.f90	/^      lastpr,nbper,/;"	v	module:MODAMBER9
nconp	modamber9.f90	/^      nphia,nnb,ntypes,nconp,/;"	v	module:MODAMBER9
ncopy	modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy,/;"	v	module:MODAMBER9
ncyc	modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,/;"	v	module:MODAMBER9
ndfmin	modamber9.f90	/^      ntnb,nsnb,ndfmin,/;"	v	module:MODAMBER9
ndper	modamber9.f90	/^      lastpr,nbper,ngper,ndper,/;"	v	module:MODAMBER9
neb	modamber9.f90	/^      rbornstat,ivcap,iconstreff,        &!51$/;"	v	module:MODAMBER9
neighbour	SiSW.f	/^      subroutine neighbour(/;"	s
netfrc	modamber9.f90	/^integer verbose,netfrc,/;"	v	module:MODAMBER9
newstyle	modamber9.f90	/^logical newstyle,/;"	v	module:MODAMBER9
ngper	modamber9.f90	/^      lastpr,nbper,ngper,/;"	v	module:MODAMBER9
nhb	modamber9.f90	/^   integer numphi,nttyp,nhb$/;"	v	module:MODAMBER9
nholb	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,/;"	v	module:MODAMBER9
nintb	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,/;"	v	module:MODAMBER9
nmr1amber	modamber9.f90	73;"	c	module:MODAMBER9
nmrf	modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf,/;"	v	module:MODAMBER9
nmropt	modamber9.f90	/^integer nmropt,/;"	v	module:MODAMBER9
nmrrdr	modamber9.f90	69;"	c	module:MODAMBER9
nmrstf	modamber9.f90	299;"	c	module:MODAMBER9
nmxrs	modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs,/;"	v	module:MODAMBER9
nnb	modamber9.f90	/^      nphia,nnb,/;"	v	module:MODAMBER9
nodeid	modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,/;"	v	module:MODAMBER9
noeskp	modamber9.f90	/^integer nmropt,iprint,noeskp,/;"	v	module:MODAMBER9
noshake	modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,noshake$/;"	v	module:MODAMBER9
noshakemask	modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,noshakemask$/;"	v	module:MODAMBER9
npairb	modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,/;"	v	module:MODAMBER9
nparm	modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm,/;"	v	module:MODAMBER9
npdec	modamber9.f90	/^      mxsub,natyp,npdec,/;"	v	module:MODAMBER9
nphia	modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih, &$/;"	v	module:MODAMBER9
nphih	modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih,/;"	v	module:MODAMBER9
npscal	modamber9.f90	/^      ntrx,npscal,/;"	v	module:MODAMBER9
nr	modamber9.f90	/^   integer native,nr3/;"	v	module:MODAMBER9
nr3	modamber9.f90	/^   integer native,nr3,/;"	v	module:MODAMBER9
nrc	modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,/;"	v	module:MODAMBER9
nrealb	modamber9.f90	/^      iifstwt,iifstwr,nrealb,/;"	v	module:MODAMBER9
nres	modamber9.f90	/^integer       natom,nres,/;"	v	module:MODAMBER9
nrespa	modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,/;"	v	module:MODAMBER9
nrespa2	modamber9.f90	/^integer ifswitch, irespa2, nrespa2$/;"	v	module:MODAMBER9
nrespai	modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,/;"	v	module:MODAMBER9
nrp	modamber9.f90	/^integer nrp,/;"	v	module:MODAMBER9
nscm	modamber9.f90	/^      ntcm,nscm,/;"	v	module:MODAMBER9
nseg	modamber9.f90	/^integer:: nseg$/;"	v	module:MODAMBER9
nsnb	modamber9.f90	/^      ntnb,nsnb,/;"	v	module:MODAMBER9
nsolut	modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,/;"	v	module:MODAMBER9
nsolw	modamber9.f90	/^      iwatpr,nsolw,/;"	v	module:MODAMBER9
nspm	modamber9.f90	/^integer nrp,nspm,/;"	v	module:MODAMBER9
nstlim	modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,/;"	v	module:MODAMBER9
ntave	modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,ntave$/;"	v	module:MODAMBER9
ntb	modamber9.f90	/^integer ntb,/;"	v	module:MODAMBER9
ntc	modamber9.f90	/^      ntcm/;"	v	module:MODAMBER9
ntcc	modamber9.f90	/^      ntc,ntcc,/;"	v	module:MODAMBER9
ntcm	modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,             &!10$/;"	v	module:MODAMBER9
ntcnstph	modamber9.f90	/^      idecomp,icnstph,ntcnstph,/;"	v	module:MODAMBER9
ntcx	modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,/;"	v	module:MODAMBER9
ntf	modamber9.f90	/^      ntc,ntcc,ntf,/;"	v	module:MODAMBER9
ntheta	modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,/;"	v	module:MODAMBER9
ntheth	modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,/;"	v	module:MODAMBER9
ntid	modamber9.f90	/^      ntc,ntcc,ntf,ntid,/;"	v	module:MODAMBER9
ntmin	modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,      &!30$/;"	v	module:MODAMBER9
ntn	modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,/;"	v	module:MODAMBER9
ntnb	modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,             &!20$/;"	v	module:MODAMBER9
ntp	modamber9.f90	/^      ntxo,ntt,ntp,/;"	v	module:MODAMBER9
ntpp	modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,/;"	v	module:MODAMBER9
ntpr	modamber9.f90	/^integer     ntpr,/;"	v	module:MODAMBER9
ntr	modamber9.f90	/^      ntxo,ntt,ntp,ntr,/;"	v	module:MODAMBER9
ntrx	modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,       &!25$/;"	v	module:MODAMBER9
ntt	modamber9.f90	/^      ntxo,ntt,/;"	v	module:MODAMBER9
nttyp	modamber9.f90	/^   integer numphi,nttyp,/;"	v	module:MODAMBER9
ntwe	modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,/;"	v	module:MODAMBER9
ntwprt	modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,/;"	v	module:MODAMBER9
ntwr	modamber9.f90	/^integer     ntpr,ntwr,/;"	v	module:MODAMBER9
ntwv	modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,/;"	v	module:MODAMBER9
ntwx	modamber9.f90	/^integer     ntpr,ntwr,ntwx,/;"	v	module:MODAMBER9
ntx	modamber9.f90	/^integer nrp,nspm,ig,ntx,/;"	v	module:MODAMBER9
ntxo	modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,           &!5$/;"	v	module:MODAMBER9
ntypes	modamber9.f90	/^      nphia,nnb,ntypes,/;"	v	module:MODAMBER9
num_noshake	modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,/;"	v	module:MODAMBER9
numadjst	modamber9.f90	/^      imask1,imask2,numadjst,/;"	v	module:MODAMBER9
numer	modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,/;"	v	module:MODAMBER
numexchg	modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,/;"	v	module:MODAMBER9
numphi	modamber9.f90	/^   integer numphi,/;"	v	module:MODAMBER9
numpk	modamber9.f90	/^integer ntb,ifbox,numpk,/;"	v	module:MODAMBER9
numwatkeep	modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,numwatkeep /;"	v	module:MODAMBER9
nwdvar	modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,/;"	v	module:MODAMBER9
odesdsavear	mododesd.f90	/^MODULE odesdsavear$/;"	m
offset	modamber9.f90	/^          kappa,offset,/;"	v	module:MODAMBER9
ok	modamber9.f90	/^logical newstyle,ok$/;"	v	module:MODAMBER9
one_four	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: one_four,/;"	v	module:MODAMBER
one_three	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: one_four, one_three /;"	v	module:MODAMBER
opt_infl	modamber9.f90	/^      periodic,  use_pme,    opt_infl,/;"	v	module:MODAMBER9
owrite	modamber9.f90	/^character owrite,/;"	v	module:MODAMBER9
param_array	p46merdiff.f	/^        subroutine param_array(/;"	s
param_arrayBLN	BLN.f	/^      subroutine param_arrayBLN(/;"	s
param_cut_off	Ackland_metals.f90	108;"	c	function:rho_pot_dd
param_cut_off	Ackland_metals.f90	156;"	c	function:Vpot
param_cut_off	Ackland_metals.f90	23;"	c	function:rho_pot
param_cut_off	Ackland_metals.f90	243;"	c	function:Vpot_d
param_cut_off	Ackland_metals.f90	338;"	c	function:Vpot_dd
param_cut_off	Ackland_metals.f90	485;"	c	function:Fembed
param_cut_off	Ackland_metals.f90	539;"	c	function:Fembed_d
param_cut_off	Ackland_metals.f90	606;"	c	function:Fembed_dd
param_cut_off	Ackland_metals.f90	62;"	c	function:rho_pot_d
param_cut_off	Ackland_wrapper.f	32;"	c	subroutine:ACK
parm	modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm,/;"	v	module:MODAMBER9
pcom	modf1com.f90	/^      double precision, allocatable :: xicom(:),pcom(/;"	v	module:F1COM
pencut	modamber9.f90	/^double precision scalm,pencut,/;"	v	module:MODAMBER9
penergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,/;"	v	module:MODAMBER
periodic	modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth, &$/;"	v	module:MODAMBER9
permdist	minperm.f	/^      double precision function permdist(/;"	f
phiatom1	modamb.f90	/^      INTEGER phiatom1(/;"	v	module:MODAMBER
phiatom2	modamb.f90	/^      INTEGER phiatom1(50), phiatom2(/;"	v	module:MODAMBER
pi	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,/;"	v	module:LJCAPSIDMODULE
pi	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,/;"	v	module:PYMODULE
plgndr	qorderparam_blj.f90	/^	DOUBLE PRECISION FUNCTION plgndr(/;"	f
plgndr2	qorderparam_lj.f90	/^	DOUBLE PRECISION FUNCTION plgndr2(/;"	f
points	fedor.f	1697;"	c	function:ut
polegn	fedor.f	/^      subroutine polegn(/;"	s
pres0	modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,/;"	v	module:MODAMBER9
prmtop	modamber9.f90	/^      CHARACTER(len=81) :: prmtop$/;"	v	module:MODAMBER9
psiatom1	modamb.f90	/^      INTEGER phiatom1(50), phiatom2(50), psiatom1(/;"	v	module:MODAMBER
psiatom2	modamb.f90	/^      INTEGER phiatom1(50), phiatom2(50), psiatom1(50), psiatom2(/;"	v	module:MODAMBER
pzextr	odesd.f	/^      SUBROUTINE pzextr(/;"	s
q	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x, y, z, q /;"	v	module:MODAMBER
qcol	mododesd.f90	/^    double precision, allocatable :: qcol(/;"	v	module:odesdsavear
qenergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,impenergy,qenergy,/;"	v	module:MODAMBER
qlist	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) ::  qlist,/;"	v	module:MODAMBER
qlistcount	modamb.f90	/^      INTEGER qlistcount,/;"	v	module:MODAMBER
qpsander	modamber9.f90	/^logical belly, erstop, qsetup, qpsander$/;"	v	module:MODAMBER9
qsetup	modamber9.f90	/^logical belly, erstop, qsetup,/;"	v	module:MODAMBER9
qx	modamb.f90	/^      DOUBLE PRECISION  qx(/;"	v	module:MODAMBER
qy	modamb.f90	/^      DOUBLE PRECISION  qx(3),qy(/;"	v	module:MODAMBER
qz	modamb.f90	/^      DOUBLE PRECISION  qx(3),qy(3),qz(/;"	v	module:MODAMBER
r	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: r,/;"	v	module:MODAMBER
rad	modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,/;"	v	module:MODAMBER9
radhb	modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,/;"	v	module:MODAMBER9
radii	modamber9.f90	/^      vecs, radii,/;"	v	module:MODAMBER9
range2inv3	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,range2inv3$/;"	v	module:LJCAPSIDMODULE
range2inv3	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,/;"	v	module:PYMODULE
rbornstat	modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,  &!48$/;"	v	module:MODAMBER9
rbtarg	modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(/;"	v	module:MODAMBER9
rdt	modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,/;"	v	module:MODAMBER9
readcoords	modamber9.f90	/^      LOGICAL MDSTEPT, readcoords,/;"	v	module:MODAMBER9
redir	modamber9.f90	/^      vecs, radii, freqe,redir(/;"	v	module:MODAMBER9
refc	modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt, &$/;"	v	module:MODAMBER9
repcrd	modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,/;"	v	module:MODAMBER9
res	modamb.f90	/^      INTEGER phiatom1(50), phiatom2(50), psiatom1(50), psiatom2(50), res$/;"	v	module:MODAMBER
restraint_wt	modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt,/;"	v	module:MODAMBER9
restraintmask	modamber9.f90	/^character(len=256) restraintmask,/;"	v	module:MODAMBER9
restrt	modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt,/;"	v	module:MODAMBER9
rgbmax	modamber9.f90	/^          solvph,rgbmax,/;"	v	module:MODAMBER9
rgni	fedor.f	/^      subroutine rgni(/;"	s
rgnii	fedor.f	/^      subroutine rgnii(/;"	s
rgnx2	fedor.f	/^        subroutine rgnx2(/;"	s
rgnxy	fedor.f	/^        subroutine rgnxy(/;"	s
rh	Pbglue.f	/^      SUBROUTINE rh /;"	s
rh1	EAMal.f	/^      SUBROUTINE rh1(/;"	s
rho_pot	Ackland_metals.f90	/^        double precision function rho_pot(/;"	f
rho_pot_d	Ackland_metals.f90	/^       double precision function rho_pot_d(/;"	f
rho_pot_dd	Ackland_metals.f90	/^        double precision  function rho_pot_dd(/;"	f
rings	modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,/;"	v	module:MODAMBER
rkck	odesd.f	/^      SUBROUTINE rkck(/;"	s
rkqs	odesd.f	/^      SUBROUTINE rkqs(/;"	s
rlist	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) ::  qlist, rlist /;"	v	module:MODAMBER
rlistcount	modamb.f90	/^      INTEGER qlistcount, rlistcount,/;"	v	module:MODAMBER
rndfles	modamber9.f90	/^double precision ekinles0,temp0les,rndfles,/;"	v	module:MODAMBER9
ro	modamb.f90	/^      DOUBLE PRECISION kr(42,42),ro(/;"	v	module:MODAMBER
ron	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,/;"	v	module:LJCAPSIDMODULE
ron	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,/;"	v	module:PYMODULE
ron2	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,/;"	v	module:LJCAPSIDMODULE
ron2	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,/;"	v	module:PYMODULE
rsdles	modamber9.f90	/^double precision scaltles,tempsules,ekeles,rsdles$/;"	v	module:MODAMBER9
rstar	modamb.f90	/^      DOUBLE PRECISION rstar,/;"	v	module:MODAMBER
rstdip	modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,/;"	v	module:MODAMBER9
rwell	modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,/;"	v	module:MODAMBER9
rzextr	odesd.f	/^      SUBROUTINE rzextr(/;"	s
saltcon	modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,/;"	v	module:MODAMBER9
sampledbins	commons.f90	/^     &        lhbins, sampledbins,/;"	v	module:COMMONS
sampledbins	commons.o.f90	/^     &        lhbins, sampledbins,/;"	v	module:COMMONS
scaldip	modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask, &$/;"	v	module:MODAMBER9
scalm	modamber9.f90	/^double precision scalm,/;"	v	module:MODAMBER9
scaltles	modamber9.f90	/^double precision scaltles,/;"	v	module:MODAMBER9
scee	modamber9.f90	/^double precision box,cut,scnb,scee,/;"	v	module:MODAMBER9
scnb	modamber9.f90	/^double precision box,cut,scnb,/;"	v	module:MODAMBER9
sdfacles	modamber9.f90	/^double precision ekinles0,temp0les,rndfles,sdfacles$/;"	v	module:MODAMBER9
seedphi	modamb.f90	/^      DOUBLE PRECISION  seedphi(/;"	v	module:MODAMBER
seedpsi	modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(/;"	v	module:MODAMBER
seval	Alglue.f	/^      subroutine seval(/;"	s
seval1	EAMal.f	/^      subroutine seval1(/;"	s
sigma1	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,/;"	v	module:LJCAPSIDMODULE
sigma1	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(/;"	v	module:PYMODULE
skmax	modamber9.f90	/^          skmin,skmax,/;"	v	module:MODAMBER9
skmin	modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt, &  !42$/;"	v	module:MODAMBER9
solvph	modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,  & !38$/;"	v	module:MODAMBER9
sortv	fedor.f	/^              subroutine sortv(/;"	s
specimpparams	modamb.f90	/^      DOUBLE PRECISION gentorsparams(100,6),spectorsparams(100,14),specimpparams(/;"	v	module:MODAMBER
spectorsparams	modamb.f90	/^      DOUBLE PRECISION gentorsparams(100,6),spectorsparams(/;"	v	module:MODAMBER
splinegmin	Farkas.f	/^      SUBROUTINE splinegmin(/;"	s
splint	Farkas.f	/^      SUBROUTINE splint(/;"	s
surften	modamber9.f90	/^          kappa,offset,surften,/;"	v	module:MODAMBER9
system_subr	porfuncs.f90	/^          subroutine system_subr(/;"	s	module:PORFUNCS
t	modamb.f90	/^      INTEGER  matc/;"	v	module:MODAMBER
t	modamber9.f90	/^double precision t,/;"	v	module:MODAMBER9
takestepamber	amber9dummy.f90	/^subroutine takestepamber(/;"	s
takestepamm	amber9dummy.f90	/^subroutine takestepamm(/;"	s
taup	modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,/;"	v	module:MODAMBER9
taur	modamber9.f90	/^      tol,taur,/;"	v	module:MODAMBER9
tausw	modamber9.f90	/^double precision scalm,pencut,ensave,tausw,/;"	v	module:MODAMBER9
tautp	modamber9.f90	/^double precision t,dt,temp0,tautp,/;"	v	module:MODAMBER9
temp	modamber9.f90	/^double precision t,dt,temp0/;"	v	module:MODAMBER9
temp0	modamber9.f90	/^double precision t,dt,temp0,/;"	v	module:MODAMBER9
temp0les	modamber9.f90	/^double precision ekinles0,temp0les,/;"	v	module:MODAMBER9
tempi	modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi,/;"	v	module:MODAMBER9
tempsules	modamber9.f90	/^double precision scaltles,tempsules,/;"	v	module:MODAMBER9
tenergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,/;"	v	module:MODAMBER
tetherfunc	tetherfunc.f90	/^      module tetherfunc /;"	m
tgtfitmask	modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,/;"	v	module:MODAMBER9
tgtmdfrc	modamber9.f90	/^double precision tgtrmsd,tgtmdfrc$/;"	v	module:MODAMBER9
tgtrmsd	modamber9.f90	/^double precision tgtrmsd,/;"	v	module:MODAMBER9
tgtrmsmask	modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,/;"	v	module:MODAMBER9
theta	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  theta /;"	v	module:MODAMBER
tmass	modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,/;"	v	module:MODAMBER9
tmassinv	modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,/;"	v	module:MODAMBER9
tmd_real	modamber9.f90	303;"	c	module:MODAMBER9
tmode	modamber9.f90	/^      neb,vv,tmode,/;"	v	module:MODAMBER9
to	modamb.f90	/^      DOUBLE PRECISION kt(42,42,42),to(/;"	v	module:MODAMBER
tol	modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi, & !9$/;"	v	module:MODAMBER9
tomegac	modamber9.f90	/^logical:: tomegac$/;"	v	module:MODAMBER9
top	modamb.f90	/^      DOUBLE PRECISION  top,/;"	v	module:MODAMBER
totenergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,/;"	v	module:MODAMBER
twopi	ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,/;"	v	module:LJCAPSIDMODULE
twopi	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,/;"	v	module:PYMODULE
type	modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  atnum, bondedto, type /;"	v	module:MODAMBER
typech	modamb.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: typech$/;"	v	module:MODAMBER
typechb	modamb.f90	/^      CHARACTER(LEN=2)  typechb,/;"	v	module:MODAMBER
typechc	modamb.f90	/^      CHARACTER(LEN=2)  typechb,typechc,/;"	v	module:MODAMBER
typechd	modamb.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,/;"	v	module:MODAMBER
typeche	modamb.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,typeche$/;"	v	module:MODAMBER
use_pme	modamber9.f90	/^      periodic,  use_pme,/;"	v	module:MODAMBER9
ut	fedor.f	/^      DOUBLE PRECISION function ut(/;"	f
ut0	fedor.f	/^      DOUBLE PRECISION function ut0(/;"	f
ut01	fedor.f	/^      DOUBLE PRECISION function ut01(/;"	f
uu	Pbglue.f	/^      SUBROUTINE uu /;"	s
uu1	EAMal.f	/^      SUBROUTINE uu1(/;"	s
v11	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,/;"	v	module:MODAMBER9
v12	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,/;"	v	module:MODAMBER9
v21	EAMal.f	/^      SUBROUTINE v21(/;"	s
v22	modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,/;"	v	module:MODAMBER9
vdwa	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: r, vdwa,/;"	v	module:MODAMBER
vdwb	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: r, vdwa, vdwb /;"	v	module:MODAMBER
vdwe	modamb.f90	/^      DOUBLE PRECISION vdwr(42),vdwe(/;"	v	module:MODAMBER
vdwenergy	modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,impenergy,qenergy,vdwenergy$/;"	v	module:MODAMBER
vdwmeth	modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth,/;"	v	module:MODAMBER9
vdwr	modamb.f90	/^      DOUBLE PRECISION vdwr(/;"	v	module:MODAMBER
vecs	modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor, &$/;"	v	module:MODAMBER9
vecsbf	pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(4),vecsbf(/;"	v	module:PYMODULE
verbose	modamber9.f90	/^integer verbose,/;"	v	module:MODAMBER9
vfac	modamber9.f90	/^          skmin,skmax,vfac,/;"	v	module:MODAMBER9
vlimit	modamber9.f90	/^      tol,taur,dx0,drms,vlimit,/;"	v	module:MODAMBER9
vrand	modamber9.f90	/^      gbsa,vrand,/;"	v	module:MODAMBER9
vv	modamber9.f90	/^      neb,vv,/;"	v	module:MODAMBER9
wait_subr	porfuncs.f90	/^          subroutine wait_subr(/;"	s	module:PORFUNCS
wel	modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,/;"	v	module:MODAMBER9
welhb	modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb,/;"	v	module:MODAMBER9
x	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x,/;"	v	module:MODAMBER
x	modamber9.f90	/^   double precision,  dimension(:), allocatable :: x$/;"	v	module:MODAMBER9
xbar	modamb.f90	/^      DOUBLE PRECISION xbar,/;"	v	module:MODAMBER
xbox0	modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,/;"	v	module:MODAMBER9
xcap	modamber9.f90	/^      cutcap,xcap,/;"	v	module:MODAMBER9
xicom	modf1com.f90	/^      double precision, allocatable :: xicom(/;"	v	module:F1COM
xvEX	commons.f90	/^      REAL, ALLOCATABLE :: xvEX(/;"	v	module:COMMONS
xvEX	commons.o.f90	/^      REAL, ALLOCATABLE :: xvEX(/;"	v	module:COMMONS
y	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x, y,/;"	v	module:MODAMBER
ybar	modamb.f90	/^      DOUBLE PRECISION xbar, ybar,/;"	v	module:MODAMBER
ybox0	modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,/;"	v	module:MODAMBER9
ycap	modamber9.f90	/^      cutcap,xcap,ycap,/;"	v	module:MODAMBER9
z	modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x, y, z,/;"	v	module:MODAMBER
zbar	modamb.f90	/^      DOUBLE PRECISION xbar, ybar, zbar$/;"	v	module:MODAMBER
zbox0	modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,zbox0$/;"	v	module:MODAMBER9
zcap	modamber9.f90	/^      cutcap,xcap,ycap,zcap,/;"	v	module:MODAMBER9
