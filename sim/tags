!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RAD	file:
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RADR	file:
1	func.f90	/^     1        DBLE(IZ)\/30323.0D0,1.0D0)$/;"	l	subroutine:SDPRND	file:
1	func.f90	/^     1    OTHER, OFFSET, X, Y$/;"	l	function:DPRAND	file:
1	func.f90	/^     1    XMOD2 = 2000019422.0D0, XMOD4 = 4000038844.0D0,$/;"	l	function:DPRAND	file:
1	g.EAMal.f	/^1       CONTINUE$/;"	l	subroutine:EAMal	file:
1	g.brent.f	/^1       IF(X.GE.XM) THEN$/;"	l	function:BRENT	file:
1	g.fedor.f	/^    1 continue$/;"	l	function:ar2UT0	file:
1	g.fedor.f	/^    1 continue$/;"	l	function:ut	file:
1	g.fedor.f	/^   1      continue$/;"	l	subroutine:hmat	file:
1	g.fedor.f	/^   1      continue$/;"	l	subroutine:hmatd	file:
1	g.fedor.f	/^  1      continue$/;"	l	subroutine:dipoles	file:
1	g.fedor.f	/^  1     ereal=ee(1)$/;"	l	subroutine:rgni	file:
1	g.gauss.f	/^1       v1=2.*DPRAND()-1.$/;"	l	function:gasdev	file:
1	g.newmindist.f90	/^1  NCIT=NCIT+1$/;"	l	subroutine:NEWMINDIST	file:
1	g.odesd.f	/^1       kmax=kopt$/;"	l	subroutine:bsstep	file:
1	g.odesd.f	/^1     call rkck(y,dydx,n,x,h,ytemp,yerr)$/;"	l	subroutine:rkqs	file:
1	g.pyg.f90	/^1        IF (X >= XM) THEN$/;"	l	subroutine:BRENTMIN	file:
1	g.quench.f	/^     1                                     EREAL, EPREV(NP), DISTMIN, EPSSPHERE$/;"	l	subroutine:QUENCH	file:
1	g.quench.f	/^     1              P(3*(NATOMS\/2+J2-1)+1),P(3*(NATOMS\/2+J2-1)+2),P(3*(NATOMS\/2+J2-1)+3),RBCOORDS)$/;"	l	subroutine:QUENCH	file:
1	g.quench.f	/^     1              POTEL,' steps=',ITER,' RMS force=',RMS$/;"	l	subroutine:QUENCH	file:
1	g.quench.sim.f90	/^     1                                     EREAL, EPREV(NP), DISTMIN, EPSSPHERE$/;"	l	subroutine:QUENCH	file:
1	g.quench.sim.f90	/^     1              P(3*(NATOMS\/2+J2-1)+1),P(3*(NATOMS\/2+J2-1)+2),P(3*(NATOMS\/2+J2-1)+3),RBCOORDS)$/;"	l	subroutine:QUENCH	file:
1	g.quench.sim.f90	/^     1              POTEL,' steps=',ITER,' RMS force=',RMS$/;"	l	subroutine:QUENCH	file:
1	g.sort.f	/^1     if(ir-l.lt.M)then$/;"	l	subroutine:Gsort	file:
1	g.takestepmsgb.f90	/^1        IF (X .GE. XM) THEN$/;"	l	subroutine:BRENTMINGB	file:
1	gmin.func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RAD	file:
1	gmin.func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RADR	file:
1	mylbfgs.f90	/^     1                   ' INVERSE HESSIAN APPROXIMATION IS NOT POSITIVE')$/;"	l	subroutine:MYLBFGS	file:
1	optim.GoOptim.f	/^1         continue$/;"	l	subroutine:GoBonds	file:
1	optim.bfgsts.f	/^1     VDOT=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
1	optim.bhinterp.f90	/^1 CONTINUE$/;"	l	subroutine:BHINTERP	file:
1	optim.greatcirc.f	/^1     FIXIMAGE=.FALSE.$/;"	l	subroutine:GCLBFGS	file:
1	optim.hessout.f	/^ 1    ITOP=MIN(JX+4,IR)$/;"	l	subroutine:HESSOUT	file:
1	optim.miel.f	/^1     IF(ABS(X3-X0).GT.TOL*(ABS(X1)+ABS(X2)))THEN$/;"	l	subroutine:MIEL	file:
1	optim.mylbfgs.f	/^1     FIXIMAGE=.FALSE.$/;"	l	subroutine:MYLBFGS	file:
1	optim.odesd.f	/^1       KMAX=KOPT$/;"	l	subroutine:BSSTEP	file:
1	optim.odesd.f	/^1     CALL RKCK(Y,DYDX,N,X,H,YTEMP,YERR)$/;"	l	subroutine:RKQS	file:
1	optim.pyg.f90	/^1        IF (X >= XM) THEN$/;"	l	subroutine:BRENTMIN	file:
1	optim.scl.f	/^1     IF(ABS(X3-X0).GT.TOL*(ABS(X1)+ABS(X2)))THEN$/;"	l	subroutine:SCL	file:
1	optim.ttm3f.f90	/^1 gammcf=dexp(-x+a*dlog(x)-gln)*h$/;"	l	subroutine:gamma3	file:
1	optim.ttm3f.f90	/^1 gamser = ssum*dexp(-x+a*dlog(x)-gln)$/;"	l	subroutine:gamma2	file:
1	pathsample.setup.f	/^     1                                            ETS(J1),EMIN(PLUS(J1)),EMIN(MINUS(J1)),KPLUS(J1),KMINUS(J1)$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1                   (FVIBMIN(MINUS(J1)) - FVIBTS(J1))\/2 + (KAPPA-1)*LOG((TOTALE-ETS(J1))\/(TOTALE-EMIN(MINUS(J1))))$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1                   (FVIBMIN(PLUS(J1))  - FVIBTS(J1))\/2 + (KAPPA-1)*LOG((TOTALE-ETS(J1))\/(TOTALE-EMIN(PLUS(J1))))$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1                (ABS(IYM-IYTS(J1)).GT.IDIFFTOL).OR.$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1                (ABS(IZM-IZTS(J1)).GT.IDIFFTOL)) THEN$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1             (FVIBMIN(MINUS(J1)) - FVIBTS(J1)) \/ 2.0D0 - (ETS(J1) - EMIN(MINUS(J1)))\/TEMPERATURE$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1             (FVIBMIN(PLUS(J1))  - FVIBTS(J1)) \/ 2.0D0 - (ETS(J1) - EMIN(PLUS(J1)) )\/TEMPERATURE$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1          (ABS(IYM-IYMIN(J1)).GT.IDIFFTOL).OR.$/;"	l	subroutine:SETUP	file:
1	pathsample.setup.f	/^     1          (ABS(IZM-IZMIN(J1)).GT.IDIFFTOL)) THEN$/;"	l	subroutine:SETUP	file:
1	ps.main.write.inc.f90	/^     1                             ' pair renorm threshold=',PAIRTHRESH$/;"	l	file:
10	finalio.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	func.f90	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	func.f90	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	func.f90	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	func.f90	/^10    CONTINUE$/;"	l	subroutine:UPPERCASE	file:
10	func.f90	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	func.f90	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	func.f90	/^10    M=1$/;"	l	file:
10	func.f90	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	func.f90	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	g.Alglue.f	/^   10 i = 1$/;"	l	subroutine:seval	file:
10	g.CSMinit.f90	/^10    CALL FLUSH(6)$/;"	l	subroutine:CSMMIN	file:
10	g.EAMal.f	/^   10 i = 1$/;"	l	subroutine:seval1	file:
10	g.EAMal.f	/^10     CONTINUE$/;"	l	subroutine:EAMal	file:
10	g.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2C	file:
10	g.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMEC	file:
10	g.MSorigc.f	/^10    FORMAT(A8, F20.17)$/;"	l	subroutine:MSORIGC	file:
10	g.Q4.f	/^10    continue$/;"	l	subroutine:ORDERQ4	file:
10	g.Zetterling.f	/^10    DO J1=1,NATOMS$/;"	l	subroutine:Z1	file:
10	g.Zetterling.f	/^10    DO J1=1,NATOMS$/;"	l	subroutine:Z2	file:
10	g.cgmin.f	/^10          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in cgmin')$/;"	l	subroutine:CGMIN	file:
10	g.dbptd.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWDMBLTD	file:
10	g.dbrent.f	/^10      IF(DX.GE.0.) THEN$/;"	l	function:DBRENT	file:
10	g.dgetrf.f	/^   10             CONTINUE$/;"	l	subroutine:DLASWP	file:
10	g.dgetrf.f	/^   10       CONTINUE$/;"	l	function:ILAENV	file:
10	g.dgetrf.f	/^   10       CONTINUE$/;"	l	subroutine:DGETRF	file:
10	g.dgetrf.f	/^   10 CONTINUE$/;"	l	subroutine:DGETF2	file:
10	g.dgetri.f	/^   10       CONTINUE$/;"	l	subroutine:DGETRI	file:
10	g.dgetri.f	/^   10    CONTINUE$/;"	l	subroutine:DTRTI2	file:
10	g.dgetri.f	/^   10    CONTINUE$/;"	l	subroutine:DTRTRI	file:
10	g.display_version.f90	/^10 format(a)$/;"	l	subroutine:display_version	file:
10	g.dlamch.f	/^   10    CONTINUE$/;"	l	subroutine:DLAMC1	file:
10	g.dlamch.f	/^   10    CONTINUE$/;"	l	subroutine:DLAMC2	file:
10	g.dlamch.f	/^   10 CONTINUE$/;"	l	subroutine:DLAMC4	file:
10	g.dlamch.f	/^   10 CONTINUE$/;"	l	subroutine:DLAMC5	file:
10	g.dlsode.f	/^   10          CONTINUE$/;"	l	subroutine:DGBSL	file:
10	g.dlsode.f	/^   10       CONTINUE$/;"	l	subroutine:DGESL	file:
10	g.dlsode.f	/^   10    CONTINUE$/;"	l	subroutine:DGBFA	file:
10	g.dlsode.f	/^   10 CONTINUE$/;"	l	function:IDAMAX	file:
10	g.dlsode.f	/^   10 CONTINUE$/;"	l	function:MYDDOT	file:
10	g.dlsode.f	/^   10 CONTINUE$/;"	l	subroutine:DSCAL	file:
10	g.dlsode.f	/^   10 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
10	g.dlsode.f	/^ 10     IC = IC*JJ$/;"	l	subroutine:DINTDY	file:
10	g.dlsode.f	/^ 10     RSAV(I) = RLS(I)$/;"	l	subroutine:DSRCOM	file:
10	g.dlsode.f	/^ 10     SUM = SUM + (V(I)*W(I))**2$/;"	l	function:DVNORM	file:
10	g.dlsode.f	/^ 10   CONTINUE$/;"	l	subroutine:DEWSET	file:
10	g.dlsode.f	/^ 10   FORMAT(1X,A)$/;"	l	subroutine:XERRWD	file:
10	g.dlsode.f	/^ 10   INIT = 0$/;"	l	subroutine:DLSODE	file:
10	g.dlsode.f	/^ 10   U = U*0.5D0$/;"	l	function:DUMACH	file:
10	g.dmblmorse.f90	/^10         ENDDO$/;"	l	subroutine:DMBLMORSE	file:
10	g.dmblmorse.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWDMBL	file:
10	g.dprand.f	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	g.dprand.f	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	g.dv.f90	/^10 format(a)$/;"	l	subroutine:display_version	file:
10	g.dzugutov.f	/^10    DO J1=1,NATOMS $/;"	l	subroutine:DZPOT	file:
10	g.eigsrt.f	/^10       CONTINUE$/;"	l	subroutine:EIGSRT	file:
10	g.f1dim.f	/^10    CONTINUE$/;"	l	function:F1DIM	file:
10	g.fdm.f	/^10    CONTINUE$/;"	l	subroutine:FDM	file:
10	g.fedor.f	/^   10      continue$/;"	l	function:ut0	file:
10	g.fedor.f	/^   10      continue$/;"	l	function:ut01	file:
10	g.fedor.f	/^   10    M = M - 1$/;"	l	function:PPVALU	file:
10	g.fedor.f	/^   10 C(4,M)=(C(1,M)-C(1,M-1))\/C(3,M)$/;"	l	subroutine:CUBSPL	file:
10	g.fedor.f	/^   10 continue$/;"	l	function:ut	file:
10	g.fedor.f	/^  10      continue$/;"	l	subroutine:dipoles	file:
10	g.fedor.f	/^  10      continue$/;"	l	subroutine:hmat	file:
10	g.fedor.f	/^  10      continue$/;"	l	subroutine:hmatd	file:
10	g.finalio.f	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	g.input.f	/^10    CONTINUE$/;"	l	subroutine:MYUPCASE	file:
10	g.input.f	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	g.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	g.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	g.input.f	/^10    M=1$/;"	l	file:
10	g.input.f	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	g.input.f	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	g.ljcapsidmodule.f90	/^10    IF ( H .EQ. 1 ) GOTO 40$/;"	l	subroutine:SVERT	file:
10	g.mc.F	/^10       IF ((XMOVERENORM.GT.3.0D0).OR.FIXD) THEN$/;"	l	subroutine:REN	file:
10	g.mc.F	/^10    CALL HSMOVE(COORDS(1:3*NATOMS,1:NPAR),1,NHSRESTART)$/;"	l	subroutine:REST	file:
10	g.mc.F	/^10    FORMAT('Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
10	g.minperm.f	/^   10 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
10	g.minperm.f	/^10            if(l .le. 1) goto 11$/;"	l	subroutine:minperm	file:
10	g.minpermdist.f90	/^10 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
10	g.mnbrak.f	/^10    IF(FB.GE.FC)THEN$/;"	l	subroutine:MNBRAK	file:
10	g.multpaha.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWMULTPAHA	file:
10	g.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMGK	file:
10	g.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMKK	file:
10	g.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMSK	file:
10	g.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBMV	file:
10	g.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBSV	file:
10	g.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPMV	file:
10	g.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPSV	file:
10	g.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRMV	file:
10	g.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRSV	file:
10	g.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR	file:
10	g.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR2	file:
10	g.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR	file:
10	g.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR2	file:
10	g.mylapack.f	/^   10                CONTINUE$/;"	l	subroutine:DTBSV	file:
10	g.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:DSYR	file:
10	g.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGBMV	file:
10	g.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGEMV	file:
10	g.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSBMV	file:
10	g.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSPMV	file:
10	g.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSYMV	file:
10	g.mylapack.f	/^   10            CONTINUE$/;"	l	subroutine:SGER	file:
10	g.mylapack.f	/^   10          CONTINUE$/;"	l	subroutine:DPBTRF	file:
10	g.mylapack.f	/^   10    CONTINUE$/;"	l	function:LCE	file:
10	g.mylapack.f	/^   10    CONTINUE$/;"	l	function:LDE	file:
10	g.mylapack.f	/^   10    CONTINUE$/;"	l	function:LSE	file:
10	g.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTF2	file:
10	g.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTRS	file:
10	g.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:SMAKE	file:
10	g.mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SMESSG	file:
10	g.mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SOPEN	file:
10	g.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK1	file:
10	g.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK2	file:
10	g.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK3	file:
10	g.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK4	file:
10	g.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK5	file:
10	g.mylapack.f	/^   10 MI = 891$/;"	l	function:SBEG	file:
10	g.mylbfgs.f	/^10    CALL FLUSH(MYUNIT)$/;"	l	subroutine:MYLBFGS	file:
10	g.mysd.f	/^10    GNORM=DSQRT(DDOT(NOPT,GRAD,1,GRAD,1))$/;"	l	subroutine:MYSD	file:
10	g.newtip.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWNEWTIP	file:
10	g.odesd.f	/^10    CALL POTENTIAL(VARS,DYDX,ENERGY,.TRUE.,.FALSE.)$/;"	l	subroutine:ODESD	file:
10	g.orient.f	/^10    CONTINUE$/;"	l	subroutine:MYORIENT	file:
10	g.potential.f	/^10    CONTINUE$/;"	l	subroutine:POTENTIAL	file:
10	g.ptgrp.f	/^   10   ARR(I+1)=A$/;"	l	subroutine:PIKSR2	file:
10	g.ptgrp.f	/^ 10      RT(IDIR,J)=IBTAND(IDIR,J)\/MAX(IDIR,J)$/;"	l	subroutine:ROTM	file:
10	g.ptgrp.f	/^ 10   CONTINUE$/;"	l	function:ITOA	file:
10	g.ptgrp.f	/^ 10   V(I)=B(I)-A(I)$/;"	l	subroutine:XVEC	file:
10	g.ptgrp.f	/^10                   CONTINUE$/;"	l	subroutine:PTGRP	file:
10	g.ptgrp.f	/^10    A(I)=0.D0$/;"	l	subroutine:ZERO	file:
10	g.ptgrp.f	/^10    A(I)=B(I)+C(I)*IP$/;"	l	subroutine:VADD	file:
10	g.ptgrp.f	/^10    AT(J,I)=A(I,J)$/;"	l	subroutine:MTRANS	file:
10	g.ptgrp.f	/^10    B(J,I)=ZER$/;"	l	subroutine:EIG	file:
10	g.ptgrp.f	/^10    CONTINUE$/;"	l	subroutine:MATMUL	file:
10	g.ptgrp.f	/^10    CONTINUE$/;"	l	subroutine:SORTXYZ	file:
10	g.ptgrp.f	/^10    MYDOT=MYDOT+A(I)*B(I)$/;"	l	function:MYDOT	file:
10	g.ptgrp.f	/^10    Q=Q+X(I)**2$/;"	l	subroutine:NORMAL	file:
10	g.ptgrp.f	/^10    Z=Z+(A(I)-B(I))**2$/;"	l	function:FDIST	file:
10	g.pyg.f90	/^10    CONTINUE$/;"	l	subroutine:BRENTMIN	file:
10	g.quench.f	/^10    IF (PERMOPT) THEN ! lb415$/;"	l	subroutine:QUENCH	file:
10	g.quench.sim.f90	/^10    IF (PERMOPT) THEN ! lb415$/;"	l	subroutine:QUENCH	file:
10	g.saveit.f	/^10    CONTINUE$/;"	l	subroutine:A9INTESAVEIT	file:
10	g.saveit.f	/^10    CONTINUE$/;"	l	subroutine:GSAVEIT	file:
10	g.seed.f	/^10    CLOSE(10)$/;"	l	subroutine:GSEED	file:
10	g.sort2.f	/^10       CONTINUE$/;"	l	subroutine:GSORT2	file:
10	g.sort3.f	/^10       CONTINUE$/;"	l	subroutine:SORT3	file:
10	g.sort4.f	/^10       CONTINUE$/;"	l	subroutine:SORT4	file:
10	g.taboo.f	/^10          CONTINUE$/;"	l	subroutine:TABOO	file:
10	g.takestep.f	/^10       J2=3*J1$/;"	l	subroutine:TAKESTEP	file:
10	g.takestepmsgb.f90	/^10    CONTINUE$/;"	l	subroutine:BRENTMINGB	file:
10	g.tetrahedra.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:VIEWTDHD	file:
10	g.tn.f	/^   10 CONTINUE$/;"	l	subroutine:DXPY	file:
10	g.tn.f	/^10      ITEST = 2$/;"	l	subroutine:GETPTC	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:CNVTST	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:INITP3	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:LINDER	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:LMQN	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:MODLNP	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:MODZ	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:MONIT	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:NDIA3	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:NEGVEC	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:SETPAR	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:SSBFGS	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:STPMAX	file:
10	g.tn.f	/^10    CONTINUE$/;"	l	subroutine:ZTIME	file:
10	g.tosifumi.f	/^   10 CONTINUE$/;"	l	subroutine:NDHESS	file:
10	g.welch.f	/^   10       continue$/;"	l	subroutine:dgefa	file:
10	g.welch.f	/^   10       if (dabs(det(1)) .ge. 1.0d0) go to 20$/;"	l	subroutine:dgedi	file:
10	g.welch.f	/^   10 continue$/;"	l	subroutine:dgeco	file:
10	g.zwischen.f	/^10    CONTINUE$/;"	l	subroutine:ZWISCHEN	file:
10	gmin.func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	lbfgs.f	/^   10    CONTINUE$/;"	l	subroutine:MCSRCH	file:
10	lbfgs.f	/^   10 continue$/;"	l	function:ddot	file:
10	lbfgs.f	/^   10 continue$/;"	l	subroutine:daxpy	file:
10	lbfgs.f	/^  10  ITER= 0$/;"	l	subroutine:LBFGS	file:
10	lbfgs.f	/^ 10   FORMAT('*************************************************')$/;"	l	subroutine:LB1	file:
10	mylbfgs.f90	/^10    CALL FLUSH(LFH)$/;"	l	subroutine:MYLBFGS	file:
10	mylbfgs.old.f90	/^10    CALL FLUSH(MYUNIT)$/;"	l	subroutine:MYLBFGS	file:
10	optim.Clatmin.f	/^10    TEMP1=AMAT(1,1)$/;"	l	subroutine:CLATMIN	file:
10	optim.EYtrap.f	/^10       CONTINUE$/;"	l	subroutine:EYETRAP	file:
10	optim.EYtrap.f	/^10    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
10	optim.JM.f	/^10       CONTINUE $/;"	l	subroutine:JM3	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2C	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2P	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JME	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMEC	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMECC	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMEP	file:
10	optim.PV.f	/^10    PVAGAIN=.FALSE.$/;"	l	subroutine:PVOPT	file:
10	optim.SW.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:SWLATMIN	file:
10	optim.SiO2.f	/^   10 CONTINUE$/;"	l	subroutine:SIO2NDHESS	file:
10	optim.SiO2.f	/^   10 CONTINUE$/;"	l	subroutine:SIO2NSHESS	file:
10	optim.adm.f	/^10     CONTINUE$/;"	l	subroutine:ADM	file:
10	optim.amb_natinterns.f90	/^   10  CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
10	optim.amber.f	/^10    CONTINUE$/;"	l	subroutine:aparams	file:
10	optim.amber.f	/^10    CONTINUE$/;"	l	subroutine:aread	file:
10	optim.amber.f	/^10    CONTINUE$/;"	l	subroutine:impderivs	file:
10	optim.axdiff.f	/^10       CONTINUE $/;"	l	subroutine:AXDIFF	file:
10	optim.axpairs.f	/^10       CONTINUE$/;"	l	subroutine:AXPAIRS	file:
10	optim.aziz.f	/^10       CONTINUE$/;"	l	subroutine:AZIZ	file:
10	optim.bfgsts.f	/^10          CLOSE(45)$/;"	l	subroutine:BFGSTS	file:
10	optim.bfgsts.f	/^10    DUMMY1=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
10	optim.bfgsts.f	/^10    IF (ITER.GT.1) THEN$/;"	l	subroutine:ITEIG	file:
10	optim.bhinterp.f90	/^10 CONTINUE$/;"	l	subroutine:BHINTERP	file:
10	optim.c60diff.f	/^10    CONTINUE$/;"	l	subroutine:C60DIFF	file:
10	optim.c60diff.f	/^10    CONTINUE$/;"	l	subroutine:RESCALEC6	file:
10	optim.c60p.f	/^10       CONTINUE$/;"	l	subroutine:C60P	file:
10	optim.connect.f	/^10       CONTINUE$/;"	l	subroutine:ISNEWTS	file:
10	optim.connect.f	/^10    CLOSE(83)$/;"	l	subroutine:RATES	file:
10	optim.connect.f	/^10    CONTINUE$/;"	l	subroutine:REMMIN2	file:
10	optim.connect.f	/^10    CONTINUE$/;"	l	subroutine:STD_ORIENT	file:
10	optim.connect.f	/^10    NCDONE=NCDONE+1$/;"	l	subroutine:CONNECT	file:
10	optim.connect.f	/^10    READ(IUNIT,'(A100)',END=20) LSTRING(1)$/;"	l	subroutine:REVERSEBLOCK	file:
10	optim.cpmdlatmin.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:CPMDLATMIN	file:
10	optim.cubspl.f	/^   10    c(4,m) = (c(1,m) - c(1,m-1))\/c(3,m)$/;"	l	subroutine:cubspl	file:
10	optim.dctrap.f	/^10    CONTINUE$/;"	l	subroutine:DCTRAP	file:
10	optim.dprand.f	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	optim.dqag.f	/^   10       CONTINUE$/;"	l	subroutine:XERSVE	file:
10	optim.dqag.f	/^   10    CONTINUE$/;"	l	subroutine:XERMSG	file:
10	optim.dqag.f	/^   10   ALIST(MAXERR) = A2$/;"	l	subroutine:DQAGE	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	function:I1MACH	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK15	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK21	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK31	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK41	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK51	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK61	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:XERPRN	file:
10	optim.dqag.f	/^   10 ERRMAX = ELIST(MAXERR)$/;"	l	subroutine:DQPSRT	file:
10	optim.dsygvx.f	/^   10       CONTINUE$/;"	l	subroutine:DLACPY	file:
10	optim.dsygvx.f	/^   10       CONTINUE$/;"	l	subroutine:DSYEVX	file:
10	optim.dtrap.f	/^10    CONTINUE$/;"	l	subroutine:DTRAP	file:
10	optim.efol.f90	/^10    FORMAT(' Updating structure with eigenvector-following steps.')$/;"	l	subroutine:EFOL	file:
10	optim.eig.f	/^10       CONTINUE$/;"	l	subroutine:EIG	file:
10	optim.emie.f	/^10       CONTINUE$/;"	l	subroutine:EMIE	file:
10	optim.escp.f	/^10       CONTINUE$/;"	l	subroutine:DSCP	file:
10	optim.escp.f	/^10       CONTINUE$/;"	l	subroutine:OESCP	file:
10	optim.etrap.f	/^10       CONTINUE$/;"	l	subroutine:ETRAP	file:
10	optim.fetchz.f	/^10       CLOSE(77)$/;"	l	subroutine:FETCHZ	file:
10	optim.g2special.f	/^10       NCOUNT=NCOUNT+1$/;"	l	subroutine:G2SPECIAL	file:
10	optim.greatcirc.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:GCLBFGS	file:
10	optim.hessout.f	/^ 10   CONTINUE$/;"	l	subroutine:HESSOUT	file:
10	optim.hybridmin.f	/^10          CLOSE(45)$/;"	l	subroutine:HYBRIDMIN	file:
10	optim.input.f	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	optim.input.f	/^10    CONTINUE$/;"	l	subroutine:UPPERCASE	file:
10	optim.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	optim.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	optim.input.f	/^10    M=1$/;"	l	file:
10	optim.input.f	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	optim.input.f	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	optim.intbfgsts.f	/^10          CLOSE(45)$/;"	l	subroutine:INTBFGSTS	file:
10	optim.intxmylbfgs.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:INTXMYLBFGS	file:
10	optim.ions.f	/^10       CONTINUE$/;"	l	subroutine:IONS	file:
10	optim.keyword.f	/^10       IF (NITEMS.GT.2) THEN$/;"	l	subroutine:KEYWORD	file:
10	optim.latmin.f	/^10       CONTINUE$/;"	l	subroutine:C60PE	file:
10	optim.latmin.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:LATMIN	file:
10	optim.ljpshift.f	/^10    SBOX(1)=0.0D0$/;"	l	subroutine:LJPSHIFTSBIN	file:
10	optim.ljpshift.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:LJPSLATMIN	file:
10	optim.ljpshift.f	/^10    VBOX(1)=0.0D0$/;"	l	subroutine:LJPSHIFTGBIN	file:
10	optim.mdiff.f	/^10       CONTINUE$/;"	l	subroutine:MDIFF	file:
10	optim.meccano.f90	/^10 CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MECBFGS	file:
10	optim.mied.f	/^10       CONTINUE$/;"	l	subroutine:MIED	file:
10	optim.miel.f	/^10       CONTINUE$/;"	l	subroutine:MIEL	file:
10	optim.mindist.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MMYLBFGS	file:
10	optim.mindist.f	/^10    DIST0=DISTFUNC(P,R,R0,R1)$/;"	l	subroutine:MINDIST	file:
10	optim.minperm.f	/^   10 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
10	optim.minperm.f	/^10            if(l .le. 1) goto 11$/;"	l	subroutine:minperm	file:
10	optim.minpermdist.f90	/^10 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
10	optim.minpermdistrbcom.f90	/^10    CONTINUE$/;"	l	subroutine:MINPERMDISTRBCOM	file:
10	optim.mlatmin.f	/^10       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
10	optim.mlatmin.f	/^10    DO 25 J1=1,3*N$/;"	l	subroutine:MLATMIN	file:
10	optim.mpdiff.f	/^10       CONTINUE$/;"	l	subroutine:MPDIFF	file:
10	optim.mpdiff.f	/^10       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
10	optim.msdiff.f	/^10       CONTINUE$/;"	l	subroutine:MSDIFF	file:
10	optim.mslatmin.f	/^10       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
10	optim.mslatmin.f	/^10    DO 25 J1=1,3*N$/;"	l	subroutine:MSLATMIN	file:
10	optim.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMGK	file:
10	optim.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMKK	file:
10	optim.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMSK	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBMV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBSV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPMV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPSV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRMV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRSV	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR2	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR2	file:
10	optim.mylapack.f	/^   10                CONTINUE$/;"	l	subroutine:DTBSV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:DSYR	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGBMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGEMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSBMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSPMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSYMV	file:
10	optim.mylapack.f	/^   10            CONTINUE$/;"	l	subroutine:SGER	file:
10	optim.mylapack.f	/^   10          CONTINUE$/;"	l	subroutine:DPBTRF	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	function:LCE	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	function:LDE	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	function:LSE	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTF2	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTRS	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:SMAKE	file:
10	optim.mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SMESSG	file:
10	optim.mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SOPEN	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK1	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK2	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK3	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK4	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK5	file:
10	optim.mylapack.f	/^   10 MI = 891$/;"	l	function:SBEG	file:
10	optim.mylbfgs.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MYLBFGS	file:
10	optim.myorient.f	/^10    CONTINUE$/;"	l	subroutine:MYORIENT	file:
10	optim.odesd.f	/^10    IF (PV.AND.(.NOT.BFGSSTEP)) THEN$/;"	l	subroutine:ODESD	file:
10	optim.oldneb.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:NEBBFGS	file:
10	optim.oldneb.f	/^10    IF (NMAGNIFY.EQ.0) THEN$/;"	l	subroutine:OLDNEB	file:
10	optim.pertable.f	/^ 10   CONTINUE$/;"	l	subroutine:PERTABLE	file:
10	optim.potential.f	/^10       FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:POTENTIAL	file:
10	optim.projh.f	/^   10       continue$/;"	l	subroutine:dgefa	file:
10	optim.projh.f	/^   10       if (dabs(det(1)) .ge. 1.0d0) go to 20$/;"	l	subroutine:dgedi	file:
10	optim.projh.f	/^   10 continue$/;"	l	subroutine:dgeco	file:
10	optim.pyg.f90	/^10    CONTINUE$/;"	l	subroutine:BRENTMIN	file:
10	optim.rbperm.f90	/^10    CONTINUE$/;"	l	subroutine:RBMINPERMDIST	file:
10	optim.rigidb.f90	/^10     CONTINUE$/;"	l	subroutine:CHECKDRVTS	file:
10	optim.rotd.f	/^10       CONTINUE$/;"	l	subroutine:EPANIC	file:
10	optim.rotd.f	/^10    CONTINUE$/;"	l	subroutine:ROTENERGY	file:
10	optim.scdiff.f	/^10       CONTINUE$/;"	l	subroutine:SCDIFF	file:
10	optim.specialfuncts.f90	/^10       Z0=Z$/;"	l	subroutine:LEGZO	file:
10	optim.symmetry.f	/^10    CONTINUE$/;"	l	subroutine:SYMMETRY	file:
10	optim.tosifumi.f	/^   10 CONTINUE$/;"	l	subroutine:NDHESS	file:
10	optim.tosifumi.f	/^   10 CONTINUE$/;"	l	subroutine:NSHESS	file:
10	optim.twoend.f	/^10    SWITCH=.FALSE.$/;"	l	subroutine:TWOEND	file:
10	optim.unmeccano.f90	/^10 CALL FLUSH(6,ISTAT)$/;"	l	subroutine:UNMECBFGS	file:
10	optim.unrescalcdihe.f	/^ 10   CONTINUE$/;"	l	subroutine:UEDITRGYR	file:
10	optim.unresconnectsections.f	/^10      CONTINUE$/;"	l	subroutine:UNRESGUESSTSSEC	file:
10	optim.unresguessts.f	/^10      CONTINUE$/;"	l	subroutine:UNRESGUESSTS	file:
10	optim.unrestransform.f	/^   10 CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
10	optim.unrestransform.f	/^10       CONTINUE$/;"	l	subroutine:INTSECDET	file:
10	optim.utils.f	/^   10   ARR(I+1)=A$/;"	l	subroutine:PIKSR2	file:
10	optim.utils.f	/^ 10   CONTINUE$/;"	l	function:ITOA	file:
10	optim.xmylbfgs.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:XMYLBFGS	file:
10	pathsample.Dijkstra.f90	/^10       CONTINUE$/;"	l	subroutine:SORT3	file:
10	pathsample.KMC.a2b.f	/^10    NKMC=NKMC+1$/;"	l	subroutine:KMCA2B	file:
10	pathsample.KMC.f	/^10       XSTEPS=XSTEPS+1.0D0 ! KMC runs for minmum LJ1$/;"	l	subroutine:KMC	file:
10	pathsample.KMCcommit.f	/^10       XSTEPS=XSTEPS+1.0D0 ! KMC runs for minmum LJ1$/;"	l	subroutine:KMCCOMMIT	file:
10	pathsample.addperm.f	/^10       CONTINUE$/;"	l	subroutine:ADDPERM	file:
10	pathsample.cycle.f90	/^10    RANDOM=DPRAND()$/;"	l	subroutine:CYCLE	file:
10	pathsample.cycle2.f90	/^10 WRITE(*,'(3(A,I8))') 'cycle2> forked connect run ',NCYCLES,' on CPU ',NEWJOB,' completed or killed process id ',PID(NEWJOB)$/;"	l	subroutine:CYCLE2	file:
10	pathsample.dock.f90	/^10 WRITE(*,'(3(A,I8))') 'dockcycle2> forked OPTIM run ',NCYCLES,' on CPU ',NEWJOB,' completed or killed process id ',PID(NEWJOB)$/;"	l	subroutine:DOCKCYCLE2	file:
10	pathsample.dock.f90	/^10 WRITE(*,'(3(A,I8))') 'dockcycle> forked GMIN run ',NCYCLES,' on CPU ',NEWJOB,' completed or killed process id ',PID(NEWJOB)$/;"	l	subroutine:DOCKCYCLE	file:
10	pathsample.dprand.f	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	pathsample.dsort.f	/^   10       CONTINUE$/;"	l	subroutine:XERSVE	file:
10	pathsample.dsort.f	/^   10    CONTINUE$/;"	l	subroutine:DSORT	file:
10	pathsample.dsort.f	/^   10    CONTINUE$/;"	l	subroutine:XERMSG	file:
10	pathsample.dsort.f	/^   10 CONTINUE$/;"	l	function:I1MACH	file:
10	pathsample.dsort.f	/^   10 CONTINUE$/;"	l	subroutine:XERPRN	file:
10	pathsample.eig.f	/^10    B(J,I)=ZER$/;"	l	subroutine:EIG	file:
10	pathsample.getdpair.f90	/^10 CONTINUE$/;"	l	subroutine:GETDPAIR	file:
10	pathsample.getfreepair.f90	/^10 CONTINUE$/;"	l	subroutine:GETFREEPAIR	file:
10	pathsample.getpair.f90	/^10 CONTINUE$/;"	l	subroutine:GETPAIR	file:
10	pathsample.getppair.f90	/^10 CONTINUE$/;"	l	subroutine:GETPPAIR	file:
10	pathsample.getrpair.f90	/^10 CONTINUE$/;"	l	subroutine:GETRPAIR	file:
10	pathsample.getspair.f90	/^10 CONTINUE$/;"	l	subroutine:GETSPAIR	file:
10	pathsample.getupair.f90	/^10 CONTINUE$/;"	l	subroutine:GETUPAIR	file:
10	pathsample.getusepair.f90	/^10 CONTINUE$/;"	l	subroutine:GETUSEPAIR	file:
10	pathsample.input.f	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	pathsample.input.f	/^10    CONTINUE$/;"	l	subroutine:UPCASE	file:
10	pathsample.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	pathsample.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	pathsample.input.f	/^10    M=1$/;"	l	file:
10	pathsample.input.f	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	pathsample.input.f	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	pathsample.mind.f	/^10    CALL DISTFUNC(P,R,R0,R1,NSIZE,DIST0,NATOMS)$/;"	l	subroutine:MIND	file:
10	pathsample.mind.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MMYLBFGS	file:
10	pathsample.mindist.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MMYLBFGS	file:
10	pathsample.mindist.f	/^10    DIST0=DISTFUNC(P,R,R0,R1)$/;"	l	subroutine:MINDIST	file:
10	pathsample.minperm.f	/^   10 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
10	pathsample.minperm.f	/^10            if(l .le. 1) goto 11$/;"	l	subroutine:minperm	file:
10	pathsample.minpermdist.f90	/^10 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
10	pathsample.minpermdistrbcom.f90	/^10    CONTINUE$/;"	l	subroutine:MINPERMDISTRBCOM	file:
10	pathsample.myorient.f	/^10    CONTINUE$/;"	l	subroutine:MYORIENT	file:
10	pathsample.orient.f	/^10    CONTINUE$/;"	l	subroutine:ORIENT	file:
10	pathsample.rbperm.f90	/^10    CONTINUE$/;"	l	subroutine:RBMINPERMDIST	file:
10	pathsample.reweight.f	/^   10             CONTINUE$/;"	l	function:DLANTR	file:
10	pathsample.reweight.f	/^   10             CONTINUE$/;"	l	subroutine:DLASWP	file:
10	pathsample.reweight.f	/^   10          CONTINUE$/;"	l	subroutine:DLAQGE	file:
10	pathsample.reweight.f	/^   10       CONTINUE$/;"	l	subroutine:DGESVX	file:
10	pathsample.reweight.f	/^   10       CONTINUE$/;"	l	subroutine:DGETRF	file:
10	pathsample.reweight.f	/^   10       CONTINUE$/;"	l	subroutine:DLATRS	file:
10	pathsample.reweight.f	/^   10    CONTINUE$/;"	l	subroutine:DGERFS	file:
10	pathsample.reweight.f	/^   10    CONTINUE$/;"	l	subroutine:DLACN2	file:
10	pathsample.reweight.f	/^   10    CONTINUE$/;"	l	subroutine:DLACON	file:
10	pathsample.reweight.f	/^   10   ARR(I+1)=A$/;"	l	subroutine:ASORT	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DGECON	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DGEEQU	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DGETF2	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DRSCL	file:
10	pathsample.sdprnd.f	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	pathsample.sort.f	/^10       CONTINUE$/;"	l	subroutine:SORT	file:
10	pathsample.sort.f	/^10       CONTINUE$/;"	l	subroutine:SORT2	file:
10	pathsample.sort.f	/^10       CONTINUE$/;"	l	subroutine:SORT4	file:
100	func.f90	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	func.f90	/^100   L=L+1$/;"	l	file:
100	g.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3C	file:
100	g.Q4.f	/^100   CONTINUE$/;"	l	function:FAC	file:
100	g.bipartite.f90	/^100 CONTINUE$/;"	l	subroutine:BIPARTITE	file:
100	g.dgetrf.f	/^  100 CONTINUE$/;"	l	function:ILAENV	file:
100	g.dlsode.f	/^  100    CONTINUE$/;"	l	subroutine:DGBFA	file:
100	g.dlsode.f	/^  100 CONTINUE$/;"	l	subroutine:DGBSL	file:
100	g.dlsode.f	/^  100 CONTINUE$/;"	l	subroutine:DGESL	file:
100	g.dlsode.f	/^ 100  CALL DGESL (WM(3), N, N, IWM(21), X, 0)$/;"	l	subroutine:DSOLSY	file:
100	g.dlsode.f	/^ 100  CONTINUE$/;"	l	subroutine:DSRCOM	file:
100	g.dlsode.f	/^ 100  ELCO(1,1) = 1.0D0$/;"	l	subroutine:DCFODE	file:
100	g.dlsode.f	/^ 100  IF (LEVEL .NE. 2) RETURN$/;"	l	subroutine:XERRWD	file:
100	g.dlsode.f	/^ 100  IPUP = MITER$/;"	l	subroutine:DSTODE	file:
100	g.dlsode.f	/^ 100  LENP = N*N$/;"	l	subroutine:DPREPJ	file:
100	g.dlsode.f	/^ 100  UROUND = DUMACH()$/;"	l	subroutine:DLSODE	file:
100	g.fedor.f	/^  100 MFLAG =  0$/;"	l	subroutine:INTERV	file:
100	g.input.f	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	g.input.f	/^100   L=L+1$/;"	l	file:
100	g.ljcapsidmodule.f90	/^100        W(N) = W(N)\/V(K+L)$/;"	l	subroutine:SVERT	file:
100	g.minperm.f	/^  100 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
100	g.mylapack.f	/^  100                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
100	g.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBMV	file:
100	g.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBSV	file:
100	g.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPMV	file:
100	g.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPSV	file:
100	g.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRMV	file:
100	g.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRSV	file:
100	g.mylapack.f	/^  100          CONTINUE$/;"	l	subroutine:DTBSV	file:
100	g.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGBMV	file:
100	g.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGEMV	file:
100	g.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSBMV	file:
100	g.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSPMV	file:
100	g.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSYMV	file:
100	g.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK2	file:
100	g.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK3	file:
100	g.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK4	file:
100	g.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK5	file:
100	g.mylapack.f	/^  100 CONTINUE$/;"	l	subroutine:SCHCK1	file:
100	g.ptgrp.f	/^  100  CONTINUE$/;"	l	function:LNBLNK	file:
100	g.ptgrp.f	/^ 100  CONTINUE$/;"	l	function:ITOA	file:
100	g.ptgrp.f	/^100   IF(DIFF.GT.ZER) GO TO 110$/;"	l	subroutine:EIG	file:
100	g.tn.f	/^100   CONTINUE$/;"	l	subroutine:MSLV	file:
100	g.tn.f	/^100   OLDF = FNEW$/;"	l	subroutine:LMQN	file:
100	g.tn.f	/^100   R = ZERO$/;"	l	subroutine:GETPTC	file:
100	g.welch.f	/^  100    continue$/;"	l	subroutine:dgedi	file:
100	g.welch.f	/^  100 continue$/;"	l	subroutine:dgeco	file:
100	lbfgs.f	/^ 100  CONTINUE$/;"	l	subroutine:LBFGS	file:
100	lbfgs.f	/^ 100  FORMAT(\/' THE MINIMIZATION TERMINATED WITHOUT DETECTING ERRORS.',$/;"	l	subroutine:LB1	file:
100	optim.EYtrap.f	/^100      CONTINUE$/;"	l	subroutine:EYDTRAP	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2C	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2CC	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2P	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3C	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3CC	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3P	file:
100	optim.amb_natinterns.f90	/^ 100          CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
100	optim.axdiff.f	/^100         CONTINUE$/;"	l	subroutine:AXDIFF	file:
100	optim.aziz.f	/^100         CONTINUE$/;"	l	subroutine:AZIZ	file:
100	optim.c60diff.f	/^100         CONTINUE$/;"	l	subroutine:C60DIFF	file:
100	optim.c60p.f	/^100         CONTINUE$/;"	l	subroutine:C60P	file:
100	optim.dtrap.f	/^100      CONTINUE$/;"	l	subroutine:DTRAP	file:
100	optim.efol.f90	/^100      FORMAT(' Largest overlap=',F8.5,' for vector ',I4,' eigenvalue=',F14.7,' Smallest eigenvalue=',F14.7)$/;"	l	subroutine:EFOL	file:
100	optim.eig.f	/^100   IF(DIFF.GT.ZER) GO TO 110$/;"	l	subroutine:EIG	file:
100	optim.escp.f	/^100         CONTINUE$/;"	l	subroutine:DSCP	file:
100	optim.fetchz.f	/^100      CALL INPUT(END)$/;"	l	subroutine:FETCHZ	file:
100	optim.input.f	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	optim.input.f	/^100   L=L+1$/;"	l	file:
100	optim.ions.f	/^100         CONTINUE$/;"	l	subroutine:IONS	file:
100	optim.mdiff.f	/^100         CONTINUE$/;"	l	subroutine:MDIFF	file:
100	optim.mied.f	/^100         CONTINUE$/;"	l	subroutine:MIED	file:
100	optim.minperm.f	/^  100 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
100	optim.minpermdistrbcom.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:ORIENTA	file:
100	optim.mpdiff.f	/^100         CONTINUE$/;"	l	subroutine:MPDIFF	file:
100	optim.mpdiff.f	/^100         CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
100	optim.msdiff.f	/^100         CONTINUE$/;"	l	subroutine:MSDIFF	file:
100	optim.mylapack.f	/^  100                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBMV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBSV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPMV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPSV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRMV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRSV	file:
100	optim.mylapack.f	/^  100          CONTINUE$/;"	l	subroutine:DTBSV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGBMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGEMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSBMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSPMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSYMV	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK2	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK3	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK4	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK5	file:
100	optim.mylapack.f	/^  100 CONTINUE$/;"	l	subroutine:SCHCK1	file:
100	optim.projh.f	/^  100    continue$/;"	l	subroutine:dgedi	file:
100	optim.projh.f	/^  100 continue$/;"	l	subroutine:dgeco	file:
100	optim.rbperm.f90	/^100   CONTINUE$/;"	l	subroutine:RBMINPERMDIST	file:
100	optim.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBORIENT	file:
100	optim.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBSITESORIENT	file:
100	optim.rotcon.f	/^ 100   FORMAT(' ***PROGRAM ERROR***, Inertia tensor not diagonal in ROTCON.')$/;"	l	subroutine:ROTCON	file:
100	optim.scdiff.f	/^100         CONTINUE$/;"	l	subroutine:SCDIFF	file:
100	optim.symmetry.f	/^100      FORMAT(' The molecule belongs to an Abelian group.')$/;"	l	subroutine:SYMMETRY	file:
100	optim.ttm3f.f90	/^100 Continue$/;"	l	subroutine:ttm3f	file:
100	optim.unresconnectsections.f	/^100   CONTINUE $/;"	l	subroutine:UNRESGUESSTSSEC	file:
100	optim.unresguessts.f	/^100   CONTINUE $/;"	l	subroutine:UNRESGUESSTS	file:
100	optim.unrestwist.f	/^100   CONTINUE$/;"	l	subroutine:UNRSPERTDIHE	file:
100	optim.utils.f	/^  100  CONTINUE$/;"	l	function:LNBLNK	file:
100	optim.utils.f	/^ 100   IF (C .EQ. ' ') THEN$/;"	l	function:ATOI	file:
100	optim.utils.f	/^ 100  CONTINUE$/;"	l	function:ITOA	file:
100	pathsample.dsort.f	/^  100 M = 1$/;"	l	subroutine:DSORT	file:
100	pathsample.eig.f	/^100   IF(DIFF.GT.ZER) GO TO 110$/;"	l	subroutine:EIG	file:
100	pathsample.input.f	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	pathsample.input.f	/^100   L=L+1$/;"	l	file:
100	pathsample.minperm.f	/^  100 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
100	pathsample.minpermdistrbcom.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:ORIENTA	file:
100	pathsample.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBORIENT	file:
100	pathsample.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBSITESORIENT	file:
100	pathsample.reweight.f	/^  100             CONTINUE$/;"	l	function:DLANTR	file:
100	pathsample.reweight.f	/^  100          CONTINUE$/;"	l	subroutine:DLATRS	file:
100	pathsample.reweight.f	/^  100       CONTINUE$/;"	l	subroutine:DGESVX	file:
100	pathsample.reweight.f	/^  100    CONTINUE$/;"	l	subroutine:DGERFS	file:
100	pathsample.reweight.f	/^  100 CONTINUE$/;"	l	subroutine:DGEEQU	file:
100	pathsample.reweight.f	/^  100 CONTINUE$/;"	l	subroutine:DLACN2	file:
100	pathsample.reweight.f	/^  100 CONTINUE$/;"	l	subroutine:DLACON	file:
1000	g.dgetrf.f	/^ 1000 CONTINUE$/;"	l	function:ILAENV	file:
1000	g.minperm.f	/^ 1000 END$/;"	l	subroutine:JOVOSAP	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3C	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3CC	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3P	file:
1000	optim.axdiff.f	/^1000  CONTINUE$/;"	l	subroutine:AXDIFF	file:
1000	optim.minperm.f	/^ 1000 END$/;"	l	subroutine:JOVOSAP	file:
1000	optim.read.odata.inc.f90	/^1000     FORMAT(A5)$/;"	l	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHDUMP	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHQ	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHQCONT	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHRELQ	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHRMSD	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMH_RELCO	file:
1000	pathsample.minperm.f	/^ 1000 END$/;"	l	subroutine:JOVOSAP	file:
1001	func.f90	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	func.f90	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	func.f90	/^1001  FORMAT (132A1)$/;"	l	file:
1001	g.input.f	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	g.input.f	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	g.input.f	/^1001  FORMAT (80A1)$/;"	l	file:
1001	optim.input.f	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	optim.input.f	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	optim.input.f	/^1001  FORMAT (132A1)$/;"	l	file:
1001	pathsample.input.f	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	pathsample.input.f	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	pathsample.input.f	/^1001  FORMAT (80A1)$/;"	l	file:
101	g.minperm.f	/^  101    T=T+1$/;"	l	subroutine:JOVOSAP	file:
101	mylbfgs.f90	/^101   FORMAT(A,F20.10,G20.10,A,I6,A)$/;"	l	subroutine:MYLBFGS	file:
101	optim.minperm.f	/^  101    T=T+1$/;"	l	subroutine:JOVOSAP	file:
101	pathsample.minperm.f	/^  101    T=T+1$/;"	l	subroutine:JOVOSAP	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3C	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3CC	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3P	file:
1010	optim.axdiff.f	/^1010     CONTINUE$/;"	l	subroutine:AXDIFF	file:
102	mylbfgs.f90	/^102   FORMAT(A,I10,A,I10,A)$/;"	l	subroutine:MYLBFGS	file:
1023	pathsample.amhdump.f90	/^1023        FORMAT(8(F8.3,1X))$/;"	l	subroutine:AMHQ	file:
1023	pathsample.amhdump.f90	/^1023        FORMAT(8(F8.3,1X))$/;"	l	subroutine:AMHQCONT	file:
1023	pathsample.amhdump.f90	/^1023        FORMAT(8(F8.3,1X))$/;"	l	subroutine:AMHRMSD	file:
103	mylbfgs.f90	/^103   FORMAT(A,F20.10,G20.10,A,I6,A,A,F13.10)$/;"	l	subroutine:MYLBFGS	file:
104	mylbfgs.f90	/^104 FORMAT(A,F20.10,A,F20.10,A,F20.10) $/;"	l	subroutine:MYLBFGS	file:
105	mylbfgs.f90	/^105 FORMAT(A,F19.10,A,F16.10,A,F15.8) $/;"	l	subroutine:MYLBFGS	file:
1092	optim.adm.f	/^1092   FORMAT(' Interatomic distance matrix ')$/;"	l	subroutine:ADM	file:
11	func.f90	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	g.Ackland_wrapper.f	/^11    CONTINUE$/;"	l	subroutine:ACK	file:
11	g.EAMal.f	/^11    CONTINUE$/;"	l	subroutine:EAMal	file:
11	g.Farkas.f	/^11    continue$/;"	l	subroutine:splinegmin	file:
11	g.brent.f	/^11    CONTINUE$/;"	l	function:BRENT	file:
11	g.fedor.f	/^   11   continue$/;"	l	function:ut0	file:
11	g.fedor.f	/^   11   continue$/;"	l	function:ut01	file:
11	g.fedor.f	/^   11 IF(N.GT.2) GO TO 12$/;"	l	subroutine:CUBSPL	file:
11	g.fedor.f	/^   11 continue$/;"	l	function:ut	file:
11	g.fedor.f	/^  11      continue$/;"	l	subroutine:hmat	file:
11	g.fedor.f	/^  11      continue$/;"	l	subroutine:hmatd	file:
11	g.fedor.f	/^  11    continue$/;"	l	subroutine:dipoles	file:
11	g.input.f	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	g.minperm.f	/^11         enddo$/;"	l	subroutine:minperm	file:
11	g.minpermdist.f90	/^11 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
11	g.mylbfgs.f	/^11          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in mylbfgs')$/;"	l	subroutine:MYLBFGS	file:
11	g.mysd.f	/^11    DO J1=1,NOPT$/;"	l	subroutine:MYSD	file:
11	g.odesd.f	/^11      continue$/;"	l	subroutine:bsstep	file:
11	g.odesd.f	/^11      continue$/;"	l	subroutine:rzextr	file:
11	g.odesd.f	/^11    continue$/;"	l	subroutine:mmid	file:
11	g.odesd.f	/^11    continue$/;"	l	subroutine:pzextr	file:
11	g.odesd.f	/^11    continue$/;"	l	subroutine:rkck	file:
11	g.odesd.f	/^11    continue$/;"	l	subroutine:rkqs	file:
11	g.ptgrp.f	/^   11   CONTINUE$/;"	l	subroutine:PIKSR2	file:
11	g.ptgrp.f	/^11    X(I)=X(I)\/P    $/;"	l	subroutine:NORMAL	file:
11	g.quench.f	/^11    IF (WELCH) TOSI=.TRUE.$/;"	l	subroutine:QUENCH	file:
11	g.quench.sim.f90	/^11    IF (WELCH) TOSI=.TRUE.$/;"	l	subroutine:QUENCH	file:
11	g.sort.f	/^11        continue$/;"	l	subroutine:Gsort	file:
11	g.takestep.f	/^11       RANDOM=(DPRAND()-0.5D0)*2.0D0$/;"	l	subroutine:TAKESTEP	file:
11	mylbfgs.old.f90	/^11          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in mylbfgs')$/;"	l	subroutine:MYLBFGS	file:
11	optim.Ackland_wrapper.f	/^11    CONTINUE$/;"	l	subroutine:ACK	file:
11	optim.aziz.f	/^11    DO J1=1,3*N$/;"	l	subroutine:AZIZ	file:
11	optim.bfgsts.f	/^11          FORMAT (' BFGSTS> Beginning of optimization cycle ', I4,'.',\/$/;"	l	subroutine:BFGSTS	file:
11	optim.bisect.f90	/^11 CONTINUE ! jump here to try new endpoints$/;"	l	subroutine:BISECT_OPT	file:
11	optim.connect.f	/^11       CONTINUE$/;"	l	subroutine:CONNECT	file:
11	optim.cubspl.f	/^   11 if (n .gt. 2)                     go to 12$/;"	l	subroutine:cubspl	file:
11	optim.escp.f	/^11    CONTINUE$/;"	l	subroutine:OESCP	file:
11	optim.fetchz.f	/^11       READ(7,'(A)') FNAME$/;"	l	subroutine:FETCHZ	file:
11	optim.geopt.f	/^11    CONTINUE$/;"	l	subroutine:GEOPT	file:
11	optim.get.natoms.inc.f90	/^11       READ(7,'(A)') FNAME$/;"	l	file:
11	optim.hybridmin.f	/^11          FORMAT (' hybridmin> Beginning of optimization cycle ', I4,'.',\/$/;"	l	subroutine:HYBRIDMIN	file:
11	optim.input.f	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	optim.intbfgsts.f	/^11          FORMAT (' intBFGSTS> Beginning of optimization cycle ', I4,'.',\/$/;"	l	subroutine:INTBFGSTS	file:
11	optim.latmin.f	/^11       CONTINUE$/;"	l	subroutine:C60PE	file:
11	optim.meccano.f90	/^11 NPASS=NPASS+1$/;"	l	subroutine:MECCANO	file:
11	optim.minperm.f	/^11         enddo$/;"	l	subroutine:minperm	file:
11	optim.minpermdist.f90	/^11 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
11	optim.msevb.f90	/^11      continue$/;"	l	subroutine:jacobi	file:
11	optim.odesd.f	/^11      CONTINUE$/;"	l	subroutine:BSSTEP	file:
11	optim.odesd.f	/^11      CONTINUE$/;"	l	subroutine:RZEXTR	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:MMID	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:PZEXTR	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:RKCK	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:RKQS	file:
11	optim.potential.f	/^11          READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
11	optim.scdiff.f	/^11    CONTINUE$/;"	l	subroutine:SCDIFF	file:
11	optim.scl.f	/^11    CONTINUE$/;"	l	subroutine:SCL	file:
11	optim.utils.f	/^   11   CONTINUE$/;"	l	subroutine:PIKSR2	file:
11	pathsample.KMC.f	/^11             IF ((.NOT.DEADTS(J1)).AND.(M2.NE.M1)) THEN$/;"	l	subroutine:MAKEDMAT3	file:
11	pathsample.KMCcommit.f	/^11       CONTINUE$/;"	l	subroutine:MAKED	file:
11	pathsample.Pfold.f90	/^11    CONTINUE$/;"	l	subroutine:MAKED2	file:
11	pathsample.Pfold.f90	/^11 DO J1=1,NMIN$/;"	l	subroutine:PFOLD	file:
11	pathsample.addperm.f	/^11       CONTINUE$/;"	l	subroutine:ADDPERM	file:
11	pathsample.connectd.f90	/^11    IF (PLUS(J3).EQ.J2) THEN$/;"	l	subroutine:CONNECTD	file:
11	pathsample.connectdist.f90	/^11    IF (PLUS(J3).EQ.J2) THEN$/;"	l	subroutine:CONNECTDIST	file:
11	pathsample.cycle2.f90	/^11 CONTINUE$/;"	l	subroutine:CYCLE2	file:
11	pathsample.dock.f90	/^11 CONTINUE$/;"	l	subroutine:DOCKCYCLE	file:
11	pathsample.dock.f90	/^11 CONTINUE$/;"	l	subroutine:DOCKCYCLE2	file:
11	pathsample.input.f	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	pathsample.kshortestpaths.f90	/^11       CONTINUE$/;"	l	subroutine:MAKED4	file:
11	pathsample.mind.f	/^11    CONTINUE$/;"	l	subroutine:MIND	file:
11	pathsample.minperm.f	/^11         enddo$/;"	l	subroutine:minperm	file:
11	pathsample.minpermdist.f90	/^11 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
11	pathsample.mywait.f90	/^11 CONTINUE$/;"	l	subroutine:MYWAIT	file:
11	pathsample.reweight.f	/^   11   CONTINUE$/;"	l	subroutine:ASORT	file:
11	pathsample.tssearch.f	/^11             CONTINUE$/;"	l	subroutine:TSSEARCH	file:
11	ps.main.f90	/^11    DO J1=1,NMIN$/;"	l	subroutine:GETNCONN	file:
110	func.f90	/^110   RETURN$/;"	l	subroutine:READF	file:
110	g.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3C	file:
110	g.dgetrf.f	/^  110 CONTINUE$/;"	l	function:ILAENV	file:
110	g.dlsode.f	/^  110    CONTINUE$/;"	l	subroutine:DGBFA	file:
110	g.dlsode.f	/^ 110      PC(I) = PC(I-1) + FNQM1*PC(I)$/;"	l	subroutine:DCFODE	file:
110	g.dlsode.f	/^ 110     RLS(I) = RSAV(I)$/;"	l	subroutine:DSRCOM	file:
110	g.dlsode.f	/^ 110    WM(I+2) = 0.0D0$/;"	l	subroutine:DPREPJ	file:
110	g.dlsode.f	/^ 110  IF (NQ .LE. MAXORD) GO TO 160$/;"	l	subroutine:DSTODE	file:
110	g.dlsode.f	/^ 110  JSTART = 0$/;"	l	subroutine:DLSODE	file:
110	g.fedor.f	/^  110 MFLAG =  1$/;"	l	subroutine:INTERV	file:
110	g.input.f	/^110   RETURN$/;"	l	subroutine:READF	file:
110	g.ljcapsidmodule.f90	/^110        IF ( K .EQ. M ) GOTO 130$/;"	l	subroutine:SVERT	file:
110	g.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBMV	file:
110	g.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBSV	file:
110	g.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPMV	file:
110	g.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPSV	file:
110	g.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRMV	file:
110	g.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRSV	file:
110	g.mylapack.f	/^  110                CONTINUE$/;"	l	subroutine:DPBTRF	file:
110	g.mylapack.f	/^  110             CONTINUE$/;"	l	subroutine:DTBSV	file:
110	g.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGBMV	file:
110	g.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGEMV	file:
110	g.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSBMV	file:
110	g.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSPMV	file:
110	g.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSYMV	file:
110	g.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK1	file:
110	g.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK2	file:
110	g.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK3	file:
110	g.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK4	file:
110	g.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK5	file:
110	g.ptgrp.f	/^110      FORMAT(' The molecule belongs to a point group with doubly',$/;"	l	subroutine:PTGRP	file:
110	g.ptgrp.f	/^110   T=Q\/(DIFF+S)$/;"	l	subroutine:EIG	file:
110	g.tn.f	/^110      Y(I) = G(I) \/ DIAGB(I)$/;"	l	subroutine:MSLV	file:
110	g.tn.f	/^110    F = OLDF$/;"	l	subroutine:LMQN	file:
110	g.tn.f	/^110   CONTINUE$/;"	l	subroutine:INITP3	file:
110	g.tn.f	/^110   IF (ABSR .GT. RTSMLL) P = ABSR*RTSMLL$/;"	l	subroutine:GETPTC	file:
110	g.welch.f	/^  110       continue$/;"	l	subroutine:dgedi	file:
110	g.welch.f	/^  110    continue$/;"	l	subroutine:dgeco	file:
110	lbfgs.f	/^ 110    IF (DIAG(I).LE.ZERO) GO TO 195$/;"	l	subroutine:LBFGS	file:
110	optim.EYtrap.f	/^110         CONTINUE$/;"	l	subroutine:EYDTRAP	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2C	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2CC	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2P	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3C	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3CC	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3P	file:
110	optim.amb_natinterns.f90	/^ 110       CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
110	optim.axdiff.f	/^110      CONTINUE$/;"	l	subroutine:AXDIFF	file:
110	optim.aziz.f	/^110      CONTINUE$/;"	l	subroutine:AZIZ	file:
110	optim.c60diff.f	/^110      CONTINUE$/;"	l	subroutine:C60DIFF	file:
110	optim.c60p.f	/^110      CONTINUE$/;"	l	subroutine:C60P	file:
110	optim.dimer.f	/^110         read (40,'(a10,5e25.17)',end=210) index(np),$/;"	l	subroutine:fdimer	file:
110	optim.dtrap.f	/^110         CONTINUE$/;"	l	subroutine:DTRAP	file:
110	optim.eig.f	/^110   T=Q\/(DIFF+S)$/;"	l	subroutine:EIG	file:
110	optim.escp.f	/^110      CONTINUE$/;"	l	subroutine:DSCP	file:
110	optim.get.natoms.inc.f90	/^110      CALL INPUT(END)$/;"	l	file:
110	optim.input.f	/^110   RETURN$/;"	l	subroutine:READF	file:
110	optim.ions.f	/^110      CONTINUE$/;"	l	subroutine:IONS	file:
110	optim.mdiff.f	/^110      CONTINUE$/;"	l	subroutine:MDIFF	file:
110	optim.mied.f	/^110      CONTINUE$/;"	l	subroutine:MIED	file:
110	optim.mpdiff.f	/^110      CONTINUE$/;"	l	subroutine:MPDIFF	file:
110	optim.mpdiff.f	/^110      CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
110	optim.msdiff.f	/^110      CONTINUE$/;"	l	subroutine:MSDIFF	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBMV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBSV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPMV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPSV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRMV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRSV	file:
110	optim.mylapack.f	/^  110                CONTINUE$/;"	l	subroutine:DPBTRF	file:
110	optim.mylapack.f	/^  110             CONTINUE$/;"	l	subroutine:DTBSV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGBMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGEMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSBMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSPMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSYMV	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK1	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK2	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK3	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK4	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK5	file:
110	optim.projh.f	/^  110       continue$/;"	l	subroutine:dgedi	file:
110	optim.projh.f	/^  110    continue$/;"	l	subroutine:dgeco	file:
110	optim.scdiff.f	/^110      CONTINUE$/;"	l	subroutine:SCDIFF	file:
110	optim.symmetry.f	/^110      FORMAT(' The molecule belongs to a point group with doubly degenerate representations.')$/;"	l	subroutine:SYMMETRY	file:
110	pathsample.dsort.f	/^  110 IF (I .EQ. J) GO TO 150$/;"	l	subroutine:DSORT	file:
110	pathsample.eig.f	/^110   T=Q\/(DIFF+S)$/;"	l	subroutine:EIG	file:
110	pathsample.getallmin.f	/^110   CLOSE(1)$/;"	l	subroutine:GETALLMIN	file:
110	pathsample.getallpaths.f	/^110   CLOSE(1)$/;"	l	subroutine:GETALLPATHS	file:
110	pathsample.getnewpath.f	/^110   CLOSE(1)$/;"	l	subroutine:GETNEWPATH	file:
110	pathsample.input.f	/^110   RETURN$/;"	l	subroutine:READF	file:
110	pathsample.reweight.f	/^  110          CONTINUE$/;"	l	subroutine:DGERFS	file:
110	pathsample.reweight.f	/^  110       CONTINUE$/;"	l	function:DLANTR	file:
110	pathsample.reweight.f	/^  110       CONTINUE$/;"	l	subroutine:DLATRS	file:
110	pathsample.reweight.f	/^  110    CONTINUE$/;"	l	subroutine:DGEEQU	file:
110	pathsample.reweight.f	/^  110    CONTINUE$/;"	l	subroutine:DGESVX	file:
110	pathsample.reweight.f	/^  110 CONTINUE$/;"	l	subroutine:DLACN2	file:
110	pathsample.reweight.f	/^  110 CONTINUE$/;"	l	subroutine:DLACON	file:
110	pathsample.setup.f	/^110         CLOSE(1)$/;"	l	subroutine:SETUP	file:
110	pathsample.setup_sis.f	/^110         CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
110	ps.setup.read.commitdata.inc.f90	/^110         CLOSE(1)$/;"	l	file:
1100	g.dgetrf.f	/^ 1100 CONTINUE$/;"	l	function:ILAENV	file:
111	fmt.inc.f90	/^111 format(A,I10,A,F20.10,A,I5,A,G12.5,A,G20.10,A,F11.1)$/;"	l	file:
111	g.io1.f	/^111      READ(7,'(A)') FNAME$/;"	l	subroutine:IO1	file:
111	g.ljcapsidmodule.f90	/^111 CONTINUE$/;"	l	subroutine:GAYBERNE	file:
111	optim.amber.f	/^111     CONTINUE$/;"	l	subroutine:AMBERS	file:
111	optim.bfgsts.f	/^111         CONTINUE$/;"	l	subroutine:BFGSTS	file:
111	optim.connect.f	/^111   CONTINUE$/;"	l	subroutine:CONNECT	file:
111	optim.get.natoms.inc.f90	/^111      CALL INPUT(END)$/;"	l	file:
111	optim.hybridmin.f	/^111         CONTINUE$/;"	l	subroutine:HYBRIDMIN	file:
111	optim.intbfgsts.f	/^111         CONTINUE$/;"	l	subroutine:INTBFGSTS	file:
111	optim.keyword.f	/^111       IF (NITEMS.GT.2) THEN$/;"	l	subroutine:KEYWORD	file:
111	optim.minpermrb.f90	/^111 CONTINUE$/;"	l	subroutine:MINPERMRB	file:
111	optim.potential.f	/^111            READ(7,'(A)',ERR=561) STRING$/;"	l	subroutine:POTENTIAL	file:
111	pathsample.setup.f	/^111      REWIND(1)$/;"	l	subroutine:SETUP	file:
111	pathsample.tssearch.f	/^111         CONTINUE$/;"	l	subroutine:TSSEARCH	file:
111	ps.setup.usepairs.inc.f90	/^111      REWIND(1)$/;"	l	file:
1111	optim.efol.f90	/^1111  INR=INRSAVE$/;"	l	subroutine:EFOL	file:
112	lbfgs.f	/^ 112  W(I)= -G(I)$/;"	l	subroutine:LBFGS	file:
112	optim.amber.f	/^112   CONTINUE$/;"	l	subroutine:AMBERS	file:
112	optim.h2o.f	/^112      CONTINUE $/;"	l	subroutine:H2O	file:
112	optim.keyword.f	/^112       IF (NITEMS.GT.2) THEN$/;"	l	subroutine:KEYWORD	file:
112	optim.read.odata.inc.f90	/^112      CONTINUE$/;"	l	file:
112	optim.unrestransform.f	/^112   CONTINUE$/;"	l	subroutine:INTSECDET	file:
113	optim.amber.f	/^113                  CONTINUE$/;"	l	subroutine:AMBERS	file:
113	optim.h2o.f	/^113   CONTINUE$/;"	l	subroutine:H2O	file:
115	g.dlsode.f	/^ 115    RWORK(I+LYH-1) = Y(I)$/;"	l	subroutine:DLSODE	file:
12	func.f90	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	g.EAMal.f	/^12       CONTINUE   $/;"	l	subroutine:EAMal	file:
12	g.Farkas.f	/^12    continue$/;"	l	subroutine:splinegmin	file:
12	g.bspt.F	/^12       CALL POTENTIAL(COORDS(:,MYNODE+1),GRAD, POTEL, .TRUE., .FALSE.)$/;"	l	subroutine:PTBASINSAMPLING	file:
12	g.fedor.f	/^   12    continue                     $/;"	l	function:ut0	file:
12	g.fedor.f	/^   12    continue                     $/;"	l	function:ut01	file:
12	g.fedor.f	/^   12 C(4,1)=C(3,3)$/;"	l	subroutine:CUBSPL	file:
12	g.input.f	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	g.keyword.f	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
12	g.odesd.f	/^12        continue$/;"	l	subroutine:bsstep	file:
12	g.odesd.f	/^12      continue$/;"	l	subroutine:mmid	file:
12	g.odesd.f	/^12      continue$/;"	l	subroutine:pzextr	file:
12	g.odesd.f	/^12      continue$/;"	l	subroutine:rkqs	file:
12	g.odesd.f	/^12      continue$/;"	l	subroutine:rzextr	file:
12	g.odesd.f	/^12    continue$/;"	l	subroutine:rkck	file:
12	g.ptgrp.f	/^   12   CONTINUE$/;"	l	subroutine:PIKSR2	file:
12	g.sort.f	/^12      continue$/;"	l	subroutine:Gsort	file:
12	g.takestep.f	/^12       RANDOM=(DPRAND()-0.5D0)*2.0D0$/;"	l	subroutine:TAKESTEP	file:
12	optim.adm.f	/^12              CONTINUE$/;"	l	subroutine:ADM	file:
12	optim.bisect.f90	/^12 CONTINUE ! jump here for same endpoints, different SFRAC$/;"	l	subroutine:BISECT_OPT	file:
12	optim.cubspl.f	/^   12 c(4,1) = c(3,3)$/;"	l	subroutine:cubspl	file:
12	optim.fetchz.f	/^12          READ(7,'(A)') TSTRING$/;"	l	subroutine:FETCHZ	file:
12	optim.get.natoms.inc.f90	/^12          READ(7,'(A)') TSTRING$/;"	l	file:
12	optim.input.f	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	optim.keyword.f	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
12	optim.latmin.f	/^12    CONTINUE$/;"	l	subroutine:C60PE	file:
12	optim.msevb.f90	/^12    continue$/;"	l	subroutine:jacobi	file:
12	optim.odesd.f	/^12        CONTINUE$/;"	l	subroutine:BSSTEP	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:MMID	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:PZEXTR	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:RKQS	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:RZEXTR	file:
12	optim.odesd.f	/^12    CONTINUE$/;"	l	subroutine:RKCK	file:
12	optim.potential.f	/^12          READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
12	optim.utils.f	/^   12   CONTINUE$/;"	l	subroutine:PIKSR2	file:
12	pathsample.addperm.f	/^12       CONTINUE$/;"	l	subroutine:ADDPERM	file:
12	pathsample.input.f	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	pathsample.reweight.f	/^   12   CONTINUE$/;"	l	subroutine:ASORT	file:
120	g.Farkas.f	/^120   continue$/;"	l	subroutine:ALINIT	file:
120	g.Farkas.f	/^120   continue$/;"	l	subroutine:NIINIT	file:
120	g.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3C	file:
120	g.dlsode.f	/^  120 CONTINUE$/;"	l	subroutine:DGBFA	file:
120	g.dlsode.f	/^ 120      XPIN = XPIN + TSIGN*PC(I)\/(I+1)$/;"	l	subroutine:DCFODE	file:
120	g.dlsode.f	/^ 120     ILS(I) = ISAV(I)$/;"	l	subroutine:DSRCOM	file:
120	g.dlsode.f	/^ 120    RWORK(I+LEWT-1) = 1.0D0\/RWORK(I+LEWT-1)$/;"	l	subroutine:DLSODE	file:
120	g.dlsode.f	/^ 120    WM(I+2) = WM(I+2)*CON$/;"	l	subroutine:DPREPJ	file:
120	g.dlsode.f	/^ 120  NQ = MAXORD$/;"	l	subroutine:DSTODE	file:
120	g.io1.f	/^120         FORMAT('Run ',I3,': ',I9,' steps with temperature scaled by ',E15.8)$/;"	l	subroutine:IO1	file:
120	g.ljcapsidmodule.f90	/^120             T = T - W(I)*V(I+L)$/;"	l	subroutine:SVERT	file:
120	g.mylapack.f	/^  120                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
120	g.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBMV	file:
120	g.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBSV	file:
120	g.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPMV	file:
120	g.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPSV	file:
120	g.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRMV	file:
120	g.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRSV	file:
120	g.mylapack.f	/^  120          CONTINUE$/;"	l	subroutine:DTBSV	file:
120	g.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGBMV	file:
120	g.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGEMV	file:
120	g.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSBMV	file:
120	g.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSPMV	file:
120	g.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSYMV	file:
120	g.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK1	file:
120	g.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK2	file:
120	g.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK3	file:
120	g.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK4	file:
120	g.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK5	file:
120	g.ptgrp.f	/^120   C=1.0D0\/SQRT(1.0D0+T**2)$/;"	l	subroutine:EIG	file:
120	g.tn.f	/^120   CONTINUE$/;"	l	subroutine:INITP3	file:
120	g.tn.f	/^120   IFAIL = NWHY$/;"	l	subroutine:LMQN	file:
120	g.tn.f	/^120   SUMSQ = DSQRT(SUMSQ)$/;"	l	subroutine:GETPTC	file:
120	g.welch.f	/^  120       continue$/;"	l	subroutine:dgedi	file:
120	g.welch.f	/^  120 continue$/;"	l	subroutine:dgeco	file:
120	optim.EYtrap.f	/^120            CONTINUE$/;"	l	subroutine:EYDTRAP	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2C	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2CC	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2P	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3C	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3CC	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3P	file:
120	optim.axdiff.f	/^120   CONTINUE$/;"	l	subroutine:AXDIFF	file:
120	optim.aziz.f	/^120   CONTINUE$/;"	l	subroutine:AZIZ	file:
120	optim.c60diff.f	/^120   CONTINUE$/;"	l	subroutine:C60DIFF	file:
120	optim.c60p.f	/^120   CONTINUE$/;"	l	subroutine:C60P	file:
120	optim.dctrap.f	/^ 120     CONTINUE$/;"	l	subroutine:DCTRAP	file:
120	optim.dtrap.f	/^120            CONTINUE$/;"	l	subroutine:DTRAP	file:
120	optim.eig.f	/^120   C=1.0\/SQRT(1.0+T**2)$/;"	l	subroutine:EIG	file:
120	optim.escp.f	/^120   CONTINUE$/;"	l	subroutine:DSCP	file:
120	optim.ions.f	/^120   CONTINUE$/;"	l	subroutine:IONS	file:
120	optim.mdiff.f	/^120   CONTINUE$/;"	l	subroutine:MDIFF	file:
120	optim.mied.f	/^120   CONTINUE$/;"	l	subroutine:MIED	file:
120	optim.mpdiff.f	/^120   CONTINUE$/;"	l	subroutine:MPDIFF	file:
120	optim.mpdiff.f	/^120   CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
120	optim.msdiff.f	/^120   CONTINUE$/;"	l	subroutine:MSDIFF	file:
120	optim.mylapack.f	/^  120                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBMV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBSV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPMV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPSV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRMV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRSV	file:
120	optim.mylapack.f	/^  120          CONTINUE$/;"	l	subroutine:DTBSV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGBMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGEMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSBMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSPMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSYMV	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK1	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK2	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK3	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK4	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK5	file:
120	optim.projh.f	/^  120       continue$/;"	l	subroutine:dgedi	file:
120	optim.projh.f	/^  120 continue$/;"	l	subroutine:dgeco	file:
120	optim.scdiff.f	/^120   CONTINUE$/;"	l	subroutine:SCDIFF	file:
120	optim.symmetry.f	/^120      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
120	pathsample.dsort.f	/^  120 K = I$/;"	l	subroutine:DSORT	file:
120	pathsample.eig.f	/^120   C=1.0\/SQRT(1.0+T**2)$/;"	l	subroutine:EIG	file:
120	pathsample.getallpaths.f	/^120      CONTINUE$/;"	l	subroutine:GETALLPATHS	file:
120	pathsample.getnewpath.f	/^120      CONTINUE$/;"	l	subroutine:GETNEWPATH	file:
120	pathsample.reweight.f	/^  120                CONTINUE$/;"	l	subroutine:DLATRS	file:
120	pathsample.reweight.f	/^  120             CONTINUE$/;"	l	function:DLANTR	file:
120	pathsample.reweight.f	/^  120          CONTINUE$/;"	l	subroutine:DGERFS	file:
120	pathsample.reweight.f	/^  120    CONTINUE$/;"	l	subroutine:DGEEQU	file:
120	pathsample.reweight.f	/^  120    CONTINUE$/;"	l	subroutine:DGESVX	file:
120	pathsample.reweight.f	/^  120 CONTINUE$/;"	l	subroutine:DLACN2	file:
120	pathsample.reweight.f	/^  120 CONTINUE$/;"	l	subroutine:DLACON	file:
120	pathsample.setup.f	/^120      CLOSE(1)$/;"	l	subroutine:SETUP	file:
120	pathsample.setup_sis.f	/^120      CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
120	ps.setup.read.pairsdata.inc.f90	/^120      CLOSE(1)$/;"	l	file:
121	g.io1.f	/^121         READ(7,'(A)') TSTRING$/;"	l	subroutine:IO1	file:
121	optim.potential.f	/^121         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
121	pathsample.setup.f	/^121      CLOSE(1)$/;"	l	subroutine:SETUP	file:
121	pathsample.setup_sis.f	/^121      CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
121	ps.setup.read.mindone.inc.f90	/^121      CLOSE(1)$/;"	l	file:
122	g.Ackland_wrapper.f	/^122      CONTINUE$/;"	l	subroutine:ACK	file:
122	optim.Ackland_wrapper.f	/^122      CONTINUE$/;"	l	subroutine:ACK	file:
122	optim.escp.f	/^122      CONTINUE$/;"	l	subroutine:OESCP	file:
122	optim.potential.f	/^122         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
122	optim.scdiff.f	/^122      CONTINUE$/;"	l	subroutine:SCDIFF	file:
122	optim.scl.f	/^122      CONTINUE$/;"	l	subroutine:SCL	file:
123	g.ljcapsidmodule.f90	/^123 CONTINUE $/;"	l	subroutine:PYGPERIODIC	file:
123	optim.ljcapsidmodule.f90	/^123 CONTINUE $/;"	l	subroutine:PYGPERIODIC	file:
123	optim.potential.f	/^123            READ(15,'(5X,5E15.8)',ERR=666) (HESS(J1,J3),J3=1+5*(JSTART-1),MIN(5+5*(JSTART-1),3*NATOMS))$/;"	l	subroutine:POTENTIAL	file:
123	pathsample.getallpaths.f	/^123   REWIND(1)$/;"	l	subroutine:GETALLPATHS	file:
124	g.ljcapsidmodule.f90	/^124 CONTINUE$/;"	l	subroutine:PYGPERIODIC	file:
124	optim.ljcapsidmodule.f90	/^124 CONTINUE$/;"	l	subroutine:PYGPERIODIC	file:
124	optim.potential.f	/^124            READ(15,'(5X,5E15.8)',ERR=666) (HESS(J1,J3),J3=1+5*(JSTART-1),MIN(5+5*(JSTART-1),3*NATOMS))$/;"	l	subroutine:POTENTIAL	file:
125	g.dlsode.f	/^ 125    EL(I) = ELCO(I,NQ)$/;"	l	subroutine:DSTODE	file:
125	lbfgs.f	/^ 125  CONTINUE$/;"	l	subroutine:LBFGS	file:
125	optim.escp.f	/^125            CONTINUE$/;"	l	subroutine:DSCP	file:
125	optim.scdiff.f	/^125            CONTINUE$/;"	l	subroutine:SCDIFF	file:
13	g.Ackland_wrapper.f	/^13    CONTINUE$/;"	l	subroutine:ACK	file:
13	g.EAMal.f	/^13        CONTINUE$/;"	l	subroutine:EAMal	file:
13	g.fedor.f	/^   13   continue                     $/;"	l	function:ut0	file:
13	g.fedor.f	/^   13   continue                     $/;"	l	function:ut01	file:
13	g.io1.f	/^13       READ(91,'(A1)',END=14) DUMMY$/;"	l	subroutine:IO1	file:
13	g.odesd.f	/^13        continue$/;"	l	subroutine:rzextr	file:
13	g.odesd.f	/^13      continue$/;"	l	subroutine:bsstep	file:
13	g.odesd.f	/^13      continue$/;"	l	subroutine:pzextr	file:
13	g.odesd.f	/^13    continue$/;"	l	subroutine:mmid	file:
13	g.odesd.f	/^13    continue$/;"	l	subroutine:rkck	file:
13	g.quench.f	/^13       READ(91,'(A1)',END=14) DUMMY$/;"	l	subroutine:QUENCH	file:
13	g.quench.sim.f90	/^13       READ(91,'(A1)',END=14) DUMMY$/;"	l	subroutine:QUENCH	file:
13	optim.Ackland_wrapper.f	/^13    CONTINUE$/;"	l	subroutine:ACK	file:
13	optim.bisect.f90	/^13 CONTINUE$/;"	l	subroutine:BISECT_OPT	file:
13	optim.c60diff.f	/^13    CONTINUE$/;"	l	subroutine:C60DIFF	file:
13	optim.c60p.f	/^13    CONTINUE$/;"	l	subroutine:C60P	file:
13	optim.escp.f	/^13    CONTINUE$/;"	l	subroutine:OESCP	file:
13	optim.fetchz.f	/^13       CONTINUE$/;"	l	subroutine:FETCHZ	file:
13	optim.get.natoms.inc.f90	/^13       CONTINUE$/;"	l	file:
13	optim.msevb.f90	/^13    continue$/;"	l	subroutine:jacobi	file:
13	optim.odesd.f	/^13        CONTINUE$/;"	l	subroutine:RZEXTR	file:
13	optim.odesd.f	/^13      CONTINUE$/;"	l	subroutine:BSSTEP	file:
13	optim.odesd.f	/^13      CONTINUE$/;"	l	subroutine:PZEXTR	file:
13	optim.odesd.f	/^13    CONTINUE$/;"	l	subroutine:MMID	file:
13	optim.odesd.f	/^13    CONTINUE$/;"	l	subroutine:RKCK	file:
13	optim.potential.f	/^13          READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
13	optim.scdiff.f	/^13    CONTINUE$/;"	l	subroutine:SCDIFF	file:
13	optim.scl.f	/^13    CONTINUE$/;"	l	subroutine:SCL	file:
130	g.Farkas.f	/^130   lfembed=i-1$/;"	l	subroutine:ALINIT	file:
130	g.Farkas.f	/^130   lfembed=i-1$/;"	l	subroutine:NIINIT	file:
130	g.dlsode.f	/^  130 CONTINUE$/;"	l	subroutine:DGBFA	file:
130	g.dlsode.f	/^ 130      ELCO(I+1,NQ) = RQ1FAC*PC(I)\/I$/;"	l	subroutine:DCFODE	file:
130	g.dlsode.f	/^ 130    TOL = MAX(TOL,RTOL(I))$/;"	l	subroutine:DLSODE	file:
130	g.ljcapsidmodule.f90	/^130        DO 140 I = M,N$/;"	l	subroutine:SVERT	file:
130	g.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBMV	file:
130	g.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBSV	file:
130	g.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPMV	file:
130	g.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPSV	file:
130	g.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRMV	file:
130	g.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRSV	file:
130	g.mylapack.f	/^  130                CONTINUE$/;"	l	subroutine:DPBTRF	file:
130	g.mylapack.f	/^  130             CONTINUE$/;"	l	subroutine:DTBSV	file:
130	g.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK1	file:
130	g.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK2	file:
130	g.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK3	file:
130	g.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK4	file:
130	g.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK5	file:
130	g.ptgrp.f	/^130   CONTINUE$/;"	l	subroutine:EIG	file:
130	g.tn.f	/^130   Q = DSQRT(DABS(R+S))*DSQRT(DABS(R-S))$/;"	l	subroutine:GETPTC	file:
130	g.welch.f	/^  130    continue$/;"	l	subroutine:dgeco	file:
130	g.welch.f	/^  130    continue$/;"	l	subroutine:dgedi	file:
130	lbfgs.f	/^ 130  W(I)=DIAG(I)*W(I)$/;"	l	subroutine:LBFGS	file:
130	optim.EYtrap.f	/^130   CONTINUE$/;"	l	subroutine:EYDTRAP	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3C	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3CC	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3P	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2C	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2CC	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2P	file:
130	optim.axdiff.f	/^130            CONTINUE$/;"	l	subroutine:AXDIFF	file:
130	optim.aziz.f	/^130         CONTINUE$/;"	l	subroutine:AZIZ	file:
130	optim.c60diff.f	/^130         CONTINUE$/;"	l	subroutine:C60DIFF	file:
130	optim.c60p.f	/^130         CONTINUE$/;"	l	subroutine:C60P	file:
130	optim.dctrap.f	/^130   CONTINUE$/;"	l	subroutine:DCTRAP	file:
130	optim.dtrap.f	/^130   CONTINUE$/;"	l	subroutine:DTRAP	file:
130	optim.eig.f	/^130   CONTINUE$/;"	l	subroutine:EIG	file:
130	optim.escp.f	/^130         CONTINUE$/;"	l	subroutine:DSCP	file:
130	optim.gmetry.f	/^130   CONTINUE$/;"	l	subroutine:GMETRY	file:
130	optim.ions.f	/^130         CONTINUE$/;"	l	subroutine:IONS	file:
130	optim.mdiff.f	/^130         CONTINUE$/;"	l	subroutine:MDIFF	file:
130	optim.mied.f	/^130         CONTINUE$/;"	l	subroutine:MIED	file:
130	optim.mlatmin.f	/^130      CONTINUE$/;"	l	subroutine:MLATMIN	file:
130	optim.mpdiff.f	/^130         CONTINUE$/;"	l	subroutine:MPDIFF	file:
130	optim.mpdiff.f	/^130         CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
130	optim.msdiff.f	/^130         CONTINUE$/;"	l	subroutine:MSDIFF	file:
130	optim.mslatmin.f	/^130      CONTINUE$/;"	l	subroutine:MSLATMIN	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBMV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBSV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPMV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPSV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRMV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRSV	file:
130	optim.mylapack.f	/^  130                CONTINUE$/;"	l	subroutine:DPBTRF	file:
130	optim.mylapack.f	/^  130             CONTINUE$/;"	l	subroutine:DTBSV	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK1	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK2	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK3	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK4	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK5	file:
130	optim.projh.f	/^  130    continue$/;"	l	subroutine:dgeco	file:
130	optim.projh.f	/^  130    continue$/;"	l	subroutine:dgedi	file:
130	optim.scdiff.f	/^130         CONTINUE$/;"	l	subroutine:SCDIFF	file:
130	optim.symmetry.f	/^130         FORMAT(' The molecule is linear.')$/;"	l	subroutine:SYMMETRY	file:
130	pathsample.amhdump.f90	/^130       CONTINUE$/;"	l	subroutine:AMHQ	file:
130	pathsample.amhdump.f90	/^130       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
130	pathsample.amhdump.f90	/^130       CONTINUE$/;"	l	subroutine:AMHRMSD	file:
130	pathsample.dsort.f	/^  130 L = L-1$/;"	l	subroutine:DSORT	file:
130	pathsample.eig.f	/^130   CONTINUE$/;"	l	subroutine:EIG	file:
130	pathsample.getallmin.f	/^130      CONTINUE$/;"	l	subroutine:GETALLMIN	file:
130	pathsample.getallpaths.f	/^130      CONTINUE$/;"	l	subroutine:GETALLPATHS	file:
130	pathsample.getnewpath.f	/^130      CONTINUE$/;"	l	subroutine:GETNEWPATH	file:
130	pathsample.mergedb.f90	/^130 CONTINUE$/;"	l	subroutine:MERGEDB	file:
130	pathsample.reweight.f	/^  130                CONTINUE$/;"	l	subroutine:DLATRS	file:
130	pathsample.reweight.f	/^  130             CONTINUE$/;"	l	function:DLANTR	file:
130	pathsample.reweight.f	/^  130    CONTINUE$/;"	l	subroutine:DGERFS	file:
130	pathsample.reweight.f	/^  130 CONTINUE$/;"	l	subroutine:DLACN2	file:
130	pathsample.reweight.f	/^  130 CONTINUE$/;"	l	subroutine:DLACON	file:
130	pathsample.setup.f	/^130         CLOSE(1)$/;"	l	subroutine:SETUP	file:
130	ps.setup.readmin.inc.f90	/^130         CLOSE(1)$/;"	l	file:
131	g.io1.f	/^131      CONTINUE$/;"	l	subroutine:IO1	file:
133	optim.potential.f	/^133         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
1334	g.mc.F	/^1334     format(4(i8,1x),' nmres nmcrd numpro nmsnap')$/;"	l	subroutine:MC	file:
1346	g.Natb.f	/^ 1346              vect(ij)=val$/;"	l	subroutine:entots	file:
1346	optim.Natb.f	/^ 1346              vect(ij)=val$/;"	l	subroutine:entots	file:
14	g.EAMal.f	/^14        CONTINUE$/;"	l	subroutine:EAMal	file:
14	g.fedor.f	/^   14   continue $/;"	l	function:ut0	file:
14	g.fedor.f	/^   14   continue $/;"	l	function:ut01	file:
14	g.io1.f	/^14       CONTINUE$/;"	l	subroutine:IO1	file:
14	g.odesd.f	/^14        continue$/;"	l	subroutine:pzextr	file:
14	g.odesd.f	/^14      continue$/;"	l	subroutine:bsstep	file:
14	g.odesd.f	/^14      continue$/;"	l	subroutine:rzextr	file:
14	g.odesd.f	/^14    continue$/;"	l	subroutine:mmid	file:
14	g.odesd.f	/^14    continue$/;"	l	subroutine:rkck	file:
14	g.quench.f	/^14       CONTINUE$/;"	l	subroutine:QUENCH	file:
14	g.quench.sim.f90	/^14       CONTINUE$/;"	l	subroutine:QUENCH	file:
14	optim.c60diff.f	/^14       CONTINUE$/;"	l	subroutine:C60DIFF	file:
14	optim.c60p.f	/^14       CONTINUE$/;"	l	subroutine:C60P	file:
14	optim.escp.f	/^14       CONTINUE$/;"	l	subroutine:OESCP	file:
14	optim.msevb.f90	/^14        continue$/;"	l	subroutine:jacobi	file:
14	optim.odesd.f	/^14        CONTINUE$/;"	l	subroutine:PZEXTR	file:
14	optim.odesd.f	/^14      CONTINUE$/;"	l	subroutine:BSSTEP	file:
14	optim.odesd.f	/^14      CONTINUE$/;"	l	subroutine:RZEXTR	file:
14	optim.odesd.f	/^14    CONTINUE$/;"	l	subroutine:MMID	file:
14	optim.odesd.f	/^14    CONTINUE$/;"	l	subroutine:RKCK	file:
14	optim.potential.f	/^14       READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
14	optim.scdiff.f	/^14       CONTINUE$/;"	l	subroutine:SCDIFF	file:
14	optim.scl.f	/^14       CONTINUE$/;"	l	subroutine:SCL	file:
140	g.dlsode.f	/^ 140    CONTINUE$/;"	l	subroutine:DCFODE	file:
140	g.dlsode.f	/^ 140  CALL DCFODE (METH, ELCO, TESCO)$/;"	l	subroutine:DSTODE	file:
140	g.dlsode.f	/^ 140  IF (TOL .GT. 0.0D0) GO TO 160$/;"	l	subroutine:DLSODE	file:
140	g.ljcapsidmodule.f90	/^140             V(I+H) = W(I)$/;"	l	subroutine:SVERT	file:
140	g.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBMV	file:
140	g.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBSV	file:
140	g.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPMV	file:
140	g.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPSV	file:
140	g.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRMV	file:
140	g.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRSV	file:
140	g.mylapack.f	/^  140          CONTINUE$/;"	l	subroutine:DTBSV	file:
140	g.mylapack.f	/^  140       CONTINUE$/;"	l	subroutine:DPBTRF	file:
140	g.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK1	file:
140	g.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK2	file:
140	g.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK4	file:
140	g.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK5	file:
140	g.mylapack.f	/^  140 CONTINUE$/;"	l	subroutine:SCHCK3	file:
140	g.ptgrp.f	/^140   IF(N1.EQ.1) RETURN$/;"	l	subroutine:EIG	file:
140	g.tn.f	/^140   IF (XW .LT. ZERO) Q = -Q$/;"	l	subroutine:GETPTC	file:
140	g.welch.f	/^  140    continue$/;"	l	subroutine:dgedi	file:
140	g.welch.f	/^  140 continue$/;"	l	subroutine:dgeco	file:
140	optim.EYtrap.f	/^140      CONTINUE$/;"	l	subroutine:EYDTRAP	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3C	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3CC	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3P	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2C	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2CC	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2P	file:
140	optim.axdiff.f	/^140         CONTINUE$/;"	l	subroutine:AXDIFF	file:
140	optim.aziz.f	/^140      CONTINUE$/;"	l	subroutine:AZIZ	file:
140	optim.c60diff.f	/^140      CONTINUE$/;"	l	subroutine:C60DIFF	file:
140	optim.c60p.f	/^140      CONTINUE$/;"	l	subroutine:C60P	file:
140	optim.dctrap.f	/^140      CONTINUE$/;"	l	subroutine:DCTRAP	file:
140	optim.dtrap.f	/^140      CONTINUE$/;"	l	subroutine:DTRAP	file:
140	optim.eig.f	/^140   IF(N1.EQ.1) RETURN$/;"	l	subroutine:EIG	file:
140	optim.escp.f	/^140      CONTINUE$/;"	l	subroutine:DSCP	file:
140	optim.gmetry.f	/^140         CONTINUE$/;"	l	subroutine:GMETRY	file:
140	optim.ions.f	/^140      CONTINUE$/;"	l	subroutine:IONS	file:
140	optim.mdiff.f	/^140      CONTINUE$/;"	l	subroutine:MDIFF	file:
140	optim.mied.f	/^140      CONTINUE$/;"	l	subroutine:MIED	file:
140	optim.mlatmin.f	/^140   CONTINUE$/;"	l	subroutine:MLATMIN	file:
140	optim.mpdiff.f	/^140      CONTINUE$/;"	l	subroutine:MPDIFF	file:
140	optim.mpdiff.f	/^140      CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
140	optim.msdiff.f	/^140      CONTINUE$/;"	l	subroutine:MSDIFF	file:
140	optim.mslatmin.f	/^140   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBMV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBSV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPMV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPSV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRMV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRSV	file:
140	optim.mylapack.f	/^  140          CONTINUE$/;"	l	subroutine:DTBSV	file:
140	optim.mylapack.f	/^  140       CONTINUE$/;"	l	subroutine:DPBTRF	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK1	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK2	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK4	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK5	file:
140	optim.mylapack.f	/^  140 CONTINUE$/;"	l	subroutine:SCHCK3	file:
140	optim.projh.f	/^  140    continue$/;"	l	subroutine:dgedi	file:
140	optim.projh.f	/^  140 continue$/;"	l	subroutine:dgeco	file:
140	optim.scdiff.f	/^140      CONTINUE$/;"	l	subroutine:SCDIFF	file:
140	optim.symmetry.f	/^140               CONTINUE$/;"	l	subroutine:SYMMETRY	file:
140	pathsample.amhdump.f90	/^140       CONTINUE$/;"	l	subroutine:AMHQ	file:
140	pathsample.amhdump.f90	/^140       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
140	pathsample.amhdump.f90	/^140       CONTINUE$/;"	l	subroutine:AMHRMSD	file:
140	pathsample.dock.f90	/^140 CONTINUE$/;"	l	subroutine:ANALYSERESULTS	file:
140	pathsample.dsort.f	/^  140 K = K+1$/;"	l	subroutine:DSORT	file:
140	pathsample.eig.f	/^140   IF(N1.EQ.1) RETURN$/;"	l	subroutine:EIG	file:
140	pathsample.getallmin.f	/^140   CONTINUE$/;"	l	subroutine:GETALLMIN	file:
140	pathsample.getallpaths.f	/^140      CONTINUE$/;"	l	subroutine:GETALLPATHS	file:
140	pathsample.mergedb.f90	/^140 CONTINUE$/;"	l	subroutine:MERGEDB	file:
140	pathsample.reweight.f	/^  140                CONTINUE$/;"	l	subroutine:DLATRS	file:
140	pathsample.reweight.f	/^  140       CONTINUE$/;"	l	function:DLANTR	file:
140	pathsample.reweight.f	/^  140 CONTINUE$/;"	l	subroutine:DGERFS	file:
140	pathsample.reweight.f	/^  140 CONTINUE$/;"	l	subroutine:DLACN2	file:
140	pathsample.reweight.f	/^  140 CONTINUE$/;"	l	subroutine:DLACON	file:
140	pathsample.setup.f	/^140            CONTINUE$/;"	l	subroutine:SETUP	file:
140	ps.setup.readmin.inc.f90	/^140            CONTINUE$/;"	l	file:
142	optim.adm.f	/^142       FORMAT(18X,A3,4(10X,A3))$/;"	l	subroutine:ADM	file:
143	optim.adm.f	/^143          FORMAT(T3,A3,'[',I3,']',5(3X,F10.5))$/;"	l	subroutine:ADM	file:
144	optim.adm.f	/^144       FORMAT(16X,:'[',I3,']',4(8X,:'[',I3,']'))$/;"	l	subroutine:ADM	file:
145	lbfgs.f	/^ 145  CONTINUE$/;"	l	subroutine:LBFGS	file:
148	optim.TIPmodes.f	/^  148 CONTINUE $/;"	l	subroutine:H2OMODES	file:
15	g.Ackland_wrapper.f	/^15          CONTINUE$/;"	l	subroutine:ACK	file:
15	g.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMEC	file:
15	g.dlsode.f	/^ 15     EWT(I) = RTOL(1)*ABS(YCUR(I)) + ATOL(1)$/;"	l	subroutine:DEWSET	file:
15	g.dlsode.f	/^ 15   C = IC$/;"	l	subroutine:DINTDY	file:
15	g.fedor.f	/^   15   continue                      $/;"	l	function:ut0	file:
15	g.fedor.f	/^   15   continue                      $/;"	l	function:ut01	file:
15	g.fedor.f	/^   15 C(4,1)=1.d0$/;"	l	subroutine:CUBSPL	file:
15	g.fedor.f	/^   15 CONTINUE$/;"	l	subroutine:sortv	file:
15	g.linmin.f	/^15    FB=F1DIM(BX)$/;"	l	subroutine:LINMIN	file:
15	g.minperm.f	/^   15    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
15	g.odesd.f	/^15      continue$/;"	l	subroutine:pzextr	file:
15	g.odesd.f	/^15    continue$/;"	l	subroutine:bsstep	file:
15	g.odesd.f	/^15    continue$/;"	l	subroutine:rkck	file:
15	g.ptgrp.f	/^15       CONTINUE$/;"	l	subroutine:MATMUL	file:
15	g.tn.f	/^15    CONTINUE$/;"	l	subroutine:CNVTST	file:
15	lbfgs.f	/^   15    FORMAT(\/'  THE SEARCH DIRECTION IS NOT A DESCENT DIRECTION')$/;"	l	subroutine:MCSRCH	file:
15	optim.Ackland_wrapper.f	/^15       CONTINUE$/;"	l	subroutine:ACK	file:
15	optim.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMEC	file:
15	optim.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMECC	file:
15	optim.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMEP	file:
15	optim.c60diff.f	/^15          CONTINUE$/;"	l	subroutine:C60DIFF	file:
15	optim.c60p.f	/^15       CONTINUE$/;"	l	subroutine:C60P	file:
15	optim.cubspl.f	/^   15 c(4,1) = 1.$/;"	l	subroutine:cubspl	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK15	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK21	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK31	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK41	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK51	file:
15	optim.dqag.f	/^  15    CONTINUE$/;"	l	subroutine:DQK61	file:
15	optim.emie.f	/^15       CONTINUE$/;"	l	subroutine:EMIE	file:
15	optim.escp.f	/^15       CONTINUE$/;"	l	subroutine:OESCP	file:
15	optim.latmin.f	/^15       CONTINUE$/;"	l	subroutine:C60PE	file:
15	optim.minperm.f	/^   15    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
15	optim.mlatmin.f	/^15       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
15	optim.mpdiff.f	/^15       CONTINUE$/;"	l	subroutine:MPDIFF	file:
15	optim.mpdiff.f	/^15       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
15	optim.msdiff.f	/^15       CONTINUE$/;"	l	subroutine:MSDIFF	file:
15	optim.msevb.f90	/^15      continue$/;"	l	subroutine:jacobi	file:
15	optim.mslatmin.f	/^15       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
15	optim.odesd.f	/^15      CONTINUE$/;"	l	subroutine:PZEXTR	file:
15	optim.odesd.f	/^15    CONTINUE$/;"	l	subroutine:BSSTEP	file:
15	optim.odesd.f	/^15    CONTINUE$/;"	l	subroutine:RKCK	file:
15	optim.rigidb.f90	/^15    CONTINUE    $/;"	l	subroutine:CHECKDRVTS	file:
15	optim.specialfuncts.f90	/^15          P=P*(Z-X(I))$/;"	l	subroutine:LEGZO	file:
15	pathsample.minperm.f	/^   15    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
150	g.dlsode.f	/^ 150    CONTINUE$/;"	l	subroutine:DLSODE	file:
150	g.dlsode.f	/^ 150  DO 155 I = 1,L$/;"	l	subroutine:DSTODE	file:
150	g.ljcapsidmodule.f90	/^150   CONTINUE$/;"	l	subroutine:SVERT	file:
150	g.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBMV	file:
150	g.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBSV	file:
150	g.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPMV	file:
150	g.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPSV	file:
150	g.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRMV	file:
150	g.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRSV	file:
150	g.mylapack.f	/^  150             CONTINUE$/;"	l	subroutine:DTBSV	file:
150	g.mylapack.f	/^  150     CONTINUE$/;"	l	subroutine:SCHCK1	file:
150	g.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:DPBTRF	file:
150	g.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK2	file:
150	g.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK3	file:
150	g.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK4	file:
150	g.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK5	file:
150	g.ptgrp.f	/^150   W1=A(I,I)$/;"	l	subroutine:EIG	file:
150	g.tn.f	/^150   A1 = A$/;"	l	subroutine:GETPTC	file:
150	g.welch.f	/^  150    continue$/;"	l	subroutine:dgeco	file:
150	g.welch.f	/^  150 continue$/;"	l	subroutine:dgedi	file:
150	optim.EYtrap.f	/^150         CONTINUE$/;"	l	subroutine:EYDTRAP	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3C	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3CC	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3P	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2C	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2CC	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2P	file:
150	optim.axdiff.f	/^150      CONTINUE$/;"	l	subroutine:AXDIFF	file:
150	optim.aziz.f	/^150   CONTINUE$/;"	l	subroutine:AZIZ	file:
150	optim.c60diff.f	/^150   CONTINUE$/;"	l	subroutine:C60DIFF	file:
150	optim.c60p.f	/^150   CONTINUE$/;"	l	subroutine:C60P	file:
150	optim.dctrap.f	/^150         CONTINUE$/;"	l	subroutine:DCTRAP	file:
150	optim.dtrap.f	/^150         CONTINUE$/;"	l	subroutine:DTRAP	file:
150	optim.efol.f90	/^150            K1=K1+1$/;"	l	subroutine:EFOL	file:
150	optim.eig.f	/^150   W1=A(I,I)$/;"	l	subroutine:EIG	file:
150	optim.escp.f	/^150   CONTINUE$/;"	l	subroutine:DSCP	file:
150	optim.gmetry.f	/^150   CONTINUE$/;"	l	subroutine:GMETRY	file:
150	optim.ions.f	/^150   CONTINUE$/;"	l	subroutine:IONS	file:
150	optim.mdiff.f	/^150   CONTINUE$/;"	l	subroutine:MDIFF	file:
150	optim.mied.f	/^150   CONTINUE$/;"	l	subroutine:MIED	file:
150	optim.mpdiff.f	/^150   CONTINUE$/;"	l	subroutine:MPDIFF	file:
150	optim.mpdiff.f	/^150   CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
150	optim.msdiff.f	/^150   CONTINUE$/;"	l	subroutine:MSDIFF	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBMV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBSV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPMV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPSV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRMV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRSV	file:
150	optim.mylapack.f	/^  150             CONTINUE$/;"	l	subroutine:DTBSV	file:
150	optim.mylapack.f	/^  150     CONTINUE$/;"	l	subroutine:SCHCK1	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:DPBTRF	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK2	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK3	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK4	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK5	file:
150	optim.projh.f	/^  150    continue$/;"	l	subroutine:dgeco	file:
150	optim.projh.f	/^  150 continue$/;"	l	subroutine:dgedi	file:
150	optim.scdiff.f	/^150   CONTINUE$/;"	l	subroutine:SCDIFF	file:
150	pathsample.amhdump.f90	/^150       CONTINUE$/;"	l	subroutine:AMHQ	file:
150	pathsample.amhdump.f90	/^150       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
150	pathsample.amhdump.f90	/^150       CONTINUE$/;"	l	subroutine:AMHRMSD	file:
150	pathsample.dock.f90	/^150 CONTINUE$/;"	l	subroutine:ANALYSERESULTS	file:
150	pathsample.dsort.f	/^  150 M = M-1$/;"	l	subroutine:DSORT	file:
150	pathsample.eig.f	/^150   W1=A(I,I)$/;"	l	subroutine:EIG	file:
150	pathsample.reweight.f	/^  150             CONTINUE$/;"	l	subroutine:DLATRS	file:
150	pathsample.reweight.f	/^  150          CONTINUE$/;"	l	function:DLANTR	file:
150	pathsample.reweight.f	/^  150 CONTINUE$/;"	l	subroutine:DLACN2	file:
150	pathsample.reweight.f	/^  150 CONTINUE$/;"	l	subroutine:DLACON	file:
151	optim.escp.f	/^151               CONTINUE$/;"	l	subroutine:DSCP	file:
151	optim.scdiff.f	/^151               CONTINUE$/;"	l	subroutine:SCDIFF	file:
152	optim.escp.f	/^152               CONTINUE$/;"	l	subroutine:DSCP	file:
152	optim.scdiff.f	/^152               CONTINUE$/;"	l	subroutine:SCDIFF	file:
155	g.dlsode.f	/^ 155    EL(I) = ELCO(I,NQ)$/;"	l	subroutine:DSTODE	file:
155	optim.EYtrap.f	/^155            CONTINUE$/;"	l	subroutine:EYDTRAP	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2C	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2CC	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2P	file:
155	optim.aziz.f	/^155            CONTINUE$/;"	l	subroutine:AZIZ	file:
155	optim.c60diff.f	/^155            CONTINUE$/;"	l	subroutine:C60DIFF	file:
155	optim.c60p.f	/^155            CONTINUE$/;"	l	subroutine:C60P	file:
155	optim.dtrap.f	/^155            CONTINUE$/;"	l	subroutine:DTRAP	file:
155	optim.escp.f	/^155            CONTINUE$/;"	l	subroutine:DSCP	file:
155	optim.ions.f	/^155            CONTINUE$/;"	l	subroutine:IONS	file:
155	optim.mdiff.f	/^155            CONTINUE$/;"	l	subroutine:MDIFF	file:
155	optim.mied.f	/^155            CONTINUE$/;"	l	subroutine:MIED	file:
155	optim.mpdiff.f	/^155            CONTINUE$/;"	l	subroutine:MPDIFF	file:
155	optim.mpdiff.f	/^155            CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
155	optim.msdiff.f	/^155            CONTINUE$/;"	l	subroutine:MSDIFF	file:
155	optim.scdiff.f	/^155            CONTINUE$/;"	l	subroutine:SCDIFF	file:
156	optim.escp.f	/^156            CONTINUE$/;"	l	subroutine:DSCP	file:
156	optim.mdiff.f	/^156            CONTINUE$/;"	l	subroutine:MDIFF	file:
156	optim.mied.f	/^156            CONTINUE$/;"	l	subroutine:MIED	file:
156	optim.mpdiff.f	/^156            CONTINUE$/;"	l	subroutine:MPDIFF	file:
156	optim.mpdiff.f	/^156            CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
156	optim.msdiff.f	/^156            CONTINUE$/;"	l	subroutine:MSDIFF	file:
156	optim.scdiff.f	/^156            CONTINUE$/;"	l	subroutine:SCDIFF	file:
16	g.fedor.f	/^   16   continue                                           $/;"	l	function:ut0	file:
16	g.fedor.f	/^   16   continue                                           $/;"	l	function:ut01	file:
16	g.fedor.f	/^   16 C(4,1)=2.d0$/;"	l	subroutine:CUBSPL	file:
16	g.fedor.f	/^   16 continue$/;"	l	subroutine:sortv	file:
16	g.odesd.f	/^16        continue$/;"	l	subroutine:bsstep	file:
16	g.odesd.f	/^16      continue$/;"	l	subroutine:pzextr	file:
16	g.odesd.f	/^16    continue$/;"	l	subroutine:rkck	file:
16	optim.bbrsdm.f90	/^16       FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:BBRSDM	file:
16	optim.cubspl.f	/^   16 c(4,1) = 2.$/;"	l	subroutine:cubspl	file:
16	optim.meccano.f90	/^16 FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:MECBFGS	file:
16	optim.msevb.f90	/^16            continue$/;"	l	subroutine:jacobi	file:
16	optim.mylbfgs.f	/^16    FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:MYLBFGS	file:
16	optim.odesd.f	/^16        CONTINUE$/;"	l	subroutine:BSSTEP	file:
16	optim.odesd.f	/^16      CONTINUE$/;"	l	subroutine:PZEXTR	file:
16	optim.odesd.f	/^16    CONTINUE$/;"	l	subroutine:RKCK	file:
16	optim.unmeccano.f90	/^16 FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:UNMECBFGS	file:
16	pathsample.mind.f	/^16    FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:MMYLBFGS	file:
160	g.dlsode.f	/^ 160  IF (H .EQ. HOLD) GO TO 200$/;"	l	subroutine:DSTODE	file:
160	g.dlsode.f	/^ 160  TOL = MAX(TOL,100.0D0*UROUND)$/;"	l	subroutine:DLSODE	file:
160	g.io1.f	/^160      FORMAT('Debug printing is on')$/;"	l	subroutine:IO1	file:
160	g.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBMV	file:
160	g.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBSV	file:
160	g.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPMV	file:
160	g.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPSV	file:
160	g.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRMV	file:
160	g.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRSV	file:
160	g.mylapack.f	/^  160          CONTINUE$/;"	l	subroutine:DTBSV	file:
160	g.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK1	file:
160	g.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK2	file:
160	g.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK3	file:
160	g.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK4	file:
160	g.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK5	file:
160	g.ptgrp.f	/^160      FORMAT(' The highest order rotational axis is C',I2,' about ',I2)$/;"	l	subroutine:PTGRP	file:
160	g.ptgrp.f	/^160   B(MU,J)=W2$/;"	l	subroutine:EIG	file:
160	g.tn.f	/^160   IF ((A .NE. ZERO .OR. XW .GE. ZERO) .AND. (B .NE. ZERO .OR.$/;"	l	subroutine:GETPTC	file:
160	g.welch.f	/^  160 continue$/;"	l	subroutine:dgeco	file:
160	lbfgs.f	/^ 160   W(ISPT+POINT*N+I)= W(I)$/;"	l	subroutine:LBFGS	file:
160	optim.EYtrap.f	/^160         CONTINUE$/;"	l	subroutine:EYDTRAP	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2C	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2CC	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2P	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3C	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3CC	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3P	file:
160	optim.axdiff.f	/^160   CONTINUE$/;"	l	subroutine:AXDIFF	file:
160	optim.aziz.f	/^160         CONTINUE$/;"	l	subroutine:AZIZ	file:
160	optim.c60diff.f	/^160         CONTINUE$/;"	l	subroutine:C60DIFF	file:
160	optim.c60p.f	/^160         CONTINUE$/;"	l	subroutine:C60P	file:
160	optim.dctrap.f	/^ 160     CONTINUE$/;"	l	subroutine:DCTRAP	file:
160	optim.dtrap.f	/^160         CONTINUE$/;"	l	subroutine:DTRAP	file:
160	optim.efol.f90	/^160      FORMAT(' Gradients along Hessian eigenvectors: ')$/;"	l	subroutine:EFOL	file:
160	optim.escp.f	/^160         CONTINUE$/;"	l	subroutine:DSCP	file:
160	optim.fetchz.f	/^160      CALL INPUT(END)$/;"	l	subroutine:FETCHZ	file:
160	optim.gmetry.f	/^160   IF (NATOMS.EQ.NUMAT) RETURN$/;"	l	subroutine:GMETRY	file:
160	optim.ions.f	/^160         CONTINUE$/;"	l	subroutine:IONS	file:
160	optim.mdiff.f	/^160         CONTINUE$/;"	l	subroutine:MDIFF	file:
160	optim.mied.f	/^160         CONTINUE$/;"	l	subroutine:MIED	file:
160	optim.mpdiff.f	/^160         CONTINUE$/;"	l	subroutine:MPDIFF	file:
160	optim.mpdiff.f	/^160         CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
160	optim.msdiff.f	/^160         CONTINUE$/;"	l	subroutine:MSDIFF	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBMV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBSV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPMV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPSV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRMV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRSV	file:
160	optim.mylapack.f	/^  160          CONTINUE$/;"	l	subroutine:DTBSV	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK1	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK2	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK3	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK4	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK5	file:
160	optim.projh.f	/^  160 continue$/;"	l	subroutine:dgeco	file:
160	optim.scdiff.f	/^160         CONTINUE$/;"	l	subroutine:SCDIFF	file:
160	optim.symmetry.f	/^160         FORMAT(' symmetry> The highest order rotational axis is C',I2,' about ',I2)$/;"	l	subroutine:SYMMETRY	file:
160	pathsample.dock.f90	/^160 CONTINUE$/;"	l	subroutine:ANALYSERESULTS	file:
160	pathsample.dsort.f	/^  160 IF (J-I .GE. 1) GO TO 120$/;"	l	subroutine:DSORT	file:
160	pathsample.eig.f	/^160   B(MU,J)=W2$/;"	l	subroutine:EIG	file:
160	pathsample.reweight.f	/^  160             CONTINUE$/;"	l	function:DLANTR	file:
160	pathsample.reweight.f	/^  160       CONTINUE$/;"	l	subroutine:DLATRS	file:
161	optim.potential.f	/^161         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
162	optim.potential.f	/^162         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
163	optim.potential.f	/^163         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
165	lbfgs.f	/^ 165  NFEV=0$/;"	l	subroutine:LBFGS	file:
17	g.fedor.f	/^   17   continue                                                                $/;"	l	function:ut0	file:
17	g.fedor.f	/^   17   continue                                                                $/;"	l	function:ut01	file:
17	g.fedor.f	/^   17 CONTINUE$/;"	l	subroutine:sortv	file:
17	g.odesd.f	/^17    continue$/;"	l	subroutine:bsstep	file:
17	g.odesd.f	/^17    continue$/;"	l	subroutine:rkck	file:
17	g.ptgrp.f	/^17      CONTINUE$/;"	l	subroutine:SIAZ	file:
17	optim.amber.f	/^17    CONTINUE$/;"	l	subroutine:chiraltest	file:
17	optim.c60p.f	/^17          CONTINUE$/;"	l	subroutine:C60P	file:
17	optim.msevb.f90	/^17            continue$/;"	l	subroutine:jacobi	file:
17	optim.odesd.f	/^17    CONTINUE$/;"	l	subroutine:BSSTEP	file:
17	optim.odesd.f	/^17    CONTINUE$/;"	l	subroutine:RKCK	file:
17	optim.siaz.f	/^17      CONTINUE$/;"	l	subroutine:SIAZ	file:
170	g.dlsode.f	/^ 170  RH = MAX(RH,HMIN\/ABS(H))$/;"	l	subroutine:DSTODE	file:
170	g.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK1	file:
170	g.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK2	file:
170	g.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK3	file:
170	g.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK4	file:
170	g.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK5	file:
170	g.ptgrp.f	/^170   CONTINUE$/;"	l	subroutine:EIG	file:
170	g.tn.f	/^170   IF (STEP .LE. ZERO) A1 = STEP$/;"	l	subroutine:GETPTC	file:
170	lbfgs.f	/^ 170  W(I)=G(I)$/;"	l	subroutine:LBFGS	file:
170	optim.EYtrap.f	/^170      CONTINUE$/;"	l	subroutine:EYDTRAP	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3C	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3CC	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3P	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2C	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2CC	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2P	file:
170	optim.axdiff.f	/^170            CONTINUE$/;"	l	subroutine:AXDIFF	file:
170	optim.aziz.f	/^170      CONTINUE$/;"	l	subroutine:AZIZ	file:
170	optim.c60diff.f	/^170      CONTINUE$/;"	l	subroutine:C60DIFF	file:
170	optim.c60p.f	/^170      CONTINUE$/;"	l	subroutine:C60P	file:
170	optim.dtrap.f	/^170      CONTINUE$/;"	l	subroutine:DTRAP	file:
170	optim.efol.f90	/^170   FORMAT(' Number of negative eigenvalues=',I3)$/;"	l	subroutine:EFOL	file:
170	optim.eig.f	/^170   CONTINUE$/;"	l	subroutine:EIG	file:
170	optim.escp.f	/^170      CONTINUE$/;"	l	subroutine:DSCP	file:
170	optim.gmetry.f	/^170   CONTINUE$/;"	l	subroutine:GMETRY	file:
170	optim.ions.f	/^170      CONTINUE$/;"	l	subroutine:IONS	file:
170	optim.mdiff.f	/^170      CONTINUE$/;"	l	subroutine:MDIFF	file:
170	optim.mied.f	/^170      CONTINUE$/;"	l	subroutine:MIED	file:
170	optim.mpdiff.f	/^170      CONTINUE$/;"	l	subroutine:MPDIFF	file:
170	optim.mpdiff.f	/^170      CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
170	optim.msdiff.f	/^170      CONTINUE$/;"	l	subroutine:MSDIFF	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK1	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK2	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK3	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK4	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK5	file:
170	optim.scdiff.f	/^170      CONTINUE$/;"	l	subroutine:SCDIFF	file:
170	optim.symmetry.f	/^170                  CONTINUE$/;"	l	subroutine:SYMMETRY	file:
170	pathsample.dsort.f	/^  170 I = I+1$/;"	l	subroutine:DSORT	file:
170	pathsample.eig.f	/^170   CONTINUE$/;"	l	subroutine:EIG	file:
170	pathsample.reweight.f	/^  170          CONTINUE$/;"	l	function:DLANTR	file:
172	lbfgs.f	/^ 172  CONTINUE$/;"	l	subroutine:LBFGS	file:
175	g.dlsode.f	/^ 175  RH = MIN(RH,RMAX)$/;"	l	subroutine:DSTODE	file:
175	lbfgs.f	/^ 175  W(IYPT+NPT+I)= G(I)-W(I)$/;"	l	subroutine:LBFGS	file:
18	g.fedor.f	/^   18   continue     $/;"	l	function:ut0	file:
18	g.fedor.f	/^   18   continue     $/;"	l	function:ut01	file:
18	g.fedor.f	/^   18 IF(N.EQ.2) GO TO 25$/;"	l	subroutine:CUBSPL	file:
18	g.odesd.f	/^18    continue$/;"	l	subroutine:bsstep	file:
18	g.ptgrp.f	/^18         CONTINUE$/;"	l	subroutine:SIAZ	file:
18	optim.cubspl.f	/^   18 if(n .eq. 2)                      go to 25$/;"	l	subroutine:cubspl	file:
18	optim.mlatmin.f	/^18           CONTINUE$/;"	l	subroutine:MLATDIFF	file:
18	optim.msevb.f90	/^18            continue$/;"	l	subroutine:jacobi	file:
18	optim.odesd.f	/^18    CONTINUE$/;"	l	subroutine:BSSTEP	file:
18	optim.siaz.f	/^18         CONTINUE$/;"	l	subroutine:SIAZ	file:
180	g.dlsode.f	/^ 180      YH(I,J) = YH(I,J)*R$/;"	l	subroutine:DSTODE	file:
180	g.dlsode.f	/^ 180  RH = ABS(H0)*HMXI$/;"	l	subroutine:DLSODE	file:
180	g.io1.f	/^180      VECMN=SQUEEZER\/DSQRT(VECMN)$/;"	l	subroutine:IO1	file:
180	g.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK1	file:
180	g.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK2	file:
180	g.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK3	file:
180	g.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK4	file:
180	g.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK5	file:
180	g.tn.f	/^180   IF (DABS(S) .LE. DABS(HALF*Q*R) .OR.$/;"	l	subroutine:GETPTC	file:
180	optim.EYtrap.f	/^180   CONTINUE$/;"	l	subroutine:EYDTRAP	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3C	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3CC	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3P	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2C	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2CC	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2P	file:
180	optim.axdiff.f	/^180         CONTINUE$/;"	l	subroutine:AXDIFF	file:
180	optim.aziz.f	/^180   CONTINUE$/;"	l	subroutine:AZIZ	file:
180	optim.c60diff.f	/^180   CONTINUE$/;"	l	subroutine:C60DIFF	file:
180	optim.c60p.f	/^180   CONTINUE$/;"	l	subroutine:C60P	file:
180	optim.dctrap.f	/^ 180  CONTINUE$/;"	l	subroutine:DCTRAP	file:
180	optim.dtrap.f	/^180   CONTINUE$/;"	l	subroutine:DTRAP	file:
180	optim.escp.f	/^180   CONTINUE$/;"	l	subroutine:DSCP	file:
180	optim.ions.f	/^180   CONTINUE$/;"	l	subroutine:IONS	file:
180	optim.mdiff.f	/^180   CONTINUE$/;"	l	subroutine:MDIFF	file:
180	optim.mied.f	/^180   CONTINUE$/;"	l	subroutine:MIED	file:
180	optim.mpdiff.f	/^180   CONTINUE$/;"	l	subroutine:MPDIFF	file:
180	optim.mpdiff.f	/^180   CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
180	optim.msdiff.f	/^180   CONTINUE$/;"	l	subroutine:MSDIFF	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK1	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK2	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK3	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK4	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK5	file:
180	optim.scdiff.f	/^180   CONTINUE$/;"	l	subroutine:SCDIFF	file:
180	optim.symmetry.f	/^180            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
180	pathsample.dsort.f	/^  180 DX(K+1) = DX(K)$/;"	l	subroutine:DSORT	file:
180	pathsample.reweight.f	/^  180          CONTINUE$/;"	l	function:DLANTR	file:
19	g.fedor.f	/^   19 DO 20 M=2,L$/;"	l	subroutine:CUBSPL	file:
19	optim.cubspl.f	/^   19 do 20 m=2,l$/;"	l	subroutine:cubspl	file:
19	optim.msevb.f90	/^19            continue$/;"	l	subroutine:jacobi	file:
19	optim.mylbfgs.f	/^ 19   CONTINUE$/;"	l	subroutine:MYLBFGS	file:
190	g.dlsode.f	/^ 190    RWORK(I+LF0-1) = H0*RWORK(I+LF0-1)$/;"	l	subroutine:DLSODE	file:
190	g.io1.f	/^190      FORMAT('System will be squeezed into the shape defined by the '$/;"	l	subroutine:IO1	file:
190	g.keyword.f	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	g.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK1	file:
190	g.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK2	file:
190	g.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK3	file:
190	g.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK4	file:
190	g.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK5	file:
190	g.ptgrp.f	/^190         FORMAT(' The unique rotational axis is ',I1,'.')$/;"	l	subroutine:PTGRP	file:
190	g.tn.f	/^190   STEP = TOL$/;"	l	subroutine:GETPTC	file:
190	keyword.ps.f90	/^190   CALL INPUT(END)$/;"	l	file:
190	lbfgs.f	/^ 190  IFLAG=-1$/;"	l	subroutine:LBFGS	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2C	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2CC	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2P	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3C	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3CC	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3P	file:
190	optim.axdiff.f	/^190      CONTINUE$/;"	l	subroutine:AXDIFF	file:
190	optim.aziz.f	/^190      CONTINUE$/;"	l	subroutine:AZIZ	file:
190	optim.c60diff.f	/^190      CONTINUE$/;"	l	subroutine:C60DIFF	file:
190	optim.c60p.f	/^190      CONTINUE$/;"	l	subroutine:C60P	file:
190	optim.changep.f	/^190   CALL INPUT(END)$/;"	l	subroutine:CHANGEP	file:
190	optim.dumpit.f	/^190   FORMAT('EFSTEPS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
190	optim.ions.f	/^190      CONTINUE$/;"	l	subroutine:IONS	file:
190	optim.keyword.f	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK1	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK2	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK3	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK4	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK5	file:
190	optim.read.odata.inc.f90	/^190   CALL INPUT(END)$/;"	l	file:
190	optim.symmetry.f	/^190            FORMAT(' The unique rotational axis is ',I1,'.')$/;"	l	subroutine:SYMMETRY	file:
190	optim.tcheck.f	/^190   CONTINUE$/;"	l	subroutine:TCHECK	file:
190	pathsample.dsort.f	/^  190 IF (KFLAG .LE. -1) THEN$/;"	l	subroutine:DSORT	file:
190	pathsample.keyword.f90	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	pathsample.reweight.f	/^  190             CONTINUE$/;"	l	function:DLANTR	file:
192	optim.unrestwist.f	/^192   CONTINUE$/;"	l	subroutine:UNRSPERTDIHE	file:
195	g.ljcapsidmodule.f90	/^195       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPELPSD	file:
195	lbfgs.f	/^ 195  IFLAG=-2$/;"	l	subroutine:LBFGS	file:
196	lbfgs.f	/^ 196  IFLAG= -3$/;"	l	subroutine:LBFGS	file:
1964	g.finalio.f	/^1964        CONTINUE$/;"	l	subroutine:FINALIO	file:
2	func.f90	/^     2    TINY = 1.0D-17)$/;"	l	function:DPRAND	file:
2	g.EAMal.f	/^2        CONTINUE$/;"	l	subroutine:EAMal	file:
2	g.brent.f	/^2       IF(ABS(D).GE.TOL1) THEN$/;"	l	function:BRENT	file:
2	g.fedor.f	/^    2 CONTINUE$/;"	l	function:ar2UT0	file:
2	g.fedor.f	/^    2 continue$/;"	l	function:ut	file:
2	g.fedor.f	/^   2      continue$/;"	l	subroutine:hmat	file:
2	g.fedor.f	/^   2      continue$/;"	l	subroutine:hmatd	file:
2	g.fedor.f	/^  2     continue$/;"	l	subroutine:dipoles	file:
2	g.odesd.f	/^2     do 17 k=1,kmax$/;"	l	subroutine:bsstep	file:
2	g.pyg.f90	/^2        IF (ABS(D) >= TOL1) THEN ! Arrive here with d computed either from parabolic fit, or$/;"	l	subroutine:BRENTMIN	file:
2	g.sort.f	/^2         arr(i+1,np)=a$/;"	l	subroutine:Gsort	file:
2	g.takestepmsgb.f90	/^2        IF (ABS(D) .GE. TOL1) THEN ! Arrive here with d computed either from parabolic fit, or$/;"	l	subroutine:BRENTMINGB	file:
2	optim.odesd.f	/^2     DO 17 K=1,KMAX$/;"	l	subroutine:BSSTEP	file:
2	optim.pyg.f90	/^2        IF (ABS(D) >= TOL1) THEN ! Arrive here with d computed either from parabolic fit, or$/;"	l	subroutine:BRENTMIN	file:
20	func.f90	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	func.f90	/^20    CONTINUE$/;"	l	subroutine:UPPERCASE	file:
20	func.f90	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	func.f90	/^20    LAST=M+131$/;"	l	file:
20	g.Alglue.f	/^   20 k = (i+j)\/2$/;"	l	subroutine:seval	file:
20	g.CSMinit.f90	/^20    CALL CSMPOTGRAD(X,AA,ENEW,.TRUE.,GSAVE)$/;"	l	subroutine:CSMMIN	file:
20	g.EAMal.f	/^   20 k = (i+j)\/2$/;"	l	subroutine:seval1	file:
20	g.Farkas.f	/^20    continue$/;"	l	subroutine:ALINIT	file:
20	g.Farkas.f	/^20    continue$/;"	l	subroutine:NIINIT	file:
20	g.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2C	file:
20	g.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMEC	file:
20	g.convert.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	g.dbrent.f	/^20      IF(DABS(D).GE.QMAX1) THEN$/;"	l	function:DBRENT	file:
20	g.dgetrf.f	/^   20       CONTINUE$/;"	l	function:ILAENV	file:
20	g.dgetrf.f	/^   20       CONTINUE$/;"	l	subroutine:DLASWP	file:
20	g.dgetrf.f	/^   20    CONTINUE$/;"	l	subroutine:DGETRF	file:
20	g.dgetri.f	/^   20       CONTINUE$/;"	l	subroutine:DTRTRI	file:
20	g.dgetri.f	/^   20    CONTINUE$/;"	l	subroutine:DGETRI	file:
20	g.dgetri.f	/^   20    CONTINUE$/;"	l	subroutine:DTRTI2	file:
20	g.dlamch.f	/^   20    CONTINUE$/;"	l	subroutine:DLAMC1	file:
20	g.dlamch.f	/^   20    CONTINUE$/;"	l	subroutine:DLAMC2	file:
20	g.dlamch.f	/^   20    CONTINUE$/;"	l	subroutine:DLAMC4	file:
20	g.dlamch.f	/^   20 CONTINUE$/;"	l	subroutine:DLAMC5	file:
20	g.dlsode.f	/^   20       CONTINUE$/;"	l	subroutine:DGBSL	file:
20	g.dlsode.f	/^   20    CONTINUE$/;"	l	subroutine:DGESL	file:
20	g.dlsode.f	/^   20 CONTINUE$/;"	l	subroutine:DGBFA	file:
20	g.dlsode.f	/^   20 DMAX = ABS(DX(1))$/;"	l	function:IDAMAX	file:
20	g.dlsode.f	/^   20 M = MOD(N,4)$/;"	l	subroutine:MYDAXPY	file:
20	g.dlsode.f	/^   20 M = MOD(N,5)$/;"	l	function:MYDDOT	file:
20	g.dlsode.f	/^   20 M = MOD(N,5)$/;"	l	subroutine:DSCAL	file:
20	g.dlsode.f	/^ 20     DKY(I) = C*YH(I,L)$/;"	l	subroutine:DINTDY	file:
20	g.dlsode.f	/^ 20     ISAV(I) = ILS(I)$/;"	l	subroutine:DSRCOM	file:
20	g.dlsode.f	/^ 20   CONTINUE$/;"	l	subroutine:DEWSET	file:
20	g.dlsode.f	/^ 20   FORMAT(6X,'In above message,  I1 =',I10)$/;"	l	subroutine:XERRWD	file:
20	g.dlsode.f	/^ 20   IF (NEQ(1) .LE. 0) GO TO 604$/;"	l	subroutine:DLSODE	file:
20	g.eigsrt.f	/^20          CONTINUE$/;"	l	subroutine:EIGSRT	file:
20	g.fedor.f	/^   20 C(4,M)=G*C(3,M-1)+2.d0*(C(3,M)+C(3,M+1))$/;"	l	subroutine:CUBSPL	file:
20	g.fedor.f	/^   20 IF (X .GE. XT(IHI))              GO TO 40$/;"	l	subroutine:INTERV	file:
20	g.fedor.f	/^   20 continue$/;"	l	function:ut	file:
20	g.fedor.f	/^  20      continue$/;"	l	subroutine:hmatd	file:
20	g.fedor.f	/^  20    continue$/;"	l	subroutine:dipoles	file:
20	g.finalio.f	/^20          FORMAT('Si',3F20.10)$/;"	l	subroutine:FINALIO	file:
20	g.input.f	/^20    CONTINUE$/;"	l	subroutine:MYUPCASE	file:
20	g.input.f	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	g.input.f	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	g.input.f	/^20    LAST=M+79$/;"	l	file:
20	g.io1.f	/^20       FORMAT('Initial coordinates:')$/;"	l	subroutine:IO1	file:
20	g.linmin.f	/^20    CONTINUE$/;"	l	subroutine:LINMIN	file:
20	g.ljcapsidmodule.f90	/^20    J = J - M$/;"	l	subroutine:SVERT	file:
20	g.mc.F	/^20          CONTINUE$/;"	l	subroutine:REN	file:
20	g.mc.F	/^20          FORMAT('[',I2,']Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
20	g.mc.F	/^20    CONTINUE $/;"	l	subroutine:NEWRES	file:
20	g.minperm.f	/^   20 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
20	g.minperm.f	/^20               l2 = 2*l$/;"	l	subroutine:minperm	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGBMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGEMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSBMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSPMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSYMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBSV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPSV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRMV	file:
20	g.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRSV	file:
20	g.mylapack.f	/^   20          CONTINUE$/;"	l	subroutine:DTBSV	file:
20	g.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR	file:
20	g.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR2	file:
20	g.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR	file:
20	g.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR2	file:
20	g.mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DPBTRF	file:
20	g.mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DSYR	file:
20	g.mylapack.f	/^   20     CONTINUE$/;"	l	subroutine:SGER	file:
20	g.mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTF2	file:
20	g.mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTRS	file:
20	g.mylapack.f	/^   20 CONTINUE$/;"	l	function:LCE	file:
20	g.mylapack.f	/^   20 CONTINUE$/;"	l	function:LDE	file:
20	g.mylapack.f	/^   20 CONTINUE$/;"	l	function:LSE	file:
20	g.mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SMAKE	file:
20	g.mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SOPEN	file:
20	g.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK1	file:
20	g.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK2	file:
20	g.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK4	file:
20	g.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK5	file:
20	g.mylapack.f	/^   20 J = J*MJ$/;"	l	function:SBEG	file:
20	g.mylapack.f	/^   20 NL = I$/;"	l	subroutine:SMESSG	file:
20	g.mylapack.f	/^   20 NN = NN + 1$/;"	l	subroutine:SCHCK3	file:
20	g.mylbfgs.f	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
20	g.orient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	g.ptgrp.f	/^ 20   CONTINUE$/;"	l	subroutine:ROTM	file:
20	g.ptgrp.f	/^20                      CONTINUE$/;"	l	subroutine:PTGRP	file:
20	g.ptgrp.f	/^20          CONTINUE$/;"	l	subroutine:MATMUL	file:
20	g.ptgrp.f	/^20    B(I,I)=ONE$/;"	l	subroutine:EIG	file:
20	g.saveit.f	/^20          CONTINUE$/;"	l	subroutine:A9INTESAVEIT	file:
20	g.saveit.f	/^20          CONTINUE$/;"	l	subroutine:GSAVEIT	file:
20	g.sort2.f	/^20    CONTINUE$/;"	l	subroutine:GSORT2	file:
20	g.sort3.f	/^20    CONTINUE$/;"	l	subroutine:SORT3	file:
20	g.sort4.f	/^20    CONTINUE$/;"	l	subroutine:SORT4	file:
20	g.tn.f	/^   20 M = MOD(N,4)$/;"	l	subroutine:DXPY	file:
20	g.tn.f	/^20       CONTINUE$/;"	l	subroutine:MODLNP	file:
20	g.tn.f	/^20      IF (FU .GT. FMIN) GO TO 60$/;"	l	subroutine:GETPTC	file:
20	g.tn.f	/^20    CONTINUE$/;"	l	subroutine:GTIMS	file:
20	g.tn.f	/^20    CONTINUE$/;"	l	subroutine:INITP3	file:
20	g.tn.f	/^20    CONTINUE$/;"	l	subroutine:LINDER	file:
20	g.tn.f	/^20    CONTINUE$/;"	l	subroutine:LMQN	file:
20	g.tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NDHESS	file:
20	g.tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NSHESS	file:
20	g.welch.f	/^   20          continue$/;"	l	subroutine:dgefa	file:
20	g.welch.f	/^   20       continue$/;"	l	subroutine:dgedi	file:
20	g.welch.f	/^   20 continue$/;"	l	subroutine:dgeco	file:
20	g.zwischen.f	/^20    CONTINUE$/;"	l	subroutine:ZWISCHEN	file:
20	lbfgs.f	/^   20    CONTINUE$/;"	l	subroutine:MCSRCH	file:
20	lbfgs.f	/^   20 m = mod(n,4)$/;"	l	subroutine:daxpy	file:
20	lbfgs.f	/^   20 m = mod(n,5)$/;"	l	function:ddot	file:
20	lbfgs.f	/^ 20   FORMAT('  N=',I5,'   NUMBER OF CORRECTIONS=',I2,$/;"	l	subroutine:LB1	file:
20	mylbfgs.old.f90	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
20	optim.EYtrap.f	/^20       CONTINUE$/;"	l	subroutine:EYDTRAP	file:
20	optim.EYtrap.f	/^20    CONTINUE$/;"	l	subroutine:EYETRAP	file:
20	optim.JM.f	/^20    CONTINUE $/;"	l	subroutine:JM3	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2C	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2P	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JME	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMEC	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMECC	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMEP	file:
20	optim.SW.f	/^20    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
20	optim.SiO2.f	/^   20 CONTINUE$/;"	l	subroutine:SIO2NDHESS	file:
20	optim.SiO2.f	/^   20 CONTINUE$/;"	l	subroutine:SIO2NSHESS	file:
20	optim.adm.f	/^20     CONTINUE$/;"	l	subroutine:ADM	file:
20	optim.amb_natinterns.f90	/^ 20   CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
20	optim.amber.f	/^20    CONTINUE$/;"	l	subroutine:aparams	file:
20	optim.amber.f	/^20    CONTINUE$/;"	l	subroutine:aread	file:
20	optim.amber.f	/^20    CONTINUE$/;"	l	subroutine:pderivs	file:
20	optim.axdiff.f	/^20    CONTINUE $/;"	l	subroutine:AXDIFF	file:
20	optim.axpairs.f	/^20    CONTINUE$/;"	l	subroutine:AXPAIRS	file:
20	optim.aziz.f	/^20    CONTINUE$/;"	l	subroutine:AZIZ	file:
20	optim.bfgsts.f	/^20          READ(45,*,END=10) EVALMIN$/;"	l	subroutine:BFGSTS	file:
20	optim.bfgsts.f	/^20    CONTINUE$/;"	l	subroutine:ITEIG	file:
20	optim.bfgsts.f	/^20    DUMMY1=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
20	optim.c60diff.f	/^20    CONTINUE$/;"	l	subroutine:C60DIFF	file:
20	optim.c60p.f	/^20    CONTINUE$/;"	l	subroutine:C60P	file:
20	optim.connect.f	/^20                ESTART=EMIN(JDOING-1)$/;"	l	subroutine:CONNECT	file:
20	optim.connect.f	/^20    CONTINUE$/;"	l	subroutine:GETPERM	file:
20	optim.connect.f	/^20    CONTINUE$/;"	l	subroutine:STD_ORIENT	file:
20	optim.connect.f	/^20    CONTINUE$/;"	l	subroutine:STD_ORIENT2D	file:
20	optim.connect.f	/^20    IF (REDOPATH) THEN$/;"	l	subroutine:TSSEARCH	file:
20	optim.connect.f	/^20    OPEN(UNIT=35,STATUS='SCRATCH')$/;"	l	subroutine:REVERSEBLOCK	file:
20	optim.connect.f	/^20    REWIND(IUNIT)$/;"	l	subroutine:REVERSE	file:
20	optim.cubspl.f	/^   20    c(4,m) = g*c(3,m-1) + 2.*(c(3,m) + c(3,m+1))$/;"	l	subroutine:cubspl	file:
20	optim.dctrap.f	/^20       CONTINUE$/;"	l	subroutine:DCTRAP	file:
20	optim.dimer.f	/^ 20    format (5i2)$/;"	l	subroutine:dimer	file:
20	optim.dqag.f	/^   20    CALL XERPRN (' *  ', -1, TEMP(1:15) \/\/ TEMP(I:23), 72)$/;"	l	subroutine:XERMSG	file:
20	optim.dqag.f	/^   20    CONTINUE$/;"	l	subroutine:DQPSRT	file:
20	optim.dqag.f	/^   20    CONTINUE$/;"	l	subroutine:XERSVE	file:
20	optim.dqag.f	/^   20   CALL DQPSRT(LIMIT,LAST,MAXERR,ERRMAX,ELIST,IORD,NRMAX)$/;"	l	subroutine:DQAGE	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK15	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK21	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK31	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK41	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK51	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK61	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:XERPRN	file:
20	optim.dsygvx.f	/^   20       CONTINUE$/;"	l	subroutine:DSYEVX	file:
20	optim.dsygvx.f	/^   20    CONTINUE$/;"	l	subroutine:DLACPY	file:
20	optim.dtrap.f	/^20       CONTINUE$/;"	l	subroutine:DTRAP	file:
20	optim.efol.f90	/^20    FORMAT(' Updating structure with pseudo-Newton-Raphson steps.')$/;"	l	subroutine:EFOL	file:
20	optim.eig.f	/^20    CONTINUE$/;"	l	subroutine:EIG	file:
20	optim.escp.f	/^20    CONTINUE$/;"	l	subroutine:DSCP	file:
20	optim.escp.f	/^20    CONTINUE$/;"	l	subroutine:OESCP	file:
20	optim.etrap.f	/^20    CONTINUE$/;"	l	subroutine:ETRAP	file:
20	optim.g2special.f	/^20       NCOUNT=NCOUNT+1$/;"	l	subroutine:G2SPECIAL	file:
20	optim.greatcirc.f	/^ 20   IF (PV) THEN$/;"	l	subroutine:GCLBFGS	file:
20	optim.hybridmin.f	/^20          READ(45,*,END=10) EVALMIN$/;"	l	subroutine:HYBRIDMIN	file:
20	optim.input.f	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	optim.input.f	/^20    CONTINUE$/;"	l	subroutine:UPPERCASE	file:
20	optim.input.f	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	optim.input.f	/^20    LAST=M+131$/;"	l	file:
20	optim.intbfgsts.f	/^20          READ(45,*,END=10) EVALMIN$/;"	l	subroutine:INTBFGSTS	file:
20	optim.intlbfgs.f90	/^20 X(1:D) = X(1:D) + STP(1:D)*SEARCHSTEP(POINT,1:D)$/;"	l	subroutine:INTLBFGS	file:
20	optim.intlbfgslj.f90	/^20 X(1:D) = X(1:D) + STP(1:D)*SEARCHSTEP(POINT,1:D)$/;"	l	subroutine:INTLBFGSLJ	file:
20	optim.intxmylbfgs.f	/^20    CONTINUE$/;"	l	subroutine:INTXMYLBFGS	file:
20	optim.ions.f	/^20    CONTINUE$/;"	l	subroutine:IONS	file:
20	optim.latmin.f	/^20    CONTINUE$/;"	l	subroutine:C60PE	file:
20	optim.latmin.f	/^20    CONTINUE$/;"	l	subroutine:LATMIN	file:
20	optim.ljpshift.f	/^20    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
20	optim.mdiff.f	/^20    CONTINUE$/;"	l	subroutine:MDIFF	file:
20	optim.meccano.f90	/^20    CONTINUE$/;"	l	subroutine:MECBFGS	file:
20	optim.mied.f	/^20    CONTINUE$/;"	l	subroutine:MIED	file:
20	optim.mindist.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	optim.mindist.f	/^20    ENEW=DISTFUNC(X,R,R0,R1)$/;"	l	subroutine:MMYLBFGS	file:
20	optim.minperm.f	/^   20 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
20	optim.minperm.f	/^20               l2 = 2*l$/;"	l	subroutine:minperm	file:
20	optim.minpermrb.f90	/^20 CONTINUE$/;"	l	subroutine:MINPERMRB	file:
20	optim.mlatmin.f	/^20    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
20	optim.mlatmin.f	/^20    CONTINUE$/;"	l	subroutine:MLATMIN	file:
20	optim.mpdiff.f	/^20    CONTINUE$/;"	l	subroutine:MPDIFF	file:
20	optim.mpdiff.f	/^20    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
20	optim.msdiff.f	/^20    CONTINUE$/;"	l	subroutine:MSDIFF	file:
20	optim.mslatmin.f	/^20    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
20	optim.mslatmin.f	/^20    CONTINUE$/;"	l	subroutine:MSLATMIN	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGBMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGEMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSBMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSPMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSYMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBSV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPSV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRSV	file:
20	optim.mylapack.f	/^   20          CONTINUE$/;"	l	subroutine:DTBSV	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR2	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR2	file:
20	optim.mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DPBTRF	file:
20	optim.mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DSYR	file:
20	optim.mylapack.f	/^   20     CONTINUE$/;"	l	subroutine:SGER	file:
20	optim.mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTF2	file:
20	optim.mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTRS	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	function:LCE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	function:LDE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	function:LSE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SMAKE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SOPEN	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK1	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK2	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK4	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK5	file:
20	optim.mylapack.f	/^   20 J = J*MJ$/;"	l	function:SBEG	file:
20	optim.mylapack.f	/^   20 NL = I$/;"	l	subroutine:SMESSG	file:
20	optim.mylapack.f	/^   20 NN = NN + 1$/;"	l	subroutine:SCHCK3	file:
20	optim.mylbfgs.f	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
20	optim.myorient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	optim.oldneb.f	/^20    CONTINUE$/;"	l	subroutine:NEBBFGS	file:
20	optim.pertable.f	/^ 20         CONTINUE$/;"	l	subroutine:PERTABLE	file:
20	optim.potential.f	/^20       FORMAT(A,27X,F20.10)$/;"	l	subroutine:POTENTIAL	file:
20	optim.projh.f	/^   20          continue$/;"	l	subroutine:dgefa	file:
20	optim.projh.f	/^   20       continue$/;"	l	subroutine:dgedi	file:
20	optim.projh.f	/^   20 continue$/;"	l	subroutine:dgeco	file:
20	optim.rigidb.f90	/^20    CONTINUE$/;"	l	subroutine:CHECKDRVTS	file:
20	optim.rotcon.f	/^ 20   CONTINUE$/;"	l	subroutine:ROTCON	file:
20	optim.rotd.f	/^20    CONTINUE$/;"	l	subroutine:EPANIC	file:
20	optim.scdiff.f	/^20    CONTINUE$/;"	l	subroutine:SCDIFF	file:
20	optim.specialfuncts.f90	/^20             F1=PF$/;"	l	subroutine:LEGZO	file:
20	optim.symmetry.f	/^20    FORMAT(1X,F15.10)$/;"	l	subroutine:SYMMETRY	file:
20	optim.tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NDHESS	file:
20	optim.tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NSHESS	file:
20	optim.unmeccano.f90	/^20    CONTINUE$/;"	l	subroutine:UNMECBFGS	file:
20	optim.unresconnectsections.f	/^20    CONTINUE$/;"	l	subroutine:UNRESGUESSTSSEC	file:
20	optim.unresguessts.f	/^20    CONTINUE$/;"	l	subroutine:UNRESGUESSTS	file:
20	optim.unrestransform.f	/^   20  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
20	optim.xmylbfgs.f	/^20    CONTINUE$/;"	l	subroutine:XMYLBFGS	file:
20	pathsample.Cv.f	/^20    CONTINUE     $/;"	l	subroutine:CV	file:
20	pathsample.DOS.f	/^20    CONTINUE     $/;"	l	subroutine:DOS	file:
20	pathsample.Dijkstra.f90	/^20    CONTINUE$/;"	l	subroutine:SORT3	file:
20	pathsample.KMC.a2b.f	/^20    NSTEP=NSTEP+1.0D0$/;"	l	subroutine:KMCA2B	file:
20	pathsample.KMC.f	/^20       XNSTEP=XNSTEP+1.0D0$/;"	l	subroutine:KMC	file:
20	pathsample.KMCcommit.f	/^20       NSTEP=NSTEP+1$/;"	l	subroutine:KMCCOMMIT	file:
20	pathsample.cycle.f90	/^20    RANDOM=DPRAND()$/;"	l	subroutine:CYCLE	file:
20	pathsample.dsort.f	/^   20    CALL XERPRN (' *  ', -1, TEMP(1:15) \/\/ TEMP(I:23), 72)$/;"	l	subroutine:XERMSG	file:
20	pathsample.dsort.f	/^   20    CONTINUE$/;"	l	subroutine:XERSVE	file:
20	pathsample.dsort.f	/^   20 CONTINUE$/;"	l	subroutine:XERPRN	file:
20	pathsample.dsort.f	/^   20 IF (I .EQ. J) GO TO 60$/;"	l	subroutine:DSORT	file:
20	pathsample.eig.f	/^20    B(I,I)=ONE$/;"	l	subroutine:EIG	file:
20	pathsample.getupair.f90	/^20 CONTINUE$/;"	l	subroutine:GETUPAIR	file:
20	pathsample.input.f	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	pathsample.input.f	/^20    CONTINUE$/;"	l	subroutine:UPCASE	file:
20	pathsample.input.f	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	pathsample.input.f	/^20    LAST=M+79$/;"	l	file:
20	pathsample.mind.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	pathsample.mind.f	/^20    CALL DISTFUNC(X,R,R0,R1,NSIZE,ENEW,NATOMS)$/;"	l	subroutine:MMYLBFGS	file:
20	pathsample.mindist.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	pathsample.mindist.f	/^20    ENEW=DISTFUNC(X,R,R0,R1)$/;"	l	subroutine:MMYLBFGS	file:
20	pathsample.minperm.f	/^   20 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
20	pathsample.minperm.f	/^20               l2 = 2*l$/;"	l	subroutine:minperm	file:
20	pathsample.myorient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	pathsample.orient.f	/^20    CONTINUE$/;"	l	subroutine:ORIENT2D	file:
20	pathsample.orient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	pathsample.reweight.f	/^   20            CONTINUE $/;"	l	subroutine:DGETF2	file:
20	pathsample.reweight.f	/^   20          CONTINUE$/;"	l	function:DLANTR	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DGESVX	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DLAQGE	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DLASWP	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DLATRS	file:
20	pathsample.reweight.f	/^   20    CONTINUE$/;"	l	subroutine:DGEEQU	file:
20	pathsample.reweight.f	/^   20    CONTINUE$/;"	l	subroutine:DGERFS	file:
20	pathsample.reweight.f	/^   20    CONTINUE$/;"	l	subroutine:DGETRF	file:
20	pathsample.reweight.f	/^   20 CONTINUE$/;"	l	subroutine:DGECON	file:
20	pathsample.reweight.f	/^   20 CONTINUE$/;"	l	subroutine:DLACN2	file:
20	pathsample.reweight.f	/^   20 CONTINUE$/;"	l	subroutine:DLACON	file:
20	pathsample.sort.f	/^20    CONTINUE$/;"	l	subroutine:SORT	file:
20	pathsample.sort.f	/^20    CONTINUE$/;"	l	subroutine:SORT2	file:
20	pathsample.sort.f	/^20    CONTINUE$/;"	l	subroutine:SORT4	file:
20	pathsample.tssearch.f	/^20      TTSSEARCH=TTSSEARCH+TNEW-TINIT$/;"	l	subroutine:TSSEARCH	file:
200	func.f90	/^200   TERM=SPACE$/;"	l	file:
200	g.dgetrf.f	/^  200 CONTINUE$/;"	l	function:ILAENV	file:
200	g.dlsode.f	/^ 200  FAC = DVNORM (N, SAVF, EWT)$/;"	l	subroutine:DPREPJ	file:
200	g.dlsode.f	/^ 200  IF (ABS(RC-1.0D0) .GT. CCMAX) IPUP = MITER$/;"	l	subroutine:DSTODE	file:
200	g.dlsode.f	/^ 200  NSLAST = NST$/;"	l	subroutine:DLSODE	file:
200	g.dlsode.f	/^ 200  PC(1) = 1.0D0$/;"	l	subroutine:DCFODE	file:
200	g.input.f	/^200   TERM=SPACE$/;"	l	file:
200	g.io1.f	/^200      FORMAT(3F20.10)$/;"	l	subroutine:IO1	file:
200	g.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK1	file:
200	g.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK2	file:
200	g.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK3	file:
200	g.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK4	file:
200	g.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK5	file:
200	g.tn.f	/^200   E = B-A$/;"	l	subroutine:GETPTC	file:
200	lbfgs.f	/^ 200  FORMAT(\/' IFLAG= -1 ',\/' LINE SEARCH FAILED. SEE'$/;"	l	subroutine:LBFGS	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2C	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2CC	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2P	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3C	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3CC	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3P	file:
200	optim.axdiff.f	/^200   CONTINUE$/;"	l	subroutine:AXDIFF	file:
200	optim.aziz.f	/^200   CONTINUE$/;"	l	subroutine:AZIZ	file:
200	optim.c60diff.f	/^200   CONTINUE$/;"	l	subroutine:C60DIFF	file:
200	optim.c60p.f	/^200   CONTINUE$/;"	l	subroutine:C60P	file:
200	optim.dumpit.f	/^200   FORMAT('STEPS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
200	optim.get.natoms.inc.f90	/^200   CONTINUE$/;"	l	file:
200	optim.input.f	/^200   TERM=SPACE$/;"	l	file:
200	optim.ions.f	/^200   CONTINUE$/;"	l	subroutine:IONS	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK1	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK2	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK3	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK4	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK5	file:
200	optim.rotcon.f	/^ 200   FORMAT(' rotcon> Rotational constants (in cm-1) and principal moments of inertia: ')$/;"	l	subroutine:ROTCON	file:
200	optim.tcheck.f	/^200   IF (ISTATUS.LT.0) WTEST=.TRUE.$/;"	l	subroutine:TCHECK	file:
200	optim.unresconnectsections.f	/^200   CONTINUE$/;"	l	subroutine:UNRESGUESSTSSEC	file:
200	optim.unresguessts.f	/^200   CONTINUE$/;"	l	subroutine:UNRESGUESSTS	file:
200	optim.utils.f	/^ 200   IF (LGE(C, '0') .AND. LLE(C,'9')) THEN$/;"	l	function:ATOI	file:
200	pathsample.amhdump.f90	/^200     CONTINUE$/;"	l	subroutine:AMHQ	file:
200	pathsample.amhdump.f90	/^200     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
200	pathsample.amhdump.f90	/^200     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
200	pathsample.dsort.f	/^  200    CONTINUE$/;"	l	subroutine:DSORT	file:
200	pathsample.input.f	/^200   TERM=SPACE$/;"	l	file:
200	pathsample.reweight.f	/^  200          CONTINUE$/;"	l	function:DLANTR	file:
201	optim.amber.f	/^201      CONTINUE$/;"	l	subroutine:secondderivs	file:
201	optim.fetchz.f	/^201               format (25(i2,1x))$/;"	l	subroutine:FETCHZ	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHDUMP	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHQ	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHQCONT	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHRELQ	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHRMSD	file:
205	pathsample.amhdump.f90	/^205     CONTINUE$/;"	l	subroutine:AMHQ	file:
205	pathsample.amhdump.f90	/^205     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
205	pathsample.amhdump.f90	/^205     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
206	pathsample.amhdump.f90	/^206        CONTINUE$/;"	l	subroutine:AMHQ	file:
206	pathsample.amhdump.f90	/^206        CONTINUE$/;"	l	subroutine:AMHQCONT	file:
206	pathsample.amhdump.f90	/^206        CONTINUE$/;"	l	subroutine:AMHRELQ	file:
21	fmt.inc.f90	/^21 FORMAT(A,F12.5,A,F12.5,A,F12.5,A,F12.5) $/;"	l	file:
21	g.EAMal.f	/^21      CONTINUE$/;"	l	subroutine:EAMal	file:
21	g.fedor.f	/^   21 IF(N.EQ.3.AND.IBCBEG.EQ.0) GO TO 22$/;"	l	subroutine:CUBSPL	file:
21	g.mc.F	/^21          FORMAT('Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
21	g.mc.sim.f90	/^21         FORMAT('Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
21	g.minperm.f	/^21               if (l2 .le. m) THEN ! split IF statements to avoid a segmentation fault$/;"	l	subroutine:minperm	file:
21	optim.JM.f	/^21    CONTINUE$/;"	l	subroutine:JM2CC	file:
21	optim.JM.f	/^21    CONTINUE$/;"	l	subroutine:JMEP	file:
21	optim.aziz.f	/^21    CONTINUE$/;"	l	subroutine:AZIZ	file:
21	optim.c60diff.f	/^21    CONTINUE$/;"	l	subroutine:C60DIFF	file:
21	optim.c60p.f	/^21    CONTINUE$/;"	l	subroutine:C60P	file:
21	optim.connect.f	/^21                ESTART=EMIN(JDOING)$/;"	l	subroutine:CONNECT	file:
21	optim.connect.f	/^21    IF (DMIN.GT.0.1D0) THEN$/;"	l	subroutine:GETPERM	file:
21	optim.cubspl.f	/^   21 if (n .eq. 3 .and. ibcbeg .eq. 0) go to 22$/;"	l	subroutine:cubspl	file:
21	optim.emie.f	/^21    CONTINUE$/;"	l	subroutine:EMIE	file:
21	optim.escp.f	/^21    CONTINUE$/;"	l	subroutine:OESCP	file:
21	optim.minperm.f	/^21               if (l2 .le. m) THEN ! split IF statements to avoid a segmentation fault$/;"	l	subroutine:minperm	file:
21	optim.mlatmin.f	/^21          CONTINUE$/;"	l	subroutine:MLATDIFF	file:
21	optim.msevb.f90	/^21        continue$/;"	l	subroutine:jacobi	file:
21	optim.mslatmin.f	/^21          CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
21	pathsample.minperm.f	/^21               if (l2 .le. m) THEN ! split IF statements to avoid a segmentation fault$/;"	l	subroutine:minperm	file:
210	g.Natb.f	/^ 210             CONTINUE$/;"	l	subroutine:entots	file:
210	g.dlsode.f	/^ 210      PC(I) = PC(I-1) + FNQ*PC(I)$/;"	l	subroutine:DCFODE	file:
210	g.dlsode.f	/^ 210      YH1(I) = YH1(I) + YH1(I+NYH)$/;"	l	subroutine:DSTODE	file:
210	g.dlsode.f	/^ 210  IF ((TN - TOUT)*H .LT. 0.0D0) GO TO 250$/;"	l	subroutine:DLSODE	file:
210	g.io1.f	/^210      FORMAT('Initial smallest radius=',F15.5,' with shrink factor='$/;"	l	subroutine:IO1	file:
210	g.mylapack.f	/^  210            CONTINUE$/;"	l	subroutine:SCHCK3	file:
210	g.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK1	file:
210	g.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK2	file:
210	g.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK4	file:
210	g.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK5	file:
210	g.tn.f	/^210   IF (STEP .LT. SCXBND) GO TO 220$/;"	l	subroutine:GETPTC	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3C	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3CC	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3P	file:
210	optim.Natb.f	/^ 210             CONTINUE$/;"	l	subroutine:entots	file:
210	optim.axdiff.f	/^210   CONTINUE$/;"	l	subroutine:AXDIFF	file:
210	optim.dimer.f	/^210       continue$/;"	l	subroutine:fdimer	file:
210	optim.dumpit.f	/^210   FORMAT('DUMPVECTOR')$/;"	l	subroutine:DUMPIT	file:
210	optim.efol.f90	/^210         FORMAT(' Mode ',I4,' will be searched uphill. Eigenvalue=',4X,F19.10)$/;"	l	subroutine:EFOL	file:
210	optim.mylapack.f	/^  210            CONTINUE$/;"	l	subroutine:SCHCK3	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK1	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK2	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK4	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK5	file:
210	optim.symmetry.f	/^210            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
210	pathsample.amhdump.f90	/^210       CONTINUE$/;"	l	subroutine:AMHQ	file:
210	pathsample.amhdump.f90	/^210       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
210	pathsample.amhdump.f90	/^210       CONTINUE$/;"	l	subroutine:AMHRELQ	file:
210	pathsample.reweight.f	/^  210          CONTINUE$/;"	l	function:DLANTR	file:
211	optim.bfgsts.f	/^211         READ(44,*,END=111) EVALMIN$/;"	l	subroutine:BFGSTS	file:
211	optim.emie.f	/^211   CONTINUE$/;"	l	subroutine:EMIE	file:
211	optim.hybridmin.f	/^211         READ(44,*,END=111) EVALMIN$/;"	l	subroutine:HYBRIDMIN	file:
211	optim.intbfgsts.f	/^211         READ(44,*,END=111) EVALMIN$/;"	l	subroutine:INTBFGSTS	file:
211	optim.miel.f	/^211   CONTINUE$/;"	l	subroutine:MIEL	file:
211	optim.read.odata.inc.f90	/^211      CONTINUE$/;"	l	file:
215	g.dlsode.f	/^ 215    CONTINUE$/;"	l	subroutine:DSTODE	file:
22	fmt.inc.f90	/^22 FORMAT((3(A,G20.10)))$/;"	l	file:
22	g.Alglue.f	/^22    CONTINUE$/;"	l	subroutine:ALGLUE	file:
22	g.EAMal.f	/^22         CONTINUE$/;"	l	subroutine:EAMal	file:
22	g.Farkas.f	/^22    CONTINUE$/;"	l	subroutine:FARKAS	file:
22	g.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMEC	file:
22	g.Mgglue.f	/^22    CONTINUE$/;"	l	subroutine:MGGLUE	file:
22	g.Pbglue.f	/^22    CONTINUE$/;"	l	subroutine:PBGLUE	file:
22	g.fedor.f	/^   22 C(2,N)=2.d0*C(4,N)$/;"	l	subroutine:CUBSPL	file:
22	g.fedor.f	/^   22 continue$/;"	l	function:ut	file:
22	g.fedor.f	/^  22      continue$/;"	l	subroutine:hmatd	file:
22	g.fedor.f	/^  22    continue$/;"	l	subroutine:dipoles	file:
22	optim.Gupta.f	/^22    CONTINUE$/;"	l	subroutine:GUPTA	file:
22	optim.JM.f	/^22       CONTINUE$/;"	l	subroutine:JM2CC	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JME	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMEC	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMECC	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMEP	file:
22	optim.axpairs.f	/^22    CONTINUE$/;"	l	subroutine:AXPAIRS	file:
22	optim.aziz.f	/^22       CONTINUE$/;"	l	subroutine:AZIZ	file:
22	optim.c60diff.f	/^22       CONTINUE$/;"	l	subroutine:C60DIFF	file:
22	optim.c60p.f	/^22       CONTINUE$/;"	l	subroutine:C60P	file:
22	optim.connect.f	/^22          CONTINUE$/;"	l	subroutine:CLEANUP	file:
22	optim.connect.f	/^22    CALL TSSEARCH(JDOING,JDOING+1,Q,FIN,BULKT,DTHRESH,FIXD,NATOMS,NIMAGESAVE,PTEST,NSTEPS,FILTH,FILTHSTR,MUPDATE,NSTEPMIN,$/;"	l	subroutine:CONNECT	file:
22	optim.cubspl.f	/^   22 c(2,n) = 2.*c(4,n)$/;"	l	subroutine:cubspl	file:
22	optim.keyword.f	/^22       CONTINUE$/;"	l	subroutine:KEYWORD	file:
22	optim.mlatmin.f	/^22    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
22	optim.mpdiff.f	/^22    CONTINUE$/;"	l	subroutine:MPDIFF	file:
22	optim.mpdiff.f	/^22    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
22	optim.msdiff.f	/^22    CONTINUE$/;"	l	subroutine:MSDIFF	file:
22	optim.msevb.f90	/^22      continue$/;"	l	subroutine:jacobi	file:
22	optim.mslatmin.f	/^22    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
220	g.dlsode.f	/^ 220      ELCO(I,NQ) = PC(I)\/PC(2)$/;"	l	subroutine:DCFODE	file:
220	g.dlsode.f	/^ 220      WM(I+J1) = (FTEM(I) - SAVF(I))*FAC$/;"	l	subroutine:DPREPJ	file:
220	g.dlsode.f	/^ 220  M = 0$/;"	l	subroutine:DSTODE	file:
220	g.dlsode.f	/^ 220  TP = TN - HU*(1.0D0 + 100.0D0*UROUND)$/;"	l	subroutine:DLSODE	file:
220	g.mylapack.f	/^  220         CONTINUE$/;"	l	subroutine:SCHCK3	file:
220	g.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK1	file:
220	g.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK2	file:
220	g.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK4	file:
220	g.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK5	file:
220	g.tn.f	/^220   U = STEP$/;"	l	subroutine:GETPTC	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3C	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3CC	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3P	file:
220	optim.axdiff.f	/^220         CONTINUE$/;"	l	subroutine:AXDIFF	file:
220	optim.dumpit.f	/^220   FORMAT('GRADIENTS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
220	optim.mylapack.f	/^  220         CONTINUE$/;"	l	subroutine:SCHCK3	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK1	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK2	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK4	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK5	file:
220	optim.symmetry.f	/^220                  FORMAT(2I3,F15.7,100I3)$/;"	l	subroutine:SYMMETRY	file:
220	optim.tcheck.f	/^220      DO 280 J5=LBOUND,UBOUND$/;"	l	subroutine:TCHECK	file:
220	pathsample.reweight.f	/^  220          CONTINUE$/;"	l	function:DLANTR	file:
221	g.Natb.f	/^ 221              kkk=kkk+k$/;"	l	subroutine:entots	file:
221	optim.Natb.f	/^ 221              kkk=kkk+k$/;"	l	subroutine:entots	file:
222	keyword.ps.f90	/^222      CONTINUE$/;"	l	file:
222	optim.connect.f	/^222            CONTINUE$/;"	l	subroutine:CONNECT	file:
222	optim.connect.f	/^222      READ(81,'(A80)',END=444) DSTRING$/;"	l	subroutine:ADDMIN	file:
222	pathsample.Dijinit.f90	/^222   LJ1=LOCATIONSTART(J1)$/;"	l	subroutine:DIJINIT	file:
222	pathsample.Dijinitfly.f90	/^222 LJ1=LOCATIONSTART(J1)$/;"	l	subroutine:DIJINITFLY	file:
222	pathsample.keyword.f90	/^222      CONTINUE$/;"	l	subroutine:KEYWORD	file:
223	g.Natb.f	/^ 223           CONTINUE$/;"	l	subroutine:entots	file:
223	optim.Natb.f	/^ 223           CONTINUE$/;"	l	subroutine:entots	file:
23	fmt.inc.f90	/^23 FORMAT (A,I6,A,F8.4,A,F8.4)$/;"	l	file:
23	g.Alglue.f	/^23       CONTINUE$/;"	l	subroutine:ALGLUE	file:
23	g.Farkas.f	/^23       CONTINUE$/;"	l	subroutine:FARKAS	file:
23	g.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMEC	file:
23	g.Mgglue.f	/^23       CONTINUE$/;"	l	subroutine:MGGLUE	file:
23	g.Pbglue.f	/^23       CONTINUE$/;"	l	subroutine:PBGLUE	file:
23	g.mc.F	/^23          CONTINUE$/;"	l	subroutine:MC	file:
23	g.mc.sim.f90	/^23          CONTINUE$/;"	l	subroutine:MC	file:
23	optim.Gupta.f	/^23       CONTINUE$/;"	l	subroutine:GUPTA	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JME	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMEC	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMECC	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMEP	file:
23	optim.axpairs.f	/^23       CONTINUE$/;"	l	subroutine:AXPAIRS	file:
23	optim.connect.f	/^23       CONTINUE$/;"	l	subroutine:CLEANUP	file:
23	optim.mlatmin.f	/^23       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
23	optim.mpdiff.f	/^23       CONTINUE$/;"	l	subroutine:MPDIFF	file:
23	optim.mpdiff.f	/^23       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
23	optim.msdiff.f	/^23       CONTINUE$/;"	l	subroutine:MSDIFF	file:
23	optim.msevb.f90	/^23      continue$/;"	l	subroutine:jacobi	file:
23	optim.mslatmin.f	/^23       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
230	g.dlsode.f	/^ 230    CONTINUE$/;"	l	subroutine:DCFODE	file:
230	g.dlsode.f	/^ 230    CONTINUE$/;"	l	subroutine:DPREPJ	file:
230	g.dlsode.f	/^ 230    Y(I) = YH(I,1)$/;"	l	subroutine:DSTODE	file:
230	g.dlsode.f	/^ 230  TCRIT = RWORK(1)$/;"	l	subroutine:DLSODE	file:
230	g.mylapack.f	/^  230            CONTINUE$/;"	l	subroutine:SCHCK2	file:
230	g.mylapack.f	/^  230         CONTINUE$/;"	l	subroutine:SCHCK3	file:
230	g.mylapack.f	/^  230        CONTINUE$/;"	l	subroutine:SCHCK5	file:
230	g.mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK1	file:
230	g.mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK4	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3C	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3CC	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3P	file:
230	optim.axdiff.f	/^230       CONTINUE$/;"	l	subroutine:AXDIFF	file:
230	optim.dumpit.f	/^230   FORMAT('VECTORS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
230	optim.mylapack.f	/^  230            CONTINUE$/;"	l	subroutine:SCHCK2	file:
230	optim.mylapack.f	/^  230         CONTINUE$/;"	l	subroutine:SCHCK3	file:
230	optim.mylapack.f	/^  230        CONTINUE$/;"	l	subroutine:SCHCK5	file:
230	optim.mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK1	file:
230	optim.mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK4	file:
230	pathsample.reweight.f	/^  230             CONTINUE$/;"	l	function:DLANTR	file:
231	optim.adm.f	/^231                 FORMAT(T3,' Atoms ',i2,' and ',i2,$/;"	l	subroutine:ADM	file:
231	optim.read.odata.inc.f90	/^231      CONTINUE$/;"	l	file:
235	g.mylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	lbfgs.f	/^ 235  FORMAT(\/' IFLAG= -2',\/' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:LBFGS	file:
235	mylbfgs.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	mylbfgs.old.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	optim.efol.f90	/^235   FORMAT(' Mean modulus of positive Hessian eigenvalues=',4X,F20.10,\/,&$/;"	l	subroutine:EFOL	file:
235	optim.greatcirc.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:GCLBFGS	file:
235	optim.intxmylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:INTXMYLBFGS	file:
235	optim.meccano.f90	/^235         FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/, &$/;"	l	subroutine:MECBFGS	file:
235	optim.mylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	optim.oldneb.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:NEBBFGS	file:
235	optim.unmeccano.f90	/^235         FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/, &$/;"	l	subroutine:UNMECBFGS	file:
235	optim.xmylbfgs.f	/^ 235              FORMAT('xmylbfgs> THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:XMYLBFGS	file:
24	g.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMEC	file:
24	g.fedor.f	/^   24 C(2,N)=3.d0*C(4,N)+C(3,N)\/2.d0*C(2,N)$/;"	l	subroutine:CUBSPL	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JME	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMEC	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMECC	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMEP	file:
24	optim.axpairs.f	/^24              CONTINUE$/;"	l	subroutine:AXPAIRS	file:
24	optim.connect.f	/^24          CONTINUE$/;"	l	subroutine:CLEANUP	file:
24	optim.cubspl.f	/^   24 c(2,n) = 3.*c(4,n) + c(3,n)\/2.*c(2,n)$/;"	l	subroutine:cubspl	file:
24	optim.keyword.f	/^24       CONTINUE$/;"	l	subroutine:KEYWORD	file:
24	optim.msevb.f90	/^24    continue$/;"	l	subroutine:jacobi	file:
240	g.dlsode.f	/^ 240  J = 3$/;"	l	subroutine:DPREPJ	file:
240	g.dlsode.f	/^ 240  TCRIT = RWORK(1)$/;"	l	subroutine:DLSODE	file:
240	g.mylapack.f	/^  240         CONTINUE$/;"	l	subroutine:SCHCK2	file:
240	g.mylapack.f	/^  240        CONTINUE$/;"	l	subroutine:SCHCK3	file:
240	g.mylapack.f	/^  240     CONTINUE$/;"	l	subroutine:SCHCK5	file:
240	g.mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK1	file:
240	g.mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK4	file:
240	g.mylbfgs.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	lbfgs.f	/^ 240  FORMAT(\/' IFLAG= -3',\/' IMPROPER INPUT PARAMETERS (N OR M',$/;"	l	subroutine:LBFGS	file:
240	mylbfgs.f90	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	mylbfgs.old.f90	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	optim.dumpit.f	/^240   FORMAT('SUMMARY',T15,I5)$/;"	l	subroutine:DUMPIT	file:
240	optim.greatcirc.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:GCLBFGS	file:
240	optim.intxmylbfgs.f	/^ 240        FORMAT('intxmylbfgs> IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:INTXMYLBFGS	file:
240	optim.meccano.f90	/^240  FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MECBFGS	file:
240	optim.mindist.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MMYLBFGS	file:
240	optim.mlatmin.f	/^240   CONTINUE$/;"	l	subroutine:MLATMIN	file:
240	optim.mslatmin.f	/^240   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
240	optim.mylapack.f	/^  240         CONTINUE$/;"	l	subroutine:SCHCK2	file:
240	optim.mylapack.f	/^  240        CONTINUE$/;"	l	subroutine:SCHCK3	file:
240	optim.mylapack.f	/^  240     CONTINUE$/;"	l	subroutine:SCHCK5	file:
240	optim.mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK1	file:
240	optim.mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK4	file:
240	optim.mylbfgs.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	optim.oldneb.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:NEBBFGS	file:
240	optim.tcheck.f	/^240         CONTINUE$/;"	l	subroutine:TCHECK	file:
240	optim.unmeccano.f90	/^240  FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:UNMECBFGS	file:
240	optim.xmylbfgs.f	/^ 240        FORMAT('xmylbfgs> IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:XMYLBFGS	file:
240	pathsample.mind.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MMYLBFGS	file:
240	pathsample.mindist.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MMYLBFGS	file:
240	pathsample.reweight.f	/^  240          CONTINUE$/;"	l	function:DLANTR	file:
241	optim.dumpit.f	/^241   FORMAT('D5H',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
242	optim.dumpit.f	/^242   FORMAT('OH',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
243	optim.dumpit.f	/^243   FORMAT('IH',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
244	optim.dumpit.f	/^244   FORMAT('TD',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
245	g.dlsode.f	/^ 245  HMX = ABS(TN) + ABS(H)$/;"	l	subroutine:DLSODE	file:
245	lbfgs.f	/^ 245  FORMAT(\/'  GTOL IS LESS THAN OR EQUAL TO 1.D-04',$/;"	l	subroutine:LBFGS	file:
245	optim.dumpit.f	/^245      FORMAT('TOSI',1X,4F15.8)$/;"	l	subroutine:DUMPIT	file:
245	optim.symmetry.f	/^245               CONTINUE$/;"	l	subroutine:SYMMETRY	file:
246	optim.intlbfgs.f90	/^246 CONTINUE$/;"	l	subroutine:CHECKREP	file:
246	optim.symmetry.f	/^246                  CONTINUE$/;"	l	subroutine:SYMMETRY	file:
247	optim.dumpit.f	/^247      FORMAT('WELCH',1X,4F15.8,' +++'\/'      ',4F15.8)$/;"	l	subroutine:DUMPIT	file:
248	optim.dumpit.f	/^248   FORMAT('2D')$/;"	l	subroutine:DUMPIT	file:
25	g.Ackland_wrapper.f	/^25       CONTINUE$/;"	l	subroutine:ACK	file:
25	g.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMEC	file:
25	g.dlsode.f	/^ 25     EWT(I) = RTOL(1)*ABS(YCUR(I)) + ATOL(I)$/;"	l	subroutine:DEWSET	file:
25	g.dlsode.f	/^ 25   N = NEQ(1)$/;"	l	subroutine:DLSODE	file:
25	g.fedor.f	/^   25 IF(IBCEND-1) 26,30,24$/;"	l	subroutine:CUBSPL	file:
25	g.tn.f	/^25    CONTINUE$/;"	l	subroutine:GETPTC	file:
25	optim.Ackland_wrapper.f	/^25    CONTINUE$/;"	l	subroutine:ACK	file:
25	optim.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMEC	file:
25	optim.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMECC	file:
25	optim.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMEP	file:
25	optim.amb_natinterns.f90	/^ 25   CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
25	optim.ambnatintern_extras.f90	/^ 25   CONTINUE$/;"	l	subroutine:GETDIHONLY	file:
25	optim.axpairs.f	/^25    CONTINUE$/;"	l	subroutine:AXPAIRS	file:
25	optim.c60p.f	/^25    CONTINUE$/;"	l	subroutine:C60P	file:
25	optim.cubspl.f	/^   25 if (ibcend-1)                     26,30,24$/;"	l	subroutine:cubspl	file:
25	optim.emie.f	/^25    CONTINUE$/;"	l	subroutine:EMIE	file:
25	optim.escp.f	/^25    CONTINUE$/;"	l	subroutine:OESCP	file:
25	optim.keyword.f	/^25         FORMAT(25(I2,1X))$/;"	l	subroutine:KEYWORD	file:
25	optim.latmin.f	/^25    CONTINUE$/;"	l	subroutine:C60PE	file:
25	optim.mlatmin.f	/^25    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
25	optim.mlatmin.f	/^25    CONTINUE$/;"	l	subroutine:MLATMIN	file:
25	optim.mpdiff.f	/^25    CONTINUE$/;"	l	subroutine:MPDIFF	file:
25	optim.mpdiff.f	/^25    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
25	optim.msdiff.f	/^25    CONTINUE$/;"	l	subroutine:MSDIFF	file:
25	optim.mslatmin.f	/^25    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
25	optim.mslatmin.f	/^25    CONTINUE$/;"	l	subroutine:MSLATMIN	file:
25	optim.read.odata.inc.f90	/^25         FORMAT(25(I2,1X))$/;"	l	file:
25	optim.rigidb.f90	/^25    CONTINUE$/;"	l	subroutine:CHECKDRVTS	file:
25	optim.unrescalcdihe.f	/^ 25   FORMAT(\/' RGYR: *** ERROR ***  All coordinates were missing'\/)$/;"	l	subroutine:UEDITRGYR	file:
25	pathsample.KMC.a2b.f	/^25             IF (P12P21.GT.PAIRTHRESH) THEN$/;"	l	subroutine:KMCA2B	file:
250	g.dlsode.f	/^ 250    J = J + NP1$/;"	l	subroutine:DPREPJ	file:
250	g.dlsode.f	/^ 250  CONTINUE$/;"	l	subroutine:DLSODE	file:
250	g.dlsode.f	/^ 250  DO 260 I = 1,N$/;"	l	subroutine:DSTODE	file:
250	g.mylapack.f	/^  250            CONTINUE$/;"	l	subroutine:SCHCK1	file:
250	g.mylapack.f	/^  250         CONTINUE$/;"	l	subroutine:SCHCK2	file:
250	g.mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK3	file:
250	g.mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK5	file:
250	g.mylapack.f	/^  250 CONTINUE$/;"	l	subroutine:SCHCK4	file:
250	g.ptgrp.f	/^250         IF (IREF.NE.0) THEN$/;"	l	subroutine:PTGRP	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3C	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3CC	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3P	file:
250	optim.axdiff.f	/^250     CONTINUE$/;"	l	subroutine:AXDIFF	file:
250	optim.dumpit.f	/^250   FORMAT('ADM',T15,I5)$/;"	l	subroutine:DUMPIT	file:
250	optim.mylapack.f	/^  250            CONTINUE$/;"	l	subroutine:SCHCK1	file:
250	optim.mylapack.f	/^  250         CONTINUE$/;"	l	subroutine:SCHCK2	file:
250	optim.mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK3	file:
250	optim.mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK5	file:
250	optim.mylapack.f	/^  250 CONTINUE$/;"	l	subroutine:SCHCK4	file:
250	optim.symmetry.f	/^250            IF (IREF.NE.0) THEN$/;"	l	subroutine:SYMMETRY	file:
250	optim.tcheck.f	/^250         CONTINUE$/;"	l	subroutine:TCHECK	file:
250	pathsample.reweight.f	/^  250          CONTINUE$/;"	l	function:DLANTR	file:
2504	g.Natb.f	/^ 2504              CONTINUE    $/;"	l	subroutine:entots	file:
2504	optim.Natb.f	/^ 2504              CONTINUE    $/;"	l	subroutine:entots	file:
253	optim.dumpit.f	/^253   FORMAT('SHIFTV',T15,G20.10)$/;"	l	subroutine:DUMPIT	file:
255	g.ptgrp.f	/^255            IF (IREF.NE.0) THEN$/;"	l	subroutine:PTGRP	file:
255	optim.symmetry.f	/^255               IF (IREF.NE.0) THEN$/;"	l	subroutine:SYMMETRY	file:
256	g.ptgrp.f	/^256               IF (IREF.EQ.0) THEN$/;"	l	subroutine:PTGRP	file:
256	optim.symmetry.f	/^256                  IF (IREF.EQ.0) THEN$/;"	l	subroutine:SYMMETRY	file:
2570	g.Natb.f	/^ 2570              grad(K)=GRD$/;"	l	subroutine:entots	file:
2570	optim.Natb.f	/^ 2570              grad(K)=GRD$/;"	l	subroutine:entots	file:
2572	g.Natb.f	/^ 2572              CONTINUE$/;"	l	subroutine:entots	file:
2572	optim.Natb.f	/^ 2572              CONTINUE$/;"	l	subroutine:entots	file:
2584	g.Natb.f	/^ 2584              CONTINUE$/;"	l	subroutine:entots	file:
2584	optim.Natb.f	/^ 2584              CONTINUE$/;"	l	subroutine:entots	file:
2585	g.Natb.f	/^ 2585            CONTINUE$/;"	l	subroutine:entots	file:
2585	optim.Natb.f	/^ 2585            CONTINUE$/;"	l	subroutine:entots	file:
2586	g.Natb.f	/^ 2586                 GRD=GRD+VT(L,NOC)*VT(M,NOC)*HDER(K,ML)$/;"	l	subroutine:entots	file:
2586	optim.Natb.f	/^ 2586                 GRD=GRD+VT(L,NOC)*VT(M,NOC)*HDER(K,ML)$/;"	l	subroutine:entots	file:
26	g.fedor.f	/^   26 IF(IBCBEG.GT.0) GO TO 22$/;"	l	subroutine:CUBSPL	file:
26	optim.cubspl.f	/^   26 if (ibcbeg .gt. 0)                go to 22$/;"	l	subroutine:cubspl	file:
26	pathsample.unresdump.f	/^26    CONTINUE$/;"	l	subroutine:UNRESREAD	file:
260	g.dlsode.f	/^ 260    ACOR(I) = 0.0D0$/;"	l	subroutine:DSTODE	file:
260	g.dlsode.f	/^ 260    RWORK(I+LEWT-1) = 1.0D0\/RWORK(I+LEWT-1)$/;"	l	subroutine:DLSODE	file:
260	g.mylapack.f	/^  260         CONTINUE$/;"	l	subroutine:SCHCK1	file:
260	g.mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK2	file:
260	g.mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK5	file:
260	g.mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK3	file:
260	g.mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK4	file:
260	g.ptgrp.f	/^260            FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:PTGRP	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3C	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3CC	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3P	file:
260	optim.axdiff.f	/^260   CONTINUE$/;"	l	subroutine:AXDIFF	file:
260	optim.dumpit.f	/^260      FORMAT('PARAMS',1X,3F20.10,3X,'+++',\/,7X,4F20.10)$/;"	l	subroutine:DUMPIT	file:
260	optim.mylapack.f	/^  260         CONTINUE$/;"	l	subroutine:SCHCK1	file:
260	optim.mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK2	file:
260	optim.mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK5	file:
260	optim.mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK3	file:
260	optim.mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK4	file:
260	optim.symmetry.f	/^260               FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:SYMMETRY	file:
260	optim.tcheck.f	/^260         CONTINUE$/;"	l	subroutine:TCHECK	file:
260	pathsample.amhdump.f90	/^260       CONTINUE$/;"	l	subroutine:AMHQ	file:
260	pathsample.amhdump.f90	/^260       CONTINUE$/;"	l	subroutine:AMHRELQ	file:
260	pathsample.amhdump.f90	/^260     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
260	pathsample.reweight.f	/^  260             CONTINUE$/;"	l	function:DLANTR	file:
2600	g.Natb.f	/^ 2600              CONTINUE$/;"	l	subroutine:entots	file:
2600	optim.Natb.f	/^ 2600              CONTINUE$/;"	l	subroutine:entots	file:
2605	g.Natb.f	/^ 2605                 KKK=KKK+K      $/;"	l	subroutine:entots	file:
2605	optim.Natb.f	/^ 2605                 KKK=KKK+K      $/;"	l	subroutine:entots	file:
2610	g.Natb.f	/^ 2610            IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
2610	optim.Natb.f	/^ 2610            IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
265	g.ptgrp.f	/^265               FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:PTGRP	file:
265	optim.dumpit.f	/^265   FORMAT('ALPHA',T15,3F20.10)$/;"	l	subroutine:DUMPIT	file:
265	optim.symmetry.f	/^265                  FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:SYMMETRY	file:
266	g.ptgrp.f	/^266               FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:PTGRP	file:
266	optim.symmetry.f	/^266                  FORMAT(' The principal axis has order ',I3,\/,$/;"	l	subroutine:SYMMETRY	file:
2660	g.Natb.f	/^ 2660              DJ(L)=0.D0$/;"	l	subroutine:entots	file:
2660	optim.Natb.f	/^ 2660              DJ(L)=0.D0$/;"	l	subroutine:entots	file:
2670	g.Natb.f	/^ 2670         IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
2670	optim.Natb.f	/^ 2670         IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
2680	g.Natb.f	/^ 2680        CONTINUE$/;"	l	subroutine:entots	file:
2680	optim.Natb.f	/^ 2680        CONTINUE$/;"	l	subroutine:entots	file:
2682	g.Natb.f	/^ 2682           IJQ=IJQ+3$/;"	l	subroutine:entots	file:
2682	optim.Natb.f	/^ 2682           IJQ=IJQ+3$/;"	l	subroutine:entots	file:
27	g.ptgrp.f	/^27      CONTINUE$/;"	l	subroutine:SIAZ	file:
27	optim.siaz.f	/^27      CONTINUE$/;"	l	subroutine:SIAZ	file:
270	g.dlsode.f	/^ 270  IF (MITER .NE. 0) GO TO 350$/;"	l	subroutine:DSTODE	file:
270	g.dlsode.f	/^ 270  TOLSF = UROUND*DVNORM (N, RWORK(LYH), RWORK(LEWT))$/;"	l	subroutine:DLSODE	file:
270	g.mylapack.f	/^  270         CONTINUE$/;"	l	subroutine:SCHCK1	file:
270	g.mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK2	file:
270	g.mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK5	file:
270	g.mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK3	file:
270	g.mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK4	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3C	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3CC	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3P	file:
270	optim.axdiff.f	/^270           CONTINUE$/;"	l	subroutine:AXDIFF	file:
270	optim.dumpit.f	/^270      FORMAT('POINTS')$/;"	l	subroutine:DUMPIT	file:
270	optim.mylapack.f	/^  270         CONTINUE$/;"	l	subroutine:SCHCK1	file:
270	optim.mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK2	file:
270	optim.mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK5	file:
270	optim.mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK3	file:
270	optim.mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK4	file:
270	optim.symmetry.f	/^270            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
270	optim.tcheck.f	/^270         CONTINUE$/;"	l	subroutine:TCHECK	file:
270	pathsample.amhdump.f90	/^270       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
270	pathsample.amhdump.f90	/^270      CONTINUE$/;"	l	subroutine:AMHQ	file:
270	pathsample.amhdump.f90	/^270      CONTINUE$/;"	l	subroutine:AMHRELQ	file:
270	pathsample.reweight.f	/^  270          CONTINUE$/;"	l	function:DLANTR	file:
271	optim.read.odata.inc.f90	/^271      CONTINUE$/;"	l	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3C	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3CC	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3P	file:
275	optim.axdiff.f	/^275           CONTINUE$/;"	l	subroutine:AXDIFF	file:
275	optim.dumpit.f	/^275      FORMAT('VARIABLES')$/;"	l	subroutine:DUMPIT	file:
28	g.fedor.f	/^   28 G=-1.d0\/C(4,N-1)$/;"	l	subroutine:CUBSPL	file:
28	g.ptgrp.f	/^28         CONTINUE$/;"	l	subroutine:SIAZ	file:
28	optim.cubspl.f	/^   28 g = -1.\/c(4,n-1)$/;"	l	subroutine:cubspl	file:
28	optim.miel.f	/^28       CONTINUE$/;"	l	subroutine:MIEL	file:
28	optim.scl.f	/^28    CONTINUE$/;"	l	subroutine:SCL	file:
28	optim.siaz.f	/^28         CONTINUE$/;"	l	subroutine:SIAZ	file:
280	g.dlsode.f	/^ 280  IF ((TN + H) .NE. TN) GO TO 290$/;"	l	subroutine:DLSODE	file:
280	g.mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK2	file:
280	g.mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK5	file:
280	g.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK1	file:
280	g.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK3	file:
280	g.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK4	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3C	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3CC	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3P	file:
280	optim.axdiff.f	/^280       CONTINUE$/;"	l	subroutine:AXDIFF	file:
280	optim.mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK2	file:
280	optim.mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK5	file:
280	optim.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK1	file:
280	optim.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK3	file:
280	optim.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK4	file:
280	optim.symmetry.f	/^280         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
280	optim.tcheck.f	/^280      CONTINUE$/;"	l	subroutine:TCHECK	file:
280	pathsample.amhdump.f90	/^280        CONTINUE$/;"	l	subroutine:AMHQ	file:
280	pathsample.amhdump.f90	/^280        CONTINUE$/;"	l	subroutine:AMHQCONT	file:
280	pathsample.amhdump.f90	/^280        CONTINUE$/;"	l	subroutine:AMHRELQ	file:
280	pathsample.reweight.f	/^  280    CONTINUE$/;"	l	function:DLANTR	file:
281	optim.keyword.f	/^281      CONTINUE $/;"	l	subroutine:KEYWORD	file:
29	g.fedor.f	/^   29 C(4,N)=G*C(3,N-1)+C(4,N)$/;"	l	subroutine:CUBSPL	file:
29	optim.cubspl.f	/^   29 c(4,n) = g*c(3,n-1) + c(4,n)$/;"	l	subroutine:cubspl	file:
29	optim.miel.f	/^29    CONTINUE$/;"	l	subroutine:MIEL	file:
29	optim.scl.f	/^29       CONTINUE$/;"	l	subroutine:SCL	file:
290	g.dlsode.f	/^ 290    Y(I) = SAVF(I) - ACOR(I)$/;"	l	subroutine:DSTODE	file:
290	g.dlsode.f	/^ 290  CONTINUE$/;"	l	subroutine:DLSODE	file:
290	g.mylapack.f	/^  290        CONTINUE$/;"	l	subroutine:SCHCK3	file:
290	g.mylapack.f	/^  290    CONTINUE$/;"	l	subroutine:SCHCK4	file:
290	g.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK1	file:
290	g.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK2	file:
290	g.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK5	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3C	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3CC	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3P	file:
290	optim.axdiff.f	/^290         CONTINUE$/;"	l	subroutine:AXDIFF	file:
290	optim.efol.f90	/^290         FORMAT(79('-'))$/;"	l	subroutine:EFOL	file:
290	optim.mylapack.f	/^  290        CONTINUE$/;"	l	subroutine:SCHCK3	file:
290	optim.mylapack.f	/^  290    CONTINUE$/;"	l	subroutine:SCHCK4	file:
290	optim.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK1	file:
290	optim.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK2	file:
290	optim.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK5	file:
290	optim.tcheck.f	/^290         FORMAT(I3,F20.10)$/;"	l	subroutine:TCHECK	file:
290	pathsample.reweight.f	/^  290          CONTINUE$/;"	l	function:DLANTR	file:
291	optim.efol.f90	/^291         FORMAT(51('-'))$/;"	l	subroutine:EFOL	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3C	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3CC	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3P	file:
295	optim.axdiff.f	/^295         CONTINUE$/;"	l	subroutine:AXDIFF	file:
3	g.brent.f	/^3     XMIN=X$/;"	l	function:BRENT	file:
3	g.fedor.f	/^    3 NB(J+1)=NB(J)+NB0(J)$/;"	l	function:ar2UT0	file:
3	g.fedor.f	/^    3 continue$/;"	l	function:ut	file:
3	g.odesd.f	/^3     red=min(red,REDMIN)$/;"	l	subroutine:bsstep	file:
3	g.pyg.f90	/^3     XMIN = X ! Arrive here ready to exit with best values.$/;"	l	subroutine:BRENTMIN	file:
3	g.sort.f	/^3       continue$/;"	l	subroutine:Gsort	file:
3	g.takestepmsgb.f90	/^3     XMIN = X ! Arrive here ready to exit with best values.$/;"	l	subroutine:BRENTMINGB	file:
3	optim.odesd.f	/^3     RED=MIN(RED,REDMIN)$/;"	l	subroutine:BSSTEP	file:
3	optim.pyg.f90	/^3     XMIN = X ! Arrive here ready to exit with best values.$/;"	l	subroutine:BRENTMIN	file:
30	finalio.f90	/^30       FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	func.f90	/^30    CALL UPPERCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	func.f90	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	func.f90	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	g.Alglue.f	/^   30 dx = u - x(i)$/;"	l	subroutine:seval	file:
30	g.CSMinit.f90	/^30    NPT=POINT*N$/;"	l	subroutine:CSMMIN	file:
30	g.EAMal.f	/^   30 dx = u - x(i)$/;"	l	subroutine:seval1	file:
30	g.Farkas.f	/^30    CONTINUE    $/;"	l	subroutine:FARKAS	file:
30	g.Farkas.f	/^30    lfden=i-1$/;"	l	subroutine:ALINIT	file:
30	g.Farkas.f	/^30    lfden=i-1$/;"	l	subroutine:NIINIT	file:
30	g.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2C	file:
30	g.Natb.f	/^ 30        CONTINUE$/;"	l	subroutine:entots	file:
30	g.Q4.f	/^30    CONTINUE$/;"	l	subroutine:ORDERQ4	file:
30	g.basinsampling.f90	/^30                 FORMAT('LA ',3F20.10)$/;"	l	subroutine:SAVEBINSTRUCTURES	file:
30	g.dbrent.f	/^30    CONTINUE$/;"	l	function:DBRENT	file:
30	g.dgetrf.f	/^   30       CONTINUE$/;"	l	function:ILAENV	file:
30	g.dgetrf.f	/^   30    CONTINUE$/;"	l	subroutine:DLASWP	file:
30	g.dgetri.f	/^   30          CONTINUE$/;"	l	subroutine:DGETRI	file:
30	g.dgetri.f	/^   30       CONTINUE$/;"	l	subroutine:DTRTRI	file:
30	g.dlamch.f	/^   30    CONTINUE$/;"	l	subroutine:DLAMC1	file:
30	g.dlamch.f	/^   30    CONTINUE$/;"	l	subroutine:DLAMC2	file:
30	g.dlamch.f	/^   30    CONTINUE$/;"	l	subroutine:DLAMC4	file:
30	g.dlamch.f	/^   30 CONTINUE$/;"	l	subroutine:DLAMC5	file:
30	g.dlsode.f	/^   30    CONTINUE$/;"	l	subroutine:DGBSL	file:
30	g.dlsode.f	/^   30    CONTINUE$/;"	l	subroutine:DGESL	file:
30	g.dlsode.f	/^   30 CONTINUE$/;"	l	function:IDAMAX	file:
30	g.dlsode.f	/^   30 CONTINUE$/;"	l	function:MYDDOT	file:
30	g.dlsode.f	/^   30 CONTINUE$/;"	l	subroutine:DGBFA	file:
30	g.dlsode.f	/^   30 CONTINUE$/;"	l	subroutine:DSCAL	file:
30	g.dlsode.f	/^   30 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
30	g.dlsode.f	/^ 30       IC = IC*JJ$/;"	l	subroutine:DINTDY	file:
30	g.dlsode.f	/^ 30   CONTINUE$/;"	l	subroutine:DEWSET	file:
30	g.dlsode.f	/^ 30   CONTINUE$/;"	l	subroutine:DLSODE	file:
30	g.dlsode.f	/^ 30   FORMAT(6X,'In above message,  I1 =',I10,3X,'I2 =',I10)$/;"	l	subroutine:XERRWD	file:
30	g.eigsrt.f	/^30    CONTINUE$/;"	l	subroutine:EIGSRT	file:
30	g.fedor.f	/^   30 DO 40 J1=1,L$/;"	l	subroutine:CUBSPL	file:
30	g.fedor.f	/^   30 continue$/;"	l	function:ut	file:
30	g.finalio.f	/^30          FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	g.input.f	/^30    CALL MYUPCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	g.input.f	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	g.input.f	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	g.io1.f	/^30             FORMAT(3F20.10)$/;"	l	subroutine:IO1	file:
30	g.ljcapsidmodule.f90	/^30         V(I) = V(I) - T*V(I+J)$/;"	l	subroutine:SVERT	file:
30	g.minperm.f	/^   30 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
30	g.minperm.f	/^ 30         IF (J.GT.N*MAXNEI) THEN$/;"	l	subroutine:minperm	file:
30	g.minpermdist.f90	/^30 NCHOOSE2=NCHOOSE2+1$/;"	l	subroutine:MINPERMDIST	file:
30	g.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBMV	file:
30	g.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBSV	file:
30	g.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPMV	file:
30	g.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPSV	file:
30	g.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRMV	file:
30	g.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRSV	file:
30	g.mylapack.f	/^   30                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
30	g.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR	file:
30	g.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR2	file:
30	g.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR	file:
30	g.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR2	file:
30	g.mylapack.f	/^   30                CONTINUE$/;"	l	subroutine:DTBSV	file:
30	g.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:DSYR	file:
30	g.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGBMV	file:
30	g.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGEMV	file:
30	g.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSBMV	file:
30	g.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSPMV	file:
30	g.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSYMV	file:
30	g.mylapack.f	/^   30            CONTINUE$/;"	l	subroutine:SGER	file:
30	g.mylapack.f	/^   30 CONTINUE$/;"	l	function:LCE	file:
30	g.mylapack.f	/^   30 CONTINUE$/;"	l	function:LDE	file:
30	g.mylapack.f	/^   30 CONTINUE$/;"	l	function:LSE	file:
30	g.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:DPBTF2	file:
30	g.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SMESSG	file:
30	g.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SOPEN	file:
30	g.mylapack.f	/^   30 I = I*MI$/;"	l	function:SBEG	file:
30	g.mylapack.f	/^   30 IC = IC + 1$/;"	l	subroutine:SCHCK3	file:
30	g.mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK1	file:
30	g.mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK4	file:
30	g.mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK2	file:
30	g.mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK5	file:
30	g.mylbfgs.f	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	g.ptgrp.f	/^30             CONTINUE$/;"	l	subroutine:PTGRP	file:
30	g.ptgrp.f	/^30       CONTINUE$/;"	l	subroutine:MATMUL	file:
30	g.ptgrp.f	/^30    IF(ABS(A(JI,II)).GT.TOL2)IOFF=IOFF+1$/;"	l	subroutine:EIG	file:
30	g.tetherfunc.f90	/^30                 FORMAT('LA ',3F20.10)$/;"	l	subroutine:SAVEBINSTRUCTURES	file:
30	g.tetherfunc.f90	/^30                 FORMAT('LA ',3F20.10)$/;"	l	subroutine:SAVEBINSTRUCTURESMPI	file:
30	g.tn.f	/^   30 CONTINUE$/;"	l	subroutine:DXPY	file:
30	g.tn.f	/^30      FW = FMIN$/;"	l	subroutine:GETPTC	file:
30	g.tn.f	/^30    CONTINUE$/;"	l	subroutine:CRASH	file:
30	g.tn.f	/^30    CONTINUE$/;"	l	subroutine:GTIMS	file:
30	g.tn.f	/^30    CONTINUE$/;"	l	subroutine:INITP3	file:
30	g.tn.f	/^30    CONTINUE$/;"	l	subroutine:LINDER	file:
30	g.tn.f	/^30    CONTINUE$/;"	l	subroutine:MODLNP	file:
30	g.tn.f	/^30    IF (NWHY .LE. 1) GO TO 40$/;"	l	subroutine:LMQN	file:
30	g.welch.f	/^   30       continue$/;"	l	subroutine:dgefa	file:
30	g.welch.f	/^   30       if (dabs(det(1)) .lt. ten) go to 40$/;"	l	subroutine:dgedi	file:
30	g.welch.f	/^   30    continue$/;"	l	subroutine:dgeco	file:
30	lbfgs.f	/^   30 CONTINUE$/;"	l	subroutine:MCSRCH	file:
30	lbfgs.f	/^   30 continue$/;"	l	function:ddot	file:
30	lbfgs.f	/^   30 continue$/;"	l	subroutine:daxpy	file:
30	lbfgs.f	/^ 30      IF (DIAG(I).LE.ZERO) GO TO 195$/;"	l	subroutine:LBFGS	file:
30	lbfgs.f	/^ 30   FORMAT(' F= ',1PD10.3,'   GNORM= ',1PD10.3)$/;"	l	subroutine:LB1	file:
30	mylbfgs.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	mylbfgs.old.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	optim.EYtrap.f	/^30    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2C	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2CC	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2P	file:
30	optim.Natb.f	/^ 30        CONTINUE$/;"	l	subroutine:entots	file:
30	optim.SW.f	/^30    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
30	optim.amb_natinterns.f90	/^   30 CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
30	optim.amber.f	/^30    CONTINUE$/;"	l	subroutine:aparams	file:
30	optim.amber.f	/^30    CONTINUE$/;"	l	subroutine:aread	file:
30	optim.ambnatintern_extras.f90	/^ 30   CONTINUE $/;"	l	subroutine:GETDIHONLY	file:
30	optim.aziz.f	/^30          CONTINUE$/;"	l	subroutine:AZIZ	file:
30	optim.bfgsts.f	/^30             FORMAT(1X,79('-'))$/;"	l	subroutine:BFGSTS	file:
30	optim.bfgsts.f	/^30    DUMMY1=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
30	optim.connect.f	/^30    DO J=1,NBLOCK$/;"	l	subroutine:REVERSEBLOCK	file:
30	optim.cubspl.f	/^   30 j = l $/;"	l	subroutine:cubspl	file:
30	optim.dctrap.f	/^30    CONTINUE$/;"	l	subroutine:DCTRAP	file:
30	optim.dqag.f	/^   30    CONTINUE$/;"	l	subroutine:XERSVE	file:
30	optim.dqag.f	/^   30 CONTINUE$/;"	l	subroutine:DQAGE	file:
30	optim.dqag.f	/^   30 CONTINUE$/;"	l	subroutine:XERPRN	file:
30	optim.dqag.f	/^   30 CONTINUE$/;"	l	subroutine:XGETUA	file:
30	optim.dqag.f	/^   30 IF (LEVEL.LE.0 .OR. (LEVEL.EQ.1 .AND. MKNTRL.LE.1)) RETURN$/;"	l	subroutine:XERMSG	file:
30	optim.dqag.f	/^   30 JUPBN = LAST$/;"	l	subroutine:DQPSRT	file:
30	optim.dsygvx.f	/^   30          CONTINUE$/;"	l	subroutine:DSYEVX	file:
30	optim.dsygvx.f	/^   30       CONTINUE$/;"	l	subroutine:DLACPY	file:
30	optim.dtrap.f	/^30    CONTINUE$/;"	l	subroutine:DTRAP	file:
30	optim.efol.f90	/^30    FORMAT(' Updating structure with quadratic steepest-descent steps.')$/;"	l	subroutine:EFOL	file:
30	optim.escp.f	/^30          CONTINUE$/;"	l	subroutine:DSCP	file:
30	optim.g2special.f	/^30       CONTINUE $/;"	l	subroutine:G2SPECIAL	file:
30	optim.greatcirc.f	/^30    NPT=POINT*N$/;"	l	subroutine:GCLBFGS	file:
30	optim.hybridmin.f	/^30       FORMAT(1X,79('-'))$/;"	l	subroutine:HYBRIDMIN	file:
30	optim.input.f	/^30    CALL UPPERCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	optim.input.f	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	optim.input.f	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	optim.intbfgsts.f	/^30             FORMAT(1X,79('-'))$/;"	l	subroutine:INTBFGSTS	file:
30	optim.ions.f	/^30          CONTINUE$/;"	l	subroutine:IONS	file:
30	optim.latmin.f	/^30    CONTINUE$/;"	l	subroutine:LATMIN	file:
30	optim.ljpshift.f	/^30    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
30	optim.mdiff.f	/^30          CONTINUE$/;"	l	subroutine:MDIFF	file:
30	optim.meccano.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MECBFGS	file:
30	optim.mied.f	/^30          CONTINUE$/;"	l	subroutine:MIED	file:
30	optim.miel.f	/^30    CONTINUE$/;"	l	subroutine:MIEL	file:
30	optim.mindist.f	/^30    NPT=POINT*N$/;"	l	subroutine:MMYLBFGS	file:
30	optim.minperm.f	/^   30 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
30	optim.minperm.f	/^ 30         IF (J.GT.N*MAXNEI) THEN$/;"	l	subroutine:minperm	file:
30	optim.minpermdist.f90	/^30 NCHOOSE2=NCHOOSE2+1$/;"	l	subroutine:MINPERMDIST	file:
30	optim.minpermdistrbcom.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
30	optim.minpermrb.f90	/^30 CONTINUE$/;"	l	subroutine:MINPERMRB	file:
30	optim.mpdiff.f	/^30          CONTINUE$/;"	l	subroutine:MPDIFF	file:
30	optim.mpdiff.f	/^30          CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
30	optim.msdiff.f	/^30          CONTINUE$/;"	l	subroutine:MSDIFF	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBMV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBSV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPMV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPSV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRMV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRSV	file:
30	optim.mylapack.f	/^   30                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR2	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR2	file:
30	optim.mylapack.f	/^   30                CONTINUE$/;"	l	subroutine:DTBSV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:DSYR	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGBMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGEMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSBMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSPMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSYMV	file:
30	optim.mylapack.f	/^   30            CONTINUE$/;"	l	subroutine:SGER	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	function:LCE	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	function:LDE	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	function:LSE	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:DPBTF2	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SMESSG	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SOPEN	file:
30	optim.mylapack.f	/^   30 I = I*MI$/;"	l	function:SBEG	file:
30	optim.mylapack.f	/^   30 IC = IC + 1$/;"	l	subroutine:SCHCK3	file:
30	optim.mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK1	file:
30	optim.mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK4	file:
30	optim.mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK2	file:
30	optim.mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK5	file:
30	optim.mylbfgs.f	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	optim.oldneb.f	/^30    NPT=POINT*N$/;"	l	subroutine:NEBBFGS	file:
30	optim.projh.f	/^   30       continue$/;"	l	subroutine:dgefa	file:
30	optim.projh.f	/^   30       if (dabs(det(1)) .lt. ten) go to 40$/;"	l	subroutine:dgedi	file:
30	optim.projh.f	/^   30    continue$/;"	l	subroutine:dgeco	file:
30	optim.rbperm.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:RBMINPERMDIST	file:
30	optim.scdiff.f	/^30          CONTINUE$/;"	l	subroutine:SCDIFF	file:
30	optim.scl.f	/^30    CONTINUE$/;"	l	subroutine:SCL	file:
30	optim.specialfuncts.f90	/^30                   CONTINUE$/;"	l	subroutine:LEGZO	file:
30	optim.unmeccano.f90	/^30    NPT=POINT*N$/;"	l	subroutine:UNMECBFGS	file:
30	optim.unrestransform.f	/^   30  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
30	optim.unrestransform.f	/^30    CONTINUE$/;"	l	subroutine:INTSECDET	file:
30	optim.utils.f	/^30    CONTINUE$/;"	l	subroutine:COMPARE2	file:
30	pathsample.KMC.a2b.f	/^30    WAITMEAN=WAITMEAN+WAIT$/;"	l	subroutine:KMCA2B	file:
30	pathsample.KMC.f	/^30       IF (DEBUG) PRINT '(A,I6,A,F15.1,A,G20.10)','KMC> minimum ',ATMIN,' hit in ',XNSTEP,' KMC steps in time ',WAIT$/;"	l	subroutine:KMC	file:
30	pathsample.KMCcommit.f	/^30       IF (DEBUG) PRINT '(A,I6,A,I6,A,I10,A,G20.10)','KMCcommit> minimum ',ATMIN,' formerly ',MINMAP(ATMIN),$/;"	l	subroutine:KMCCOMMIT	file:
30	pathsample.dsort.f	/^   30    CONTINUE$/;"	l	subroutine:XERSVE	file:
30	pathsample.dsort.f	/^   30 CONTINUE$/;"	l	subroutine:XERPRN	file:
30	pathsample.dsort.f	/^   30 CONTINUE$/;"	l	subroutine:XGETUA	file:
30	pathsample.dsort.f	/^   30 IF (LEVEL.LE.0 .OR. (LEVEL.EQ.1 .AND. MKNTRL.LE.1)) RETURN$/;"	l	subroutine:XERMSG	file:
30	pathsample.dsort.f	/^   30 K = I$/;"	l	subroutine:DSORT	file:
30	pathsample.eig.f	/^30    IF(DABS(A(JI,II)).GT.TOL2)IOFF=IOFF+1$/;"	l	subroutine:EIG	file:
30	pathsample.input.f	/^30    CALL UPCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	pathsample.input.f	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	pathsample.input.f	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	pathsample.mergedb.f90	/^30 NMIN=NMINOLD+NEWMIN$/;"	l	subroutine:MERGEDB	file:
30	pathsample.mind.f	/^30    NPT=POINT*N$/;"	l	subroutine:MMYLBFGS	file:
30	pathsample.mindist.f	/^30    NPT=POINT*N$/;"	l	subroutine:MMYLBFGS	file:
30	pathsample.minperm.f	/^   30 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
30	pathsample.minperm.f	/^ 30         IF (J.GT.N*MAXNEI) THEN$/;"	l	subroutine:minperm	file:
30	pathsample.minpermdist.f90	/^30 NCHOOSE2=NCHOOSE2+1$/;"	l	subroutine:MINPERMDIST	file:
30	pathsample.minpermdistrbcom.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
30	pathsample.rbperm.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:RBMINPERMDIST	file:
30	pathsample.reweight.f	/^   30             CONTINUE$/;"	l	function:DLANTR	file:
30	pathsample.reweight.f	/^   30          CONTINUE$/;"	l	subroutine:DGESVX	file:
30	pathsample.reweight.f	/^   30       CONTINUE$/;"	l	subroutine:DLAQGE	file:
30	pathsample.reweight.f	/^   30       CONTINUE$/;"	l	subroutine:DLATRS	file:
30	pathsample.reweight.f	/^   30    CONTINUE$/;"	l	subroutine:DGERFS	file:
30	pathsample.reweight.f	/^   30    CONTINUE$/;"	l	subroutine:DLASWP	file:
30	pathsample.reweight.f	/^   30 CONTINUE$/;"	l	subroutine:DGEEQU	file:
30	pathsample.reweight.f	/^   30 CONTINUE$/;"	l	subroutine:DLACN2	file:
30	pathsample.reweight.f	/^   30 CONTINUE$/;"	l	subroutine:DLACON	file:
30	pathsample.setup.f	/^30    IF (YESNO) CLOSE(UMINDATA) ! SAT need to reopen this file$/;"	l	subroutine:SETUP	file:
30	ps.setup.f90	/^30    IF (YESNO) CLOSE(UMINDATA) ! SAT need to reopen this file$/;"	l	subroutine:SETUP	file:
300	g.dgetrf.f	/^  300 CONTINUE$/;"	l	function:ILAENV	file:
300	g.dlsode.f	/^ 300    ACOR(I) = SAVF(I)$/;"	l	subroutine:DSTODE	file:
300	g.dlsode.f	/^ 300  INIT = 1$/;"	l	subroutine:DLSODE	file:
300	g.dlsode.f	/^ 300  PHL0 = WM(2)$/;"	l	subroutine:DSOLSY	file:
300	g.dlsode.f	/^ 300  WM(2) = HL0$/;"	l	subroutine:DPREPJ	file:
300	g.mylapack.f	/^  300     CONTINUE$/;"	l	subroutine:SCHCK3	file:
300	g.mylapack.f	/^  300    CONTINUE$/;"	l	subroutine:SCHCK4	file:
300	g.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK1	file:
300	g.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK2	file:
300	g.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK5	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3C	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3CC	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3P	file:
300	optim.axdiff.f	/^300     CONTINUE$/;"	l	subroutine:AXDIFF	file:
300	optim.fetchz.f	/^300      CALL INPUT(END)$/;"	l	subroutine:FETCHZ	file:
300	optim.get.natoms.inc.f90	/^300      CALL INPUT(END)$/;"	l	file:
300	optim.mylapack.f	/^  300     CONTINUE$/;"	l	subroutine:SCHCK3	file:
300	optim.mylapack.f	/^  300    CONTINUE$/;"	l	subroutine:SCHCK4	file:
300	optim.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK1	file:
300	optim.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK2	file:
300	optim.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK5	file:
300	optim.rotcon.f	/^ 300   FORMAT((6(F15.5,1X)))$/;"	l	subroutine:ROTCON	file:
300	optim.tcheck.f	/^300      CONTINUE$/;"	l	subroutine:TCHECK	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMHQ	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
300	pathsample.kshortestpaths.f90	/^300 CONTINUE$/;"	l	subroutine:next_path	file:
300	pathsample.reweight.f	/^  300          CONTINUE$/;"	l	function:DLANTR	file:
3030	g.Natb.f	/^ 3030              format( 3(2x,i3),3(2x,f10.6))$/;"	l	subroutine:entots	file:
3030	optim.Natb.f	/^ 3030              format( 3(2x,i3),3(2x,f10.6))$/;"	l	subroutine:entots	file:
305	pathsample.amhdump.f90	/^305     CONTINUE$/;"	l	subroutine:AMHQ	file:
305	pathsample.amhdump.f90	/^305     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
305	pathsample.amhdump.f90	/^305     CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
306	pathsample.amhdump.f90	/^306        CONTINUE$/;"	l	subroutine:AMHQ	file:
306	pathsample.amhdump.f90	/^306        CONTINUE$/;"	l	subroutine:AMHQCONT	file:
306	pathsample.amhdump.f90	/^306        CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
31	g.fedor.f	/^   31    IHI = ILO$/;"	l	subroutine:INTERV	file:
31	g.finalio.f	/^31                FORMAT('AM',3G25.15)$/;"	l	subroutine:FINALIO	file:
31	g.minperm.f	/^   31      CONTINUE$/;"	l	subroutine:JOVOSAP	file:
31	optim.amber.f	/^31     CONTINUE$/;"	l	subroutine:aparams	file:
31	optim.bfgsts.f	/^31    CONTINUE$/;"	l	subroutine:ORTHOGOPT	file:
31	optim.connect.f	/^31    PTEST=.FALSE.$/;"	l	subroutine:CONNECT	file:
31	optim.minperm.f	/^   31      CONTINUE$/;"	l	subroutine:JOVOSAP	file:
31	pathsample.minperm.f	/^   31      CONTINUE$/;"	l	subroutine:JOVOSAP	file:
310	g.dlsode.f	/^ 310    Y(I) = Y(I) + R*(H*SAVF(I) - YH(I,2))$/;"	l	subroutine:DPREPJ	file:
310	g.dlsode.f	/^ 310  IF ((TN - TOUT)*H .LT. 0.0D0) GO TO 250$/;"	l	subroutine:DLSODE	file:
310	g.mylapack.f	/^  310        CONTINUE$/;"	l	subroutine:SCHCK3	file:
310	g.mylapack.f	/^  310    CONTINUE$/;"	l	subroutine:SCHCK4	file:
310	g.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK1	file:
310	g.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK2	file:
310	g.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK5	file:
310	g.ptgrp.f	/^310      FORMAT(' Molecule rotated through ',F20.10,' degrees ',$/;"	l	subroutine:PTGRP	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3C	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3CC	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3P	file:
310	optim.axdiff.f	/^310   CONTINUE$/;"	l	subroutine:AXDIFF	file:
310	optim.efol.f90	/^310              FORMAT(I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:EFOL	file:
310	optim.mylapack.f	/^  310        CONTINUE$/;"	l	subroutine:SCHCK3	file:
310	optim.mylapack.f	/^  310    CONTINUE$/;"	l	subroutine:SCHCK4	file:
310	optim.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK1	file:
310	optim.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK2	file:
310	optim.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK5	file:
310	optim.read.odata.inc.f90	/^310      READ (UNIT=9,IOSTAT=ios,FMT='(A3)') check$/;"	l	file:
310	optim.symmetry.f	/^310         FORMAT(' Molecule rotated through ',F20.10,' degrees ',$/;"	l	subroutine:SYMMETRY	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMHQ	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMHRELQ	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
310	pathsample.reweight.f	/^  310          CONTINUE$/;"	l	function:DLANTR	file:
32	g.Natb.f	/^ 32           CONTINUE$/;"	l	subroutine:entots	file:
32	optim.Natb.f	/^ 32           CONTINUE$/;"	l	subroutine:entots	file:
32	optim.amber.f	/^32     CONTINUE$/;"	l	subroutine:aparams	file:
32	optim.connect.f	/^32       WRITE(*,'(I5,A)') NTSREDO,' transition state coordinates read from file redopoints'$/;"	l	subroutine:CONNECT	file:
320	g.dlsode.f	/^ 320    CONTINUE$/;"	l	subroutine:DPREPJ	file:
320	g.dlsode.f	/^ 320    WM(I+2) = 1.0D0\/DI$/;"	l	subroutine:DSOLSY	file:
320	g.mylapack.f	/^  320        CONTINUE$/;"	l	subroutine:SCHCK1	file:
320	g.mylapack.f	/^  320     CONTINUE$/;"	l	subroutine:SCHCK3	file:
320	g.mylapack.f	/^  320    CONTINUE$/;"	l	subroutine:SCHCK4	file:
320	g.mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK2	file:
320	g.mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK5	file:
320	g.ptgrp.f	/^320      CONTINUE$/;"	l	subroutine:PTGRP	file:
320	optim.mylapack.f	/^  320        CONTINUE$/;"	l	subroutine:SCHCK1	file:
320	optim.mylapack.f	/^  320     CONTINUE$/;"	l	subroutine:SCHCK3	file:
320	optim.mylapack.f	/^  320    CONTINUE$/;"	l	subroutine:SCHCK4	file:
320	optim.mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK2	file:
320	optim.mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK5	file:
320	optim.symmetry.f	/^320         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
320	optim.tcheck.f	/^320      CONTINUE$/;"	l	subroutine:TCHECK	file:
320	pathsample.reweight.f	/^  320          CONTINUE$/;"	l	function:DLANTR	file:
33	g.fedor.f	/^   33 continue$/;"	l	function:ut	file:
33	g.mc.F	/^33                FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' EVAP,REJ')$/;"	l	subroutine:MC	file:
33	g.mc.sim.f90	/^33                FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' EVAP,REJ')$/;"	l	subroutine:MC	file:
33	optim.connect.f	/^33       READ(99,*) (DUMMY(J1),J1=1,NOPT)    ! minimum$/;"	l	subroutine:CONNECT	file:
330	g.dlsode.f	/^ 330  DO 340 I = 1,N$/;"	l	subroutine:DSOLSY	file:
330	g.dlsode.f	/^ 330  IERPJ = 1$/;"	l	subroutine:DPREPJ	file:
330	g.dlsode.f	/^ 330  IF ((TN - TOUT)*H .GE. 0.0D0) GO TO 400$/;"	l	subroutine:DLSODE	file:
330	g.mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK2	file:
330	g.mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK5	file:
330	g.mylapack.f	/^  330     CONTINUE$/;"	l	subroutine:SCHCK1	file:
330	g.mylapack.f	/^  330    CONTINUE$/;"	l	subroutine:SCHCK4	file:
330	g.mylapack.f	/^  330 CONTINUE$/;"	l	subroutine:SCHCK3	file:
330	g.ptgrp.f	/^330      CONTINUE$/;"	l	subroutine:PTGRP	file:
330	optim.mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK2	file:
330	optim.mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK5	file:
330	optim.mylapack.f	/^  330     CONTINUE$/;"	l	subroutine:SCHCK1	file:
330	optim.mylapack.f	/^  330    CONTINUE$/;"	l	subroutine:SCHCK4	file:
330	optim.mylapack.f	/^  330 CONTINUE$/;"	l	subroutine:SCHCK3	file:
330	optim.symmetry.f	/^330         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
330	optim.tcheck.f	/^330         CONTINUE$/;"	l	subroutine:TCHECK	file:
332	g.mc.F	/^332                  FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1x))$/;"	l	subroutine:MC	file:
332	g.mc.sim.f90	/^332                  FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1x))$/;"	l	subroutine:MC	file:
332	pathsample.amhdump.f90	/^332           FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1X))$/;"	l	subroutine:AMHDUMP	file:
333	g.takestep.f	/^333      CONTINUE$/;"	l	subroutine:TAKESTEP	file:
333	optim.connect.f	/^333            CONTINUE  $/;"	l	subroutine:CONNECT	file:
333	optim.connect.f	/^333   CALL NEWMINDIST(FIN,QPLUS,NATOMS,DISTPF,BULKT,TWOD,ZSYMSAVE,.FALSE.,RIGIDBODY,DEBUG,RMAT)$/;"	l	subroutine:ADDMIN	file:
333	optim.geopt.f	/^333            ALLOCATE(ORDERDERIV(NORDER),ORDER(NORDER))$/;"	l	subroutine:GEOPT	file:
334	g.finalio.f	/^334      FORMAT(4(I8,1X),' NMRES NMCRD NUMPRO NMSNAP')$/;"	l	subroutine:FINALIO	file:
334	g.mc.F	/^334                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
334	g.mc.sim.f90	/^334                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
334	pathsample.amhdump.f90	/^334         FORMAT(4(I8,1X),' NMRES NMCRD NUMPRO NMSNAP')$/;"	l	subroutine:AMHDUMP	file:
34	fmt.inc.f90	/^34 FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	file:
34	g.mc.F	/^34                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
34	g.mc.sim.f90	/^34                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
34	g.supermc.f	/^34             FORMAT('Super RAN,SPOTEL,SEPREV,NSSUC,NSFAIL=',3F15.7,2I6,' ACC')$/;"	l	subroutine:SUPERMC	file:
34	optim.connect.f	/^34          READ(45,*,END=35)$/;"	l	subroutine:CONNECT	file:
340	g.dlsode.f	/^ 340    X(I) = WM(I+2)*X(I)$/;"	l	subroutine:DSOLSY	file:
340	g.dlsode.f	/^ 340  IF ((TN - TOUT)*H .LT. 0.0D0) GO TO 345$/;"	l	subroutine:DLSODE	file:
340	g.mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK2	file:
340	g.mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK5	file:
340	g.mylapack.f	/^  340    CONTINUE$/;"	l	subroutine:SCHCK3	file:
340	g.mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK1	file:
340	g.mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK4	file:
340	g.ptgrp.f	/^340      ZANGS=180.D0\/(1.0D0*IHIGH)$/;"	l	subroutine:PTGRP	file:
340	optim.mlatmin.f	/^340      CONTINUE$/;"	l	subroutine:MLATMIN	file:
340	optim.mslatmin.f	/^340      CONTINUE$/;"	l	subroutine:MSLATMIN	file:
340	optim.mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK2	file:
340	optim.mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK5	file:
340	optim.mylapack.f	/^  340    CONTINUE$/;"	l	subroutine:SCHCK3	file:
340	optim.mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK1	file:
340	optim.mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK4	file:
340	optim.symmetry.f	/^340         ZANGS = 180.D0\/FLOAT(IHIGH)$/;"	l	subroutine:SYMMETRY	file:
340	optim.tcheck.f	/^340         CONTINUE$/;"	l	subroutine:TCHECK	file:
345	g.dlsode.f	/^ 345  HMX = ABS(TN) + ABS(H)$/;"	l	subroutine:DLSODE	file:
345	optim.tcheck.f	/^345            DX(I)=(DXX1(I)+DXX2(I)+16.0D0*DXX3(I))\/18.0D0$/;"	l	subroutine:TCHECK	file:
35	g.dlsode.f	/^ 35     C = IC$/;"	l	subroutine:DINTDY	file:
35	g.dlsode.f	/^ 35     EWT(I) = RTOL(I)*ABS(YCUR(I)) + ATOL(1)$/;"	l	subroutine:DEWSET	file:
35	g.fedor.f	/^   35 ILO = 1$/;"	l	subroutine:INTERV	file:
35	optim.axpairs.f	/^35       CONTINUE$/;"	l	subroutine:AXPAIRS	file:
35	optim.connect.f	/^35          CONTINUE$/;"	l	subroutine:CONNECT	file:
35	optim.h2o.f	/^   35 DY=YY-Y(J) $/;"	l	subroutine:DRVTV	file:
35	optim.specialfuncts.f90	/^35                   Q=Q+WP$/;"	l	subroutine:LEGZO	file:
35	optim.unrescalcdihe.f	/^ 35   FORMAT(\/' RGYR: *** WARNING *** Net "mass"=',F12.5\/)$/;"	l	subroutine:UEDITRGYR	file:
350	g.dlsode.f	/^ 350  DO 360 I = 1,N$/;"	l	subroutine:DSTODE	file:
350	g.dlsode.f	/^ 350  HMX = ABS(TN) + ABS(H)$/;"	l	subroutine:DLSODE	file:
350	g.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK1	file:
350	g.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK2	file:
350	g.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK5	file:
350	g.mylapack.f	/^  350 AVIGR = MAX(AVIGR,REAL(IGR))$/;"	l	subroutine:SCHCK4	file:
350	g.mylapack.f	/^  350 CONTINUE$/;"	l	subroutine:SCHCK3	file:
350	g.ptgrp.f	/^350            FORMAT(' S',I3,' axis exists.')$/;"	l	subroutine:PTGRP	file:
350	optim.mlatmin.f	/^350   CONTINUE$/;"	l	subroutine:MLATMIN	file:
350	optim.mslatmin.f	/^350   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
350	optim.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK1	file:
350	optim.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK2	file:
350	optim.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK5	file:
350	optim.mylapack.f	/^  350 AVIGR = MAX(AVIGR,REAL(IGR))$/;"	l	subroutine:SCHCK4	file:
350	optim.mylapack.f	/^  350 CONTINUE$/;"	l	subroutine:SCHCK3	file:
350	optim.symmetry.f	/^350               FORMAT(' S',I3,' axis exists.')$/;"	l	subroutine:SYMMETRY	file:
350	optim.tcheck.f	/^350         CONTINUE$/;"	l	subroutine:TCHECK	file:
36	g.mc.F	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	subroutine:MC	file:
36	g.mc.sim.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	subroutine:MC	file:
36	g.supermc.f	/^36             FORMAT('Super RAN,SPOTEL,SEPREV,NSSUC,NSFAIL=',3F15.7,2I6,' REJ')$/;"	l	subroutine:SUPERMC	file:
36	mc.bh.accrej.inc.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	file:
360	g.dlsode.f	/^ 360    Y(I) = H*SAVF(I) - (YH(I,2) + ACOR(I))$/;"	l	subroutine:DSTODE	file:
360	g.mylapack.f	/^  360        CONTINUE$/;"	l	subroutine:SCHCK3	file:
360	g.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK1	file:
360	g.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK2	file:
360	g.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK5	file:
360	g.mylapack.f	/^  360 CONTINUE$/;"	l	subroutine:SCHCK4	file:
360	g.ptgrp.f	/^360      CONTINUE$/;"	l	subroutine:PTGRP	file:
360	optim.bfgsts.f	/^360             FORMAT(' Unscaled step for mode ',I3,'=',F20.10)$/;"	l	subroutine:BFGSTS	file:
360	optim.efol.f90	/^360             FORMAT(' Unscaled step for mode ',I4,'=',F20.10)$/;"	l	subroutine:EFOL	file:
360	optim.intbfgsts.f	/^360             FORMAT(' Unscaled step for mode ',I3,'=',F20.10)$/;"	l	subroutine:INTBFGSTS	file:
360	optim.mylapack.f	/^  360        CONTINUE$/;"	l	subroutine:SCHCK3	file:
360	optim.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK1	file:
360	optim.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK2	file:
360	optim.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK5	file:
360	optim.mylapack.f	/^  360 CONTINUE$/;"	l	subroutine:SCHCK4	file:
360	optim.symmetry.f	/^360         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
360	optim.tcheck.f	/^360      CONTINUE$/;"	l	subroutine:TCHECK	file:
366	optim.efol.f90	/^366      FORMAT(' Largest modulus ratio of non-zero e\/values= ',5X,G20.10)   $/;"	l	subroutine:EFOL	file:
37	g.mc.F	/^37    CONTINUE$/;"	l	subroutine:MC	file:
37	g.mc.sim.f90	/^37    CONTINUE$/;"	l	subroutine:MC	file:
37	g.ptgrp.f	/^37      CONTINUE$/;"	l	subroutine:SIAZ	file:
37	optim.siaz.f	/^37      CONTINUE$/;"	l	subroutine:SIAZ	file:
370	g.mylapack.f	/^  370     CONTINUE$/;"	l	subroutine:SCHCK3	file:
370	g.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK1	file:
370	g.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK2	file:
370	g.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK5	file:
370	optim.mlatmin.f	/^370   CONTINUE$/;"	l	subroutine:MLATMIN	file:
370	optim.mslatmin.f	/^370   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
370	optim.mylapack.f	/^  370     CONTINUE$/;"	l	subroutine:SCHCK3	file:
370	optim.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK1	file:
370	optim.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK2	file:
370	optim.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK5	file:
370	optim.symmetry.f	/^370            FORMAT(' On-axis perpendicular C2 elements found.')$/;"	l	subroutine:SYMMETRY	file:
370	optim.tcheck.f	/^370      CONTINUE$/;"	l	subroutine:TCHECK	file:
38	g.ptgrp.f	/^38         CONTINUE$/;"	l	subroutine:SIAZ	file:
38	optim.siaz.f	/^38         CONTINUE$/;"	l	subroutine:SIAZ	file:
380	g.dlsode.f	/^ 380    Y(I) = YH(I,1) + EL(1)*ACOR(I)$/;"	l	subroutine:DSTODE	file:
380	g.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK1	file:
380	g.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK2	file:
380	g.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK5	file:
380	g.mylapack.f	/^  380 CONTINUE$/;"	l	subroutine:SCHCK3	file:
380	optim.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK1	file:
380	optim.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK2	file:
380	optim.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK5	file:
380	optim.mylapack.f	/^  380 CONTINUE$/;"	l	subroutine:SCHCK3	file:
380	optim.symmetry.f	/^380            FORMAT(' Off-axis perpendicular C2 elements found.')$/;"	l	subroutine:SYMMETRY	file:
380	optim.tcheck.f	/^380      CONTINUE$/;"	l	subroutine:TCHECK	file:
390	g.dlsode.f	/^ 390  IERSL = 1$/;"	l	subroutine:DSOLSY	file:
390	g.mylapack.f	/^  390    CONTINUE$/;"	l	subroutine:SCHCK3	file:
390	g.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK1	file:
390	g.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK2	file:
390	g.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK5	file:
390	g.ptgrp.f	/^390         FORMAT(' Horizontal plane of symmetry found.')$/;"	l	subroutine:PTGRP	file:
390	optim.mylapack.f	/^  390    CONTINUE$/;"	l	subroutine:SCHCK3	file:
390	optim.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK1	file:
390	optim.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK2	file:
390	optim.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK5	file:
390	optim.symmetry.f	/^390            FORMAT(' Horizontal plane of symmetry found.')$/;"	l	subroutine:SYMMETRY	file:
390	optim.tcheck.f	/^390      CONTINUE$/;"	l	subroutine:TCHECK	file:
395	optim.tcheck.f	/^395         DX(I)=(DXX1(I)+DXX2(I)+16.0D0*DXX3(I))\/18.0D0$/;"	l	subroutine:TCHECK	file:
4	g.fedor.f	/^    4 CONTINUE$/;"	l	function:ar2UT0	file:
4	g.fedor.f	/^    4 continue$/;"	l	function:ut	file:
4	g.odesd.f	/^4     x=xnew$/;"	l	subroutine:bsstep	file:
4	g.sort.f	/^4       continue$/;"	l	subroutine:Gsort	file:
4	optim.mlatmin.f	/^4       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
4	optim.mslatmin.f	/^4       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
4	optim.odesd.f	/^4     X=XNEW$/;"	l	subroutine:BSSTEP	file:
40	func.f90	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	func.f90	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	g.EAMal.f	/^40      CONTINUE$/;"	l	subroutine:EAMal	file:
40	g.Farkas.f	/^40       CONTINUE$/;"	l	subroutine:FARKAS	file:
40	g.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2C	file:
40	g.Q4.f	/^40       CONTINUE$/;"	l	subroutine:ORDERQ4	file:
40	g.dbrent.f	/^40    XMIN=XX$/;"	l	function:DBRENT	file:
40	g.dgetrf.f	/^   40          CONTINUE$/;"	l	subroutine:DLASWP	file:
40	g.dgetri.f	/^   40       CONTINUE$/;"	l	subroutine:DGETRI	file:
40	g.dlsode.f	/^   40       CONTINUE$/;"	l	subroutine:DGBFA	file:
40	g.dlsode.f	/^   40    CONTINUE$/;"	l	subroutine:DGBSL	file:
40	g.dlsode.f	/^   40    CONTINUE$/;"	l	subroutine:DGESL	file:
40	g.dlsode.f	/^   40 MP1 = M + 1$/;"	l	function:MYDDOT	file:
40	g.dlsode.f	/^   40 MP1 = M + 1$/;"	l	subroutine:DSCAL	file:
40	g.dlsode.f	/^   40 MP1 = M + 1$/;"	l	subroutine:MYDAXPY	file:
40	g.dlsode.f	/^ 40       DKY(I) = C*YH(I,JP1) + S*DKY(I)$/;"	l	subroutine:DINTDY	file:
40	g.dlsode.f	/^ 40   CONTINUE$/;"	l	subroutine:DEWSET	file:
40	g.dlsode.f	/^ 40   FORMAT(6X,'In above message,  R1 =',D21.13)$/;"	l	subroutine:XERRWD	file:
40	g.dlsode.f	/^ 40   MAXORD = IWORK(5)$/;"	l	subroutine:DLSODE	file:
40	g.fedor.f	/^   40 C(2,J)=(C(2,J)-C(3,J)*C(2,J+1))\/C(4,J)$/;"	l	subroutine:CUBSPL	file:
40	g.fedor.f	/^   40 ISTEP = 1$/;"	l	subroutine:INTERV	file:
40	g.fedor.f	/^   40 continue$/;"	l	function:ut	file:
40	g.finalio.f	/^40             FORMAT('Si',3F20.10)$/;"	l	subroutine:FINALIO	file:
40	g.input.f	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	g.input.f	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	g.ljcapsidmodule.f90	/^40    IF ( V(K) .NE. 0. ) GOTO 60$/;"	l	subroutine:SVERT	file:
40	g.minperm.f	/^   40 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
40	g.minpermdist.f90	/^40 NCHOOSE2=0$/;"	l	subroutine:MINPERMDIST	file:
40	g.mylapack.f	/^   40                CONTINUE$/;"	l	subroutine:DPBTRF	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGBMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGEMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSBMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSPMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSYMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBSV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPSV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRMV	file:
40	g.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRSV	file:
40	g.mylapack.f	/^   40          CONTINUE$/;"	l	subroutine:DTBSV	file:
40	g.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR	file:
40	g.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR2	file:
40	g.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR	file:
40	g.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR2	file:
40	g.mylapack.f	/^   40       CONTINUE$/;"	l	subroutine:DSYR	file:
40	g.mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SCHCK3	file:
40	g.mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SGER	file:
40	g.mylapack.f	/^   40 CONTINUE$/;"	l	subroutine:SMESSG	file:
40	g.mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK2	file:
40	g.mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK5	file:
40	g.mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK1	file:
40	g.mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK4	file:
40	g.ptgrp.f	/^40             CONTINUE$/;"	l	subroutine:PTGRP	file:
40	g.ptgrp.f	/^40        CONTINUE$/;"	l	subroutine:EIG	file:
40	g.ptgrp.f	/^40    J=1$/;"	l	subroutine:SORTXYZ	file:
40	g.tn.f	/^   40 MP1 = M + 1$/;"	l	subroutine:DXPY	file:
40	g.tn.f	/^40    A = ZERO$/;"	l	subroutine:GETPTC	file:
40	g.tn.f	/^40    CONTINUE$/;"	l	subroutine:GTIMS	file:
40	g.tn.f	/^40    CONTINUE$/;"	l	subroutine:LINDER	file:
40	g.tn.f	/^40    IF (MODET .GE. -1) WRITE(*,830) K$/;"	l	subroutine:MODLNP	file:
40	g.tn.f	/^40    NWHY = 2$/;"	l	subroutine:LMQN	file:
40	g.welch.f	/^   40       continue$/;"	l	subroutine:dgedi	file:
40	g.welch.f	/^   40    continue$/;"	l	subroutine:dgeco	file:
40	g.welch.f	/^   40    continue$/;"	l	subroutine:dgefa	file:
40	lbfgs.f	/^   40       CONTINUE$/;"	l	subroutine:MCSRCH	file:
40	lbfgs.f	/^   40 mp1 = m + 1$/;"	l	function:ddot	file:
40	lbfgs.f	/^   40 mp1 = m + 1$/;"	l	subroutine:daxpy	file:
40	lbfgs.f	/^ 40      DIAG(I)= 1.0D0$/;"	l	subroutine:LBFGS	file:
40	lbfgs.f	/^ 40   FORMAT(' VECTOR X= ')$/;"	l	subroutine:LB1	file:
40	optim.EYtrap.f	/^40       CONTINUE$/;"	l	subroutine:EYDTRAP	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2C	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2CC	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2P	file:
40	optim.SW.f	/^40    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
40	optim.amb_natinterns.f90	/^   40 CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
40	optim.amber.f	/^40    CONTINUE$/;"	l	subroutine:aparams	file:
40	optim.amber.f	/^40    CONTINUE$/;"	l	subroutine:aread	file:
40	optim.aziz.f	/^40       CONTINUE$/;"	l	subroutine:AZIZ	file:
40	optim.bfgsts.f	/^40             FORMAT(' Vector      Gradient        Secder       Step          Max step    Trust ratio')$/;"	l	subroutine:BFGSTS	file:
40	optim.cubspl.f	/^   40    c(2,j) = (c(2,j) - c(3,j)*c(2,j+1))\/c(4,j)$/;"	l	subroutine:cubspl	file:
40	optim.dctrap.f	/^40       CONTINUE$/;"	l	subroutine:DCTRAP	file:
40	optim.dqag.f	/^   40    CONTINUE$/;"	l	subroutine:XERPRN	file:
40	optim.dqag.f	/^   40 CONTINUE$/;"	l	subroutine:DQPSRT	file:
40	optim.dqag.f	/^   40 RESULT = 0.0D+00$/;"	l	subroutine:DQAGE	file:
40	optim.dsygvx.f	/^   40    CONTINUE$/;"	l	subroutine:DLACPY	file:
40	optim.dsygvx.f	/^   40 CONTINUE$/;"	l	subroutine:DSYEVX	file:
40	optim.dtrap.f	/^40       CONTINUE$/;"	l	subroutine:DTRAP	file:
40	optim.efol.f90	/^40    IF (PTEST) PRINT*$/;"	l	subroutine:EFOL	file:
40	optim.eig.f	/^40        CONTINUE$/;"	l	subroutine:EIG	file:
40	optim.escp.f	/^40       CONTINUE$/;"	l	subroutine:DSCP	file:
40	optim.g2special.f	/^40       DO J2=1,3*NATOMS$/;"	l	subroutine:G2SPECIAL	file:
40	optim.hybridmin.f	/^40       FORMAT(' Vector      Gradient        Secder       Step          Max step    Trust ratio')$/;"	l	subroutine:HYBRIDMIN	file:
40	optim.input.f	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	optim.input.f	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	optim.intbfgsts.f	/^40             FORMAT(' Vector      Gradient        Secder       Step          Max step    Trust ratio')$/;"	l	subroutine:INTBFGSTS	file:
40	optim.ions.f	/^40       CONTINUE$/;"	l	subroutine:IONS	file:
40	optim.latmin.f	/^40    CONTINUE$/;"	l	subroutine:LATMIN	file:
40	optim.ljpshift.f	/^40    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
40	optim.mdiff.f	/^40       CONTINUE$/;"	l	subroutine:MDIFF	file:
40	optim.mied.f	/^40       CONTINUE$/;"	l	subroutine:MIED	file:
40	optim.minperm.f	/^   40 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
40	optim.minpermdist.f90	/^40 NCHOOSE2=0$/;"	l	subroutine:MINPERMDIST	file:
40	optim.minpermdistrbcom.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
40	optim.mpdiff.f	/^40       CONTINUE$/;"	l	subroutine:MPDIFF	file:
40	optim.mpdiff.f	/^40       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
40	optim.msdiff.f	/^40       CONTINUE$/;"	l	subroutine:MSDIFF	file:
40	optim.mylapack.f	/^   40                CONTINUE$/;"	l	subroutine:DPBTRF	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGBMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGEMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSBMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSPMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSYMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBSV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPSV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRSV	file:
40	optim.mylapack.f	/^   40          CONTINUE$/;"	l	subroutine:DTBSV	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR2	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR2	file:
40	optim.mylapack.f	/^   40       CONTINUE$/;"	l	subroutine:DSYR	file:
40	optim.mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SCHCK3	file:
40	optim.mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SGER	file:
40	optim.mylapack.f	/^   40 CONTINUE$/;"	l	subroutine:SMESSG	file:
40	optim.mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK2	file:
40	optim.mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK5	file:
40	optim.mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK1	file:
40	optim.mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK4	file:
40	optim.potential.f	/^40       DO J1=NSTEP,3*NATOMS$/;"	l	subroutine:POTENTIAL	file:
40	optim.projh.f	/^   40       continue$/;"	l	subroutine:dgedi	file:
40	optim.projh.f	/^   40    continue$/;"	l	subroutine:dgeco	file:
40	optim.projh.f	/^   40    continue$/;"	l	subroutine:dgefa	file:
40	optim.rbperm.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
40	optim.scdiff.f	/^40       CONTINUE$/;"	l	subroutine:SCDIFF	file:
40	optim.sortxyz.f	/^40    J=1$/;"	l	subroutine:SORTXYZ	file:
40	optim.specialfuncts.f90	/^40                   X(NR)=Z$/;"	l	subroutine:LEGZO	file:
40	optim.unrestransform.f	/^   40 CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
40	pathsample.Dijkstra.f90	/^40    CONTINUE$/;"	l	subroutine:DIJKSTRA	file:
40	pathsample.dsort.f	/^   40    CONTINUE$/;"	l	subroutine:XERPRN	file:
40	pathsample.dsort.f	/^   40 L = L-1$/;"	l	subroutine:DSORT	file:
40	pathsample.input.f	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	pathsample.input.f	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	pathsample.kshortestpaths.f90	/^40    CONTINUE$/;"	l	subroutine:KSHORTESTPATHS	file:
40	pathsample.mergedb.f90	/^40 NTS=NTSOLD+NEWTS$/;"	l	subroutine:MERGEDB	file:
40	pathsample.minperm.f	/^   40 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
40	pathsample.minpermdist.f90	/^40 NCHOOSE2=0$/;"	l	subroutine:MINPERMDIST	file:
40	pathsample.minpermdistrbcom.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
40	pathsample.rbperm.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
40	pathsample.reweight.f	/^   40          CONTINUE$/;"	l	function:DLANTR	file:
40	pathsample.reweight.f	/^   40          CONTINUE$/;"	l	subroutine:DGERFS	file:
40	pathsample.reweight.f	/^   40          CONTINUE$/;"	l	subroutine:DLASWP	file:
40	pathsample.reweight.f	/^   40       CONTINUE$/;"	l	subroutine:DGESVX	file:
40	pathsample.reweight.f	/^   40       CONTINUE$/;"	l	subroutine:DLATRS	file:
40	pathsample.reweight.f	/^   40    CONTINUE$/;"	l	subroutine:DLAQGE	file:
40	pathsample.reweight.f	/^   40 CONTINUE$/;"	l	subroutine:DGEEQU	file:
40	pathsample.reweight.f	/^   40 CONTINUE$/;"	l	subroutine:DLACN2	file:
40	pathsample.reweight.f	/^   40 CONTINUE$/;"	l	subroutine:DLACON	file:
40	pathsample.setup.f	/^40       CLOSE(UTSDATA) ! SAT need to reopen this file$/;"	l	subroutine:SETUP	file:
40	ps.setup.read.tsdata.inc.f90	/^40       CLOSE(UTSDATA) ! SAT need to reopen this file$/;"	l	file:
400	func.f90	/^400   NEST=1$/;"	l	file:
400	g.dgetrf.f	/^  400 CONTINUE$/;"	l	function:ILAENV	file:
400	g.dlsode.f	/^ 400  DO 410 I = 1,N$/;"	l	subroutine:DLSODE	file:
400	g.dlsode.f	/^ 400  IF (M .NE. 0) CRATE = MAX(0.2D0*CRATE,DEL\/DELP)$/;"	l	subroutine:DSTODE	file:
400	g.dlsode.f	/^ 400  ML = IWM(1)$/;"	l	subroutine:DPREPJ	file:
400	g.dlsode.f	/^ 400  ML = IWM(1)$/;"	l	subroutine:DSOLSY	file:
400	g.input.f	/^400   NEST=1$/;"	l	file:
400	g.mylapack.f	/^  400        CONTINUE$/;"	l	subroutine:SCHCK2	file:
400	g.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK1	file:
400	g.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK3	file:
400	g.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK5	file:
400	g.ptgrp.f	/^400            CONTINUE$/;"	l	subroutine:PTGRP	file:
400	optim.get.natoms.inc.f90	/^400   CLOSE(5)$/;"	l	file:
400	optim.input.f	/^400   NEST=1$/;"	l	file:
400	optim.mylapack.f	/^  400        CONTINUE$/;"	l	subroutine:SCHCK2	file:
400	optim.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK1	file:
400	optim.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK3	file:
400	optim.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK5	file:
400	optim.symmetry.f	/^400                  IF ((ICOMP2.EQ.0).AND.(.NOT.TWOD)) FPGRP = 'CNv'$/;"	l	subroutine:SYMMETRY	file:
400	optim.tcheck.f	/^400      CONTINUE$/;"	l	subroutine:TCHECK	file:
400	pathsample.amhdump.f90	/^400     CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
400	pathsample.input.f	/^400   NEST=1$/;"	l	file:
401	g.Natb.f	/^ 401           CONTINUE$/;"	l	subroutine:entots	file:
401	optim.Natb.f	/^ 401           CONTINUE$/;"	l	subroutine:entots	file:
41	func.f90	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	g.fedor.f	/^   41   ILO = IHI$/;"	l	subroutine:INTERV	file:
41	g.input.f	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	g.minperm.f	/^   41 L0=L$/;"	l	subroutine:JOVOSAP	file:
41	optim.c60p.f	/^41    CONTINUE$/;"	l	subroutine:C60P	file:
41	optim.input.f	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	optim.latmin.f	/^41    CONTINUE$/;"	l	subroutine:C60PE	file:
41	optim.minperm.f	/^   41 L0=L$/;"	l	subroutine:JOVOSAP	file:
41	optim.mlatmin.f	/^41    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
41	optim.mpdiff.f	/^41       CONTINUE$/;"	l	subroutine:MPDIFF	file:
41	optim.mpdiff.f	/^41       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
41	optim.msdiff.f	/^41    CONTINUE$/;"	l	subroutine:MSDIFF	file:
41	optim.mslatmin.f	/^41    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
41	pathsample.addperm.f	/^41       CONTINUE$/;"	l	subroutine:ADDPERM	file:
41	pathsample.input.f	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	pathsample.minperm.f	/^   41 L0=L$/;"	l	subroutine:JOVOSAP	file:
41	pathsample.regroup.f	/^41       CONTINUE$/;"	l	subroutine:REGROUP	file:
41	pathsample.setup.f	/^41          CONTINUE$/;"	l	subroutine:SETUP	file:
41	pathsample.setup_sis.f	/^41       CONTINUE$/;"	l	subroutine:SETUP_SIS	file:
41	pathsample.tssearch.f	/^41             CONTINUE$/;"	l	subroutine:TSSEARCH	file:
41	ps.setup.read.tsdata.inc.f90	/^41          CONTINUE$/;"	l	file:
410	func.f90	/^410   L=L+1$/;"	l	file:
410	g.dlsode.f	/^ 410    WM(I+2) = 0.0D0$/;"	l	subroutine:DPREPJ	file:
410	g.dlsode.f	/^ 410    Y(I) = RWORK(I+LYH-1)$/;"	l	subroutine:DLSODE	file:
410	g.dlsode.f	/^ 410  IF (MITER .EQ. 0 .OR. JCUR .EQ. 1) GO TO 430$/;"	l	subroutine:DSTODE	file:
410	g.input.f	/^410   L=L+1$/;"	l	file:
410	g.mylapack.f	/^  410        CONTINUE$/;"	l	subroutine:SCHCK5	file:
410	g.mylapack.f	/^  410     CONTINUE$/;"	l	subroutine:SCHCK2	file:
410	g.mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK1	file:
410	g.mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK3	file:
410	g.ptgrp.f	/^410      FORMAT(' The molecule belongs to a point group with doubly', $/;"	l	subroutine:PTGRP	file:
410	optim.input.f	/^410   L=L+1$/;"	l	file:
410	optim.mylapack.f	/^  410        CONTINUE$/;"	l	subroutine:SCHCK5	file:
410	optim.mylapack.f	/^  410     CONTINUE$/;"	l	subroutine:SCHCK2	file:
410	optim.mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK1	file:
410	optim.mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK3	file:
410	optim.symmetry.f	/^410         FORMAT(' The molecule belongs to a point group with doubly', $/;"	l	subroutine:SYMMETRY	file:
410	pathsample.amhdump.f90	/^410       CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
410	pathsample.input.f	/^410   L=L+1$/;"	l	file:
42	func.f90	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	g.input.f	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	g.minperm.f	/^   42 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
42	optim.input.f	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	optim.minperm.f	/^   42 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
42	pathsample.addperm.f	/^42       CONTINUE$/;"	l	subroutine:ADDPERM	file:
42	pathsample.input.f	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	pathsample.minperm.f	/^   42 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
42	pathsample.regroup.f	/^42       CONTINUE$/;"	l	subroutine:REGROUP	file:
42	pathsample.setup.f	/^42          CONTINUE$/;"	l	subroutine:SETUP	file:
42	pathsample.setup_sis.f	/^42       CONTINUE$/;"	l	subroutine:SETUP_SIS	file:
42	pathsample.tssearch.f	/^42             CONTINUE$/;"	l	subroutine:TSSEARCH	file:
42	ps.setup.read.tsdata.inc.f90	/^42          CONTINUE$/;"	l	file:
420	g.dlsode.f	/^ 420    WM(I+2) = WM(I+2)*CON$/;"	l	subroutine:DPREPJ	file:
420	g.dlsode.f	/^ 420  ISTATE = 2$/;"	l	subroutine:DLSODE	file:
420	g.mylapack.f	/^  420        CONTINUE$/;"	l	subroutine:SCHCK5	file:
420	g.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK1	file:
420	g.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK2	file:
420	g.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK3	file:
420	optim.mylapack.f	/^  420        CONTINUE$/;"	l	subroutine:SCHCK5	file:
420	optim.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK1	file:
420	optim.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK2	file:
420	optim.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK3	file:
420	optim.symmetry.f	/^420      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
420	optim.tcheck.f	/^420         FORMAT(3F20.16)$/;"	l	subroutine:TCHECK	file:
429	optim.sortc.f	/^ 429  J=1$/;"	l	subroutine:SortC	file:
43	g.minperm.f	/^   43 X(I)=J0$/;"	l	subroutine:JOVOSAP	file:
43	optim.hessout.f	/^ 43   FORMAT(5X,T12,F12.6,T25,F12.6,T38,F12.6,T51,F12.6,T64,F12.6)$/;"	l	subroutine:HESSOUT	file:
43	optim.minperm.f	/^   43 X(I)=J0$/;"	l	subroutine:JOVOSAP	file:
43	pathsample.KMC.f	/^43             CONTINUE$/;"	l	subroutine:KMC	file:
43	pathsample.KMCcommit.f	/^43             CONTINUE$/;"	l	subroutine:KMCCOMMIT	file:
43	pathsample.minperm.f	/^   43 X(I)=J0$/;"	l	subroutine:JOVOSAP	file:
430	g.dlsode.f	/^ 430  ICF = 2$/;"	l	subroutine:DSTODE	file:
430	g.mylapack.f	/^  430           CONTINUE$/;"	l	subroutine:SCHCK5	file:
430	g.mylapack.f	/^  430    CONTINUE$/;"	l	subroutine:SCHCK2	file:
430	g.mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK1	file:
430	g.mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK3	file:
430	optim.mylapack.f	/^  430           CONTINUE$/;"	l	subroutine:SCHCK5	file:
430	optim.mylapack.f	/^  430    CONTINUE$/;"	l	subroutine:SCHCK2	file:
430	optim.mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK1	file:
430	optim.mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK3	file:
430	optim.symmetry.f	/^430      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
430	optim.tcheck.f	/^430      CONTINUE$/;"	l	subroutine:TCHECK	file:
432	optim.intlbfgs.f90	/^432         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
432	optim.intlbfgslj.f90	/^432         CONTINUE$/;"	l	subroutine:INTLBFGSLJ	file:
435	optim.tcheck.f	/^435      CONTINUE$/;"	l	subroutine:TCHECK	file:
44	g.fedor.f	/^   44 continue$/;"	l	function:ut	file:
44	optim.connect.f	/^44          READ(45,*,END=45)$/;"	l	subroutine:CONNECT	file:
440	g.dlsode.f	/^ 440      YH1(I) = YH1(I) - YH1(I+NYH)$/;"	l	subroutine:DSTODE	file:
440	g.mylapack.f	/^  440        CONTINUE$/;"	l	subroutine:SCHCK5	file:
440	g.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK1	file:
440	g.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK2	file:
440	g.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK3	file:
440	g.ptgrp.f	/^440         FORMAT(' ORBIT MATRIX:',(F10.6,\/))$/;"	l	subroutine:PTGRP	file:
440	optim.mylapack.f	/^  440        CONTINUE$/;"	l	subroutine:SCHCK5	file:
440	optim.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK1	file:
440	optim.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK2	file:
440	optim.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK3	file:
440	optim.symmetry.f	/^440      FORMAT(' ORBIT MATRIX:',(F10.6,\/))$/;"	l	subroutine:SYMMETRY	file:
440	optim.tcheck.f	/^440   RETURN$/;"	l	subroutine:TCHECK	file:
444	optim.connect.f	/^444      CLOSE(81)$/;"	l	subroutine:ADDMIN	file:
444	optim.geopt.f	/^444            CONTINUE$/;"	l	subroutine:GEOPT	file:
444	pathsample.GT.f	/^444         CONTINUE$/;"	l	subroutine:GT	file:
444	pathsample.NGT.f	/^444         CONTINUE$/;"	l	subroutine:NGT	file:
444	pathsample.NGT_crstorage.f	/^444         CONTINUE$/;"	l	subroutine:NGT_CRSTORAGE	file:
444	pathsample.setup.f	/^444      CONTINUE$/;"	l	subroutine:SETUP	file:
444	ps.setup.removesp.inc.f90	/^444      CONTINUE$/;"	l	file:
445	g.dlsode.f	/^ 445    CONTINUE$/;"	l	subroutine:DSTODE	file:
45	g.dlsode.f	/^ 45     EWT(I) = RTOL(I)*ABS(YCUR(I)) + ATOL(I)$/;"	l	subroutine:DEWSET	file:
45	g.fedor.f	/^   45 IF (X .GE. XT(LXT))              GO TO 110$/;"	l	subroutine:INTERV	file:
45	g.seed.f	/^45       FORMAT('LA ',3F20.10)$/;"	l	subroutine:GSEED	file:
45	lbfgs.f	/^   45    INFO=0$/;"	l	subroutine:MCSRCH	file:
45	optim.connect.f	/^45          CONTINUE$/;"	l	subroutine:CONNECT	file:
45	optim.h2o.f	/^   45 DZ=ZZ-Z(J) $/;"	l	subroutine:DRVTV	file:
45	optim.specialfuncts.f90	/^45                   W(N+1-NR)=W(NR)$/;"	l	subroutine:LEGZO	file:
45	optim.unrescalcdihe.f	/^ 45   FORMAT(\/' RGYR:   There were',I5,' missing coordinates.'\/)$/;"	l	subroutine:UEDITRGYR	file:
450	g.dlsode.f	/^ 450  JCUR = 0$/;"	l	subroutine:DSTODE	file:
450	g.mylapack.f	/^  450     CONTINUE$/;"	l	subroutine:SCHCK5	file:
450	g.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK1	file:
450	g.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK2	file:
450	g.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK3	file:
450	optim.mylapack.f	/^  450     CONTINUE$/;"	l	subroutine:SCHCK5	file:
450	optim.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK1	file:
450	optim.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK2	file:
450	optim.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK3	file:
46	g.seed.f	/^46       FORMAT('LB',3F20.10)$/;"	l	subroutine:GSEED	file:
460	g.mylapack.f	/^  460        CONTINUE$/;"	l	subroutine:SCHCK5	file:
460	g.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK1	file:
460	g.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK2	file:
460	g.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK3	file:
460	optim.mylapack.f	/^  460        CONTINUE$/;"	l	subroutine:SCHCK5	file:
460	optim.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK1	file:
460	optim.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK2	file:
460	optim.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK3	file:
460	optim.symmetry.f	/^460      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
470	g.dlsode.f	/^ 470      YH(I,J) = YH(I,J) + EL(J)*ACOR(I)$/;"	l	subroutine:DSTODE	file:
470	g.mylapack.f	/^  470        CONTINUE$/;"	l	subroutine:SCHCK5	file:
470	g.mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK2	file:
470	g.mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK3	file:
470	g.ptgrp.f	/^470         FORMAT(' Number of distinct orbits: ',i3,\/,' Summary of orbit sizes:')$/;"	l	subroutine:PTGRP	file:
470	optim.mylapack.f	/^  470        CONTINUE$/;"	l	subroutine:SCHCK5	file:
470	optim.mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK2	file:
470	optim.mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK3	file:
470	optim.symmetry.f	/^470         FORMAT(' Number of distinct planetary orbits: ',i3,\/,  $/;"	l	subroutine:SYMMETRY	file:
48	optim.TIPmodes.f	/^48    CONTINUE $/;"	l	subroutine:H2OMODES	file:
48	optim.h2o.f	/^48    CONTINUE $/;"	l	subroutine:H2O	file:
480	g.mylapack.f	/^  480           CONTINUE$/;"	l	subroutine:SCHCK5	file:
480	g.mylapack.f	/^  480 CONTINUE$/;"	l	subroutine:SCHCK2	file:
480	g.ptgrp.f	/^480            FORMAT(2I3)$/;"	l	subroutine:PTGRP	file:
480	optim.efol.f90	/^480         FORMAT('Parameter',T20,'dV\/dR',T32,'Step',T46,'Rold',T56,'Rnew')$/;"	l	subroutine:EFOL	file:
480	optim.mylapack.f	/^  480           CONTINUE$/;"	l	subroutine:SCHCK5	file:
480	optim.mylapack.f	/^  480 CONTINUE$/;"	l	subroutine:SCHCK2	file:
480	optim.symmetry.f	/^480            FORMAT(2I3)$/;"	l	subroutine:SYMMETRY	file:
490	g.dlsode.f	/^ 490    YH(I,LMAX) = ACOR(I)$/;"	l	subroutine:DSTODE	file:
490	g.mylapack.f	/^  490        CONTINUE$/;"	l	subroutine:SCHCK5	file:
490	g.mylapack.f	/^  490 CONTINUE$/;"	l	subroutine:SCHCK2	file:
490	optim.efol.f90	/^490         FORMAT(64('-'))$/;"	l	subroutine:EFOL	file:
490	optim.mylapack.f	/^  490        CONTINUE$/;"	l	subroutine:SCHCK5	file:
490	optim.mylapack.f	/^  490 CONTINUE$/;"	l	subroutine:SCHCK2	file:
490	optim.symmetry.f	/^490         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
5	g.dlsode.f	/^    5 IX = 1$/;"	l	function:MYDDOT	file:
5	g.dlsode.f	/^    5 IX = 1$/;"	l	subroutine:MYDAXPY	file:
5	g.fedor.f	/^    5 continue$/;"	l	function:ar2UT0	file:
5	g.fedor.f	/^    5 continue$/;"	l	function:ut	file:
5	g.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMGK	file:
5	g.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMKK	file:
5	g.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMSK	file:
5	g.sort.f	/^5       arr(l,np)=arr(j,np)$/;"	l	subroutine:Gsort	file:
5	g.tn.f	/^5        T = UP(I) - X(I)$/;"	l	subroutine:STPMAX	file:
5	g.tn.f	/^5        TOL = 1.D1 * EPSMCH * (DABS(UP(I)) + 1.D0)$/;"	l	subroutine:MODZ	file:
5	optim.amber.f	/^5           CONTINUE$/;"	l	subroutine:AMBERS	file:
5	optim.dqag.f	/^    5   RLIST(MAXERR) = AREA1$/;"	l	subroutine:DQAGE	file:
5	optim.intlbfgs.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:INTLBFGS	file:
5	optim.make_conpot.f90	/^5 CHANGED=.FALSE.$/;"	l	subroutine:MAKE_CONPOT	file:
5	optim.mlatmin.f	/^5     CONTINUE$/;"	l	subroutine:MLATDIFF	file:
5	optim.mslatmin.f	/^5     CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
5	optim.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMGK	file:
5	optim.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMKK	file:
5	optim.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMSK	file:
5	pathsample.Dijkstra.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:DIJKSTRA	file:
5	pathsample.GT.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:GT	file:
5	pathsample.KMC.a2b.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:KMCA2B	file:
5	pathsample.KMC.f	/^5        CHANGED=.FALSE.$/;"	l	subroutine:KMC	file:
5	pathsample.KMCcommit.f	/^5        CHANGED=.FALSE.$/;"	l	subroutine:KMCCOMMIT	file:
5	pathsample.NGT.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:NGT	file:
5	pathsample.NGT_crstorage.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:NGT_CRSTORAGE	file:
5	pathsample.Pfold.f90	/^5     CHANGED=.FALSE.$/;"	l	subroutine:PFOLD	file:
5	pathsample.Pfold.f90	/^5     CHANGED=.FALSE.$/;"	l	subroutine:TFOLD	file:
5	pathsample.getppair.f90	/^5  CHANGED=.FALSE.$/;"	l	subroutine:GETPPAIR	file:
5	pathsample.getusepair.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:GETUSEPAIR	file:
5	pathsample.kshortestpaths.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:KSHORTESTPATHS	file:
5	pathsample.make_conpot.f90	/^5 CHANGED=.FALSE.$/;"	l	subroutine:MAKE_CONPOT	file:
5	pathsample.regroupfree2.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:REGROUPFREE2	file:
5	pathsample.remove_unconnected.f90	/^5     CHANGED=.FALSE.$/;"	l	subroutine:REMOVE_UNCONNECTED	file:
50	func.f90	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	func.f90	/^50    L=L+1$/;"	l	file:
50	func.f90	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	g.EAMal.f	/^50      CONTINUE$/;"	l	subroutine:EAMal	file:
50	g.Farkas.f	/^50    CONTINUE$/;"	l	subroutine:FARKAS	file:
50	g.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2C	file:
50	g.dgetrf.f	/^   50    CONTINUE$/;"	l	subroutine:DLASWP	file:
50	g.dgetri.f	/^   50    CONTINUE$/;"	l	subroutine:DGETRI	file:
50	g.dlsode.f	/^   50    CONTINUE$/;"	l	subroutine:DGBFA	file:
50	g.dlsode.f	/^   50 CONTINUE$/;"	l	function:MYDDOT	file:
50	g.dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:DGBSL	file:
50	g.dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:DGESL	file:
50	g.dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:DSCAL	file:
50	g.dlsode.f	/^   50 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
50	g.dlsode.f	/^ 50     CONTINUE$/;"	l	subroutine:DINTDY	file:
50	g.dlsode.f	/^ 50   FORMAT(6X,'In above,  R1 =',D21.13,3X,'R2 =',D21.13)$/;"	l	subroutine:XERRWD	file:
50	g.dlsode.f	/^ 50   HMAX = RWORK(6)$/;"	l	subroutine:DLSODE	file:
50	g.fedor.f	/^   50 C(4,I-1)=(DIVDF3\/DTAU)*(6.d0\/DTAU)$/;"	l	subroutine:CUBSPL	file:
50	g.fedor.f	/^   50 MIDDLE = (ILO + IHI)\/2$/;"	l	subroutine:INTERV	file:
50	g.fedor.f	/^   50 continue$/;"	l	function:ut	file:
50	g.finalio.f	/^50             FORMAT('LB',3F20.10)$/;"	l	subroutine:FINALIO	file:
50	g.input.f	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	g.input.f	/^50    L=L+1$/;"	l	file:
50	g.input.f	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	g.ljcapsidmodule.f90	/^50    WRITE(6,*) 'ERROR: ZERO PIVOT ENCOUNTERED'$/;"	l	subroutine:SVERT	file:
50	g.minperm.f	/^   50 I=FREE(K)$/;"	l	subroutine:JOVOSAP	file:
50	g.minpermdist.f90	/^50 DISTANCE=DBEST$/;"	l	subroutine:MINPERMDIST	file:
50	g.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBMV	file:
50	g.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBSV	file:
50	g.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPMV	file:
50	g.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPSV	file:
50	g.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRMV	file:
50	g.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRSV	file:
50	g.mylapack.f	/^   50                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
50	g.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGBMV	file:
50	g.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGEMV	file:
50	g.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR	file:
50	g.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR2	file:
50	g.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR	file:
50	g.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR2	file:
50	g.mylapack.f	/^   50                CONTINUE$/;"	l	subroutine:DTBSV	file:
50	g.mylapack.f	/^   50             CONTINUE$/;"	l	subroutine:DSYR	file:
50	g.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSBMV	file:
50	g.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSPMV	file:
50	g.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSYMV	file:
50	g.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK2	file:
50	g.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK3	file:
50	g.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK4	file:
50	g.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK5	file:
50	g.mylapack.f	/^   50 CONTINUE$/;"	l	subroutine:SMESSG	file:
50	g.mylapack.f	/^   50 IC = IC + 1$/;"	l	subroutine:SCHCK1	file:
50	g.ptgrp.f	/^50    FORMAT(3(2X,F12.6))$/;"	l	subroutine:PTGRP	file:
50	g.ptgrp.f	/^50    P=ZER$/;"	l	subroutine:EIG	file:
50	g.tn.f	/^   50 CONTINUE$/;"	l	subroutine:DXPY	file:
50	g.tn.f	/^50    CONTINUE$/;"	l	subroutine:LMQN	file:
50	g.tn.f	/^50    CONTINUE$/;"	l	subroutine:MODLNP	file:
50	g.tn.f	/^50    RETURN$/;"	l	subroutine:LINDER	file:
50	g.tn.f	/^50    TOL = DABS(XMIN)*RELTOL + ABSTOL$/;"	l	subroutine:GETPTC	file:
50	g.welch.f	/^   50    continue$/;"	l	subroutine:dgeco	file:
50	g.welch.f	/^   50    continue$/;"	l	subroutine:dgedi	file:
50	g.welch.f	/^   50    continue$/;"	l	subroutine:dgefa	file:
50	lbfgs.f	/^   50       CONTINUE$/;"	l	subroutine:MCSRCH	file:
50	lbfgs.f	/^   50 continue$/;"	l	function:ddot	file:
50	lbfgs.f	/^   50 continue$/;"	l	subroutine:daxpy	file:
50	lbfgs.f	/^ 50   FORMAT(6(2X,1PD10.3))$/;"	l	subroutine:LB1	file:
50	lbfgs.f	/^ 50   W(ISPT+I)= -G(I)*DIAG(I)$/;"	l	subroutine:LBFGS	file:
50	optim.EYtrap.f	/^50          CONTINUE$/;"	l	subroutine:EYDTRAP	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2C	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2CC	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2P	file:
50	optim.SW.f	/^50    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
50	optim.amb_natinterns.f90	/^ 50   CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
50	optim.amber.f	/^50     CONTINUE$/;"	l	subroutine:aparams	file:
50	optim.amber.f	/^50    CONTINUE$/;"	l	subroutine:aread	file:
50	optim.aziz.f	/^50    CONTINUE$/;"	l	subroutine:AZIZ	file:
50	optim.bfgsts.f	/^50             FORMAT(1X,I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:BFGSTS	file:
50	optim.cubspl.f	/^   50    c(4,i-1) = (divdf3\/dtau)*(6.\/dtau)$/;"	l	subroutine:cubspl	file:
50	optim.dctrap.f	/^50          CONTINUE$/;"	l	subroutine:DCTRAP	file:
50	optim.dqag.f	/^   50 CONTINUE$/;"	l	subroutine:DQAGE	file:
50	optim.dqag.f	/^   50 IORD(JBND) = MAXERR$/;"	l	subroutine:DQPSRT	file:
50	optim.dqag.f	/^   50 LPIECE = INDEX(MESSG(NEXTC:LENMSG), NEWLIN)$/;"	l	subroutine:XERPRN	file:
50	optim.dsygvx.f	/^   50       CONTINUE$/;"	l	subroutine:DLACPY	file:
50	optim.dsygvx.f	/^   50       CONTINUE$/;"	l	subroutine:DSYEVX	file:
50	optim.dtrap.f	/^50          CONTINUE$/;"	l	subroutine:DTRAP	file:
50	optim.eig.f	/^50    P=ZER$/;"	l	subroutine:EIG	file:
50	optim.escp.f	/^50    CONTINUE$/;"	l	subroutine:DSCP	file:
50	optim.hybridmin.f	/^50       FORMAT(1X,I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:HYBRIDMIN	file:
50	optim.input.f	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	optim.input.f	/^50    L=L+1$/;"	l	file:
50	optim.input.f	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	optim.intbfgsts.f	/^50             FORMAT(1X,I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:INTBFGSTS	file:
50	optim.ions.f	/^50    CONTINUE$/;"	l	subroutine:IONS	file:
50	optim.latmin.f	/^50    CONTINUE$/;"	l	subroutine:LATMIN	file:
50	optim.ljpshift.f	/^50    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
50	optim.mdiff.f	/^50    CONTINUE$/;"	l	subroutine:MDIFF	file:
50	optim.mied.f	/^50    CONTINUE$/;"	l	subroutine:MIED	file:
50	optim.minperm.f	/^   50 I=FREE(K)$/;"	l	subroutine:JOVOSAP	file:
50	optim.minpermdist.f90	/^50 DISTANCE=DBEST$/;"	l	subroutine:MINPERMDIST	file:
50	optim.minpermdistrbcom.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:MINPERMDISTRBCOM	file:
50	optim.mpdiff.f	/^50    CONTINUE$/;"	l	subroutine:MPDIFF	file:
50	optim.mpdiff.f	/^50    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
50	optim.msdiff.f	/^50    CONTINUE$/;"	l	subroutine:MSDIFF	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBMV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBSV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPMV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPSV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRMV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRSV	file:
50	optim.mylapack.f	/^   50                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGBMV	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGEMV	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR2	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR2	file:
50	optim.mylapack.f	/^   50                CONTINUE$/;"	l	subroutine:DTBSV	file:
50	optim.mylapack.f	/^   50             CONTINUE$/;"	l	subroutine:DSYR	file:
50	optim.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSBMV	file:
50	optim.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSPMV	file:
50	optim.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSYMV	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK2	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK3	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK4	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK5	file:
50	optim.mylapack.f	/^   50 CONTINUE$/;"	l	subroutine:SMESSG	file:
50	optim.mylapack.f	/^   50 IC = IC + 1$/;"	l	subroutine:SCHCK1	file:
50	optim.potential.f	/^50       CONTINUE$/;"	l	subroutine:POTENTIAL	file:
50	optim.projh.f	/^   50    continue$/;"	l	subroutine:dgeco	file:
50	optim.projh.f	/^   50    continue$/;"	l	subroutine:dgedi	file:
50	optim.projh.f	/^   50    continue$/;"	l	subroutine:dgefa	file:
50	optim.rbperm.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:RBMINPERMDIST	file:
50	optim.scdiff.f	/^50    CONTINUE$/;"	l	subroutine:SCDIFF	file:
50	optim.symmetry.f	/^50    FORMAT(3(2X,F12.6))$/;"	l	subroutine:SYMMETRY	file:
50	optim.unrestransform.f	/^   50  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
50	pathsample.connect.f	/^50    NEWLENGTH=J2-1$/;"	l	subroutine:CONNECT	file:
50	pathsample.dsort.f	/^   50 K = K+1$/;"	l	subroutine:DSORT	file:
50	pathsample.dsort.f	/^   50 LPIECE = INDEX(MESSG(NEXTC:LENMSG), NEWLIN)$/;"	l	subroutine:XERPRN	file:
50	pathsample.eig.f	/^50    P=ZER$/;"	l	subroutine:EIG	file:
50	pathsample.getppair.f90	/^50 CONTINUE$/;"	l	subroutine:GETPPAIR	file:
50	pathsample.getspair.f90	/^50 CONTINUE$/;"	l	subroutine:GETSPAIR	file:
50	pathsample.input.f	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	pathsample.input.f	/^50    L=L+1$/;"	l	file:
50	pathsample.input.f	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	pathsample.mergedb.f90	/^50 CONTINUE$/;"	l	subroutine:MERGEDB	file:
50	pathsample.minperm.f	/^   50 I=FREE(K)$/;"	l	subroutine:JOVOSAP	file:
50	pathsample.minpermdist.f90	/^50 DISTANCE=DBEST$/;"	l	subroutine:MINPERMDIST	file:
50	pathsample.minpermdistrbcom.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:MINPERMDISTRBCOM	file:
50	pathsample.rbperm.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:RBMINPERMDIST	file:
50	pathsample.reweight.f	/^   50             CONTINUE$/;"	l	function:DLANTR	file:
50	pathsample.reweight.f	/^   50       CONTINUE$/;"	l	subroutine:DGERFS	file:
50	pathsample.reweight.f	/^   50       CONTINUE$/;"	l	subroutine:DGESVX	file:
50	pathsample.reweight.f	/^   50       CONTINUE$/;"	l	subroutine:DLAQGE	file:
50	pathsample.reweight.f	/^   50    CONTINUE$/;"	l	subroutine:DGEEQU	file:
50	pathsample.reweight.f	/^   50    CONTINUE$/;"	l	subroutine:DLASWP	file:
50	pathsample.reweight.f	/^   50    CONTINUE$/;"	l	subroutine:DLATRS	file:
50	pathsample.reweight.f	/^   50 CONTINUE$/;"	l	subroutine:DLACN2	file:
50	pathsample.reweight.f	/^   50 CONTINUE$/;"	l	subroutine:DLACON	file:
500	g.dgetrf.f	/^  500 CONTINUE$/;"	l	function:ILAENV	file:
500	g.dlsode.f	/^ 500  KFLAG = KFLAG - 1$/;"	l	subroutine:DSTODE	file:
500	g.dlsode.f	/^ 500  ML = IWM(1)$/;"	l	subroutine:DPREPJ	file:
500	g.dlsode.f	/^ 500  MSG = 'DLSODE-  At current T (=R1), MXSTEP (=I1) steps   '$/;"	l	subroutine:DLSODE	file:
500	g.mylapack.f	/^  500     CONTINUE$/;"	l	subroutine:SCHCK5	file:
500	g.mylapack.f	/^  500 CONTINUE$/;"	l	subroutine:SCHCK2	file:
500	g.ptgrp.f	/^500      CONTINUE$/;"	l	subroutine:PTGRP	file:
500	optim.efol.f90	/^500              FORMAT(T7,A,T17,F10.6,T29,F10.5,T41,F10.5,T53,F10.5)$/;"	l	subroutine:EFOL	file:
500	optim.fetchz.f	/^500              CONTINUE$/;"	l	subroutine:FETCHZ	file:
500	optim.mylapack.f	/^  500     CONTINUE$/;"	l	subroutine:SCHCK5	file:
500	optim.mylapack.f	/^  500 CONTINUE$/;"	l	subroutine:SCHCK2	file:
500	optim.symmetry.f	/^500      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
51	func.f90	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	g.input.f	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	g.minperm.f	/^   51    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
51	optim.input.f	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	optim.intlbfgs.f90	/^51   NCONSTRAINT=0 $/;"	l	subroutine:INTLBFGS	file:
51	optim.make_conpot.f90	/^51 NCONSTRAINT=0 $/;"	l	subroutine:MAKE_CONPOT	file:
51	optim.minperm.f	/^   51    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
51	pathsample.Dijkstra.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:DIJKSTRA	file:
51	pathsample.GT.f	/^51    CHANGED=.FALSE.$/;"	l	subroutine:GT	file:
51	pathsample.KMC.f	/^51       CHANGED=.FALSE.$/;"	l	subroutine:KMC	file:
51	pathsample.KMCcommit.f	/^51       CHANGED=.FALSE.$/;"	l	subroutine:KMCCOMMIT	file:
51	pathsample.NGT.f	/^51    CHANGED=.FALSE.$/;"	l	subroutine:NGT	file:
51	pathsample.NGT_crstorage.f	/^51    CHANGED=.FALSE.$/;"	l	subroutine:NGT_CRSTORAGE	file:
51	pathsample.Pfold.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:PFOLD	file:
51	pathsample.Pfold.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:TFOLD	file:
51	pathsample.getppair.f90	/^51 CHANGED=.FALSE.$/;"	l	subroutine:GETPPAIR	file:
51	pathsample.getusepair.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:GETUSEPAIR	file:
51	pathsample.input.f	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	pathsample.kshortestpaths.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:KSHORTESTPATHS	file:
51	pathsample.make_conpot.f90	/^51 NCONSTRAINT=0 $/;"	l	subroutine:MAKE_CONPOT	file:
51	pathsample.minperm.f	/^   51    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
51	pathsample.regroupfree2.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:REGROUPFREE2	file:
51	pathsample.remove_unconnected.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:REMOVE_UNCONNECTED	file:
51	pathsample.setup.f	/^51             CLOSE(1)$/;"	l	subroutine:SETUP	file:
51	pathsample.setup_sis.f	/^51          CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
51	ps.setup.read.tsdata.inc.f90	/^51             CLOSE(1)$/;"	l	file:
510	g.dlsode.f	/^ 510      YH1(I) = YH1(I) - YH1(I+NYH)$/;"	l	subroutine:DSTODE	file:
510	g.dlsode.f	/^ 510  EWTI = RWORK(LEWT+I-1)$/;"	l	subroutine:DLSODE	file:
510	g.mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK2	file:
510	g.mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK5	file:
510	g.ptgrp.f	/^510      FORMAT(' The smallest non-unit orbit contains ',i3,' members.',\/,$/;"	l	subroutine:PTGRP	file:
510	optim.mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK2	file:
510	optim.mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK5	file:
510	optim.symmetry.f	/^510      FORMAT(' The smallest orbit contains ',i3,' members.',\/,$/;"	l	subroutine:SYMMETRY	file:
511	pathsample.kshortestpaths.f90	/^511   CHANGED=.FALSE.$/;"	l	subroutine:KSHORTESTPATHS	file:
515	g.dlsode.f	/^ 515    CONTINUE$/;"	l	subroutine:DSTODE	file:
52	func.f90	/^52    I=I+1$/;"	l	file:
52	func.f90	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	g.EAMal.f	/^52       CONTINUE$/;"	l	subroutine:EAMal	file:
52	g.input.f	/^52    I=I+1$/;"	l	file:
52	g.input.f	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	g.minperm.f	/^   52    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
52	optim.diis.f	/^52       CONTINUE$/;"	l	subroutine:DIIS	file:
52	optim.dqag.f	/^   52       CONTINUE$/;"	l	subroutine:XERPRN	file:
52	optim.input.f	/^52    I=I+1$/;"	l	file:
52	optim.input.f	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	optim.minperm.f	/^   52    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
52	pathsample.amhdump.f90	/^52       FORMAT('ATOM',4X,I3,2X,'CA',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
52	pathsample.dsort.f	/^   52       CONTINUE$/;"	l	subroutine:XERPRN	file:
52	pathsample.input.f	/^52    I=I+1$/;"	l	file:
52	pathsample.input.f	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	pathsample.minperm.f	/^   52    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
520	g.dlsode.f	/^ 520  MSG = 'DLSODE-  At T (=R1), too much accuracy requested  '$/;"	l	subroutine:DLSODE	file:
520	g.dlsode.f	/^ 520  RHUP = 0.0D0$/;"	l	subroutine:DSTODE	file:
520	g.mylapack.f	/^  520 CONTINUE$/;"	l	subroutine:SCHCK5	file:
520	g.ptgrp.f	/^520      FORMAT(' Other members of this orbit are: ',100I4)$/;"	l	subroutine:PTGRP	file:
520	optim.mylapack.f	/^  520 CONTINUE$/;"	l	subroutine:SCHCK5	file:
520	optim.symmetry.f	/^520      FORMAT(' Other members of this orbit are: ',100I4)$/;"	l	subroutine:SYMMETRY	file:
525	pathsample.amhdump.f90	/^525       CONTINUE$/;"	l	subroutine:AMHDUMP	file:
525	pathsample.amhdump.f90	/^525      CONTINUE$/;"	l	subroutine:AMHQ	file:
525	pathsample.amhdump.f90	/^525      CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
525	pathsample.amhdump.f90	/^525     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
525	pathsample.amhdump.f90	/^525     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
525	pathsample.amhdump.f90	/^525     CONTINUE$/;"	l	subroutine:AMHRMSD	file:
526	g.finalio.f	/^526         CONTINUE$/;"	l	subroutine:FINALIO	file:
53	g.EAMal.f	/^53     CONTINUE$/;"	l	subroutine:EAMal	file:
53	g.fedor.f	/^   53      IHI = MIDDLE$/;"	l	subroutine:INTERV	file:
53	g.minperm.f	/^   53    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
53	optim.minperm.f	/^   53    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
53	pathsample.amhdump.f90	/^53       FORMAT('ATOM',4X,I3,2X,'CB',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
53	pathsample.minperm.f	/^   53    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
530	g.dlsode.f	/^ 530      Y(I) = Y(I) + R$/;"	l	subroutine:DPREPJ	file:
530	g.dlsode.f	/^ 530    SAVF(I) = ACOR(I) - YH(I,LMAX)$/;"	l	subroutine:DSTODE	file:
530	g.dlsode.f	/^ 530  MSG = 'DLSODE-  At T(=R1) and step size H(=R2), the error'$/;"	l	subroutine:DLSODE	file:
530	g.ptgrp.f	/^530               CONTINUE$/;"	l	subroutine:PTGRP	file:
530	optim.symmetry.f	/^530               CONTINUE$/;"	l	subroutine:SYMMETRY	file:
54	g.EAMal.f	/^54     CONTINUE$/;"	l	subroutine:EAMal	file:
54	optim.dqag.f	/^   54    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
54	pathsample.amhdump.f90	/^54      FORMAT('ATOM',4X,I3,2X,'O ',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
54	pathsample.dsort.f	/^   54    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
540	g.dlsode.f	/^ 540        WM(II+I) = (FTEM(I) - SAVF(I))*FAC$/;"	l	subroutine:DPREPJ	file:
540	g.dlsode.f	/^ 540  EXSM = 1.0D0\/L$/;"	l	subroutine:DSTODE	file:
540	g.dlsode.f	/^ 540  MSG = 'DLSODE-  At T (=R1) and step size H (=R2), the    '$/;"	l	subroutine:DLSODE	file:
540	optim.symmetry.f	/^540               FORMAT(' ANGMAG angle is ',f8.4)$/;"	l	subroutine:SYMMETRY	file:
542	optim.intlbfgs.f90	/^542   CONTINUE$/;"	l	subroutine:INTLBFGS	file:
543	optim.intlbfgs.f90	/^543         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
548	optim.intlbfgs.f90	/^548            CONTINUE$/;"	l	subroutine:INTLBFGS	file:
55	g.dlsode.f	/^ 55   R = H**(-K)$/;"	l	subroutine:DINTDY	file:
55	g.fedor.f	/^   55 continue$/;"	l	function:ut	file:
55	optim.connect.f	/^55    DO J5=1,NATOMS$/;"	l	subroutine:GETPERM	file:
55	optim.h2o.f	/^   55 SX=DX*DX $/;"	l	subroutine:DRVTV	file:
55	pathsample.amhdump.f90	/^55       FORMAT('ATOM',4X,I3,2X,'C ',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, & $/;"	l	subroutine:AMHDUMP	file:
55	pathsample.mergedb.f90	/^55 CONTINUE$/;"	l	subroutine:MERGEDB	file:
550	g.dlsode.f	/^ 550      CONTINUE$/;"	l	subroutine:DPREPJ	file:
550	optim.symmetry.f	/^550               FORMAT(' IERR is ',I2,' for ',I1)$/;"	l	subroutine:SYMMETRY	file:
5500	g.Natb.f	/^ 5500   HDER(K,IJ)=0.D0$/;"	l	subroutine:entots	file:
5500	optim.Natb.f	/^ 5500   HDER(K,IJ)=0.D0$/;"	l	subroutine:entots	file:
555	optim.OPTIM.F	/^555   CONTINUE ! JUMP BACK TO HERE AFTER REOPTIMISATION OF BAD ENDPOINTS$/;"	l	subroutine:OPTIM	file:
555	optim.dftb.f	/^555                 CONTINUE $/;"	l	subroutine:DFDERIV1	file:
555	optim.func.f90	/^555   CONTINUE ! JUMP BACK TO HERE AFTER REOPTIMISATION OF BAD ENDPOINTS$/;"	l	subroutine:OPTIM	file:
555	optim.path.f	/^555   CONTINUE$/;"	l	subroutine:PATH	file:
555	pathsample.Dijkstra.f90	/^555 CONTINUE$/;"	l	subroutine:DIJKSTRA	file:
555	pathsample.GT.f	/^555         CONTINUE$/;"	l	subroutine:GT	file:
555	pathsample.KMC.f	/^555   CONTINUE$/;"	l	subroutine:KMC	file:
555	pathsample.KMCcommit.f	/^555   CONTINUE$/;"	l	subroutine:KMCCOMMIT	file:
555	pathsample.NGT.f	/^555         CONTINUE$/;"	l	subroutine:NGT	file:
555	pathsample.NGT_crstorage.f	/^555         CONTINUE$/;"	l	subroutine:NGT_CRSTORAGE	file:
555	pathsample.connectd.f90	/^555   CONTINUE$/;"	l	subroutine:CONNECTD	file:
555	pathsample.connectdist.f90	/^555   CONTINUE$/;"	l	subroutine:CONNECTDIST	file:
556	pathsample.NGT.f	/^556      CONTINUE$/;"	l	subroutine:NGT	file:
557	pathsample.NGT.f	/^557      CONTINUE$/;"	l	subroutine:NGT	file:
558	pathsample.NGT.f	/^558   CONTINUE ! JMC jump to here after disconnection of I minima using the compressed-row storage scheme$/;"	l	subroutine:NGT	file:
56	g.EAMal.f	/^56     CONTINUE$/;"	l	subroutine:EAMal	file:
56	g.keyword.f	/^56          WRITE(MYUNIT,'(A,I6,A)') $/;"	l	subroutine:KEYWORD	file:
56	optim.dqag.f	/^   56    CONTINUE$/;"	l	subroutine:XERPRN	file:
56	pathsample.amhdump.f90	/^56       FORMAT('ATOM',4X,I3,2X,'N ',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
56	pathsample.dsort.f	/^   56    CONTINUE$/;"	l	subroutine:XERPRN	file:
560	g.dlsode.f	/^ 560    CONTINUE$/;"	l	subroutine:DPREPJ	file:
560	g.dlsode.f	/^ 560  BIG = 0.0D0$/;"	l	subroutine:DLSODE	file:
560	g.dlsode.f	/^ 560  IF (RHSM .GE. RHUP) GO TO 570$/;"	l	subroutine:DSTODE	file:
560	optim.symmetry.f	/^560                  FORMAT(' PLAYING WITH ATOMS ',I3,' AND ',I3)$/;"	l	subroutine:SYMMETRY	file:
561	optim.potential.f	/^561            WRITE(*,'(A)') 'CELL not found in input data set - quit'$/;"	l	subroutine:POTENTIAL	file:
567	optim.potential.f	/^567            CONTINUE$/;"	l	subroutine:POTENTIAL	file:
57	g.keyword.f	/^57          READ(34,*,END=56) DUMMY$/;"	l	subroutine:KEYWORD	file:
57	g.tn.f	/^57    CONTINUE$/;"	l	subroutine:MSLV	file:
570	g.dlsode.f	/^ 570    CONTINUE$/;"	l	subroutine:DLSODE	file:
570	g.dlsode.f	/^ 570  IF (RHSM .LT. RHDN) GO TO 580$/;"	l	subroutine:DSTODE	file:
570	g.dlsode.f	/^ 570  II = MBAND + 2$/;"	l	subroutine:DPREPJ	file:
570	g.ptgrp.f	/^570               CALL ROTM(3,ANGMG,1,RM)$/;"	l	subroutine:PTGRP	file:
570	optim.symmetry.f	/^570               CALL ROTM(3,ANGMG,1,RM)$/;"	l	subroutine:SYMMETRY	file:
5700	g.Natb.f	/^ 5700        CONTINUE $/;"	l	subroutine:entots	file:
5700	optim.Natb.f	/^ 5700        CONTINUE $/;"	l	subroutine:entots	file:
5720	g.Natb.f	/^ 5720           CONTINUE$/;"	l	subroutine:entots	file:
5720	optim.Natb.f	/^ 5720           CONTINUE$/;"	l	subroutine:entots	file:
58	optim.dqag.f	/^   58    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
58	pathsample.dsort.f	/^   58    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
580	g.dlsode.f	/^ 580    II = II + MEBAND$/;"	l	subroutine:DPREPJ	file:
580	g.dlsode.f	/^ 580  DO 590 I = 1,N$/;"	l	subroutine:DLSODE	file:
580	g.dlsode.f	/^ 580  NEWQ = NQ - 1$/;"	l	subroutine:DSTODE	file:
580	g.ptgrp.f	/^580                  FORMAT(' Axis of order ',I1,' identified.')$/;"	l	subroutine:PTGRP	file:
580	optim.symmetry.f	/^580                  FORMAT(' Axis of order ',I1,' identified.')$/;"	l	subroutine:SYMMETRY	file:
590	g.dlsode.f	/^ 590    Y(I) = RWORK(I+LYH-1)$/;"	l	subroutine:DLSODE	file:
590	g.dlsode.f	/^ 590  NEWQ = L$/;"	l	subroutine:DSTODE	file:
590	g.ptgrp.f	/^590                           CONTINUE$/;"	l	subroutine:PTGRP	file:
590	optim.symmetry.f	/^590                           CONTINUE$/;"	l	subroutine:SYMMETRY	file:
599	optim.msevb.f90	/^ 599     enddo$/;"	l	subroutine:vinter	file:
6	g.EAMal.f	/^6       CONTINUE$/;"	l	subroutine:EAMal	file:
6	optim.amber.f	/^6           CONTINUE$/;"	l	subroutine:AMBERS	file:
60	func.f90	/^60    L=L+1$/;"	l	file:
60	func.f90	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	g.EAMal.f	/^60    CONTINUE$/;"	l	subroutine:EAMal	file:
60	g.dgetri.f	/^   60 CONTINUE$/;"	l	subroutine:DGETRI	file:
60	g.dlsode.f	/^   60       CONTINUE$/;"	l	subroutine:DGBFA	file:
60	g.dlsode.f	/^   60    CONTINUE$/;"	l	subroutine:DGBSL	file:
60	g.dlsode.f	/^   60    CONTINUE$/;"	l	subroutine:DGESL	file:
60	g.dlsode.f	/^   60 NS = N*INCX$/;"	l	function:MYDDOT	file:
60	g.dlsode.f	/^   60 NS = N*INCX$/;"	l	subroutine:MYDAXPY	file:
60	g.dlsode.f	/^ 60     DKY(I) = R*DKY(I)$/;"	l	subroutine:DINTDY	file:
60	g.dlsode.f	/^ 60   LYH = 21$/;"	l	subroutine:DLSODE	file:
60	g.finalio.f	/^60          FORMAT('AR ',3F20.10)$/;"	l	subroutine:FINALIO	file:
60	g.input.f	/^60    L=L+1$/;"	l	file:
60	g.input.f	/^60    M(I:I)=CHAR(L+I-1)$/;"	l	subroutine:READA	file:
60	g.input.f	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	g.ljcapsidmodule.f90	/^60    G = N + N$/;"	l	subroutine:SVERT	file:
60	g.minperm.f	/^   60    IF (K.EQ.0) THEN$/;"	l	subroutine:JOVOSAP	file:
60	g.minpermdist.f90	/^60 NCHOOSE1=0$/;"	l	subroutine:MINPERMDIST	file:
60	g.mylapack.f	/^   60                CONTINUE$/;"	l	subroutine:DPBTRF	file:
60	g.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBMV	file:
60	g.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBSV	file:
60	g.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPMV	file:
60	g.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPSV	file:
60	g.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRMV	file:
60	g.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRSV	file:
60	g.mylapack.f	/^   60          CONTINUE$/;"	l	subroutine:DTBSV	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGBMV	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGEMV	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSBMV	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPMV	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR2	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYMV	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR	file:
60	g.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR2	file:
60	g.mylapack.f	/^   60       CONTINUE$/;"	l	subroutine:DSYR	file:
60	g.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK1	file:
60	g.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK2	file:
60	g.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK3	file:
60	g.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK4	file:
60	g.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK5	file:
60	g.mylapack.f	/^   60 CONTINUE$/;"	l	subroutine:SMESSG	file:
60	g.ptgrp.f	/^60          CONTINUE$/;"	l	subroutine:PTGRP	file:
60	g.ptgrp.f	/^60       X(J)=-99999.D0$/;"	l	subroutine:SORTXYZ	file:
60	g.ptgrp.f	/^60    CONTINUE$/;"	l	subroutine:EIG	file:
60	g.tn.f	/^60    CONTINUE$/;"	l	subroutine:INITP3	file:
60	g.tn.f	/^60    CONTINUE$/;"	l	subroutine:LMQN	file:
60	g.tn.f	/^60    CONTINUE$/;"	l	subroutine:MSLV	file:
60	g.tn.f	/^60    IF (K .GT. 1) GO TO 70$/;"	l	subroutine:MODLNP	file:
60	g.tn.f	/^60    IF (U .LT. ZERO) GO TO 70$/;"	l	subroutine:GETPTC	file:
60	g.welch.f	/^   60       continue$/;"	l	subroutine:dgeco	file:
60	g.welch.f	/^   60    continue$/;"	l	subroutine:dgedi	file:
60	g.welch.f	/^   60 continue$/;"	l	subroutine:dgefa	file:
60	lbfgs.f	/^   60 ddot = dtemp$/;"	l	function:ddot	file:
60	lbfgs.f	/^ 60   FORMAT(' GRADIENT VECTOR G= ')$/;"	l	subroutine:LB1	file:
60	optim.EYtrap.f	/^60    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2C	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2CC	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2P	file:
60	optim.SW.f	/^60    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
60	optim.amber.f	/^60    CONTINUE$/;"	l	subroutine:aparams	file:
60	optim.aziz.f	/^60          CONTINUE$/;"	l	subroutine:AZIZ	file:
60	optim.c60diff.f	/^60          CONTINUE$/;"	l	subroutine:C60DIFF	file:
60	optim.c60p.f	/^60          CONTINUE$/;"	l	subroutine:C60P	file:
60	optim.connect.f	/^60          FORMAT(I4,1X,F16.7,G12.5,F16.7,G12.5,F16.7,F8.3,F8.3,F8.3,F8.3)$/;"	l	subroutine:CLEANUP	file:
60	optim.dctrap.f	/^60    CONTINUE$/;"	l	subroutine:DCTRAP	file:
60	optim.dqag.f	/^   60 CONTINUE$/;"	l	subroutine:XERPRN	file:
60	optim.dqag.f	/^   60 IF(KEYF.NE.1) NEVAL = (10*KEYF+1)*(2*NEVAL+1)$/;"	l	subroutine:DQAGE	file:
60	optim.dqag.f	/^   60 IORD(I-1) = MAXERR$/;"	l	subroutine:DQPSRT	file:
60	optim.dsygvx.f	/^   60    CONTINUE$/;"	l	subroutine:DLACPY	file:
60	optim.dsygvx.f	/^   60    CONTINUE$/;"	l	subroutine:DSYEVX	file:
60	optim.dtrap.f	/^60    CONTINUE$/;"	l	subroutine:DTRAP	file:
60	optim.efol.f90	/^60    FORMAT (' Beginning of optimization cycle ', I4,'.',\/&$/;"	l	subroutine:EFOL	file:
60	optim.eig.f	/^60    CONTINUE$/;"	l	subroutine:EIG	file:
60	optim.escp.f	/^60          CONTINUE$/;"	l	subroutine:DSCP	file:
60	optim.h2o.f	/^60    CONTINUE $/;"	l	subroutine:DRVTV	file:
60	optim.input.f	/^60    L=L+1$/;"	l	file:
60	optim.input.f	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	optim.ions.f	/^60          CONTINUE$/;"	l	subroutine:IONS	file:
60	optim.latmin.f	/^60    CONTINUE$/;"	l	subroutine:LATMIN	file:
60	optim.ljpshift.f	/^60    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
60	optim.mdiff.f	/^60          CONTINUE$/;"	l	subroutine:MDIFF	file:
60	optim.mied.f	/^60          CONTINUE$/;"	l	subroutine:MIED	file:
60	optim.minperm.f	/^   60    IF (K.EQ.0) THEN$/;"	l	subroutine:JOVOSAP	file:
60	optim.minpermdist.f90	/^60 NCHOOSE1=0$/;"	l	subroutine:MINPERMDIST	file:
60	optim.minpermdistrbcom.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
60	optim.mpdiff.f	/^60          CONTINUE$/;"	l	subroutine:MPDIFF	file:
60	optim.mpdiff.f	/^60          CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
60	optim.msdiff.f	/^60          CONTINUE$/;"	l	subroutine:MSDIFF	file:
60	optim.mylapack.f	/^   60                CONTINUE$/;"	l	subroutine:DPBTRF	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBMV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBSV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPMV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPSV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRMV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRSV	file:
60	optim.mylapack.f	/^   60          CONTINUE$/;"	l	subroutine:DTBSV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGBMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGEMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSBMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR2	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR2	file:
60	optim.mylapack.f	/^   60       CONTINUE$/;"	l	subroutine:DSYR	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK1	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK2	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK3	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK4	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK5	file:
60	optim.mylapack.f	/^   60 CONTINUE$/;"	l	subroutine:SMESSG	file:
60	optim.path.f	/^60       FORMAT(F17.7,G12.5,F17.7,G12.5,F17.7,F8.3,F8.3,F8.3,F8.3)$/;"	l	subroutine:PATH	file:
60	optim.projh.f	/^   60       continue$/;"	l	subroutine:dgeco	file:
60	optim.projh.f	/^   60    continue$/;"	l	subroutine:dgedi	file:
60	optim.projh.f	/^   60 continue$/;"	l	subroutine:dgefa	file:
60	optim.rbperm.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
60	optim.scdiff.f	/^60          CONTINUE$/;"	l	subroutine:SCDIFF	file:
60	optim.symmetry.f	/^60          CONTINUE$/;"	l	subroutine:SYMMETRY	file:
60	optim.unrescalcdihe.f	/^ 60   CONTINUE$/;"	l	subroutine:UEDITRGYR	file:
60	optim.unrestransform.f	/^   60  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
60	pathsample.dsort.f	/^   60 CONTINUE$/;"	l	subroutine:XERPRN	file:
60	pathsample.dsort.f	/^   60 M = M-1$/;"	l	subroutine:DSORT	file:
60	pathsample.eig.f	/^60    CONTINUE$/;"	l	subroutine:EIG	file:
60	pathsample.input.f	/^60    L=L+1$/;"	l	file:
60	pathsample.input.f	/^60    M(I:I)=CHAR(L+I-1)$/;"	l	subroutine:READA	file:
60	pathsample.input.f	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	pathsample.mergedb.f90	/^60 CONTINUE$/;"	l	subroutine:MERGEDB	file:
60	pathsample.minperm.f	/^   60    IF (K.EQ.0) THEN$/;"	l	subroutine:JOVOSAP	file:
60	pathsample.minpermdist.f90	/^60 NCHOOSE1=0$/;"	l	subroutine:MINPERMDIST	file:
60	pathsample.minpermdistrbcom.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
60	pathsample.rbperm.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
60	pathsample.reweight.f	/^   60          CONTINUE$/;"	l	function:DLANTR	file:
60	pathsample.reweight.f	/^   60          CONTINUE$/;"	l	subroutine:DGERFS	file:
60	pathsample.reweight.f	/^   60       CONTINUE$/;"	l	subroutine:DLATRS	file:
60	pathsample.reweight.f	/^   60    CONTINUE$/;"	l	subroutine:DGEEQU	file:
60	pathsample.reweight.f	/^   60    CONTINUE$/;"	l	subroutine:DGESVX	file:
60	pathsample.reweight.f	/^   60    CONTINUE$/;"	l	subroutine:DLAQGE	file:
60	pathsample.reweight.f	/^   60 CONTINUE$/;"	l	subroutine:DLACN2	file:
60	pathsample.reweight.f	/^   60 CONTINUE$/;"	l	subroutine:DLACON	file:
600	g.dgetrf.f	/^  600 CONTINUE $/;"	l	function:ILAENV	file:
600	g.dlsode.f	/^ 600    YH(I,NEWQ+1) = ACOR(I)*R$/;"	l	subroutine:DSTODE	file:
600	g.ptgrp.f	/^600            CONTINUE$/;"	l	subroutine:PTGRP	file:
600	optim.symmetry.f	/^600            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
601	g.dlsode.f	/^ 601  MSG = 'DLSODE-  ISTATE (=I1) illegal '$/;"	l	subroutine:DLSODE	file:
602	g.dlsode.f	/^ 602  MSG = 'DLSODE-  ITASK (=I1) illegal  '$/;"	l	subroutine:DLSODE	file:
603	g.dlsode.f	/^ 603  MSG = 'DLSODE-  ISTATE .GT. 1 but DLSODE not initialized '$/;"	l	subroutine:DLSODE	file:
604	g.dlsode.f	/^ 604  MSG = 'DLSODE-  NEQ (=I1) .LT. 1     '$/;"	l	subroutine:DLSODE	file:
605	g.dlsode.f	/^ 605  MSG = 'DLSODE-  ISTATE = 3 and NEQ increased (I1 to I2)  '$/;"	l	subroutine:DLSODE	file:
606	g.dlsode.f	/^ 606  MSG = 'DLSODE-  ITOL (=I1) illegal   '$/;"	l	subroutine:DLSODE	file:
607	g.dlsode.f	/^ 607  MSG = 'DLSODE-  IOPT (=I1) illegal   '$/;"	l	subroutine:DLSODE	file:
608	g.dlsode.f	/^ 608  MSG = 'DLSODE-  MF (=I1) illegal     '$/;"	l	subroutine:DLSODE	file:
609	g.dlsode.f	/^ 609  MSG = 'DLSODE-  ML (=I1) illegal.. .LT.0 or .GE.NEQ (=I2)'$/;"	l	subroutine:DLSODE	file:
61	g.finalio.f	/^61      FORMAT('ATOM',4X,i3,2X,A2,2X,A3,3X,i3,4X,F8.3,F8.3,F8.3,2X,'1.00',2X,'0.00',6X,'TPDB',1x,I3)$/;"	l	subroutine:FINALIO	file:
61	g.minperm.f	/^   61    T=T+1$/;"	l	subroutine:JOVOSAP	file:
61	g.ptgrp.f	/^61          CONTINUE$/;"	l	subroutine:PTGRP	file:
61	optim.minperm.f	/^   61    T=T+1$/;"	l	subroutine:JOVOSAP	file:
61	pathsample.minperm.f	/^   61    T=T+1$/;"	l	subroutine:JOVOSAP	file:
610	g.dlsode.f	/^ 610  IALTH = 3$/;"	l	subroutine:DSTODE	file:
610	g.dlsode.f	/^ 610  MSG = 'DLSODE-  MU (=I1) illegal.. .LT.0 or .GE.NEQ (=I2)'$/;"	l	subroutine:DLSODE	file:
610	g.ptgrp.f	/^610         CONTINUE$/;"	l	subroutine:PTGRP	file:
610	optim.symmetry.f	/^610         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
611	g.dlsode.f	/^ 611  MSG = 'DLSODE-  MAXORD (=I1) .LT. 0  '$/;"	l	subroutine:DLSODE	file:
612	g.dlsode.f	/^ 612  MSG = 'DLSODE-  MXSTEP (=I1) .LT. 0  '$/;"	l	subroutine:DLSODE	file:
613	g.dlsode.f	/^ 613  MSG = 'DLSODE-  MXHNIL (=I1) .LT. 0  '$/;"	l	subroutine:DLSODE	file:
614	g.dlsode.f	/^ 614  MSG = 'DLSODE-  TOUT (=R1) behind T (=R2)      '$/;"	l	subroutine:DLSODE	file:
615	g.dlsode.f	/^ 615  MSG = 'DLSODE-  HMAX (=R1) .LT. 0.0  '$/;"	l	subroutine:DLSODE	file:
616	g.dlsode.f	/^ 616  MSG = 'DLSODE-  HMIN (=R1) .LT. 0.0  '$/;"	l	subroutine:DLSODE	file:
617	g.dlsode.f	/^ 617  CONTINUE$/;"	l	subroutine:DLSODE	file:
618	g.dlsode.f	/^ 618  CONTINUE$/;"	l	subroutine:DLSODE	file:
619	g.dlsode.f	/^ 619  MSG = 'DLSODE-  RTOL(I1) is R1 .LT. 0.0        '$/;"	l	subroutine:DLSODE	file:
62	g.minperm.f	/^   62    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
62	optim.minperm.f	/^   62    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
62	pathsample.minperm.f	/^   62    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
620	g.dlsode.f	/^ 620  IF ((KFLAG .EQ. 0) .AND. (RH .LT. 1.1D0)) GO TO 610$/;"	l	subroutine:DSTODE	file:
620	g.dlsode.f	/^ 620  MSG = 'DLSODE-  ATOL(I1) is R1 .LT. 0.0        '$/;"	l	subroutine:DLSODE	file:
620	g.ptgrp.f	/^620      CONTINUE$/;"	l	subroutine:PTGRP	file:
620	optim.symmetry.f	/^620      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
621	g.dlsode.f	/^ 621  EWTI = RWORK(LEWT+I-1)$/;"	l	subroutine:DLSODE	file:
622	g.dlsode.f	/^ 622  CONTINUE$/;"	l	subroutine:DLSODE	file:
623	g.dlsode.f	/^ 623  CONTINUE$/;"	l	subroutine:DLSODE	file:
624	g.dlsode.f	/^ 624  CONTINUE$/;"	l	subroutine:DLSODE	file:
625	g.dlsode.f	/^ 625  CONTINUE$/;"	l	subroutine:DLSODE	file:
625	pathsample.amhdump.f90	/^625      CONTINUE$/;"	l	subroutine:AMHDUMP	file:
625	pathsample.amhdump.f90	/^625     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
626	g.dlsode.f	/^ 626  MSG = 'DLSODE-  At start of problem, too much accuracy   '$/;"	l	subroutine:DLSODE	file:
627	g.dlsode.f	/^ 627  MSG = 'DLSODE-  Trouble in DINTDY.  ITASK = I1, TOUT = R1'$/;"	l	subroutine:DLSODE	file:
63	g.minperm.f	/^   63    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
63	optim.minperm.f	/^   63    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
63	pathsample.minperm.f	/^   63    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
630	g.dlsode.f	/^ 630  NQ = NEWQ$/;"	l	subroutine:DSTODE	file:
630	g.ptgrp.f	/^630   ANG=180.D0$/;"	l	subroutine:PTGRP	file:
630	optim.symmetry.f	/^630   ANG = 180.D0$/;"	l	subroutine:SYMMETRY	file:
632	g.finalio.f	/^632            FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1X))$/;"	l	subroutine:FINALIO	file:
64	g.EAMal.f	/^64    CONTINUE$/;"	l	subroutine:EAMal	file:
64	g.minperm.f	/^   64    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
64	optim.minperm.f	/^   64    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
64	pathsample.minperm.f	/^   64    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
640	g.dlsode.f	/^ 640  IF (KFLAG .EQ. -10) GO TO 660$/;"	l	subroutine:DSTODE	file:
640	g.ptgrp.f	/^640         FORMAT(' Reflection in plane ',i2,' is a valid symmetry operation.')$/;"	l	subroutine:PTGRP	file:
640	optim.symmetry.f	/^640         FORMAT(' Reflection in plane ',i2,' is a valid ',$/;"	l	subroutine:SYMMETRY	file:
645	g.dlsode.f	/^ 645    Y(I) = YH(I,1)$/;"	l	subroutine:DSTODE	file:
65	func.f90	/^65    DO I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	func.f90	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	g.cgmin.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:CGMIN	file:
65	g.finalio.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:FINALIO	file:
65	g.input.f	/^65    DO 70 I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	g.input.f	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	g.minpermdist.f90	/^65 NCHOOSE1=NCHOOSE1+1$/;"	l	subroutine:MINPERMDIST	file:
65	g.mylbfgs.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:MYLBFGS	file:
65	g.quench.f	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:QUENCH	file:
65	g.quench.sim.f90	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:QUENCH	file:
65	g.tn.f	/^65    CONTINUE$/;"	l	subroutine:MSLV	file:
65	mylbfgs.old.f90	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:MYLBFGS	file:
65	optim.amber.f	/^65    CONTINUE$/;"	l	subroutine:aparams	file:
65	optim.input.f	/^65    DO I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	optim.input.f	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	optim.minpermdist.f90	/^65 NCHOOSE1=NCHOOSE1+1$/;"	l	subroutine:MINPERMDIST	file:
65	optim.minpermdistrbcom.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
65	optim.rbperm.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:RBMINPERMDIST	file:
65	pathsample.input.f	/^65    DO 70 I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	pathsample.input.f	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	pathsample.mergedb.f90	/^65 CONTINUE$/;"	l	subroutine:MERGEDB	file:
65	pathsample.minpermdist.f90	/^65 NCHOOSE1=NCHOOSE1+1$/;"	l	subroutine:MINPERMDIST	file:
65	pathsample.minpermdistrbcom.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
65	pathsample.rbperm.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:RBMINPERMDIST	file:
650	g.dlsode.f	/^ 650    YH(I,2) = H*SAVF(I)$/;"	l	subroutine:DSTODE	file:
650	g.ptgrp.f	/^650         FORMAT(' C2 rotation about ',i2,' is a valid symmetry operation ')$/;"	l	subroutine:PTGRP	file:
650	optim.symmetry.f	/^650         FORMAT(' Rotation about ',i2,' is a valid symmetry operation ')$/;"	l	subroutine:SYMMETRY	file:
651	g.ptgrp.f	/^651   Q(1:3*NATOMS)=QSAVE(1:3*NATOMS) ! otherwise the CofM can be reset differently $/;"	l	subroutine:PTGRP	file:
651	optim.symmetry.f	/^651   IHIGH=0$/;"	l	subroutine:SYMMETRY	file:
652	g.ptgrp.f	/^652   CONTINUE$/;"	l	subroutine:PTGRP	file:
652	optim.symmetry.f	/^652   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
653	g.ptgrp.f	/^653            FORMAT(A80)$/;"	l	subroutine:PTGRP	file:
653	optim.intlbfgs.f90	/^653         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
653	optim.symmetry.f	/^653              FORMAT(A80)$/;"	l	subroutine:SYMMETRY	file:
654	g.mc.F	/^654      CALL QUENCH(.FALSE.,JP,ITERATIONS,TIME,BRUN,QDONE,SCREENC)$/;"	l	subroutine:NEWRES	file:
654	optim.intlbfgs.f90	/^654          CONTINUE$/;"	l	subroutine:INTLBFGS	file:
659	optim.intlbfgs.f90	/^659         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
660	g.dlsode.f	/^ 660  KFLAG = -1$/;"	l	subroutine:DSTODE	file:
660	optim.symmetry.f	/^660   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
664	optim.potential.f	/^664            READ(7,'(A)',ERR=665) STRING$/;"	l	subroutine:POTENTIAL	file:
665	optim.potential.f	/^665            CONTINUE$/;"	l	subroutine:POTENTIAL	file:
666	g.JM.f	/^666      CLOSE(33)$/;"	l	subroutine:JMEC	file:
666	optim.JM.f	/^666      CLOSE(33)$/;"	l	subroutine:JMEC	file:
666	optim.bfgsts.f	/^666   CONTINUE$/;"	l	subroutine:CHECKIND	file:
666	optim.bfgsts.f	/^666   IF (.NOT.FIXD) THEN$/;"	l	subroutine:BFGSTS	file:
666	optim.dftb.f	/^666           CONTINUE$/;"	l	subroutine:DFDERIV1	file:
666	optim.efol.f90	/^666      J1=J1+1$/;"	l	subroutine:EFOL	file:
666	optim.h2o.f	/^666   CONTINUE$/;"	l	subroutine:H2O	file:
666	optim.hybridmin.f	/^666         J1=J1+1$/;"	l	subroutine:HYBRIDMIN	file:
666	optim.intbfgsts.f	/^666   IF (.NOT.FIXD) THEN$/;"	l	subroutine:INTBFGSTS	file:
666	optim.potential.f	/^666   WRITE(*,'(A)') ' potential> Error reading CADPAC or GAMES output'$/;"	l	subroutine:POTENTIAL	file:
666	pathsample.connect.f	/^666   CLOSE(1)$/;"	l	subroutine:CONNECT	file:
666	pathsample.newconn.f	/^666      CONTINUE$/;"	l	subroutine:NEWCONN	file:
67	func.f90	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
67	g.input.f	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
67	optim.input.f	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
67	pathsample.input.f	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
670	g.dlsode.f	/^ 670  KFLAG = -2$/;"	l	subroutine:DSTODE	file:
670	optim.symmetry.f	/^670   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
680	g.dlsode.f	/^ 680  KFLAG = -3$/;"	l	subroutine:DSTODE	file:
680	g.ptgrp.f	/^680      FORMAT(' The molecule possesses an inversion center. ')$/;"	l	subroutine:PTGRP	file:
680	optim.symmetry.f	/^680      FORMAT(' The molecule possesses an inversion center. ')$/;"	l	subroutine:SYMMETRY	file:
683	g.finalio.f	/^683         FORMAT(3(I6,1X),F8.4,1X,I5,' STUCT SNAP T T TID')$/;"	l	subroutine:FINALIO	file:
683	g.mc.F	/^683                  FORMAT(3(i6,1x),f8.4,1x,i5,' stuct snap t T Tid')$/;"	l	subroutine:MC	file:
683	g.mc.sim.f90	/^683                  FORMAT(3(i6,1x),f8.4,1x,i5,' stuct snap t T Tid')$/;"	l	subroutine:MC	file:
683	pathsample.amhdump.f90	/^683         FORMAT(3(I6,1X),F8.4,1X,I5,' STUCT SNAP T T TID')$/;"	l	subroutine:AMHDUMP	file:
690	g.dlsode.f	/^ 690  RMAX = 10.0D0$/;"	l	subroutine:DSTODE	file:
690	g.ptgrp.f	/^690   FORMAT ('Symmetry bits: ',3(1X,I3))$/;"	l	subroutine:PTGRP	file:
690	optim.symmetry.f	/^690   FORMAT ('Symmetry bits: ',3(1X,I3))$/;"	l	subroutine:SYMMETRY	file:
699	optim.msevb.f90	/^ 699     enddo             $/;"	l	subroutine:vh2ointer	file:
7	g.fedor.f	/^    7 COEF(1,K,J)=ENF(N1+K-1)$/;"	l	function:ar2UT0	file:
70	func.f90	/^70    ITEM=0$/;"	l	file:
70	func.f90	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	func.f90	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	g.Farkas.f	/^70    continue$/;"	l	subroutine:ALINIT	file:
70	g.Farkas.f	/^70    continue$/;"	l	subroutine:NIINIT	file:
70	g.dlsode.f	/^   70          CONTINUE$/;"	l	subroutine:DGBFA	file:
70	g.dlsode.f	/^   70          CONTINUE$/;"	l	subroutine:DGBSL	file:
70	g.dlsode.f	/^   70       CONTINUE$/;"	l	subroutine:DGESL	file:
70	g.dlsode.f	/^   70 CONTINUE$/;"	l	function:MYDDOT	file:
70	g.dlsode.f	/^   70 CONTINUE$/;"	l	subroutine:MYDAXPY	file:
70	g.dlsode.f	/^ 70     CONTINUE$/;"	l	subroutine:DLSODE	file:
70	g.input.f	/^70    ITEM=0$/;"	l	file:
70	g.input.f	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	g.input.f	/^70    M(I:I)=SPACE$/;"	l	subroutine:READA	file:
70	g.input.f	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	g.ljcapsidmodule.f90	/^70              W(I) = 0.$/;"	l	subroutine:SVERT	file:
70	g.minperm.f	/^   70    IF (MIN.EQ.0) GOTO 80$/;"	l	subroutine:JOVOSAP	file:
70	g.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBMV	file:
70	g.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBSV	file:
70	g.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPMV	file:
70	g.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPSV	file:
70	g.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRMV	file:
70	g.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRSV	file:
70	g.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGBMV	file:
70	g.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGEMV	file:
70	g.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR	file:
70	g.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR2	file:
70	g.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR	file:
70	g.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR2	file:
70	g.mylapack.f	/^   70                CONTINUE$/;"	l	subroutine:DTBSV	file:
70	g.mylapack.f	/^   70             CONTINUE$/;"	l	subroutine:DSYR	file:
70	g.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSBMV	file:
70	g.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSPMV	file:
70	g.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSYMV	file:
70	g.mylapack.f	/^   70       CONTINUE$/;"	l	subroutine:DPBTRF	file:
70	g.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK2	file:
70	g.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK4	file:
70	g.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK5	file:
70	g.mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SCHCK3	file:
70	g.mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SMESSG	file:
70	g.ptgrp.f	/^70    CONTINUE$/;"	l	subroutine:EIG	file:
70	g.ptgrp.f	/^70    CONTINUE$/;"	l	subroutine:SORTXYZ	file:
70	g.quench.f	/^70          FORMAT(1X,'QUENCH NUMBER ',I6,' final energy=',F20.10,' RMS force=',E20.10)$/;"	l	subroutine:QUENCH	file:
70	g.quench.sim.f90	/^70          FORMAT(1X,'QUENCH NUMBER ',I6,' final energy=',F20.10,' RMS force=',E20.10)$/;"	l	subroutine:QUENCH	file:
70	g.tn.f	/^70    A = U$/;"	l	subroutine:GETPTC	file:
70	g.tn.f	/^70    CONTINUE$/;"	l	subroutine:INITP3	file:
70	g.tn.f	/^70    CONTINUE$/;"	l	subroutine:LMQN	file:
70	g.tn.f	/^70    CONTINUE$/;"	l	subroutine:MODLNP	file:
70	g.welch.f	/^   70          continue$/;"	l	subroutine:dgeco	file:
70	g.welch.f	/^   70 continue$/;"	l	subroutine:dgedi	file:
70	g.welch.f	/^   70 continue$/;"	l	subroutine:dgefa	file:
70	lbfgs.f	/^ 70   FORMAT(\/'   I   NFN',4X,'FUNC',8X,'GNORM',7X,'STEPLENGTH'\/)$/;"	l	subroutine:LB1	file:
70	optim.EYtrap.f	/^70       CONTINUE$/;"	l	subroutine:EYDTRAP	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2C	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2CC	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2P	file:
70	optim.amber.f	/^70    CONTINUE$/;"	l	subroutine:aparams	file:
70	optim.aziz.f	/^70       CONTINUE$/;"	l	subroutine:AZIZ	file:
70	optim.c60diff.f	/^70       CONTINUE$/;"	l	subroutine:C60DIFF	file:
70	optim.c60p.f	/^70       CONTINUE$/;"	l	subroutine:C60P	file:
70	optim.dctrap.f	/^70       CONTINUE$/;"	l	subroutine:DCTRAP	file:
70	optim.dqag.f	/^   70 CONTINUE$/;"	l	subroutine:DQPSRT	file:
70	optim.dtrap.f	/^70       CONTINUE$/;"	l	subroutine:DTRAP	file:
70	optim.efol.f90	/^70    CONTINUE$/;"	l	subroutine:EFOL	file:
70	optim.eig.f	/^70    CONTINUE$/;"	l	subroutine:EIG	file:
70	optim.escp.f	/^70       CONTINUE$/;"	l	subroutine:DSCP	file:
70	optim.h2o.f	/^   70 CONTINUE $/;"	l	subroutine:DRVTV	file:
70	optim.input.f	/^70    ITEM=0$/;"	l	file:
70	optim.input.f	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	optim.input.f	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	optim.ions.f	/^70       CONTINUE$/;"	l	subroutine:IONS	file:
70	optim.mdiff.f	/^70       CONTINUE$/;"	l	subroutine:MDIFF	file:
70	optim.mied.f	/^70       CONTINUE$/;"	l	subroutine:MIED	file:
70	optim.minperm.f	/^   70    IF (MIN.EQ.0) GOTO 80$/;"	l	subroutine:JOVOSAP	file:
70	optim.mlatmin.f	/^70    CONTINUE$/;"	l	subroutine:MLATMIN	file:
70	optim.mpdiff.f	/^70       CONTINUE$/;"	l	subroutine:MPDIFF	file:
70	optim.mpdiff.f	/^70       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
70	optim.msdiff.f	/^70       CONTINUE$/;"	l	subroutine:MSDIFF	file:
70	optim.mslatmin.f	/^70    CONTINUE$/;"	l	subroutine:MSLATMIN	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBMV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBSV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPMV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPSV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRMV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRSV	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGBMV	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGEMV	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR2	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR2	file:
70	optim.mylapack.f	/^   70                CONTINUE$/;"	l	subroutine:DTBSV	file:
70	optim.mylapack.f	/^   70             CONTINUE$/;"	l	subroutine:DSYR	file:
70	optim.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSBMV	file:
70	optim.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSPMV	file:
70	optim.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSYMV	file:
70	optim.mylapack.f	/^   70       CONTINUE$/;"	l	subroutine:DPBTRF	file:
70	optim.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK2	file:
70	optim.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK4	file:
70	optim.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK5	file:
70	optim.mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SCHCK3	file:
70	optim.mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SMESSG	file:
70	optim.projh.f	/^   70          continue$/;"	l	subroutine:dgeco	file:
70	optim.projh.f	/^   70 continue$/;"	l	subroutine:dgedi	file:
70	optim.projh.f	/^   70 continue$/;"	l	subroutine:dgefa	file:
70	optim.scdiff.f	/^70       CONTINUE$/;"	l	subroutine:SCDIFF	file:
70	optim.sortxyz.f	/^70    CONTINUE$/;"	l	subroutine:SORTXYZ	file:
70	optim.symmetry.f	/^70       CONTINUE$/;"	l	subroutine:SYMMETRY	file:
70	pathsample.dsort.f	/^   70 IF (J-I .GE. 1) GO TO 30$/;"	l	subroutine:DSORT	file:
70	pathsample.eig.f	/^70    CONTINUE$/;"	l	subroutine:EIG	file:
70	pathsample.input.f	/^70    ITEM=0$/;"	l	file:
70	pathsample.input.f	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	pathsample.input.f	/^70    M(I:I)=SPACE$/;"	l	subroutine:READA	file:
70	pathsample.input.f	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	pathsample.minperm.f	/^   70    IF (MIN.EQ.0) GOTO 80$/;"	l	subroutine:JOVOSAP	file:
70	pathsample.reweight.f	/^   70             CONTINUE$/;"	l	function:DLANTR	file:
70	pathsample.reweight.f	/^   70          CONTINUE$/;"	l	subroutine:DGESVX	file:
70	pathsample.reweight.f	/^   70       CONTINUE$/;"	l	subroutine:DGERFS	file:
70	pathsample.reweight.f	/^   70       CONTINUE$/;"	l	subroutine:DLATRS	file:
70	pathsample.reweight.f	/^   70 CONTINUE$/;"	l	subroutine:DGEEQU	file:
70	pathsample.reweight.f	/^   70 CONTINUE$/;"	l	subroutine:DLACN2	file:
70	pathsample.reweight.f	/^   70 CONTINUE$/;"	l	subroutine:DLACON	file:
700	g.dgetrf.f	/^  700 CONTINUE$/;"	l	function:ILAENV	file:
700	g.dlsode.f	/^ 700  ISTATE = -3$/;"	l	subroutine:DLSODE	file:
700	g.dlsode.f	/^ 700  R = 1.0D0\/TESCO(2,NQU)$/;"	l	subroutine:DSTODE	file:
71	func.f90	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	g.input.f	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	g.minperm.f	/^   71    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
71	optim.input.f	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	optim.minperm.f	/^   71    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
71	optim.unrescalcdihe.f	/^ 71   FORMAT(\/' RGYR:'\/)$/;"	l	subroutine:UEDITRGYR	file:
71	pathsample.input.f	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	pathsample.minperm.f	/^   71    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
710	g.dlsode.f	/^ 710    ACOR(I) = ACOR(I)*R$/;"	l	subroutine:DSTODE	file:
72	func.f90	/^72    AD=I$/;"	l	subroutine:READF	file:
72	g.input.f	/^72    AD=I$/;"	l	subroutine:READF	file:
72	optim.input.f	/^72    AD=I$/;"	l	subroutine:READF	file:
72	optim.unrescalcdihe.f	/^ 72   FORMAT(\/' RGYR:  Mass weighted results:'\/)$/;"	l	subroutine:UEDITRGYR	file:
72	pathsample.input.f	/^72    AD=I$/;"	l	subroutine:READF	file:
720	g.dlsode.f	/^ 720  HOLD = H$/;"	l	subroutine:DSTODE	file:
73	g.mc.F	/^73                   FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' TABOO')$/;"	l	subroutine:MC	file:
73	g.mc.sim.f90	/^73                   FORMAT('JP,J1,POTEL,EPREV,NSUC,NFAIL=',I2,I6,2F15.7,2I6,' TABOO')$/;"	l	subroutine:MC	file:
73	optim.unrescalcdihe.f	/^ 73   FORMAT(\/' RGYR:  Geometric results:'\/)$/;"	l	subroutine:UEDITRGYR	file:
74	optim.unrescalcdihe.f	/^ 74   FORMAT(\/'       Radius of gyration=',F12.5,5X,$/;"	l	subroutine:UEDITRGYR	file:
740	optim.symmetry.f	/^740   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
75	g.seed.f	/^75    FORMAT('Coordinates:')$/;"	l	subroutine:GSEED	file:
750	g.ptgrp.f	/^750      FORMAT(' The full molecular point group is ',A4,'.')$/;"	l	subroutine:PTGRP	file:
750	optim.symmetry.f	/^750      FORMAT(' symmetry> The full molecular point group is ',A4,'.')$/;"	l	subroutine:SYMMETRY	file:
754	optim.h2o.f	/^754   CONTINUE$/;"	l	subroutine:H2O	file:
76	optim.fetchz.f	/^76                format(3(G25.15))$/;"	l	subroutine:FETCHZ	file:
76	optim.geopt.f	/^76                format(A2,3(F20.10))$/;"	l	subroutine:GEOPT	file:
760	g.ptgrp.f	/^760   FORMAT(' Distance tolerance=',F12.5,' Inertia tolerance=',F12.5,' Orbit tolerance=',F12.5)  $/;"	l	subroutine:PTGRP	file:
760	optim.symmetry.f	/^760   FORMAT(' symmetry> Distance tolerance=',F12.5,' Inertia tolerance=',F12.5)  $/;"	l	subroutine:SYMMETRY	file:
764	optim.fetchz.f	/^764    CONTINUE$/;"	l	subroutine:FETCHZ	file:
77	optim.morph.f	/^77    CALL POTENTIAL(COORDS,ENERGY,GRAD,.TRUE.,.FALSE.,RMS,.FALSE.,.FALSE.)$/;"	l	subroutine:MORPH	file:
770	g.ptgrp.f	/^770   FORMAT(80('*'))$/;"	l	subroutine:PTGRP	file:
770	optim.symmetry.f	/^770   FORMAT(80('*'))$/;"	l	subroutine:SYMMETRY	file:
772	optim.TIPmodes.f	/^772   CONTINUE $/;"	l	subroutine:H2OMODES	file:
775	optim.symmetry.f	/^775      FORMAT(A1,I1,A1)$/;"	l	subroutine:SYMMETRY	file:
776	optim.symmetry.f	/^776      FORMAT(A1,I2,A1)$/;"	l	subroutine:SYMMETRY	file:
777	optim.intlbfgs.f90	/^   777 CONTINUE$/;"	l	subroutine:INTLBFGS	file:
777	optim.intlbfgslj.f90	/^   777 CONTINUE$/;"	l	subroutine:INTLBFGSLJ	file:
777	optim.symmetry.f	/^777      FORMAT(A3)$/;"	l	subroutine:SYMMETRY	file:
777	pathsample.connectd.f90	/^777 CONTINUE$/;"	l	subroutine:CONNECTD	file:
777	pathsample.connectdist.f90	/^777 CONTINUE$/;"	l	subroutine:CONNECTDIST	file:
777	pathsample.getppair.f90	/^777      CONTINUE$/;"	l	subroutine:GETPPAIR	file:
777	pathsample.newconn.f	/^777         LASTONE=LASTONE+1$/;"	l	subroutine:NEWCONN	file:
777	pathsample.regroupfree2.f90	/^777 CONTINUE ! End of iterative regrouping loop.$/;"	l	subroutine:REGROUPFREE2	file:
777	ps.setup.extractmin.inc.f90	/^777         NDUMMY=NDUMMY-1$/;"	l	file:
7777	g.ptmc.F	/^7777        RANDOM=DPRAND()$/;"	l	subroutine:PARALLELTEMPERING	file:
778	ps.setup.extractts.inc.f90	/^778         NDUMMY=NDUMMY-1$/;"	l	file:
790	g.ptgrp.f	/^790   FORMAT(' The largest Abelian subgroup of the full molecular point group is ',A4,'.')$/;"	l	subroutine:PTGRP	file:
790	optim.symmetry.f	/^790   FORMAT(' symmetry> The largest Abelian subgroup of the full molecular point group is ',A4,'.')$/;"	l	subroutine:SYMMETRY	file:
799	optim.msevb.f90	/^ 799     enddo$/;"	l	subroutine:vh2ointra	file:
8	g.takestep.f	/^8        IF (NCORE(NP).GT.0) THEN$/;"	l	subroutine:TAKESTEP	file:
8	optim.dqag.f	/^    8   IF(ERROR2.GT.ERROR1) GO TO 10$/;"	l	subroutine:DQAGE	file:
80	func.f90	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	func.f90	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	g.Farkas.f	/^80    lfpair=i-1$/;"	l	subroutine:ALINIT	file:
80	g.Farkas.f	/^80    lfpair=i-1$/;"	l	subroutine:NIINIT	file:
80	g.dftb.f	/^80       FORMAT(3F15.5)$/;"	l	subroutine:DFTB	file:
80	g.dlsode.f	/^   80       CONTINUE$/;"	l	subroutine:DGBFA	file:
80	g.dlsode.f	/^   80       CONTINUE$/;"	l	subroutine:DGBSL	file:
80	g.dlsode.f	/^   80    CONTINUE$/;"	l	subroutine:DGESL	file:
80	g.dlsode.f	/^ 80     RWORK(I+LSAVF-1) = RWORK(I+LWM-1)$/;"	l	subroutine:DLSODE	file:
80	g.dlsode.f	/^ 80   MSG = 'DINTDY-  K (=I1) illegal      '$/;"	l	subroutine:DINTDY	file:
80	g.input.f	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	g.input.f	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	g.ljcapsidmodule.f90	/^80         IF ( K .EQ. N ) GOTO 100$/;"	l	subroutine:SVERT	file:
80	g.minperm.f	/^   80    I=LAB(J)$/;"	l	subroutine:JOVOSAP	file:
80	g.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBMV	file:
80	g.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBSV	file:
80	g.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPMV	file:
80	g.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPSV	file:
80	g.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRMV	file:
80	g.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRSV	file:
80	g.mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DPBTRF	file:
80	g.mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DTBSV	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGBMV	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGEMV	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSBMV	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPMV	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR2	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYMV	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR	file:
80	g.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR2	file:
80	g.mylapack.f	/^   80       CONTINUE$/;"	l	subroutine:DSYR	file:
80	g.mylapack.f	/^   80     CONTINUE$/;"	l	subroutine:SCHCK1	file:
80	g.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK2	file:
80	g.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK3	file:
80	g.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK4	file:
80	g.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK5	file:
80	g.ptgrp.f	/^80    S=SQRT(0.250D0*(P-R)**2+Q**2)$/;"	l	subroutine:EIG	file:
80	g.quench.f	/^80          FORMAT(A2,3F20.10)$/;"	l	subroutine:QUENCH	file:
80	g.quench.sim.f90	/^80          FORMAT(A2,3F20.10)$/;"	l	subroutine:QUENCH	file:
80	g.seed.f	/^80    FORMAT(3F15.5)$/;"	l	subroutine:GSEED	file:
80	g.tn.f	/^80    CONTINUE$/;"	l	subroutine:INITP3	file:
80	g.tn.f	/^80    CONTINUE$/;"	l	subroutine:MODLNP	file:
80	g.tn.f	/^80    IRESET = IRESET + 1$/;"	l	subroutine:LMQN	file:
80	g.tn.f	/^80    XW = U$/;"	l	subroutine:GETPTC	file:
80	g.welch.f	/^   80       continue$/;"	l	subroutine:dgeco	file:
80	g.welch.f	/^   80       continue$/;"	l	subroutine:dgedi	file:
80	lbfgs.f	/^ 80   FORMAT(2(I4,1X),3X,3(1PD10.3,2X))$/;"	l	subroutine:LB1	file:
80	lbfgs.f	/^ 80   ITER= ITER+1$/;"	l	subroutine:LBFGS	file:
80	optim.EYtrap.f	/^80          CONTINUE$/;"	l	subroutine:EYDTRAP	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2C	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2CC	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2P	file:
80	optim.amber.f	/^80     CONTINUE$/;"	l	subroutine:aparams	file:
80	optim.aziz.f	/^80    CONTINUE$/;"	l	subroutine:AZIZ	file:
80	optim.bfgsts.f	/^80       NMDONE=INEG$/;"	l	subroutine:CHECKIND	file:
80	optim.bfgsts.f	/^80    CONTINUE$/;"	l	subroutine:ITEIG	file:
80	optim.bfgsts.f	/^80    NMDONE=INEG$/;"	l	subroutine:CHECKIND2	file:
80	optim.c60diff.f	/^80    CONTINUE$/;"	l	subroutine:C60DIFF	file:
80	optim.c60p.f	/^80    CONTINUE$/;"	l	subroutine:C60P	file:
80	optim.dctrap.f	/^80          CONTINUE$/;"	l	subroutine:DCTRAP	file:
80	optim.dqag.f	/^   80 IORD(K+1) = LAST$/;"	l	subroutine:DQPSRT	file:
80	optim.dtrap.f	/^80          CONTINUE$/;"	l	subroutine:DTRAP	file:
80	optim.eig.f	/^80    S=SQRT(0.250*(P-R)**2+Q**2)$/;"	l	subroutine:EIG	file:
80	optim.escp.f	/^80    CONTINUE$/;"	l	subroutine:DSCP	file:
80	optim.input.f	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	optim.input.f	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	optim.ions.f	/^80    CONTINUE$/;"	l	subroutine:IONS	file:
80	optim.mdiff.f	/^80    CONTINUE$/;"	l	subroutine:MDIFF	file:
80	optim.mied.f	/^80    CONTINUE$/;"	l	subroutine:MIED	file:
80	optim.minperm.f	/^   80    I=LAB(J)$/;"	l	subroutine:JOVOSAP	file:
80	optim.mpdiff.f	/^80    CONTINUE$/;"	l	subroutine:MPDIFF	file:
80	optim.mpdiff.f	/^80    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
80	optim.msdiff.f	/^80    CONTINUE$/;"	l	subroutine:MSDIFF	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBMV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBSV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPMV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPSV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRMV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRSV	file:
80	optim.mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DPBTRF	file:
80	optim.mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DTBSV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGBMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGEMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSBMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR2	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR2	file:
80	optim.mylapack.f	/^   80       CONTINUE$/;"	l	subroutine:DSYR	file:
80	optim.mylapack.f	/^   80     CONTINUE$/;"	l	subroutine:SCHCK1	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK2	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK3	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK4	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK5	file:
80	optim.projh.f	/^   80       continue$/;"	l	subroutine:dgeco	file:
80	optim.projh.f	/^   80       continue$/;"	l	subroutine:dgedi	file:
80	optim.scdiff.f	/^80    CONTINUE$/;"	l	subroutine:SCDIFF	file:
80	optim.symmetry.f	/^80       CONTINUE$/;"	l	subroutine:SYMMETRY	file:
80	optim.utils.f	/^ 80   FORMAT(3(1X,F10.5))$/;"	l	subroutine:COMPARE2	file:
80	pathsample.dsort.f	/^   80 I = I+1$/;"	l	subroutine:DSORT	file:
80	pathsample.eig.f	/^80    S=SQRT(0.250*(P-R)**2+Q**2)$/;"	l	subroutine:EIG	file:
80	pathsample.input.f	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	pathsample.input.f	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	pathsample.minperm.f	/^   80    I=LAB(J)$/;"	l	subroutine:JOVOSAP	file:
80	pathsample.reweight.f	/^   80          CONTINUE$/;"	l	function:DLANTR	file:
80	pathsample.reweight.f	/^   80       CONTINUE$/;"	l	subroutine:DGESVX	file:
80	pathsample.reweight.f	/^   80    CONTINUE$/;"	l	subroutine:DGEEQU	file:
80	pathsample.reweight.f	/^   80    CONTINUE$/;"	l	subroutine:DGERFS	file:
80	pathsample.reweight.f	/^   80    CONTINUE$/;"	l	subroutine:DLATRS	file:
80	pathsample.reweight.f	/^   80 CONTINUE$/;"	l	subroutine:DLACN2	file:
80	pathsample.reweight.f	/^   80 CONTINUE$/;"	l	subroutine:DLACON	file:
800	func.f90	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
800	g.dgetrf.f	/^  800 CONTINUE$/;"	l	function:ILAENV	file:
800	g.dlsode.f	/^ 800  MSG = 'DLSODE-  Run aborted.. apparent infinite loop     '$/;"	l	subroutine:DLSODE	file:
800	g.input.f	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
800	g.tn.f	/^800   FORMAT(' ',I4,1X,I4,1X,I4,1X,1PD22.15,2X,1PD15.8)$/;"	l	subroutine:MONIT	file:
800	g.tn.f	/^800   FORMAT(' ',\/\/,' ENTERING MODLNP')$/;"	l	subroutine:MODLNP	file:
800	g.tn.f	/^800   FORMAT(' ',\/\/8X,'DMIN =',1PD12.4,'  DMAX =',1PD12.4,$/;"	l	subroutine:INITP3	file:
800	g.tn.f	/^800   FORMAT(' *** EMAT NEGATIVE:  ',1PD16.8)$/;"	l	subroutine:NDIA3	file:
800	g.tn.f	/^800   FORMAT(\/\/' NIT   NF   CG', 9X, 'F', 21X, 'GTG',\/\/)$/;"	l	subroutine:LMQN	file:
800	g.tn.f	/^800   FORMAT(\/\/,' WARNING: TN ERROR CODE =', I3)$/;"	l	subroutine:TN	file:
800	g.tn.f	/^800   FORMAT(\/\/\/' OUTPUT FROM LINEAR SEARCH')$/;"	l	subroutine:LSOUT	file:
800	optim.input.f	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
800	optim.symmetry.f	/^800      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
800	pathsample.KMCcommit.f	/^800   CONTINUE$/;"	l	subroutine:KMCCOMMIT	file:
800	pathsample.input.f	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
81	func.f90	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
81	g.input.f	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
81	optim.input.f	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
81	optim.sortc.f	/^ 81   CONTINUE$/;"	l	subroutine:SortC	file:
81	pathsample.input.f	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
810	g.tn.f	/^810   FORMAT('  TOL AND EPS'\/2D25.14)$/;"	l	subroutine:LSOUT	file:
810	g.tn.f	/^810   FORMAT(' ',I3,1X,I4,1X,I4,1X,1PD22.15,2X,1PD15.8)$/;"	l	subroutine:LMQN	file:
810	g.tn.f	/^810   FORMAT(' ',\/\/,' ### ITERATION ',I2,' ###')$/;"	l	subroutine:MODLNP	file:
820	g.tn.f	/^820   FORMAT('  CURRENT UPPER AND LOWER BOUNDS'\/2D25.14)$/;"	l	subroutine:LSOUT	file:
820	g.tn.f	/^820   FORMAT(' ALPHA',1PD16.8)$/;"	l	subroutine:MODLNP	file:
830	g.tn.f	/^830   FORMAT('  STRICT UPPER BOUND'\/D25.14)$/;"	l	subroutine:LSOUT	file:
830	g.tn.f	/^830   FORMAT(' G(T)Z POSITIVE AT ITERATION ',I2,$/;"	l	subroutine:MODLNP	file:
840	g.tn.f	/^840   FORMAT('  XW, FW, GW'\/3D25.14)$/;"	l	subroutine:LSOUT	file:
840	g.tn.f	/^840   FORMAT(' ',10X,'HESSIAN NOT POSITIVE-DEFINITE')$/;"	l	subroutine:MODLNP	file:
850	g.tn.f	/^850   FORMAT('  XMIN, FMIN, GMIN'\/3D25.14)$/;"	l	subroutine:LSOUT	file:
850	g.tn.f	/^850   FORMAT(' ',\/,8X,'MODLAN TRUNCATED AFTER ',I3,' ITERATIONS',$/;"	l	subroutine:MODLNP	file:
860	g.tn.f	/^860   FORMAT('  NEW ESTIMATE'\/2D25.14)$/;"	l	subroutine:LSOUT	file:
860	g.tn.f	/^860   FORMAT(' PRECONDITIONING NOT POSITIVE-DEFINITE')$/;"	l	subroutine:MODLNP	file:
870	g.tn.f	/^870   FORMAT('  ILOC AND ITEST'\/2I3)$/;"	l	subroutine:LSOUT	file:
877	ps.setup.extractmin.inc.f90	/^877         NDUMMY=NDUMMY-1$/;"	l	file:
878	ps.setup.extractts.inc.f90	/^878         NDUMMY=NDUMMY-1$/;"	l	file:
88	g.Q4.f	/^88       CONTINUE$/;"	l	subroutine:SHINIT	file:
888	g.bspt.F	/^888      DO K=1,NATOMS ! COORDS have to be resaved because we have to use noreset to be able to calc distance $/;"	l	subroutine:PTBASINSAMPLING	file:
888	optim.potential.f	/^888      CONTINUE$/;"	l	subroutine:POTENTIAL	file:
888	pathsample.newconn.f	/^888         LASTONE=LASTONE+1$/;"	l	subroutine:NEWCONN	file:
888	pathsample.regroupfree2.f90	/^888 CONTINUE ! Top of iterative regrouping loop$/;"	l	subroutine:REGROUPFREE2	file:
889	optim.potential.f	/^889      CONTINUE$/;"	l	subroutine:POTENTIAL	file:
89	g.Q4.f	/^89    CONTINUE$/;"	l	subroutine:SHINIT	file:
890	optim.potential.f	/^890      CONTINUE$/;"	l	subroutine:POTENTIAL	file:
899	optim.msevb.f90	/^ 899     enddo$/;"	l	subroutine:vh3ointra	file:
9	g.takestep.f	/^9        RANATOM=NINT(0.5D0+NATOMS*DPRAND())$/;"	l	subroutine:TAKESTEP	file:
90	func.f90	/^90    BLANK=.TRUE.$/;"	l	file:
90	g.dlsode.f	/^   90       CONTINUE$/;"	l	subroutine:DGBFA	file:
90	g.dlsode.f	/^   90    CONTINUE$/;"	l	subroutine:DGBSL	file:
90	g.dlsode.f	/^   90    CONTINUE$/;"	l	subroutine:DGESL	file:
90	g.dlsode.f	/^ 90   IF (MITER .GT. 0) RWORK(LWM) = SQRT(UROUND)$/;"	l	subroutine:DLSODE	file:
90	g.dlsode.f	/^ 90   MSG = 'DINTDY-  T (=R1) illegal      '$/;"	l	subroutine:DINTDY	file:
90	g.fedor.f	/^   90 MFLAG = -1$/;"	l	subroutine:INTERV	file:
90	g.input.f	/^90    BLANK=.TRUE.$/;"	l	file:
90	g.ljcapsidmodule.f90	/^90              W(I) = W(I) - T*V(I+J)$/;"	l	subroutine:SVERT	file:
90	g.minperm.f	/^   90 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
90	g.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBMV	file:
90	g.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBSV	file:
90	g.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPMV	file:
90	g.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPSV	file:
90	g.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRMV	file:
90	g.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRSV	file:
90	g.mylapack.f	/^   90             CONTINUE$/;"	l	subroutine:DTBSV	file:
90	g.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGBMV	file:
90	g.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGEMV	file:
90	g.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSBMV	file:
90	g.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSPMV	file:
90	g.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSYMV	file:
90	g.mylapack.f	/^   90       CONTINUE$/;"	l	subroutine:DPBTRF	file:
90	g.mylapack.f	/^   90     CONTINUE$/;"	l	subroutine:SCHCK3	file:
90	g.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK1	file:
90	g.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK2	file:
90	g.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK4	file:
90	g.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK5	file:
90	g.ptgrp.f	/^90    ALP=SUM+S$/;"	l	subroutine:EIG	file:
90	g.tn.f	/^90    CONTINUE$/;"	l	subroutine:INITP3	file:
90	g.tn.f	/^90    CONTINUE$/;"	l	subroutine:MODLNP	file:
90	g.tn.f	/^90    IFAIL = 0$/;"	l	subroutine:LMQN	file:
90	g.tn.f	/^90    TWOTOL = TOL + TOL$/;"	l	subroutine:GETPTC	file:
90	g.welch.f	/^   90       continue$/;"	l	subroutine:dgedi	file:
90	g.welch.f	/^   90    continue$/;"	l	subroutine:dgeco	file:
90	lbfgs.f	/^   90    DIAG(I)= YS\/YY$/;"	l	subroutine:LBFGS	file:
90	lbfgs.f	/^ 90   FORMAT(' FINAL POINT X= ')$/;"	l	subroutine:LB1	file:
90	optim.EYtrap.f	/^90    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2C	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2CC	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2P	file:
90	optim.aziz.f	/^90             CONTINUE$/;"	l	subroutine:AZIZ	file:
90	optim.bfgsts.f	/^90       EVALMIN=EVALMIN+EVALMAX*0.55D0$/;"	l	subroutine:CHECKIND	file:
90	optim.bfgsts.f	/^90    CONTINUE$/;"	l	subroutine:ITEIG	file:
90	optim.bfgsts.f	/^90    IF (PTEST) PRINT*$/;"	l	subroutine:BFGSTS	file:
90	optim.c60diff.f	/^90             CONTINUE$/;"	l	subroutine:C60DIFF	file:
90	optim.c60p.f	/^90             CONTINUE$/;"	l	subroutine:C60P	file:
90	optim.dctrap.f	/^ 90   CONTINUE$/;"	l	subroutine:DCTRAP	file:
90	optim.dqag.f	/^   90 MAXERR = IORD(NRMAX)$/;"	l	subroutine:DQPSRT	file:
90	optim.dtrap.f	/^90    CONTINUE$/;"	l	subroutine:DTRAP	file:
90	optim.eig.f	/^90    ALP=SUM+S$/;"	l	subroutine:EIG	file:
90	optim.escp.f	/^90             CONTINUE$/;"	l	subroutine:DSCP	file:
90	optim.hybridmin.f	/^90    IF (PTEST) PRINT*$/;"	l	subroutine:HYBRIDMIN	file:
90	optim.input.f	/^90    BLANK=.TRUE.$/;"	l	file:
90	optim.intbfgsts.f	/^90    IF (PTEST) PRINT*$/;"	l	subroutine:INTBFGSTS	file:
90	optim.ions.f	/^90             CONTINUE$/;"	l	subroutine:IONS	file:
90	optim.mdiff.f	/^90             CONTINUE$/;"	l	subroutine:MDIFF	file:
90	optim.mied.f	/^90             CONTINUE$/;"	l	subroutine:MIED	file:
90	optim.minperm.f	/^   90 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
90	optim.morph.f	/^90    CONTINUE$/;"	l	subroutine:MORPH	file:
90	optim.mpdiff.f	/^90             CONTINUE$/;"	l	subroutine:MPDIFF	file:
90	optim.mpdiff.f	/^90             CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
90	optim.msdiff.f	/^90             CONTINUE$/;"	l	subroutine:MSDIFF	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBMV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBSV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPMV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPSV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRMV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRSV	file:
90	optim.mylapack.f	/^   90             CONTINUE$/;"	l	subroutine:DTBSV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGBMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGEMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSBMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSPMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSYMV	file:
90	optim.mylapack.f	/^   90       CONTINUE$/;"	l	subroutine:DPBTRF	file:
90	optim.mylapack.f	/^   90     CONTINUE$/;"	l	subroutine:SCHCK3	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK1	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK2	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK4	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK5	file:
90	optim.projh.f	/^   90       continue$/;"	l	subroutine:dgedi	file:
90	optim.projh.f	/^   90    continue$/;"	l	subroutine:dgeco	file:
90	optim.scdiff.f	/^90             CONTINUE$/;"	l	subroutine:SCDIFF	file:
90	pathsample.dsort.f	/^   90 DX(K+1) = DX(K)$/;"	l	subroutine:DSORT	file:
90	pathsample.eig.f	/^90    ALP=SUM+S$/;"	l	subroutine:EIG	file:
90	pathsample.input.f	/^90    BLANK=.TRUE.$/;"	l	file:
90	pathsample.minperm.f	/^   90 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
90	pathsample.reweight.f	/^   90             CONTINUE$/;"	l	function:DLANTR	file:
90	pathsample.reweight.f	/^   90             CONTINUE$/;"	l	subroutine:DLATRS	file:
90	pathsample.reweight.f	/^   90       CONTINUE$/;"	l	subroutine:DGESVX	file:
90	pathsample.reweight.f	/^   90    CONTINUE$/;"	l	subroutine:DGERFS	file:
90	pathsample.reweight.f	/^   90 CONTINUE$/;"	l	subroutine:DGEEQU	file:
90	pathsample.reweight.f	/^   90 CONTINUE$/;"	l	subroutine:DLACN2	file:
90	pathsample.reweight.f	/^   90 CONTINUE$/;"	l	subroutine:DLACON	file:
900	func.f90	/^900   IF (CAT) THEN$/;"	l	file:
900	g.dgetrf.f	/^  900 CONTINUE$/;"	l	function:ILAENV	file:
900	g.input.f	/^900   IF (CAT) THEN$/;"	l	file:
900	optim.input.f	/^900   IF (CAT) THEN$/;"	l	file:
900	pathsample.input.f	/^900   IF (CAT) THEN$/;"	l	file:
9000	optim.dqag.f	/^ 9000 FORMAT ('0          ERROR MESSAGE SUMMARY' \/$/;"	l	subroutine:XERSVE	file:
9000	optim.dqag.f	/^ 9000 FORMAT ('1ERROR    1 IN I1MACH - I OUT OF BOUNDS')$/;"	l	function:I1MACH	file:
9000	optim.pertable.f	/^ 9000 FORMAT ('PERTABLE: Mass and at. nr. lookup'\/$/;"	l	subroutine:PERTABLE	file:
9000	pathsample.dsort.f	/^ 9000 FORMAT ('0          ERROR MESSAGE SUMMARY' \/$/;"	l	subroutine:XERSVE	file:
9000	pathsample.dsort.f	/^ 9000 FORMAT ('1ERROR    1 IN I1MACH - I OUT OF BOUNDS')$/;"	l	function:I1MACH	file:
9001	g.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,'  M =',I4,', N = ',I4,\/,' INCX = ',$/;"	l	subroutine:SCHCK4	file:
9001	g.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK1	file:
9001	g.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK2	file:
9001	g.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK5	file:
9001	g.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTIONS = ',$/;"	l	subroutine:SCHCK3	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,'  M =',I4,', N = ',I4,\/,' INCX = ',$/;"	l	subroutine:SCHCK4	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK1	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK2	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK5	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTIONS = ',$/;"	l	subroutine:SCHCK3	file:
9010	optim.dqag.f	/^ 9010 FORMAT (1X,A,3X,A,3X,A,3I10)$/;"	l	subroutine:XERSVE	file:
9010	optim.pertable.f	/^ 9010    FORMAT(I3,2X,A5,2X,I5,2X,F10.5)$/;"	l	subroutine:PERTABLE	file:
9010	pathsample.dsort.f	/^ 9010 FORMAT (1X,A,3X,A,3X,A,3I10)$/;"	l	subroutine:XERSVE	file:
9011	g.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9011	g.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9011	g.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9011	g.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9011	g.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9020	optim.dqag.f	/^ 9020 FORMAT ('0OTHER ERRORS NOT INDIVIDUALLY TABULATED = ', I10)$/;"	l	subroutine:XERSVE	file:
9020	pathsample.dsort.f	/^ 9020 FORMAT ('0OTHER ERRORS NOT INDIVIDUALLY TABULATED = ', I10)$/;"	l	subroutine:XERSVE	file:
9021	g.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9021	g.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9021	g.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9021	g.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9021	g.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9030	optim.dqag.f	/^ 9030 FORMAT (1X)$/;"	l	subroutine:XERSVE	file:
9030	pathsample.dsort.f	/^ 9030 FORMAT (1X)$/;"	l	subroutine:XERSVE	file:
9031	g.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK1	file:
9031	g.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK2	file:
9031	g.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK3	file:
9031	g.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK4	file:
9031	g.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK5	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK1	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK2	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK3	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK4	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK5	file:
9041	g.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK1	file:
9041	g.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK2	file:
9041	g.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK3	file:
9041	g.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK4	file:
9041	g.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK5	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK1	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK2	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK3	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK4	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK5	file:
9051	g.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK1	file:
9051	g.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK2	file:
9051	g.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK3	file:
9051	g.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK4	file:
9051	g.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK5	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK1	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK2	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK3	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK4	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK5	file:
93	optim.diis.f	/^93    FORMAT(6(2X,E12.5))$/;"	l	subroutine:DIIS	file:
95	g.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3C	file:
95	g.dbpg.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPDB	file:
95	g.dlsode.f	/^ 95     RWORK(I) = 0.0D0$/;"	l	subroutine:DLSODE	file:
95	g.gbcalamitic.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TKSTDCELPSD	file:
95	g.ljcapsidmodule.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPELPSD	file:
95	g.lwotp.f90	/^95       DO WHILE (OVRLPT)$/;"	l	subroutine:TAKESTEPLWOTP	file:
95	g.multisitepy.f90	/^95 DO WHILE(OVERLAPT)$/;"	l	subroutine:TAKESTEPMULTISITEPY	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3C	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3CC	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3P	file:
95	optim.axdiff.f	/^95             CONTINUE$/;"	l	subroutine:AXDIFF	file:
950	g.input.f	/^950   CHAR(L)=SPACE$/;"	l	file:
950	pathsample.input.f	/^950   CHAR(L)=SPACE$/;"	l	file:
96	optim.sortc.f	/^ 96   CONTINUE$/;"	l	subroutine:SortC	file:
975	pathsample.Dijkstra.f90	/^975 CONTINUE ! branch for testing whether ts corresponding to large downhill barriers can be removed$/;"	l	subroutine:DIJKSTRA	file:
98	g.Q4.f	/^98       CONTINUE$/;"	l	subroutine:SHINIT	file:
98	optim.diis.f	/^ 98       FORMAT(10G13.6)$/;"	l	subroutine:DIIS	file:
987	pathsample.regroupfree2.f90	/^987         CONTINUE$/;"	l	subroutine:REGROUPFREE2	file:
99	func.f90	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
99	g.Q4.f	/^99    CONTINUE$/;"	l	subroutine:SHINIT	file:
99	g.fedor.f	/^   99 PPVALU = PPSUM$/;"	l	function:PPVALU	file:
99	g.input.f	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
99	optim.input.f	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
99	pathsample.input.f	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
999	g.ljcapsidmodule.f90	/^999    CONTINUE      $/;"	l	subroutine:OLDPARAMONOV	file:
999	g.ljcapsidmodule.f90	/^999 CONTINUE$/;"	l	subroutine:GAYBERNE	file:
999	optim.connect.f	/^999   CONTINUE$/;"	l	subroutine:ADDMIN	file:
999	optim.dqag.f	/^  999 RETURN$/;"	l	subroutine:DQAGE	file:
999	optim.sortc.f	/^ 999  Continue$/;"	l	subroutine:SortC	file:
999	pathsample.regroupfree2.f90	/^999 CONTINUE$/;"	l	subroutine:REGROUPFREE2	file:
9999	g.dgetrf.f	/^ 9999 FORMAT( ' ** On entry to ', A6, ' parameter number ', I2, ' had ',$/;"	l	subroutine:XERBLA	file:
9999	g.dlamch.f	/^ 9999 FORMAT( \/ \/ ' WARNING. The value EMIN may be incorrect:-',$/;"	l	subroutine:DLAMC2	file:
9999	g.ptmc.F	/^9999       continue$/;"	l	subroutine:PARALLELTEMPERING	file:
99999	g.fedor.f	/^99999                                   RETURN$/;"	l	subroutine:INTERV	file:
A	g.modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts
A	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts_trans_97
A	pathsample.GT2data.f90	/^          type(NodeList),pointer :: A$/;"	k	type:Node
A9ATOMTORES	optim.amber9dummy.f90	/^subroutine A9ATOMTORES(/;"	s
A9DISTCHECK	g.mc.F	/^      SUBROUTINE A9DISTCHECK(/;"	s
A9DUMPMODES	optim.amber9dummy.f90	/^subroutine A9DUMPMODES(/;"	s
A9DUMPPDB	g.amber9dummy.f90	/^SUBROUTINE A9DUMPPDB(/;"	s
A9INTE	g.mc.F	/^      SUBROUTINE A9INTE(/;"	s
A9INTEDUMPLOWEST	g.mc.F	/^      SUBROUTINE A9INTEDUMPLOWEST(/;"	s
A9INTESAVEIT	g.saveit.f	/^      SUBROUTINE A9INTESAVEIT(/;"	s
A9INTET	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET,/;"	v	module:COMMONS
A9INTET	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET,/;"	v	module:COMMONS
A9RESTOATOM	g.amber9dummy.f90	/^SUBROUTINE A9RESTOATOM(/;"	s
A9RESTOATOM	optim.amber9dummy.f90	/^subroutine A9RESTOATOM(/;"	s
AA	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,/;"	v	module:MODUNRES
AAD	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,/;"	v	module:MODUNRES
AAtoEuler	g.ljcapsidmodule.f90	/^      SUBROUTINE AAtoEuler(/;"	s
AAtoEuler	optim.ljcapsidmodule.f90	/^      SUBROUTINE AAtoEuler(/;"	s
AAtoSites	g.multisitepy.f90	/^      SUBROUTINE AAtoSites(/;"	s
ABSC	optim.cubsplstring.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: COEFF(:,:,:), ABSC(/;"	v	module:CUBSPLSTRING
ABTHRESH	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH,/;"	v	module:COMMONS
ABTHRESH	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH,/;"	v	module:COMMONS
ACCLAN	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN,/;"	v	module:KEY
ACCRAT	commons.f90	/^DOUBLE PRECISION :: ACCRAT=/;"	v	module:COMMONS
ACCRAT	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:COMMONS
ACCRAT	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:COMMONS
ACCREJ	g.mc.F	/^      SUBROUTINE ACCREJ(/;"	s
ACCREJ	mc.f90	/^SUBROUTINE ACCREJ(/;"	s
ACESOLV	g.modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT, NEWCONFT, SELECTT, ACESOLV$/;"	v	module:MODCHARMM
ACESOLV	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB, ACESOLV,/;"	v	module:modcharmm
ACEUPSTEP	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT, RMSSAVE, NEWCONFST, ACEUPSTEP$/;"	v	module:MODCHARMM
ACEUPSTEP	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE, NGUESS, NCHENCALLS, ACEUPSTEP$/;"	v	module:modcharmm
ACK	g.Ackland_wrapper.f	/^      SUBROUTINE ACK(/;"	s
ACK	optim.Ackland_wrapper.f	/^      SUBROUTINE ACK(/;"	s
ACKLANDID	g.commons.f90	/^     &        CPS, CPF, ACKLANDID,/;"	v	module:COMMONS
ACKLANDID	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID,/;"	v	module:COMMONS
ACKLANDID	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS, ACKLANDID,/;"	v	module:KEY
ACKLANDT	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT,/;"	v	module:COMMONS
ACKLANDT	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT,/;"	v	module:COMMONS
ACTHRESH	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH,/;"	v	module:COMMONS
ACTHRESH	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH,/;"	v	module:COMMONS
AD	optim.double.f	/^     1                 V(3*N), R, G(2,2), H, W, CUTOFF, AD(/;"	v
ADDMIN	optim.connect.f	/^      SUBROUTINE ADDMIN(/;"	s
ADDPERM	pathsample.addperm.f	/^      SUBROUTINE ADDPERM(/;"	s
ADDREPT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT, ADDREPT,/;"	v	module:KEY
ADJACENT	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: BONDNUM(:), ADJACENT(/;"	v	module:INTCOMMONS
ADM	optim.adm.f	/^      SUBROUTINE ADM(/;"	s
ADMT	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT,/;"	v	module:KEY
AEL3	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,BPP,AEL6,AEL3$/;"	v	module:MODUNRES
AEL6	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,BPP,AEL6,/;"	v	module:MODUNRES
AEZR1	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:LJCAPSIDMODULE
AEZR1	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:PYMODULE
AEZR1	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:LJCAPSIDMODULE
AEZR1	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:PYMODULE
AEZR2	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:LJCAPSIDMODULE
AEZR2	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:PYMODULE
AEZR2	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:LJCAPSIDMODULE
AEZR2	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:PYMODULE
AHH	optim.VRTMCY5f.f90	/^							bOO = 2.71770d0,&$/;"	v	module:MCY
AIJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HAM, AIJ$/;"	v	module:msevb_common
ALGLUE	g.Alglue.f	/^      SUBROUTINE ALGLUE /;"	s
ALGLUET	g.commons.f90	/^     &        EAMALT, ALGLUET,/;"	v	module:COMMONS
ALGLUET	g.commons.o.f90	/^     &        EAMALT, ALGLUET,/;"	v	module:COMMONS
ALIGNDIR	optim.intcommons.f90	/^  LOGICAL :: ALIGNDIR /;"	v	module:INTCOMMONS
ALINIT	g.Farkas.f	/^      SUBROUTINE ALINIT$/;"	s
ALJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ALJ /;"	v	module:msevb_common
ALLCHIRALH_ALIGN	optim.chiralhyd.f90	/^      SUBROUTINE ALLCHIRALH_ALIGN(/;"	s
ALLSTEPS	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP, DUMPSP, NOFRQS, &$/;"	v	module:KEY
ALLVECTORS	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS,/;"	v	module:KEY
ALPH	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,PHI,ALPH,/;"	v	module:MODUNRES
ALPHA	g.modconsts.f90	/^     &                 EPSs,EPSp,ALPHA$/;"	v	module:consts
ALPHA	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,KAPPA,SIGMA,&$/;"	v	module:consts_trans_97
ALPHACC	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC,/;"	v	module:COMMONS
ALPHACC	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC,/;"	v	module:COMMONS
ALPHACC	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10, RHOC20H, RHOCH20, &$/;"	v	module:KEY
ALPHACH	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH,/;"	v	module:COMMONS
ALPHACH	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH,/;"	v	module:COMMONS
ALPHACH	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH,/;"	v	module:KEY
ALPHAEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ALPHAEQ /;"	v	module:msevb_common
ALPHAHH	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH,/;"	v	module:COMMONS
ALPHAHH	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH,/;"	v	module:COMMONS
ALPHAHH	optim.key.f90	/^     &        ALPHACC, ALPHAHH,/;"	v	module:KEY
ALPHAM	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM,/;"	v	module:COMMONS
ALPHAM	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM,/;"	v	module:COMMONS
ALPHAM	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM,/;"	v	module:KEY
ALPHAP	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP,/;"	v	module:COMMONS
ALPHAP	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP,/;"	v	module:COMMONS
ALPHAP	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP,/;"	v	module:KEY
ALPHA_BLEH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ALPHA_BLEH /;"	v	module:msevb_common
AMB	optim.amber.f	/^      SUBROUTINE AMB(/;"	s
AMBALIGNDIH	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBALIGNDIH(/;"	s
AMBER	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER,/;"	v	module:COMMONS
AMBER	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER,/;"	v	module:COMMONS
AMBER	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER,/;"	v	module:KEY
AMBER	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,/;"	v	program:OPTIM4
AMBERA	optim.amber.f	/^      SUBROUTINE AMBERA$/;"	s
AMBERD	optim.amber.f	/^      SUBROUTINE AMBERD$/;"	s
AMBERDIHEDR	optim.amber9dummy.f90	/^SUBROUTINE  AMBERDIHEDR(/;"	s
AMBERENERGIES	g.amber9dummy.f90	/^SUBROUTINE AMBERENERGIES(/;"	s
AMBERENERGIES	optim.amber9dummy.f90	/^SUBROUTINE AMBERENERGIES(/;"	s
AMBERENERGIEST	g.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS, GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST$/;"	v	module:MODAMBER9
AMBERENERGIEST	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST,/;"	v	module:modamber9
AMBERFINALIO	g.amber9dummy.f90	/^SUBROUTINE AMBERFINALIO(/;"	s
AMBERFINALIO	optim.amber9dummy.f90	/^SUBROUTINE AMBERFINALIO(/;"	s
AMBERICT	g.modamber9.f90	/^logical:: AMBERICT,/;"	v	module:MODAMBER9
AMBERICT	optim.modamber9.f90	/^logical:: AMBERICT,/;"	v	module:modamber9
AMBERINTERFACE	g.amber9dummy.f90	/^SUBROUTINE AMBERINTERFACE(/;"	s
AMBERINTERFACE	optim.amber9dummy.f90	/^SUBROUTINE AMBERINTERFACE(/;"	s
AMBERS	optim.amber.f	/^      SUBROUTINE AMBERS$/;"	s
AMBERSECDER	g.amber9dummy.f90	/^SUBROUTINE AMBERSECDER(/;"	s
AMBERSECDER	optim.amber9dummy.f90	/^SUBROUTINE AMBERSECDER(/;"	s
AMBERSEED	g.modamb.f90	/^      LOGICAL AMBERSEED,/;"	v	module:MODAMBER
AMBERT	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST, &$/;"	v	module:COMMONS
AMBERT	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST, &$/;"	v	module:COMMONS
AMBERT	optim.key.f90	/^     &        BBRSDMT, AMBERT,/;"	v	module:KEY
AMBERT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,/;"	v	program:OPTIM4
AMBG	optim.amber.f	/^      SUBROUTINE AMBG$/;"	s
AMBGETANGLE	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETANGLE(/;"	s
AMBGETNATINTERN	optim.amb_natinterns.f90	/^      SUBROUTINE AMBGETNATINTERN$/;"	s
AMBGETNNZNAT	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETNNZNAT(/;"	s
AMBGETOUTOFPLANE	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETOUTOFPLANE(/;"	s
AMBGETTORSION	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETTORSION(/;"	s
AMBICDNEBT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT, AMBOLDPERTT, AMBICDNEBT$/;"	v	module:modamber9
AMBIT	g.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT,/;"	v	module:MODAMBER9
AMBIT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT,/;"	v	module:modamber9
AMBOLDPERTT	g.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT, AMBOLDPERTT$/;"	v	module:MODAMBER9
AMBOLDPERTT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT, AMBOLDPERTT,/;"	v	module:modamber9
AMBPDB_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT, MDCRD_UNIT, AMBRST_UNIT, AMBPDB_UNIT$/;"	v	module:modamber9
AMBPERTT	g.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,/;"	v	module:MODAMBER9
AMBPERTT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,/;"	v	module:modamber9
AMBRST_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT, MDCRD_UNIT, AMBRST_UNIT,/;"	v	module:modamber9
AMBSTEPT	g.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT,/;"	v	module:MODAMBER9
AMBSTEPT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT,/;"	v	module:modamber9
AMBTRANSFORM	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBTRANSFORM(/;"	s
AMBWORD	g.keyword.f	60;"	c	subroutine:KEYWORD
AMB_GETBACKBONE	optim.amb_natinterns.f90	/^      SUBROUTINE AMB_GETBACKBONE$/;"	s
AMB_GETBEENAT	optim.amb_natinterns.f90	/^      SUBROUTINE AMB_GETBEENAT(/;"	s
AMB_GETKDNAT	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMB_GETKDNAT(/;"	s
AMB_NATINTSETUP	optim.amb_natinterns.f90	/^      SUBROUTINE AMB_NATINTSETUP$/;"	s
AMB_PATOM	optim.charmmBildc.f	/^      SUBROUTINE AMB_PATOM(/;"	s
AMB_TRANSBACKDELTA	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMB_TRANSBACKDELTA(/;"	s
AMCHNMAX	g.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX,/;"	v	module:MODAMBER9
AMCHNMAX	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX,/;"	v	module:modamber9
AMCHNMIN	g.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN,/;"	v	module:MODAMBER9
AMCHNMIN	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN,/;"	v	module:modamber9
AMCHPMAX	g.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX,/;"	v	module:MODAMBER9
AMCHPMAX	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX,/;"	v	module:modamber9
AMCHPMIN	g.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX, AMCHPMIN$/;"	v	module:MODAMBER9
AMCHPMIN	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX, AMCHPMIN$/;"	v	module:modamber9
AMCUT	g.modamb.f90	/^      LOGICAL AMCUT$/;"	v	module:MODAMBER
AMH	optim.main.f90	/^      LOGICAL AMH$/;"	v	program:OPTIM4
AMHALLATOMMIN	pathsample.amhdump.f90	/^      SUBROUTINE AMHALLATOMMIN$/;"	s
AMHALLATOMTS	pathsample.amhdump.f90	/^      SUBROUTINE AMHALLATOMTS$/;"	s
AMHDUMP	pathsample.amhdump.f90	/^      SUBROUTINE AMHDUMP(/;"	s
AMHFINALIO	optim.amhdummy.f	/^      SUBROUTINE AMHFINALIO(/;"	s
AMHGLOBALS	g.amhdummy.f	/^      MODULE AMHGLOBALS$/;"	m
AMHQ	pathsample.amhdump.f90	/^      SUBROUTINE AMHQ(/;"	s
AMHQCONT	pathsample.amhdump.f90	/^      SUBROUTINE AMHQCONT(/;"	s
AMHRELQ	pathsample.amhdump.f90	/^      SUBROUTINE AMHRELQ(/;"	s
AMHRMSD	pathsample.amhdump.f90	/^      SUBROUTINE AMHRMSD(/;"	s
AMHT	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT,/;"	v	module:COMMONS
AMHT	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT,/;"	v	module:COMMONS
AMHT	optim.key.f90	/^      LOGICAL :: AMHT$/;"	v	module:KEY
AMH_INTERFACES	g.amhdummy.f	/^      MODULE AMH_INTERFACES$/;"	m
AMH_RELCO	pathsample.amhdump.f90	/^      SUBROUTINE AMH_RELCO(/;"	s
AMHmaxsiz	optim.amhglobals.f	/^      integer AMHmaxsiz$/;"	v	module:amhglobals
AMINOA	g.commons.f90	/^      CHARACTER AMINOA(/;"	v	module:COMMONS
AMINOA	g.commons.o.f90	/^      CHARACTER AMINOA(/;"	v	module:COMMONS
AMM	g.commons.f90	/^     &                 COULTEMP, APP, AMM,/;"	v	module:COMMONS
AMM	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM,/;"	v	module:COMMONS
AMM	optim.key.f90	/^     &        APP, AMM,/;"	v	module:KEY
AM_BACKBONE	optim.modamber9.f90	/^logical, dimension (:),allocatable ::AM_BACKBONE$/;"	v	module:modamber9
AN	bln.vars.inc.f90	/^        DOUBLE PRECISION   AN$/;"	v
ANALYSERESULTS	pathsample.dock.f90	/^SUBROUTINE ANALYSERESULTS$/;"	s	module:DOCKMODULE
ANG	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: ANG /;"	v
ANG	optim.modamber.f90	/^      INTEGER ATOMS,ANG,/;"	v	module:MODAMBER
ANGLEAXIS	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS,/;"	v	module:KEY
ANGLEAXIS2	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1, REDOPATH2, ANGLEAXIS2,/;"	v	module:KEY
ANGLEHELL	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,ANGLEHELL,/;"	v	module:MODAMBER
ANGMAG	g.ptgrp.f	/^        DOUBLE PRECISION FUNCTION ANGMAG(/;"	f
ANGST	g.commons.f90	/^     &        FRAUSIT, ANGST,/;"	v	module:COMMONS
ANGST	g.commons.o.f90	/^     &        FRAUSIT, ANGST,/;"	v	module:COMMONS
ANSWER	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,/;"	v	module:MODAMBER
ANV	g.commons.f90	/^      INTEGER,ALLOCATABLE :: ANV(/;"	v	module:COMMONS
ANV	g.commons.o.f90	/^      INTEGER,ALLOCATABLE :: ANV(/;"	v	module:COMMONS
AOH	optim.VRTMCY5f.f90	/^							bHH = 1.56704d0,&$/;"	v	module:MCY
AOHEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: AOHEQ /;"	v	module:msevb_common
AOO	optim.VRTMCY5f.f90	/^real*8, parameter :: Q2 = 0.583599d0,&$/;"	v	module:MCY
APM	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM,/;"	v	module:COMMONS
APM	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM,/;"	v	module:COMMONS
APM	optim.key.f90	/^     &        APP, AMM, APM,/;"	v	module:KEY
APP	g.commons.f90	/^     &                 COULTEMP, APP,/;"	v	module:COMMONS
APP	g.commons.o.f90	/^     &                 COULTEMP, APP,/;"	v	module:COMMONS
APP	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS, MAXNEBBFGS, MAXINTBFGS, &$/;"	v	module:KEY
APPU	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,/;"	v	module:MODUNRES
ARC	optim.gsdata.f90	/^     DOUBLE PRECISION :: CHORD, ARC,/;"	k	type:IMGNODE
ARCDERV	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION ARCDERV(/;"	f	module:CUBSPLSTRING
ARCDERVF	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION ARCDERVF(/;"	f	module:CUBSPLSTRING
ARCDIFF	optim.gsdata.f90	/^     DOUBLE PRECISION :: CHORD, ARC, ARCDIFF$/;"	k	type:IMGNODE
ARCLENGTH	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION ARCLENGTH(/;"	f	module:CUBSPLSTRING
ARCTOL	optim.cubsplstring.f90	/^  DOUBLE PRECISION, TARGET :: ARCTOL$/;"	v	module:CUBSPLSTRING
AREPCC	g.dftb.f	/^      SUBROUTINE AREPCC(/;"	s
AREPCC	optim.dftb.f	/^      SUBROUTINE AREPCC(/;"	s
ARGON	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON,/;"	v	module:COMMONS
ARGON	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON,/;"	v	module:COMMONS
ARGS	commons.f90	/^CHARACTER(LEN=SLEN),DIMENSION(MAXNARGS)/;"	v	module:COMMONS
ARGSTRING	optim.main.f90	/^      CHARACTER(LEN=80) ARGSTRING,/;"	v	program:OPTIM4
ARG_SWAP	optim.intcoords.f90	/^      SUBROUTINE ARG_SWAP(/;"	s	module:INTCUTILS
ARMA	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,/;"	v	module:COMMONS
ARMA	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,/;"	v	module:COMMONS
ARMB	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB,/;"	v	module:COMMONS
ARMB	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB,/;"	v	module:COMMONS
ARMT	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT,/;"	v	module:COMMONS
ARMT	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT,/;"	v	module:COMMONS
ARNO	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO,/;"	v	module:COMMONS
ARNO	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO,/;"	v	module:COMMONS
ARRAYS	g.mylapack.f	1033;"	c	subroutine:SCHCK3
ARRAYS	g.mylapack.f	112;"	c	subroutine:SCHCK1
ARRAYS	g.mylapack.f	1508;"	c	subroutine:SCHCK4
ARRAYS	g.mylapack.f	1830;"	c	subroutine:SCHCK5
ARRAYS	g.mylapack.f	548;"	c	subroutine:SCHCK2
ARRAYS	optim.mylapack.f	1051;"	c	subroutine:SCHCK3
ARRAYS	optim.mylapack.f	130;"	c	subroutine:SCHCK1
ARRAYS	optim.mylapack.f	1526;"	c	subroutine:SCHCK4
ARRAYS	optim.mylapack.f	1848;"	c	subroutine:SCHCK5
ARRAYS	optim.mylapack.f	566;"	c	subroutine:SCHCK2
ASAOOS	g.commons.f90	/^       LOGICAL :: PATCHY, ASAOOS$/;"	v	module:COMMONS
ASAOOS	g.commons.o.f90	/^       LOGICAL :: PATCHY, ASAOOS$/;"	v	module:COMMONS
ASAOOSPOT	g.asaoos.f90	/^SUBROUTINE ASAOOSPOT /;"	s
ASAR1	g.fedor.f	/^           SUBROUTINE ASAR1(/;"	s
ASHE1	g.fedor.f	/^           SUBROUTINE ASHE1(/;"	s
ASORT	pathsample.reweight.f	/^      SUBROUTINE ASORT(/;"	s
ASTEP	commons.f90	/^DOUBLE PRECISION :: ASTEP=/;"	v	module:COMMONS
ASTEP	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP,/;"	v	module:COMMONS
ASTEP	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP,/;"	v	module:COMMONS
ATGRAD	g.AT.f	/^      SUBROUTINE ATGRAD(/;"	s
ATMASS	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: ATMASS /;"	v	module:COMMONS
ATMTYPES	optim.intcommons.f90	/^  CHARACTER*8, ALLOCATABLE :: ATMTYPES(/;"	v	module:INTCOMMONS
ATOI	optim.utils.f	/^       INTEGER FUNCTION ATOI /;"	f
ATOL	g.vgw.f90	/^     DOUBLE PRECISION :: E_ZERO,BL,ATOL$/;"	v	module:VGWSP
ATOM	g.molinfo.f90	/^    TYPE ATOM$/;"	t	module:MOLINFO
ATOM1	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMACTIVE	optim.key.f90	/^      LOGICAL, ALLOCATABLE :: ATOMACTIVE(/;"	v	module:KEY
ATOMGROUPAXIS	g.modamber9.f90	/^      INTEGER, ALLOCATABLE :: ATOMGROUPAXIS(/;"	v	module:MODAMBER9
ATOMGROUPAXIS	optim.modamber9.f90	/^      INTEGER, ALLOCATABLE :: ATOMGROUPAXIS(/;"	v	module:modamber9
ATOMGROUPNAMES	g.modamber9.f90	/^      CHARACTER(LEN=10), ALLOCATABLE :: ATOMGROUPNAMES(/;"	v	module:MODAMBER9
ATOMGROUPNAMES	optim.modamber9.f90	/^      CHARACTER(LEN=10), ALLOCATABLE :: ATOMGROUPNAMES(/;"	v	module:modamber9
ATOMGROUPPSELECT	g.modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(:),ATOMGROUPPSELECT(/;"	v	module:MODAMBER9
ATOMGROUPPSELECT	optim.modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(:),ATOMGROUPPSELECT(/;"	v	module:modamber9
ATOMGROUPS	g.modamber9.f90	/^      LOGICAL, ALLOCATABLE :: ATOMGROUPS(/;"	v	module:MODAMBER9
ATOMGROUPS	optim.modamber9.f90	/^      LOGICAL, ALLOCATABLE :: ATOMGROUPS(/;"	v	module:modamber9
ATOMGROUPSCALING	g.modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(/;"	v	module:MODAMBER9
ATOMGROUPSCALING	optim.modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(/;"	v	module:modamber9
ATOMICMASS	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: ATOMICMASS=/;"	v	module:VGW
ATOMICMASS	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: ATOMICMASS=/;"	v	module:VGWSP
ATOMICNUMBER	pathsample.rigidbody.f90	/^     INTEGER, ALLOCATABLE :: ATOMICNUMBER(/;"	k	type:RIGIDBODYPOTENTIAL
ATOMICNUMBER	pathsample.rigidbodymod.f90	/^     INTEGER, ALLOCATABLE :: ATOMICNUMBER(/;"	k	type:RIGIDBODYPOTENTIAL
ATOMPAIR	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
ATOMS	optim.modamber.f90	/^      INTEGER ATOMS,/;"	v	module:MODAMBER
ATOMSINALIST	g.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST,/;"	v	module:MODAMBER9
ATOMSINALIST	optim.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST,/;"	v	module:modamber9
ATOMSINALISTLOGICAL	g.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL,/;"	v	module:MODAMBER9
ATOMSINALISTLOGICAL	optim.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL,/;"	v	module:modamber9
ATOMSINBLIST	g.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST, ATOMSINBLIST,/;"	v	module:MODAMBER9
ATOMSINBLIST	optim.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST, ATOMSINBLIST /;"	v	module:modamber9
ATOMSINBLISTLOGICAL	g.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL, ATOMSINBLISTLOGICAL,/;"	v	module:MODAMBER9
ATOMSINBLISTLOGICAL	optim.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL, ATOMSINBLISTLOGICAL$/;"	v	module:modamber9
ATOMSINCLIST	g.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST, ATOMSINBLIST, ATOMSINCLIST /;"	v	module:MODAMBER9
ATOMSINCLISTLOGICAL	g.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL, ATOMSINBLISTLOGICAL, ATOMSINCLISTLOGICAL$/;"	v	module:MODAMBER9
ATOM_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: ATOM_COULOMB$/;"	v	module:msevb_common
ATOM_ID	g.molinfo.f90	/^        INTEGER            :: ATOM_ID /;"	k	type:ATOM
ATOM_NAME	g.molinfo.f90	/^        CHARACTER (LEN=10) :: ATOM_NAME /;"	k	type:ATOM
ATOMxPOSINC	optim.intcommons.f90	/^  INTEGER :: ATOMxPOSINC(/;"	v	module:INTCOMMONS
AUGM	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,/;"	v	module:MODUNRES
AVEP	g.amhdummy.f	/^      DOUBLE PRECISION AVEP(/;"	v	module:AMHGLOBALS
AVH	optim.VRTMCY5f.f90	/^							bOH = 1.50467d0,&$/;"	v	module:MCY
AVOID	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID,/;"	v	module:COMMONS
AVOID	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID,/;"	v	module:COMMONS
AVOIDDIST	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST,/;"	v	module:COMMONS
AVOIDDIST	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST,/;"	v	module:COMMONS
AX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,/;"	v	module:MODAMBER
AXDIFF	optim.axdiff.f	/^      SUBROUTINE AXDIFF(/;"	s
AXPAIRS	optim.axpairs.f	/^      SUBROUTINE AXPAIRS /;"	s
AXT	g.AT.f	/^      SUBROUTINE AXT(/;"	s
AXTELL	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL,/;"	v	module:COMMONS
AXTELL	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL,/;"	v	module:COMMONS
AY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,/;"	v	module:MODAMBER
AZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,/;"	v	module:MODAMBER
AZIZ	optim.aziz.f	/^      SUBROUTINE AZIZ(/;"	s
A_BLN	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(/;"	v	module:COMMONS
A_BLN	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(/;"	v	module:COMMONS
A_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(/;"	v	module:KEY
Arad	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,Arad /;"	v	module:MODAMBER9
Arad	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,Arad /;"	v	module:modamber9
B	bln.vars.inc.f90	/^        DOUBL/;"	v
B	g.modconsts.f90	/^      DOUBL/;"	v	module:consts
B	g.modconsts_trans_97.f90	/^      DOUBL/;"	v	module:consts_trans_97
BACKBONE	optim.intcommons.f90	/^  LOGICAL, ALLOCATABLE :: BACKBONE(/;"	v	module:INTCOMMONS
BACKTCUTOFF	optim.intcommons.f90	/^  DOUBLE PRECISION :: BACKTCUTOFF$/;"	v	module:INTCOMMONS
BACKTPRINTERR	optim.intcommons.f90	/^  LOGICAL :: BACKTPRINTERR /;"	v	module:INTCOMMONS
BAD	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,/;"	v	module:MODUNRES
BAND2SCS	optim.specialfuncts.f90	/^  SUBROUTINE BAND2SCS(/;"	s	module:SPFUNCTS
BASINSAMPLING	g.basinsampling.f90	/^      SUBROUTINE BASINSAMPLING$/;"	s
BB	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,/;"	v	module:MODUNRES
BBCART	optim.intcommons.f90	/^  LOGICAL :: BBCART /;"	v	module:INTCOMMONS
BBRALPHA	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA,/;"	v	module:KEY
BBRCONV	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA, BBRCONV,/;"	v	module:KEY
BBREPS	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS,/;"	v	module:KEY
BBRGAM	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM,/;"	v	module:KEY
BBRM	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS, HMNBFGSMAX1, HMNBFGSMAX2, &$/;"	v	module:KEY
BBRSDM	optim.bbrsdm.f90	/^      SUBROUTINE BBRSDM(/;"	s
BBRSDMT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG, CHRIGIDT, PERMDISTINIT, &$/;"	v	module:KEY
BBRSIGMA1	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1,/;"	v	module:KEY
BBRSIGMA2	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2,/;"	v	module:KEY
BBRSTEPS	optim.key.f90	/^     &        BBRM, BBRSTEPS,/;"	v	module:KEY
BC_MDI	g.modamber9.f90	/^integer BC_MDI /;"	v	module:MODAMBER9
BC_MDI	optim.modamber9.f90	/^integer BC_MDI /;"	v	module:modamber9
BC_MDR	g.modamber9.f90	/^integer BC_MDR /;"	v	module:MODAMBER9
BC_MDR	optim.modamber9.f90	/^integer BC_MDR /;"	v	module:modamber9
BEADLETTER	g.commons.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:COMMONS
BEADLETTER	g.commons.o.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:COMMONS
BEADLETTER	optim.key.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:KEY
BEENUM	optim.unrestransform.f	/^      SUBROUTINE BEENUM(/;"	s
BEIG	optim.beig.f	/^      SUBROUTINE BEIG(/;"	s
BENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,/;"	v	module:MODAMBER
BESTCOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,/;"	v
BESTPERM	optim.key.f90	/^      INTEGER, ALLOCATABLE :: BESTPERM(/;"	v	module:KEY
BEST_FH	commons.f90	/^INTEGER :: BEST_FH=/;"	v	module:COMMONS
BETA	g.modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts
BETA	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,/;"	v	module:consts_trans_97
BETA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: BETA /;"	v	module:msevb_common
BFGS	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS,/;"	v	module:COMMONS
BFGS	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS,/;"	v	module:COMMONS
BFGSMINT	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT,/;"	v	module:KEY
BFGSSTEP	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY, CASTEP, ONETEP, &$/;"	v	module:KEY
BFGSSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS,/;"	v	module:KEY
BFGSTS	optim.bfgsts.f	/^      SUBROUTINE BFGSTS(/;"	s
BFGSTST	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST,/;"	v	module:KEY
BFGSTSTOL	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE, INTRMSTOL, BFGSTSTOL,/;"	v	module:KEY
BHACCREJ	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL, GEOMDIFFTOL, DNEBSWITCH, &$/;"	v	module:KEY
BHCHECKENERGYT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT,/;"	v	module:KEY
BHCONV	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV,/;"	v	module:KEY
BHDEBUG	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG,/;"	v	module:KEY
BHDISTTHRESH	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH,/;"	v	module:KEY
BHINTE	optim.geopt.f	60;"	c	subroutine:GEOPT
BHINTERP	optim.bhinterp.f90	/^SUBROUTINE BHINTERP(/;"	s
BHINTERPT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT,/;"	v	module:KEY
BHINTERPUSELOWEST	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST,/;"	v	module:KEY
BHK	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK,/;"	v	module:KEY
BHMAXENERGY	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY,/;"	v	module:KEY
BHSFRAC	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL, KADJUSTFRAC, KADJUSTTOL, &$/;"	v	module:KEY
BHSTEPS	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS,/;"	v	module:KEY
BHSTEPSIZE	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE,/;"	v	module:KEY
BHSTEPSMIN	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN,/;"	v	module:KEY
BHTEMP	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP,/;"	v	module:KEY
BIG_B	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: BIG_B /;"	v	module:msevb_common
BIG_ROOEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: BIG_ROOEQ /;"	v	module:msevb_common
BIN	g.BLJcluster.f	32;"	c	subroutine:LJPSHIFTBINC
BIN	g.bspt.F	74;"	c	subroutine:PTBASINSAMPLING
BIN	g.finalio.f	44;"	c	subroutine:FINALIO
BIN	g.hsmove.f	27;"	c	subroutine:HSMOVE
BIN	g.io1.f	36;"	c	subroutine:IO1
BIN	g.keyword.f	48;"	c	subroutine:KEYWORD
BIN	g.ljpbin.f	51;"	c	subroutine:LJPBIN
BIN	g.ljpshift.f	49;"	c	subroutine:LJPSHIFT
BIN	g.modamb.f90	/^      LOGICAL BIN$/;"	v	module:MODAMBER
BIN	g.ptmc.F	51;"	c	subroutine:PARALLELTEMPERING
BIN	optim.bfgsts.f	1901;"	c	subroutine:HSMOVE
BIN	optim.changep.f	34;"	c	subroutine:CHANGEP
BIN	optim.dumpit.f	31;"	c	subroutine:DUMPIT
BIN	optim.fetchz.f	43;"	c	subroutine:FETCHZ
BIN	optim.keyword.f	79;"	c	subroutine:KEYWORD
BIN	optim.ljpbin.f	53;"	c	subroutine:LJPBIN
BIN	optim.ljpkob.f	53;"	c	subroutine:LJPKOB
BIN	optim.ljpshift.f	1508;"	c	subroutine:LJPSHIFTBIN2
BIN	optim.ljpshift.f	52;"	c	subroutine:LJPSHIFTBIN
BIN	optim.ljpshift.f	709;"	c	subroutine:LJPSHIFTBINC
BINARY	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY,/;"	v	module:COMMONS
BINARY	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY,/;"	v	module:COMMONS
BINARY	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY,/;"	v	module:KEY
BINSTRUCTURES	g.commons.f90	/^     &        PTMC, BINSTRUCTURES,/;"	v	module:COMMONS
BINSTRUCTURES	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES,/;"	v	module:COMMONS
BIPARTITE	g.bipartite.f90	/^SUBROUTINE BIPARTITE(/;"	s
BISECTDEBUG	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T, BISECTT, BISECTDEBUG,/;"	v	module:KEY
BISECTE	optim.bisect.f90	47;"	c	subroutine:BISECT_OPT
BISECTE	optim.geopt.f	62;"	c	subroutine:GEOPT
BISECTMAXATTEMPTS	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS,/;"	v	module:KEY
BISECTMAXENERGY	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE, INTRMSTOL, BFGSTSTOL, &$/;"	v	module:KEY
BISECTMINDIST	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST,/;"	v	module:KEY
BISECTSTEPS	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS,/;"	v	module:KEY
BISECTT	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T, BISECTT,/;"	v	module:KEY
BISECT_OPT	optim.bisect.f90	/^SUBROUTINE BISECT_OPT(/;"	s
BL	g.vgw.f90	/^     DOUBLE/;"	v	module:VGW
BL	g.vgw.f90	/^     DOUBLE/;"	v	module:VGWSP
BLFACTOR	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR,/;"	v	module:KEY
BLJCLUSTER	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD, & $/;"	v	module:COMMONS
BLJCLUSTER	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD, & $/;"	v	module:COMMONS
BLJSITE	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE,/;"	v	module:COMMONS
BLJSITE	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE,/;"	v	module:COMMONS
BLJSITE	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,/;"	v	module:KEY
BLN	bln.f90	/^     MODULE BLN /;"	m
BLN	g.BLN.f	/^      SUBROUTINE BLN(/;"	s
BLN	optim.BLN.f	/^      SUBROUTINE BLN(/;"	s
BLNSSTRUCT	g.commons.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:COMMONS
BLNSSTRUCT	g.commons.o.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:COMMONS
BLNSSTRUCT	optim.key.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:KEY
BLNT	commons.f90	/^LOGICAL BLNT=/;"	v	module:COMMONS
BLNT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT,/;"	v	module:COMMONS
BLNT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT,/;"	v	module:COMMONS
BLNT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL, BLNT,/;"	v	module:KEY
BLOCK	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK,/;"	v	module:COMMONS
BLOCK	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK,/;"	v	module:COMMONS
BONDAGE	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA, REPULSE, BONDAGE,/;"	v	module:distance
BONDHELL	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,/;"	v	module:MODAMBER
BONDNUM	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: BONDNUM(/;"	v	module:INTCOMMONS
BOTTOM	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,/;"	v	module:MODAMBER
BOWMANDIR	optim.key.f90	/^      CHARACTER(LEN=80) :: SYS, FILTHSTR, BOWMANDIR$/;"	v	module:KEY
BOWMANPES	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN, SDCHARGE, BOWMANPES,/;"	v	module:KEY
BOWMANT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT,/;"	v	module:KEY
BOXDERIVS	optim.PV.f	42;"	c	subroutine:PVOPT
BOXDERIVS	optim.ljpshift.f	54;"	c	subroutine:LJPSHIFTBIN
BOXLX	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ, &$/;"	v	module:COMMONS
BOXLX	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ, &$/;"	v	module:COMMONS
BOXLX	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,/;"	v	module:PYMODULE
BOXLY	g.commons.f90	/^     &                 BOXLX, BOXLY,/;"	v	module:COMMONS
BOXLY	g.commons.o.f90	/^     &                 BOXLX, BOXLY,/;"	v	module:COMMONS
BOXLY	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,/;"	v	module:PYMODULE
BOXLZ	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ,/;"	v	module:COMMONS
BOXLZ	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ,/;"	v	module:COMMONS
BOXLZ	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,/;"	v	module:PYMODULE
BOXSIZE	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,NCWALL,BOXSIZE,/;"	v	module:MODCHARMM
BOXT	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT,/;"	v	module:MODCHARMM
BPGRP	optim.syminf.f90	/^      CHARACTER(LEN=4) :: FPGRP, BPGRP,/;"	v	module:SYMINF
BPP	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,BPP,/;"	v	module:MODUNRES
BQMAX	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,/;"	v	module:COMMONS
BQMAX	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,/;"	v	module:COMMONS
BRENT	g.brent.f	/^      FUNCTION BRENT(/;"	f
BRENTMIN	g.pyg.f90	/^      SUBROUTINE BRENTMIN /;"	s
BRENTMIN	optim.pyg.f90	/^      SUBROUTINE BRENTMIN /;"	s
BRENTMINGB	g.takestepmsgb.f90	/^      SUBROUTINE BRENTMINGB /;"	s
BSMIN	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN,/;"	v	module:COMMONS
BSMIN	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN,/;"	v	module:COMMONS
BSMIN	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN,/;"	v	module:KEY
BSNEW	g.keyword.f	53;"	c	subroutine:KEYWORD
BSNEW	g.odesd.f	29;"	c	subroutine:ODESD
BSNEW	optim.keyword.f	92;"	c	subroutine:KEYWORD
BSNEW	optim.odesd.f	31;"	c	subroutine:ODESD
BSPT	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT,/;"	v	module:COMMONS
BSPT	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT,/;"	v	module:COMMONS
BSPTDUMPFRQ	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ,/;"	v	module:COMMONS
BSPTDUMPFRQ	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ,/;"	v	module:COMMONS
BSPTQMAX	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3, &$/;"	v	module:COMMONS
BSPTQMAX	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3, &$/;"	v	module:COMMONS
BSPTQMIN	g.commons.f90	/^     &                 BSPTQMAX, BSPTQMIN,/;"	v	module:COMMONS
BSPTQMIN	g.commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN,/;"	v	module:COMMONS
BSPTRESTART	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART,/;"	v	module:COMMONS
BSPTRESTART	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART,/;"	v	module:COMMONS
BSSTEP	optim.odesd.f	/^      SUBROUTINE BSSTEP(/;"	s
BSWL	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL,/;"	v	module:COMMONS
BSWL	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL,/;"	v	module:COMMONS
BUFFER	func.f90	1011;"	c	subroutine:GETF
BUFFER	func.f90	1063;"	c	subroutine:GETA
BUFFER	func.f90	1116;"	c	subroutine:REREAD
BUFFER	func.f90	1161;"	c	subroutine:REPORT
BUFFER	func.f90	418;"	c	subroutine:INPUT
BUFFER	func.f90	658;"	c	block data:INBLK
BUFFER	func.f90	679;"	c	subroutine:READF
BUFFER	func.f90	851;"	c	subroutine:READK
BUFFER	func.f90	910;"	c	subroutine:READA
BUFFER	func.f90	987;"	c	subroutine:READCH
BUFFER	g.input.f	105;"	c	subroutine:INPUT
BUFFER	g.input.f	343;"	c	block data:INBLK
BUFFER	g.input.f	377;"	c	subroutine:READF
BUFFER	g.input.f	583;"	c	subroutine:READK
BUFFER	g.input.f	644;"	c	subroutine:READA
BUFFER	g.input.f	724;"	c	subroutine:READCH
BUFFER	g.input.f	748;"	c	subroutine:GETF
BUFFER	g.input.f	802;"	c	subroutine:GETA
BUFFER	g.input.f	862;"	c	subroutine:REREAD
BUFFER	g.input.f	906;"	c	subroutine:REPORT
BUFFER	optim.input.f	22;"	c	subroutine:INPUT
BUFFER	optim.input.f	262;"	c	block data:INBLK
BUFFER	optim.input.f	283;"	c	subroutine:READF
BUFFER	optim.input.f	455;"	c	subroutine:READK
BUFFER	optim.input.f	514;"	c	subroutine:READA
BUFFER	optim.input.f	591;"	c	subroutine:READCH
BUFFER	optim.input.f	615;"	c	subroutine:GETF
BUFFER	optim.input.f	668;"	c	subroutine:GETA
BUFFER	optim.input.f	721;"	c	subroutine:REREAD
BUFFER	optim.input.f	766;"	c	subroutine:REPORT
BUFFER	pathsample.input.f	280;"	c	block data:INBLK
BUFFER	pathsample.input.f	314;"	c	subroutine:READF
BUFFER	pathsample.input.f	40;"	c	subroutine:INPUT
BUFFER	pathsample.input.f	488;"	c	subroutine:READK
BUFFER	pathsample.input.f	547;"	c	subroutine:READA
BUFFER	pathsample.input.f	623;"	c	subroutine:READCH
BUFFER	pathsample.input.f	646;"	c	subroutine:GETF
BUFFER	pathsample.input.f	697;"	c	subroutine:GETA
BUFFER	pathsample.input.f	752;"	c	subroutine:REREAD
BUFFER	pathsample.input.f	797;"	c	subroutine:REPORT
BUFINF	func.f90	1013;"	c	subroutine:GETF
BUFINF	func.f90	1065;"	c	subroutine:GETA
BUFINF	func.f90	1118;"	c	subroutine:REREAD
BUFINF	func.f90	1163;"	c	subroutine:REPORT
BUFINF	func.f90	420;"	c	subroutine:INPUT
BUFINF	func.f90	660;"	c	block data:INBLK
BUFINF	func.f90	681;"	c	subroutine:READF
BUFINF	func.f90	853;"	c	subroutine:READK
BUFINF	func.f90	912;"	c	subroutine:READA
BUFINF	func.f90	989;"	c	subroutine:READCH
BUFINF	g.input.f	107;"	c	subroutine:INPUT
BUFINF	g.input.f	345;"	c	block data:INBLK
BUFINF	g.input.f	379;"	c	subroutine:READF
BUFINF	g.input.f	585;"	c	subroutine:READK
BUFINF	g.input.f	646;"	c	subroutine:READA
BUFINF	g.input.f	726;"	c	subroutine:READCH
BUFINF	g.input.f	750;"	c	subroutine:GETF
BUFINF	g.input.f	804;"	c	subroutine:GETA
BUFINF	g.input.f	864;"	c	subroutine:REREAD
BUFINF	g.input.f	908;"	c	subroutine:REPORT
BUFINF	g.io1.f	44;"	c	subroutine:IO1
BUFINF	g.keyword.f	43;"	c	subroutine:KEYWORD
BUFINF	keyword.f90	13;"	c	subroutine:KEYWORD
BUFINF	optim.changep.f	29;"	c	subroutine:CHANGEP
BUFINF	optim.fetchz.f	65;"	c	subroutine:FETCHZ
BUFINF	optim.input.f	24;"	c	subroutine:INPUT
BUFINF	optim.input.f	264;"	c	block data:INBLK
BUFINF	optim.input.f	285;"	c	subroutine:READF
BUFINF	optim.input.f	457;"	c	subroutine:READK
BUFINF	optim.input.f	516;"	c	subroutine:READA
BUFINF	optim.input.f	593;"	c	subroutine:READCH
BUFINF	optim.input.f	617;"	c	subroutine:GETF
BUFINF	optim.input.f	670;"	c	subroutine:GETA
BUFINF	optim.input.f	723;"	c	subroutine:REREAD
BUFINF	optim.input.f	768;"	c	subroutine:REPORT
BUFINF	optim.keyword.f	73;"	c	subroutine:KEYWORD
BUFINF	optim.main.f90	12;"	c	program:OPTIM4
BUFINF	pathsample.input.f	282;"	c	block data:INBLK
BUFINF	pathsample.input.f	316;"	c	subroutine:READF
BUFINF	pathsample.input.f	42;"	c	subroutine:INPUT
BUFINF	pathsample.input.f	490;"	c	subroutine:READK
BUFINF	pathsample.input.f	549;"	c	subroutine:READA
BUFINF	pathsample.input.f	625;"	c	subroutine:READCH
BUFINF	pathsample.input.f	648;"	c	subroutine:GETF
BUFINF	pathsample.input.f	699;"	c	subroutine:GETA
BUFINF	pathsample.input.f	754;"	c	subroutine:REREAD
BUFINF	pathsample.input.f	799;"	c	subroutine:REPORT
BUFINF	pathsample.keyword.f90	36;"	c	subroutine:KEYWORD
BUILD_RHO_SITE	g.Ackland_metals.f90	/^      SUBROUTINE BUILD_RHO_SITE(/;"	s
BUILD_RHO_SITE	optim.Ackland_metals.f90	/^      SUBROUTINE BUILD_RHO_SITE(/;"	s
BUILD_V_SITE	g.Ackland_metals.f90	/^       SUBROUTINE BUILD_V_SITE(/;"	s
BUILD_V_SITE	optim.Ackland_metals.f90	/^       SUBROUTINE BUILD_V_SITE(/;"	s
BULKMINDIST	optim.bulkmindist.f90	/^SUBROUTINE BULKMINDIST(/;"	s
BULKMINDIST	pathsample.bulkmindist.f90	/^SUBROUTINE BULKMINDIST(/;"	s
BULKSHIFT	optim.bulkmindist.f90	27;"	c	subroutine:BULKMINDIST
BULKSHIFT	optim.minpermdist.f90	78;"	c	subroutine:MINPERMDIST
BULKT	optim.key.f90	/^     &        BFGSSTEP, BULKT,/;"	v	module:KEY
BVR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR,/;"	v
BX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,/;"	v	module:MODAMBER
BY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,/;"	v	module:MODAMBER
BZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,/;"	v	module:MODAMBER
B_BLN	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(/;"	v	module:COMMONS
B_BLN	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(/;"	v	module:COMMONS
B_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(/;"	v	module:KEY
B_FACTOR	g.molinfo.f90	/^        DOUBLE PRECISION   :: B_FACTOR /;"	k	type:ATOM
BinaryIO	optim.binaryio.f90	/^MODULE BinaryIO$/;"	m
C	optim.modunres.f90	/^      DOUBLE PRECI/;"	v	module:MODUNRES
C12	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)), ALLOCATABLE :: C12(/;"	k	type:RIGIDBODYPOTENTIAL
C12	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, ALLOCATABLE :: C12(/;"	k	type:RIGIDBODYPOTENTIAL
C6	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)), ALLOCATABLE :: C6(/;"	k	type:RIGIDBODYPOTENTIAL
C6	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, ALLOCATABLE :: C6(/;"	k	type:RIGIDBODYPOTENTIAL
C60DIFF	optim.c60diff.f	/^      SUBROUTINE C60DIFF(/;"	s
C60P	optim.c60p.f	/^      SUBROUTINE C60P(/;"	s
C60PE	optim.latmin.f	/^      SUBROUTINE C60PE(/;"	s
C6MM	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM,/;"	v	module:KEY
C6PM	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM,/;"	v	module:KEY
C6PP	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP,/;"	v	module:KEY
CAARDIFF	optim.caardiff.f	/^      SUBROUTINE CAARDIFF(/;"	s
CAARG	optim.caardiff.f	/^      SUBROUTINE CAARG(/;"	s
CAARS	optim.caardiff.f	/^      SUBROUTINE CAARS(/;"	s
CADPAC	optim.key.f90	/^     &        GAUSSIAN, CADPAC,/;"	v	module:KEY
CALCDIHE	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,/;"	v	module:modcharmm
CALCORDER	pathsample.calcorder.CypA.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.gb1.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.p53.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.p53.new.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.p53.old.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.proteinL.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_CYPA.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_CYPA_substrate.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_p53_RMSDalone.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_p53_helicity_RMSD.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCULATEDDISTANCE	g.basinsampling.f90	/^      FUNCTION CALCULATEDDISTANCE(/;"	f	subroutine:BASINSAMPLING
CALCULATEPBB	pathsample.GT2.f90	/^     SUBROUTINE CALCULATEPBB$/;"	s	subroutine:SGDETACHNODE
CALCULATEPBB	pathsample.GT2.save.f90	/^     SUBROUTINE CALCULATEPBB$/;"	s	subroutine:SGDETACHNODE
CALC_GRADIENTBLN	g.BLN.f	/^      SUBROUTINE CALC_GRADIENTBLN(/;"	s
CALC_GRADIENTBLN	optim.BLN.f	/^      SUBROUTINE CALC_GRADIENTBLN(/;"	s
CALC_INT_COORDSBLN	g.BLN.f	/^      SUBROUTINE CALC_INT_COORDSBLN(/;"	s
CAP	g.modamb.f90	/^      LOGICAL AMBERSEED, CAP$/;"	v	module:MODAMBER
CAPS	g.capsid.f	38;"	c	subroutine:FCAPSID
CAPS	g.finalio.f	50;"	c	subroutine:FINALIO
CAPS	g.io1.f	41;"	c	subroutine:IO1
CAPS	g.keyword.f	55;"	c	subroutine:KEYWORD
CAPS	g.newcapsid.f90	16;"	c	subroutine:NEWCAPSID
CAPS	optim.capsid.f	63;"	c	subroutine:FCAPSID
CAPS	optim.dumpit.f	33;"	c	subroutine:DUMPIT
CAPS	optim.fetchz.f	60;"	c	subroutine:FETCHZ
CAPS	optim.keyword.f	116;"	c	subroutine:KEYWORD
CAPS	optim.newcapsid.f90	16;"	c	subroutine:NEWCAPSID
CAPS	optim.path.f	73;"	c	subroutine:PATH
CAPSID	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID,/;"	v	module:COMMONS
CAPSID	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID,/;"	v	module:COMMONS
CAPSIDIO	g.finalio.f	/^      SUBROUTINE CAPSIDIO(/;"	s
CAPSIDIO	optim.dumpit.f	/^      SUBROUTINE CAPSIDIO(/;"	s
CAPSOMER	pathsample.rigidbody.f90	/^  TYPE CAPSOMER$/;"	t	module:RIGIDBODY
CAPSOMER	pathsample.rigidbodymod.f90	/^  TYPE CAPSOMER$/;"	t	module:RIGIDBODYMOD
CAPSOMERDEFS	pathsample.rigidbody.f90	/^  TYPE (CAPSOMER), ALLOCATABLE :: CAPSOMERDEFS(/;"	v	module:RIGIDBODY
CAPSOMERDEFS	pathsample.rigidbodymod.f90	/^  TYPE (CAPSOMER), ALLOCATABLE :: CAPSOMERDEFS(/;"	v	module:RIGIDBODYMOD
CART	g.modamb.f90	/^      LOGICAL CART$/;"	v	module:MODAMBER
CART2INT	optim.intcoords.f90	/^   SUBROUTINE CART2INT(/;"	s	module:INTCUTILS
CARTATMS	optim.intcommons.f90	/^       & IMPDIH(:,:), CARTATMS(/;"	v	module:INTCOMMONS
CARTATMSTART	optim.intcommons.f90	/^  INTEGER :: CARTRESSTART = -1, CARTATMSTART /;"	v	module:INTCOMMONS
CARTESIANSEPARATION	pathsample.rigidbody.f90	/^  FUNCTION CARTESIANSEPARATION(/;"	f	module:RIGIDBODY
CARTESIANSEPARATION	pathsample.rigidbodymod.f90	/^  FUNCTION CARTESIANSEPARATION(/;"	f	module:RIGIDBODYMOD
CARTESIANX	pathsample.rigidbody.f90	/^  FUNCTION CARTESIANX /;"	f	module:RIGIDBODY
CARTESIANX	pathsample.rigidbodymod.f90	/^  FUNCTION CARTESIANX /;"	f	module:RIGIDBODYMOD
CARTESIANY	pathsample.rigidbody.f90	/^  FUNCTION CARTESIANY /;"	f	module:RIGIDBODY
CARTESIANY	pathsample.rigidbodymod.f90	/^  FUNCTION CARTESIANY /;"	f	module:RIGIDBODYMOD
CARTESIANZ	pathsample.rigidbody.f90	/^  FUNCTION CARTESIANZ /;"	f	module:RIGIDBODY
CARTESIANZ	pathsample.rigidbodymod.f90	/^  FUNCTION CARTESIANZ /;"	f	module:RIGIDBODYMOD
CARTRESSTART	optim.intcommons.f90	/^  INTEGER :: CARTRESSTART /;"	v	module:INTCOMMONS
CAS	optim.Clatmin.f	25;"	c	subroutine:CLATMIN
CAS	optim.fetchz.f	45;"	c	subroutine:FETCHZ
CAS	optim.potential.f	75;"	c	subroutine:POTENTIAL
CASTEP	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY, CASTEP,/;"	v	module:KEY
CASTEP	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,/;"	v	program:OPTIM4
CASTEPJOB	optim.key.f90	/^      CHARACTER(LEN=120) :: CASTEPJOB,/;"	v	module:KEY
CAT	func.f90	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CAT	g.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CAT	optim.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CAT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,/;"	v	program:OPTIM4
CAT	pathsample.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CBT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT,/;"	v	module:KEY
CCKJ	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,/;"	v	module:COMMONS
CCKJ	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,/;"	v	module:COMMONS
CCKJ	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,/;"	v	module:KEY
CEIG	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG,/;"	v	module:COMMONS
CEIG	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG,/;"	v	module:COMMONS
CEIG	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG,/;"	v	module:KEY
CENT	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT,/;"	v	module:COMMONS
CENT	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT,/;"	v	module:COMMONS
CENTER2	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTER2(/;"	v	module:INTCOMMONS
CENTERS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(/;"	v	module:INTCOMMONS
CENTRE	optim.connect.f	/^      SUBROUTINE CENTRE(/;"	s
CENTRE	pathsample.centre.f	/^      SUBROUTINE CENTRE(/;"	s
CENTRE2	func.f90	/^SUBROUTINE CENTRE2(/;"	s
CENTRE2	g.centre.f	/^      SUBROUTINE CENTRE2(/;"	s
CENTRE2	gmin.func.f90	/^SUBROUTINE CENTRE2(/;"	s
CENTRECOM	g.centrecom.f	/^      SUBROUTINE CENTRECOM(/;"	s
CENTX	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX,/;"	v	module:COMMONS
CENTX	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX,/;"	v	module:COMMONS
CENTXY	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY,/;"	v	module:COMMONS
CENTXY	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY,/;"	v	module:COMMONS
CENTY	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY,/;"	v	module:COMMONS
CENTY	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY,/;"	v	module:COMMONS
CENTZ	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ,/;"	v	module:COMMONS
CENTZ	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD, CENTX, CENTY, CENTZ,/;"	v	module:COMMONS
CFUSIONT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT,/;"	v	module:KEY
CGCONST	g.vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(3), CGG(3), CGG2(3), CGCONST$/;"	v	module:VGWSP
CGCONST	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(3), CGG2(3), CGCONST,/;"	v	module:VGW
CGDETACHNODE	pathsample.GT2.f90	/^     SUBROUTINE CGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CGDETACHNODE	pathsample.GT2.save.f90	/^     SUBROUTINE CGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CGG	g.vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(3), CGG(/;"	v	module:VGWSP
CGG	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(/;"	v	module:VGW
CGG2	g.vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(3), CGG(3), CGG2(/;"	v	module:VGWSP
CGG2	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(3), CGG2(/;"	v	module:VGW
CGK	g.vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX, CGK(/;"	v	module:VGWSP
CGK	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(/;"	v	module:VGW
CGMIN	g.cgmin.f	/^      SUBROUTINE CGMIN(/;"	s
CHAIN	optim.modunres.f90	47;"	c	module:MODUNRES
CHAIN_ID	g.molinfo.f90	/^        INTEGER            :: CHAIN_ID /;"	k	type:ATOM
CHALLOCATE	optim.chdummy.f	/^      SUBROUTINE CHALLOCATE(/;"	s
CHANGEDS	pathsample.GT2.f90	/^     SUBROUTINE CHANGEDS(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CHANGEDS	pathsample.GT2.save.f90	/^     SUBROUTINE CHANGEDS(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CHANGEP	optim.changep.f	/^      SUBROUTINE CHANGEP$/;"	s
CHANGE_TEMP	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP,/;"	v	module:COMMONS
CHANGE_TEMP	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP,/;"	v	module:COMMONS
CHANGE_TEMP	optim.commons.f90	/^      LOGICAL TAGT, CHANGE_TEMP$/;"	v	module:COMMONS
CHAR	func.f90	/^      CHARA/;"	v	block data:INBLK
CHAR	g.input.f	/^      CHARA/;"	v	block data:INBLK
CHAR	optim.input.f	/^      CHARA/;"	v	block data:INBLK
CHAR	pathsample.input.f	/^      CHARA/;"	v	block data:INBLK
CHARGE	g.molinfo.f90	/^        DOUBLE PRECISION   :: CHARGE /;"	k	type:ATOM
CHARGE	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: CHARGE /;"	v	module:KEY
CHARGE	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)), ALLOCATABLE :: CHARGE(/;"	k	type:RIGIDBODYPOTENTIAL
CHARGE	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, ALLOCATABLE :: CHARGE(/;"	k	type:RIGIDBODYPOTENTIAL
CHARGECON	optim.ttm3f.f90	/^double precision, parameter :: CHARGECON /;"	v	module:ttm3f_mod
CHARMMBILDC	optim.amber9dummy.f90	/^subroutine CHARMMBILDC(/;"	s
CHARMMDUMP	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMP(/;"	s
CHARMMDUMP	pathsample.charmmdump.f	/^      SUBROUTINE CHARMMDUMP(/;"	s
CHARMMDUMP2	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMP2(/;"	s
CHARMMDUMPMOBCAL	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMPMOBCAL(/;"	s
CHARMMDUMPMODES	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMPMODES(/;"	s
CHARMMENERGIES	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES,/;"	v	module:COMMONS
CHARMMENERGIES	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES,/;"	v	module:COMMONS
CHARMMNEB	optim.chdummy.f	/^      SUBROUTINE CHARMMNEB(/;"	s
CHARMMREAD	pathsample.charmmdump.f	/^      SUBROUTINE CHARMMREAD(/;"	s
CHARMMTYPE	g.modcharmm.f90	/^      INTEGER :: CHARMMTYPE,/;"	v	module:MODCHARMM
CHARMMTYPE	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE,/;"	v	module:modcharmm
CHBIT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,CHECKOMEGAT, ICINTERPT, CHBIT$/;"	v	module:modcharmm
CHCALCDIHE	optim.chdummy.f	/^      SUBROUTINE CHCALCDIHE(/;"	s
CHCALCHELIX	optim.chdummy.f	/^      SUBROUTINE CHCALCHELIX(/;"	s
CHCALCHPDIST	optim.chdummy.f	/^      SUBROUTINE CHCALCHPDIST(/;"	s
CHCALCNUMHB	optim.chdummy.f	/^      SUBROUTINE CHCALCNUMHB(/;"	s
CHCALCRGYR	optim.chdummy.f	/^      SUBROUTINE CHCALCRGYR(/;"	s
CHCALCRMSD	optim.chdummy.f	/^      SUBROUTINE CHCALCRMSD(/;"	s
CHDEBUG	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB, ACESOLV, CHDEBUG,/;"	v	module:modcharmm
CHECKCHIRAL	optim.chdummy.f	/^      SUBROUTINE CHECKCHIRAL(/;"	s
CHECKCHIRALITY	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY,/;"	v	module:COMMONS
CHECKCHIRALITY	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY,/;"	v	module:COMMONS
CHECKCHIRALT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,/;"	v	module:modcharmm
CHECKCISTRANS	optim.chdummy.f	/^      SUBROUTINE CHECKCISTRANS(/;"	s
CHECKCISTRANSALWAYS	g.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS,/;"	v	module:MODAMBER9
CHECKCISTRANSALWAYS	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA, CHECKCISTRANSALWAYS,/;"	v	module:modamber9
CHECKCISTRANSALWAYSDNA	g.modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL, SETCHIRAL, CHECKCISTRANSALWAYSRNA, CHECKCISTRANSALWAYSDNA$/;"	v	module:MODAMBER9
CHECKCISTRANSALWAYSDNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA, CHECKCISTRANSALWAYS, CHECKCISTRANSALWAYSRNA, CHECKCISTRANSALWAYSDNA$/;"	v	module:modamber9
CHECKCISTRANSALWAYSRNA	g.modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL, SETCHIRAL, CHECKCISTRANSALWAYSRNA,/;"	v	module:MODAMBER9
CHECKCISTRANSALWAYSRNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA, CHECKCISTRANSALWAYS, CHECKCISTRANSALWAYSRNA,/;"	v	module:modamber9
CHECKCONINT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT, RPFIXT, CHECKCONINT,/;"	v	module:KEY
CHECKCONT	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT,/;"	v	module:KEY
CHECKD	g.checkd.f90	/^      SUBROUTINE CHECKD(/;"	s
CHECKDRVTS	optim.rigidb.f90	/^      SUBROUTINE CHECKDRVTS(/;"	s
CHECKDT	g.commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT,/;"	v	module:COMMONS
CHECKDT	g.commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT,/;"	v	module:COMMONS
CHECKENERGIES	optim.growstring.f90	/^  SUBROUTINE CHECKENERGIES$/;"	s	module:GROWSTRINGUTILS
CHECKFLATNESS	g.basinsampling.f90	/^      FUNCTION CHECKFLATNESS(/;"	f	subroutine:BASINSAMPLING
CHECKICPHI	optim.chdummy.f	/^      SUBROUTINE CHECKICPHI(/;"	s
CHECKIND	optim.bfgsts.f	/^      SUBROUTINE CHECKIND(/;"	s
CHECKIND2	optim.bfgsts.f	/^      SUBROUTINE CHECKIND2(/;"	s
CHECKINDEX	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX,/;"	v	module:KEY
CHECKMARKOVT	g.commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT,/;"	v	module:COMMONS
CHECKMARKOVT	g.commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT,/;"	v	module:COMMONS
CHECKOMEGA	optim.chdummy.f	/^      SUBROUTINE CHECKOMEGA(/;"	s
CHECKOMEGAT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,CHECKOMEGAT,/;"	v	module:modcharmm
CHECKPOINT	optim.chdummy.f	/^      SUBROUTINE CHECKPOINT(/;"	s
CHECKREP	optim.intlbfgs.f90	/^SUBROUTINE CHECKREP(/;"	s
CHECKSEP	optim.intlbfgs.f90	/^SUBROUTINE CHECKSEP(/;"	s
CHECKTS	pathsample.checkTS.f90	/^      SUBROUTINE CHECKTS(/;"	s
CHECK_CISTRANS_PROTEIN	g.amber9dummy.f90	/^SUBROUTINE CHECK_CISTRANS_PROTEIN(/;"	s
CHECK_CISTRANS_PROTEIN	optim.amber9dummy.f90	/^SUBROUTINE CHECK_CISTRANS_PROTEIN(/;"	s
CHECK_SIDECHAIN	g.amber9dummy.f90	/^subroutine CHECK_SIDECHAIN(/;"	s
CHECK_SIDECHAIN	optim.amber9dummy.f90	/^subroutine CHECK_SIDECHAIN(/;"	s
CHFREQ	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ,/;"	v	module:MODCHARMM
CHGETICVAL	g.amber9dummy.f90	/^subroutine CHGETICVAL(/;"	s
CHGETICVAL	optim.amber9dummy.f90	/^subroutine CHGETICVAL(/;"	s
CHGUESSTS	optim.chdummy.f	/^      SUBROUTINE CHGUESSTS(/;"	s
CHI	g.modconsts.f90	/^      DOUBLE PRECISION CHI,/;"	v	module:consts
CHI	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,/;"	v	module:consts_trans_97
CHICDNEB	optim.intcommons.f90	/^  LOGICAL :: DESMINT = .FALSE., CHICDNEB=/;"	v	module:INTCOMMONS
CHIR	optim.amber.f	113;"	c	subroutine:AMBERS
CHIR	optim.amber.f	1939;"	c	subroutine:aread
CHIR	optim.amber.f	617;"	c	subroutine:chiraltest
CHIRAL	g.modamber9.f90	/^integer, dimension(:), allocatable :: CHIRAL$/;"	v	module:MODAMBER9
CHIRAL	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,CHIRAL /;"	v	module:MODCHARMM
CHIRAL	optim.modamber9.f90	/^integer, dimension(:), allocatable :: CHIRAL$/;"	v	module:modamber9
CHIRAL	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: CHIRAL(/;"	v	module:modcharmm
CHKUCP	g.tn.f	/^      SUBROUTINE CHKUCP(/;"	s
CHMDFREQ	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ,/;"	v	module:MODCHARMM
CHMDPAR	g.modcharmm.f90	/^      CHARACTER(LEN=500) :: CHMDPAR$/;"	v	module:MODCHARMM
CHMDT	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT, RMST, SPHERET, CHMDT$/;"	v	module:MODCHARMM
CHNMAX	g.modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN, CHPMAX, CHNMIN, CHNMAX$/;"	v	module:MODCHARMM
CHNMIN	g.modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN, CHPMAX, CHNMIN,/;"	v	module:MODCHARMM
CHNRES	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES,/;"	v	module:COMMONS
CHNRES	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES,/;"	v	module:COMMONS
CHORD	optim.gsdata.f90	/^     DOUBLE PRECISION :: CHORD,/;"	k	type:IMGNODE
CHPMAX	g.modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN, CHPMAX,/;"	v	module:MODCHARMM
CHPMIN	g.modcharmm.f90	/^      DOUBLE PRECISION :: CHPMIN,/;"	v	module:MODCHARMM
CHREBUILD	optim.amber9dummy.f90	/^subroutine  CHREBUILD(/;"	s
CHREDUCEDBONDLENGTH	optim.chdummy.f	/^      SUBROUTINE CHREDUCEDBONDLENGTH(/;"	s
CHRESTOATOM	optim.chdummy.f	/^      SUBROUTINE CHRESTOATOM(/;"	s
CHRIGIDROTT	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT,/;"	v	module:MODCHARMM
CHRIGIDT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG, CHRIGIDT,/;"	v	module:KEY
CHRIGIDTRANST	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST,/;"	v	module:MODCHARMM
CHRMMT	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT,/;"	v	module:COMMONS
CHRMMT	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT,/;"	v	module:COMMONS
CHRMMT	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,/;"	v	module:modcharmm
CHSEEDI	g.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI,/;"	v	module:MODCHARMM
CHSEEDI	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI,/;"	v	module:modcharmm
CHSEEDJ	g.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ,/;"	v	module:MODCHARMM
CHSEEDJ	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ,/;"	v	module:modcharmm
CHSEEDK	g.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ, CHSEEDK /;"	v	module:MODCHARMM
CHSEEDK	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ, CHSEEDK /;"	v	module:modcharmm
CHSETDIHE	optim.chdummy.f	/^      SUBROUTINE CHSETDIHE$/;"	s
CHSETUP	optim.chdummy.f	/^      SUBROUTINE CHSETUP(/;"	s
CHSETZSYMATMASS	optim.chdummy.f	/^      SUBROUTINE CHSETZSYMATMASS$/;"	s
CH_SEED	optim.charmmBildc.f	/^      SUBROUTINE CH_SEED(/;"	s
CLATMIN	optim.Clatmin.f	/^      SUBROUTINE CLATMIN(/;"	s
CLEANRIGIDBODIES	pathsample.rigidbody.f90	/^  SUBROUTINE CLEANRIGIDBODIES$/;"	s	module:RIGIDBODY
CLEANRIGIDBODIES	pathsample.rigidbodymod.f90	/^  SUBROUTINE CLEANRIGIDBODIES$/;"	s	module:RIGIDBODYMOD
CLEANUP	optim.connect.f	/^      SUBROUTINE CLEANUP(/;"	s
CLEANUP_VGW	g.vgw.f90	/^SUBROUTINE CLEANUP_VGW$/;"	s
CLEANUP_VGWSP	g.vgw.f90	/^SUBROUTINE CLEANUP_VGWSP$/;"	s
CLEAR	func.f90	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CLEAR	g.input.f	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CLEAR	optim.input.f	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CLEAR	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,/;"	v	program:OPTIM4
CLEAR	pathsample.input.f	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CLJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: CLJ /;"	v	module:msevb_common
CLOSESTALIGNMENT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT,/;"	v	module:KEY
CMDIST	tr.f90	/^      DOUBLE PRECISION CMDIST(/;"	v
CMPLXI	optim.cubsplstring.f90	/^  COMPLEX, PARAMETER :: CMPLXI=/;"	v	module:CUBSPLSTRING
CMPLXI	optim.specialfuncts.f90	/^  COMPLEX (KIND=KIND(1.0D0)), PARAMETER :: CMPLXI /;"	v	module:SPFUNCTS
CMPMAT	g.ptgrp.f	/^      SUBROUTINE CMPMAT(/;"	s
CNVTST	g.tn.f	/^      SUBROUTINE CNVTST(/;"	s
CO	g.potential.f	33;"	c	subroutine:POTENTIAL
COEFF	optim.cubsplstring.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: COEFF(/;"	v	module:CUBSPLSTRING
COEFF	optim.intcommons.f90	/^  DOUBLE PRECISION :: COEFF(/;"	v	module:INTCOMMONS
COLDFUSION	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION,/;"	v	module:COMMONS
COLDFUSION	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION,/;"	v	module:COMMONS
COLDFUSIONLIMIT	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT,/;"	v	module:COMMONS
COLDFUSIONLIMIT	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT,/;"	v	module:COMMONS
COLDFUSIONLIMIT	optim.key.f90	/^      DOUBLE PRECISION :: COLDFUSIONLIMIT$/;"	v	module:KEY
COL_IND	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: COL_IND(/;"	v	module:NGTMEM
COL_INDTEMP	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: COL_IND(:), COL_INDTEMP(/;"	v	module:NGTMEM
COMMONS	commons.f90	/^MODULE COMMONS$/;"	m
COMMONS	g.commons.f90	/^      MODULE COMMONS$/;"	m
COMMONS	g.commons.o.f90	/^      MODULE COMMONS$/;"	m
COMMONS	optim.commons.f90	/^MODULE COMMONS$/;"	m
COMP	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP,/;"	v	module:COMMONS
COMP	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP,/;"	v	module:COMMONS
COMPACT	stringmod.f90	/^SUBROUTINE COMPACT(/;"	s	module:strings
COMPARE2	g.ptgrp.f	/^      SUBROUTINE COMPARE2(/;"	s
COMPARE2	optim.utils.f	/^      SUBROUTINE COMPARE2(/;"	s
COMPLETEGRAPHTRANSFORMATION	pathsample.GT2.save.f90	/^     SUBROUTINE COMPLETEGRAPHTRANSFORMATION$/;"	s	module:GRAPHTRANSFORMATIONMODULE
COMPRESS	g.compress.f	/^      SUBROUTINE COMPRESS(/;"	s
COMPRESST	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST,/;"	v	module:COMMONS
COMPRESST	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST,/;"	v	module:COMMONS
COMTOORIGIN	pathsample.rigidbody.f90	/^  SUBROUTINE COMTOORIGIN /;"	s	module:RIGIDBODY
COMTOORIGIN	pathsample.rigidbodymod.f90	/^  SUBROUTINE COMTOORIGIN /;"	s	module:RIGIDBODYMOD
CONACTIVE	optim.key.f90	/^      LOGICAL, ALLOCATABLE :: CONACTIVE(/;"	v	module:KEY
CONDISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(/;"	v	module:KEY
CONDISTREFLOCAL	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(:), CONDISTREFLOCAL(/;"	v	module:KEY
CONDISTREFLOCALON	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(:), CONDISTREFLOCAL(:), CONDISTREFON(:), CONDISTREFLOCALON(/;"	v	module:KEY
CONDISTREFON	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(:), CONDISTREFLOCAL(:), CONDISTREFON(/;"	v	module:KEY
CONGRAD	optim.congrad.f90	/^SUBROUTINE CONGRAD(/;"	s
CONGRAD2	optim.congrad.f90	/^SUBROUTINE CONGRAD2(/;"	s
CONGRAD2	pathsample.make_conpot.f90	/^SUBROUTINE CONGRAD2(/;"	s
CONI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(/;"	v	module:KEY
CONION	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(:), CONION(/;"	v	module:KEY
CONJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(/;"	v	module:KEY
CONJG	g.commons.f90	/^     &        ZETT2, RESTART, CONJG,/;"	v	module:COMMONS
CONJG	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG,/;"	v	module:COMMONS
CONJON	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(:), CONION(:), CONJON(/;"	v	module:KEY
CONN	optim.OPTIM.F	85;"	c	subroutine:OPTIM
CONN	optim.bfgsts.f	82;"	c	subroutine:BFGSTS
CONN	optim.connect.f	1507;"	c	subroutine:RATES
CONN	optim.connect.f	48;"	c	subroutine:CONNECT
CONN	optim.fetchz.f	49;"	c	subroutine:FETCHZ
CONN	optim.func.f90	64;"	c	subroutine:OPTIM
CONN	optim.geopt.f	58;"	c	subroutine:GEOPT
CONN	optim.intbfgsts.f	54;"	c	subroutine:INTBFGSTS
CONN	optim.keyword.f	104;"	c	subroutine:KEYWORD
CONN	optim.path.f	71;"	c	subroutine:PATH
CONNECT	bln.vars.inc.f90	/^        LOGICAL CONNECT(/;"	v
CONNECT	optim.connect.f	/^      SUBROUTINE CONNECT(/;"	s
CONNECT	pathsample.connect.f	/^      SUBROUTINE CONNECT(/;"	s
CONNECTD	pathsample.connectd.f90	/^SUBROUTINE CONNECTD(/;"	s
CONNECTDIST	pathsample.connectdist.f90	/^SUBROUTINE CONNECTDIST(/;"	s
CONNECTODATA	pathsample.connectodata.f	/^      SUBROUTINE CONNECTODATA(/;"	s
CONPOT	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM, CONPOT$/;"	v	module:VGW
CONPOT	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM, CONPOT,/;"	v	module:VGWSP
CONPOT	optim.make_conpot.f90	/^SUBROUTINE CONPOT(/;"	s
CONPOT	pathsample.make_conpot.f90	/^SUBROUTINE CONPOT(/;"	s
CONPOTT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT,/;"	v	module:KEY
CONSECT	optim.modunres.f90	/^      LOGICAL :: CONSECT$/;"	v	module:MODUNRES
CONTAINER	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI, CONTAINER,/;"	v	module:KEY
CONVERT	g.convert.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT	optim.mindist.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT	pathsample.mind.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT	pathsample.mindist.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT2	g.convert.f	/^      SUBROUTINE CONVERT2(/;"	s
CONVERT2	optim.mindist.f	/^      SUBROUTINE CONVERT2(/;"	s
CONVERT2	pathsample.mind.f	/^       SUBROUTINE CONVERT2(/;"	s
CONVERT2	pathsample.mindist.f	/^      SUBROUTINE CONVERT2(/;"	s
CONVERTIC	optim.chdummy.f	/^      SUBROUTINE CONVERTIC$/;"	s
CONVR	optim.key.f90	/^     &        CONVU, CONVR,/;"	v	module:KEY
CONVU	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE, RK_R, RK_THETA, &$/;"	v	module:KEY
COOP	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP,/;"	v	module:COMMONS
COOP	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP,/;"	v	module:COMMONS
COOPCUT	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT,/;"	v	module:COMMONS
COOPCUT	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT,/;"	v	module:COMMONS
COORCOMP	g.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,COORCOMP,/;"	v	module:MODCHARMM
COORD	optim.intlbfgs.f90	/^     DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:TSFOUNDTYPE
COORD	optim.intlbfgs.f90	/^   DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:MINFOUNDTYPE
COORD	optim.intlbfgslj.f90	/^     DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:TSFOUNDTYPE
COORD	optim.intlbfgslj.f90	/^   DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:MINFOUNDTYPE
COORDS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:COMMONS
COORDS	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:COMMONS
COORDS	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:COMMONS
COORDSCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: COORDSLIGAND(:,:), COORDSCOMPLEX(/;"	v	module:DOCKMODULE
COORDSLIGAND	pathsample.dock.f90	/^double precision, allocatable :: COORDSLIGAND(/;"	v	module:DOCKMODULE
COORDSO	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO,/;"	v	module:COMMONS
COORDSO	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,COORDSO$/;"	v	module:COMMONS
COORDSO	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,COORDSO$/;"	v	module:COMMONS
COORDSPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: COORDSLIGAND(:,:), COORDSCOMPLEX(:,:), COORDSPROTEIN(/;"	v	module:DOCKMODULE
COREFRAC	g.commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC,/;"	v	module:COMMONS
COREFRAC	g.commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC,/;"	v	module:COMMONS
COS_PHI	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI,/;"	v
COS_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA$/;"	v
COULN	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN,/;"	v	module:COMMONS
COULN	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN,/;"	v	module:COMMONS
COULOMBCONVERSIONFACTOR	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: COULOMBCONVERSIONFACTOR /;"	k	type:RIGIDBODYPOTENTIAL
COULOMBCONVERSIONFACTOR	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: COULOMBCONVERSIONFACTOR /;"	k	type:RIGIDBODYPOTENTIAL
COULQ	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ,/;"	v	module:COMMONS
COULQ	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ,/;"	v	module:COMMONS
COULSWAP	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP,/;"	v	module:COMMONS
COULSWAP	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP,/;"	v	module:COMMONS
COULTEMP	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP, &$/;"	v	module:COMMONS
COULTEMP	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE, COULQ, COULSWAP, &$/;"	v	module:COMMONS
COUNT	optim.modamber.f90	/^      INTEGER ATOMS,ANG,IMP,COUNT,/;"	v	module:MODAMBER
COUNTER	optim.modunres.f90	/^      INTEGER COUNTER$/;"	v	module:MODUNRES
CP2K	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K,/;"	v	module:KEY
CP2K	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,/;"	v	program:OPTIM4
CP2KJOB	optim.key.f90	/^      CHARACTER(LEN=120) :: CASTEPJOB, CP2KJOB,/;"	v	module:KEY
CPCONDISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CPCONDISTREF(/;"	v	module:KEY
CPCONFRAC	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP, CPCONSTRAINREPCUT, CPCONFRAC,/;"	v	module:KEY
CPCONI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPCONI(/;"	v	module:KEY
CPCONJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPCONI(:), CPCONJ(/;"	v	module:KEY
CPCONSEP	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON, CPREPSEP, CPCONSEP,/;"	v	module:KEY
CPCONSTRAINREPCUT	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP, CPCONSTRAINREPCUT,/;"	v	module:KEY
CPCONSTRAINTDEL	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL,/;"	v	module:KEY
CPCONSTRAINTREP	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP,/;"	v	module:KEY
CPCONSTRAINTTOL	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA, REPCON, PFORCE, &$/;"	v	module:KEY
CPDISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CPDISTREF(/;"	v	module:KEY
CPF	g.commons.f90	/^     &        CPS, CPF,/;"	v	module:COMMONS
CPF	g.commons.o.f90	/^     &        CPS, CPF,/;"	v	module:COMMONS
CPFACTORFG	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG,/;"	v	module:COMMONS
CPFACTORFG	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG,/;"	v	module:COMMONS
CPFACTORSG	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG,/;"	v	module:COMMONS
CPFACTORSG	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG,/;"	v	module:COMMONS
CPMD	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD,/;"	v	module:COMMONS
CPMD	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD,/;"	v	module:COMMONS
CPMD	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD,/;"	v	module:KEY
CPMD	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,/;"	v	program:OPTIM4
CPMDC	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC,/;"	v	module:KEY
CPMDLATMIN	optim.cpmdlatmin.f	/^      SUBROUTINE CPMDLATMIN(/;"	s
CPMD_COMMAND	optim.key.f90	/^      CHARACTER(200) :: CPMD_COMMAND$/;"	v	module:KEY
CPREPCUT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:), NREPCUT(:), CPREPCUT(/;"	v	module:KEY
CPREPI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPREPI(/;"	v	module:KEY
CPREPJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPREPI(:), CPREPJ(/;"	v	module:KEY
CPREPSEP	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON, CPREPSEP,/;"	v	module:KEY
CPS	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS, &$/;"	v	module:COMMONS
CPS	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS, &$/;"	v	module:COMMONS
CQMAX	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS, &$/;"	v	module:COMMONS
CQMAX	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS, &$/;"	v	module:COMMONS
CR	g.vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(3), CV(3), CR,/;"	v
CRASH	g.tn.f	/^      SUBROUTINE CRASH(/;"	s
CROSSOPT	optim.utils.f	/^      SUBROUTINE CROSSOPT(/;"	s
CROSS_PRODUCT	optim.specialfuncts.f90	/^    SUBROUTINE CROSS_PRODUCT(/;"	s	module:SPFUNCTS
CSMAV	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
CSMAV	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
CSMAVVAL	g.potential.f	52;"	c	subroutine:POTENTIAL
CSMC2	g.CSMinit.f90	/^SUBROUTINE CSMC2(/;"	s
CSMC2H	g.CSMinit.f90	/^SUBROUTINE CSMC2H(/;"	s
CSMC2V	g.CSMinit.f90	/^SUBROUTINE CSMC2V(/;"	s
CSMC3	g.CSMinit.f90	/^SUBROUTINE CSMC3(/;"	s
CSMC3H	g.CSMinit.f90	/^SUBROUTINE CSMC3H(/;"	s
CSMC3V	g.CSMinit.f90	/^SUBROUTINE CSMC3V(/;"	s
CSMC4	g.CSMinit.f90	/^SUBROUTINE CSMC4(/;"	s
CSMC4H	g.CSMinit.f90	/^SUBROUTINE CSMC4H(/;"	s
CSMC4V	g.CSMinit.f90	/^SUBROUTINE CSMC4V(/;"	s
CSMC5	g.CSMinit.f90	/^SUBROUTINE CSMC5(/;"	s
CSMC5H	g.CSMinit.f90	/^SUBROUTINE CSMC5H(/;"	s
CSMC5V	g.CSMinit.f90	/^SUBROUTINE CSMC5V(/;"	s
CSMC6	g.CSMinit.f90	/^SUBROUTINE CSMC6(/;"	s
CSMC6H	g.CSMinit.f90	/^SUBROUTINE CSMC6H(/;"	s
CSMC6V	g.CSMinit.f90	/^SUBROUTINE CSMC6V(/;"	s
CSMC7	g.CSMinit.f90	/^SUBROUTINE CSMC7(/;"	s
CSMCI	g.CSMinit.f90	/^SUBROUTINE CSMCI(/;"	s
CSMCS	g.CSMinit.f90	/^SUBROUTINE CSMCS(/;"	s
CSMD2	g.CSMinit.f90	/^SUBROUTINE CSMD2(/;"	s
CSMD2D	g.CSMinit.f90	/^SUBROUTINE CSMD2D(/;"	s
CSMD2H	g.CSMinit.f90	/^SUBROUTINE CSMD2H(/;"	s
CSMD3	g.CSMinit.f90	/^SUBROUTINE CSMD3(/;"	s
CSMD3D	g.CSMinit.f90	/^SUBROUTINE CSMD3D(/;"	s
CSMD3H	g.CSMinit.f90	/^SUBROUTINE CSMD3H(/;"	s
CSMD4	g.CSMinit.f90	/^SUBROUTINE CSMD4(/;"	s
CSMD4D	g.CSMinit.f90	/^SUBROUTINE CSMD4D(/;"	s
CSMD4H	g.CSMinit.f90	/^SUBROUTINE CSMD4H(/;"	s
CSMD5	g.CSMinit.f90	/^SUBROUTINE CSMD5(/;"	s
CSMD5D	g.CSMinit.f90	/^SUBROUTINE CSMD5D(/;"	s
CSMD5H	g.CSMinit.f90	/^SUBROUTINE CSMD5H(/;"	s
CSMD6	g.CSMinit.f90	/^SUBROUTINE CSMD6(/;"	s
CSMD6D	g.CSMinit.f90	/^SUBROUTINE CSMD6D(/;"	s
CSMD6H	g.CSMinit.f90	/^SUBROUTINE CSMD6H(/;"	s
CSMEPS	g.commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM, CSMEPS$/;"	v	module:COMMONS
CSMEPS	g.commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM, CSMEPS$/;"	v	module:COMMONS
CSMGETOPS	g.CSMinit.f90	/^SUBROUTINE CSMGETOPS$/;"	s
CSMGP	g.commons.f90	/^      CHARACTER(LEN=3) :: CSMGP,/;"	v	module:COMMONS
CSMGP	g.commons.o.f90	/^      CHARACTER(LEN=3) :: CSMGP,/;"	v	module:COMMONS
CSMGPINDEX	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX,/;"	v	module:COMMONS
CSMGPINDEX	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX,/;"	v	module:COMMONS
CSMGUIDEGP	g.commons.f90	/^      CHARACTER(LEN=3) :: CSMGP, CSMGUIDEGP$/;"	v	module:COMMONS
CSMGUIDEGP	g.commons.o.f90	/^      CHARACTER(LEN=3) :: CSMGP, CSMGUIDEGP$/;"	v	module:COMMONS
CSMGUIDEGPINDEX	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX,/;"	v	module:COMMONS
CSMGUIDEGPINDEX	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX,/;"	v	module:COMMONS
CSMGUIDENORM	g.commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM,/;"	v	module:COMMONS
CSMGUIDENORM	g.commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM, CSMGUIDENORM,/;"	v	module:COMMONS
CSMGUIDET	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION, &$/;"	v	module:COMMONS
CSMGUIDET	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE, COLDFUSION, &$/;"	v	module:COMMONS
CSMI	g.CSMinit.f90	/^SUBROUTINE CSMI(/;"	s
CSMIH	g.CSMinit.f90	/^SUBROUTINE CSMIH(/;"	s
CSMIMAGES	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CSMIMAGES(/;"	v	module:COMMONS
CSMIMAGES	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CSMIMAGES(/;"	v	module:COMMONS
CSMINIT	g.CSMinit.f90	/^SUBROUTINE CSMINIT$/;"	s
CSMMAXIT	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT,/;"	v	module:COMMONS
CSMMAXIT	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT,/;"	v	module:COMMONS
CSMMIN	g.CSMinit.f90	/^SUBROUTINE CSMMIN(/;"	s
CSMNORM	g.commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM,/;"	v	module:COMMONS
CSMNORM	g.commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE, CSMNORM,/;"	v	module:COMMONS
CSMO	g.CSMinit.f90	/^SUBROUTINE CSMO(/;"	s
CSMOH	g.CSMinit.f90	/^SUBROUTINE CSMOH(/;"	s
CSMPMAT	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(/;"	v	module:COMMONS
CSMPMAT	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(/;"	v	module:COMMONS
CSMPOTGRAD	g.CSMinit.f90	/^SUBROUTINE CSMPOTGRAD(/;"	s
CSMQUENCHES	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES,/;"	v	module:COMMONS
CSMQUENCHES	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES,/;"	v	module:COMMONS
CSMROT	g.CSMinit.f90	/^SUBROUTINE CSMROT(/;"	s
CSMS4	g.CSMinit.f90	/^SUBROUTINE CSMS4(/;"	s
CSMS6	g.CSMinit.f90	/^SUBROUTINE CSMS6(/;"	s
CSMS8	g.CSMinit.f90	/^SUBROUTINE CSMS8(/;"	s
CSMSTEPS	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS,/;"	v	module:COMMONS
CSMSTEPS	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS,/;"	v	module:COMMONS
CSMT	g.CSMinit.f90	/^SUBROUTINE CSMT(/;"	s
CSMT	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT,/;"	v	module:COMMONS
CSMT	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT,/;"	v	module:COMMONS
CSMTD	g.CSMinit.f90	/^SUBROUTINE CSMTD(/;"	s
CSMTH	g.CSMinit.f90	/^SUBROUTINE CSMTH(/;"	s
CSTRING	optim.main.f90	/^      CHARACTER(LEN=20) OTEMP, OSTRING, CSTRING$/;"	v	program:OPTIM4
CTEST	optim.ctest.f	/^      SUBROUTINE CTEST(/;"	s
CUB	optim.PV.f	41;"	c	subroutine:PVOPT
CUB	optim.fetchz.f	58;"	c	subroutine:FETCHZ
CUB	optim.keyword.f	97;"	c	subroutine:KEYWORD
CUBSPL	g.fedor.f	/^             SUBROUTINE CUBSPL(/;"	s
CUBSPLSTRING	optim.cubsplstring.f90	/^MODULE CUBSPLSTRING$/;"	m
CUBSPLT	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,/;"	k	type:IMGNODE
CURRENTIMP	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,/;"	v	module:COMMONS
CURRENTIMP	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,/;"	v	module:COMMONS
CUTLAN	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN,/;"	v	module:KEY
CUTOFF	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF,/;"	v	module:COMMONS
CUTOFF	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF,/;"	v	module:COMMONS
CUTOFF	optim.double.f	/^     1                 V(3*N), R, G(2,2), H, W, CUTOFF,/;"	v
CUTOFF_CONT_LOW	optim.amhglobals.f	/^      integer, parameter:: CUTOFF_CONT_LOW=/;"	v	module:amhglobals
CUTT	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT,/;"	v	module:COMMONS
CUTT	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT,/;"	v	module:COMMONS
CV	g.vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(3), CV(/;"	v
CV	pathsample.Cv.f	/^      SUBROUTINE CV$/;"	s
CX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,/;"	v	module:MODAMBER
CY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,/;"	v	module:MODAMBER
CYCLE	pathsample.cycle.f90	/^SUBROUTINE CYCLE$/;"	s
CYCLE2	pathsample.cycle2.f90	/^SUBROUTINE CYCLE2$/;"	s
CZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,/;"	v	module:MODAMBER
C_BLN	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(/;"	v	module:COMMONS
C_BLN	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(/;"	v	module:COMMONS
C_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(/;"	v	module:KEY
CalculatedDistance	g.tetherfunc.f90	/^      function CalculatedDistance(/;"	f	module:tetherfunc
Calculation of the torsional angles gradient	grad.tangle.tex	/^\\subsection{Calculation of the torsional angles gradient}$/;"	u
CheckFlatness	g.tetherfunc.f90	/^      function CheckFlatness(/;"	f	module:tetherfunc
Copyright	optim.wc.f90	/^          subroutine Copyright$/;"	s	module:WC
D	g.modconsts.f90	/^      DO/;"	v	module:consts
D	g.modconsts_trans_97.f90	/^      DO/;"	v	module:consts_trans_97
D1	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D1(/;"	f
D1	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D1(/;"	f
D1INIT	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT,/;"	v	module:KEY
D1MACH	optim.dqag.f	/^      DOUBLE PRECISION FUNCTION D1MACH /;"	f
D2	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D2(/;"	f
D2	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D2(/;"	f
D2FCOULOMBDR2	pathsample.rigidbody.f90	/^  FUNCTION D2FCOULOMBDR2 /;"	f	module:RIGIDBODY
D2FCOULOMBDR2	pathsample.rigidbodymod.f90	/^  FUNCTION D2FCOULOMBDR2 /;"	f	module:RIGIDBODYMOD
D2FLJDR2	pathsample.rigidbody.f90	/^  FUNCTION D2FLJDR2(/;"	f	module:RIGIDBODY
D2FLJDR2	pathsample.rigidbodymod.f90	/^  FUNCTION D2FLJDR2(/;"	f	module:RIGIDBODYMOD
D2FMORSEDR2	pathsample.rigidbody.f90	/^  FUNCTION D2FMORSEDR2(/;"	f	module:RIGIDBODY
D2FMORSEDR2	pathsample.rigidbodymod.f90	/^  FUNCTION D2FMORSEDR2(/;"	f	module:RIGIDBODYMOD
D2INIT	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT,/;"	v	module:KEY
D3	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D3(/;"	f
D3	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D3(/;"	f
D4	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D4(/;"	f
D4	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D4(/;"	f
D5	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D5(/;"	f
D5	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D5(/;"	f
D5HT	g.commons.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT, D5HT$/;"	v	module:COMMONS
D5HT	g.commons.o.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT, D5HT$/;"	v	module:COMMONS
D5HT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT,/;"	v	module:KEY
D6	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D6(/;"	f
D6	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D6(/;"	f
D7	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D7(/;"	f
D7	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D7(/;"	f
D8	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D8(/;"	f
D8	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D8(/;"	f
D9	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D9(/;"	f
D9	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D9(/;"	f
DA	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DA(/;"	f
DA	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DA(/;"	f
DAESTAT	g.modcharmm.f90	/^      LOGICAL :: DAESTAT,/;"	v	module:MODCHARMM
DAMCCA	g.dftb.f	/^      SUBROUTINE DAMCCA(/;"	s
DAMCCA	optim.dftb.f	/^      SUBROUTINE DAMCCA(/;"	s
DAMCCB	g.dftb.f	/^      SUBROUTINE DAMCCB(/;"	s
DAMCCB	optim.dftb.f	/^      SUBROUTINE DAMCCB(/;"	s
DAMP	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP,/;"	v	module:KEY
DAMP	optim.pahagh.f90	/^      SUBROUTINE DAMP(/;"	s
DAMPCHGE	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DAMPCHGE /;"	v	module:msevb_common
DANGEBYDX	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,DBONDEBYDZ,DANGEBYDX,/;"	v	module:MODAMBER
DATOM1	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1,/;"	v	module:MODAMBER
DATOM1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1,/;"	v	module:MODAMBER
DATOM2	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1, DATOM2 /;"	v	module:MODAMBER
DATOM2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1, DATOM2$/;"	v	module:MODAMBER
DB	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DB(/;"	f
DB	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DB(/;"	f
DBEPSAB	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB,/;"	v	module:COMMONS
DBEPSAB	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB,/;"	v	module:COMMONS
DBEPSAB	optim.key.f90	/^     &        DBEPSBB, DBEPSAB,/;"	v	module:KEY
DBEPSBB	g.commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC, &    $/;"	v	module:COMMONS
DBEPSBB	g.commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC, &    $/;"	v	module:COMMONS
DBEPSBB	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL, NEBKFINAL, NEBFACTOR, &$/;"	v	module:KEY
DBLPYT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT,/;"	v	module:COMMONS
DBLPYT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT,/;"	v	module:COMMONS
DBONDEBYDX	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,/;"	v	module:MODAMBER
DBONDEBYDY	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,/;"	v	module:MODAMBER
DBONDEBYDZ	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,DBONDEBYDZ,/;"	v	module:MODAMBER
DBPMU	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU,/;"	v	module:COMMONS
DBPMU	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU,/;"	v	module:COMMONS
DBPMU	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU,/;"	v	module:KEY
DBPT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT,/;"	v	module:COMMONS
DBPT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT,/;"	v	module:COMMONS
DBPT	optim.key.f90	/^     &        RBAAT, DBPT,/;"	v	module:KEY
DBPTDT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT,/;"	v	module:COMMONS
DBPTDT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT,/;"	v	module:COMMONS
DBPTDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT,/;"	v	module:KEY
DBRENT	g.dbrent.f	/^      FUNCTION DBRENT(/;"	f
DBRENTT	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT,/;"	v	module:COMMONS
DBRENTT	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT,/;"	v	module:COMMONS
DBSIGAB	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB,/;"	v	module:COMMONS
DBSIGAB	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB,/;"	v	module:COMMONS
DBSIGAB	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB,/;"	v	module:KEY
DBSIGBB	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB,/;"	v	module:COMMONS
DBSIGBB	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB,/;"	v	module:COMMONS
DBSIGBB	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB,/;"	v	module:KEY
DC	g.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DC(/;"	f
DC	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,/;"	v	module:MODUNRES
DC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DC(/;"	f
DC6CC	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC,/;"	v	module:COMMONS
DC6CC	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC,/;"	v	module:COMMONS
DC6CC	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC,/;"	v	module:KEY
DC6CH	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH,/;"	v	module:COMMONS
DC6CH	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH,/;"	v	module:COMMONS
DC6CH	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH,/;"	v	module:KEY
DC6HH	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH,/;"	v	module:COMMONS
DC6HH	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH,/;"	v	module:COMMONS
DC6HH	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH,/;"	v	module:KEY
DCDV	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,XROT,DC_NORM, &$/;"	v	module:MODUNRES
DCFODE	g.dlsode.f	/^      SUBROUTINE DCFODE /;"	s
DCHECK	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK,/;"	v	module:KEY
DCOOMMGK	g.myblas.f	/^      subroutine DCOOMMGK(/;"	s
DCOOMMGK	optim.myblas.f	/^      subroutine DCOOMMGK(/;"	s
DCOOMMKK	g.myblas.f	/^      subroutine DCOOMMKK(/;"	s
DCOOMMKK	optim.myblas.f	/^      subroutine DCOOMMKK(/;"	s
DCOOMMSK	g.myblas.f	/^      subroutine DCOOMMSK(/;"	s
DCOOMMSK	optim.myblas.f	/^      subroutine DCOOMMSK(/;"	s
DCTRAP	optim.dctrap.f	/^      SUBROUTINE DCTRAP(/;"	s
DC_NORM	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,XROT,DC_NORM,/;"	v	module:MODUNRES
DD11	optim.rigidfuncs.f	/^       DOUBLE PRECISION FUNCTION DD11(/;"	f
DD12	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD12(/;"	f
DD13	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD13(/;"	f
DD14	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD14(/;"	f
DD15	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD15(/;"	f
DD16	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD16(/;"	f
DD17	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD17(/;"	f
DD18	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD18(/;"	f
DD19	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD19(/;"	f
DD1A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD1A(/;"	f
DD1B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD1B(/;"	f
DD1C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD1C(/;"	f
DD22	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD22(/;"	f
DD23	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD23(/;"	f
DD24	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD24(/;"	f
DD25	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD25(/;"	f
DD26	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD26(/;"	f
DD27	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD27(/;"	f
DD28	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD28(/;"	f
DD29	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD29(/;"	f
DD2A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD2A(/;"	f
DD2B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD2B(/;"	f
DD2C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD2C(/;"	f
DD33	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD33(/;"	f
DD34	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD34(/;"	f
DD35	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD35 /;"	f
DD36	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD36(/;"	f
DD37	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD37(/;"	f
DD38	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD38(/;"	f
DD39	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD39(/;"	f
DD3A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD3A(/;"	f
DD3B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD3B(/;"	f
DD3C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD3C(/;"	f
DD44	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD44(/;"	f
DD45	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD45(/;"	f
DD46	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD46(/;"	f
DD47	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD47(/;"	f
DD48	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD48(/;"	f
DD49	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD49(/;"	f
DD4A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD4A(/;"	f
DD4B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD4B(/;"	f
DD4C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD4C(/;"	f
DD55	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD55(/;"	f
DD56	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD56(/;"	f
DD57	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD57(/;"	f
DD58	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD58(/;"	f
DD59	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD59(/;"	f
DD5A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD5A(/;"	f
DD5B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD5B(/;"	f
DD5C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD5C(/;"	f
DD66	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD66(/;"	f
DD67	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD67(/;"	f
DD68	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD68(/;"	f
DD69	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD69(/;"	f
DD6A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD6A(/;"	f
DD6B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD6B(/;"	f
DD6C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD6C(/;"	f
DD77	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD77(/;"	f
DD78	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD78(/;"	f
DD79	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD79(/;"	f
DD7A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD7A(/;"	f
DD7B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD7B(/;"	f
DD7C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD7C(/;"	f
DD88	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD88(/;"	f
DD89	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD89(/;"	f
DD8A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD8A(/;"	f
DD8B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD8B(/;"	f
DD8C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD8C(/;"	f
DD99	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD99(/;"	f
DD9A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD9A(/;"	f
DD9B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD9B(/;"	f
DD9C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD9C(/;"	f
DDAA	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDAA(/;"	f
DDAB	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDAB(/;"	f
DDAC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDAC(/;"	f
DDBB	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDBB(/;"	f
DDBC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDBC(/;"	f
DDCC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDCC(/;"	f
DDDISTFUNC	optim.mindist.f	/^      subroutine DDDISTFUNC(/;"	s
DDDISTFUNC	pathsample.mindist.f	/^      subroutine DDDISTFUNC(/;"	s
DDELTA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,DDELTA,/;"	v	module:MODAMBER
DDELTA2	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,DDELTA,DDELTA2,/;"	v	module:MODAMBER
DDELTA3	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,DDELTA,DDELTA2,DDELTA3$/;"	v	module:MODAMBER
DDFUNC	pathsample.mind.f	/^      SUBROUTINE DDFUNC(/;"	s
DDISTFUNC	optim.mindist.f	/^      SUBROUTINE DDISTFUNC(/;"	s
DDISTFUNC	pathsample.mindist.f	/^      SUBROUTINE DDISTFUNC(/;"	s
DDT	optim.ttm3f.f90	/^double precision, dimension(:,:), allocatable :: DDT$/;"	v	module:ttm3f_mod
DEADEND	pathsample.GT2.f90	/^     FUNCTION DEADEND(/;"	f	module:GRAPHTRANSFORMATIONMODULE
DEADEND	pathsample.GT2.save.f90	/^     FUNCTION DEADEND(/;"	f	module:GRAPHTRANSFORMATIONMODULE
DEBUG	g.commons.f90	/^      LOGICAL DEBUG,/;"	v	module:COMMONS
DEBUG	g.commons.o.f90	/^      LOGICAL DEBUG,/;"	v	module:COMMONS
DEBUG	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI, CONTAINER, DEBUG,/;"	v	module:KEY
DEBYE	optim.ttm3f.f90	/^double precision, parameter :: DEBYE /;"	v	module:ttm3f_mod
DECAY	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY,/;"	v	module:COMMONS
DECAY	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY,/;"	v	module:COMMONS
DECAYPARAM	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM,/;"	v	module:COMMONS
DECAYPARAM	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM,/;"	v	module:COMMONS
DECIDEREPARAM	optim.growstring.f90	/^  SUBROUTINE DECIDEREPARAM(/;"	s	module:GROWSTRINGUTILS
DEFANTHRACENE	g.paha.f90	/^      SUBROUTINE DEFANTHRACENE(/;"	s
DEFANTHRACENE	optim.pahagh.f90	/^      SUBROUTINE DEFANTHRACENE(/;"	s
DEFBENZENE	g.paha.f90	/^      SUBROUTINE DEFBENZENE(/;"	s
DEFBENZENE	optim.pahagh.f90	/^      SUBROUTINE DEFBENZENE(/;"	s
DEFBENZENE	pathsample.rigidb.f90	/^      SUBROUTINE DEFBENZENE(/;"	s
DEFBENZOPERYLENE	g.paha.f90	/^      SUBROUTINE DEFBENZOPERYLENE(/;"	s
DEFBISANTHENE	g.paha.f90	/^      SUBROUTINE DEFBISANTHENE(/;"	s
DEFBNZN	g.newpah.f90	/^      SUBROUTINE DEFBNZN(/;"	s
DEFBNZNW99	g.pahw99.f90	/^      SUBROUTINE DEFBNZNW99(/;"	s
DEFCAPSID	g.newcapsid.f90	/^      SUBROUTINE DEFCAPSID(/;"	s
DEFCAPSID	optim.newcapsid.f90	/^      SUBROUTINE DEFCAPSID(/;"	s
DEFCIRCUMCORONENE	g.paha.f90	/^      SUBROUTINE DEFCIRCUMCORONENE(/;"	s
DEFCORONENE	g.paha.f90	/^      SUBROUTINE DEFCORONENE(/;"	s
DEFCORONN	g.newpah.f90	/^      SUBROUTINE DEFCORONN(/;"	s
DEFDMBL	g.dmblmorse.f90	/^      SUBROUTINE DEFDMBL(/;"	s
DEFDUM	g.dbpg.f90	/^      SUBROUTINE DEFDUM(/;"	s
DEFDUM	optim.dbpg.f90	/^      SUBROUTINE DEFDUM(/;"	s
DEFDUM	pathsample.rigidb.f90	/^      SUBROUTINE DEFDUM(/;"	s
DEFHEXABENZOCORONENE	g.paha.f90	/^      SUBROUTINE DEFHEXABENZOCORONENE(/;"	s
DEFINEPYMULTISITES	g.multisitepy.f90	/^      SUBROUTINE DEFINEPYMULTISITES$/;"	s
DEFINE_PATCHES	g.patchy.f90	/^SUBROUTINE DEFINE_PATCHES(/;"	s
DEFLINROD	g.linrod.f90	/^      SUBROUTINE DEFLINROD(/;"	s
DEFLWOTP	g.lwotp.f90	/^      SUBROUTINE DEFLWOTP(/;"	s
DEFLWOTP	optim.lwotpgh.f90	/^      SUBROUTINE DEFLWOTP(/;"	s
DEFLWOTPBX	optim.lwotpbox.f90	/^      SUBROUTINE DEFLWOTPBX(/;"	s
DEFMOL	g.msgayberne.f90	/^      SUBROUTINE DEFMOL(/;"	s
DEFMSPY	g.multisitepy.f90	/^      SUBROUTINE DEFMSPY(/;"	s
DEFMSTBIN	g.mstbin.f90	/^      SUBROUTINE DEFMSTBIN(/;"	s
DEFMULT2STOCK	g.multstock.f90	/^      SUBROUTINE DEFMULT2STOCK(/;"	s
DEFMULT3STOCK	g.multstock.f90	/^      SUBROUTINE DEFMULT3STOCK(/;"	s
DEFMULT4STOCK	g.multstock.f90	/^      SUBROUTINE DEFMULT4STOCK(/;"	s
DEFMULT5STOCK	g.multstock.f90	/^      SUBROUTINE DEFMULT5STOCK(/;"	s
DEFMULTSTOCK	optim.msstock.f90	/^      SUBROUTINE DEFMULTSTOCK(/;"	s
DEFMULTSTOCK	pathsample.rigidb.f90	/^      SUBROUTINE DEFMULTSTOCK(/;"	s
DEFNAPHTHALENE	g.paha.f90	/^      SUBROUTINE DEFNAPHTHALENE(/;"	s
DEFNAPHTHALENE	optim.pahagh.f90	/^      SUBROUTINE DEFNAPHTHALENE(/;"	s
DEFOCTABENZOCORONENE	g.paha.f90	/^      SUBROUTINE DEFOCTABENZOCORONENE(/;"	s
DEFOVALENE	g.paha.f90	/^      SUBROUTINE DEFOVALENE(/;"	s
DEFPAHA	g.paha.f90	/^      SUBROUTINE DEFPAHA(/;"	s
DEFPAHA	optim.pahagh.f90	/^      SUBROUTINE DEFPAHA(/;"	s
DEFPATCHES	optim.patchyd.f90	/^SUBROUTINE DEFPATCHES(/;"	s
DEFPATCHYD	pathsample.rigidb.f90	/^      SUBROUTINE DEFPATCHYD(/;"	s
DEFPERYLENE	g.paha.f90	/^      SUBROUTINE DEFPERYLENE(/;"	s
DEFPHENANTHRENE	g.paha.f90	/^      SUBROUTINE DEFPHENANTHRENE(/;"	s
DEFPYRENE	g.paha.f90	/^      SUBROUTINE DEFPYRENE(/;"	s
DEFPYRENE	optim.pahagh.f90	/^      SUBROUTINE DEFPYRENE(/;"	s
DEFPYRN	g.newpah.f90	/^      SUBROUTINE DEFPYRN(/;"	s
DEFSTOCK	g.stockaa.f90	/^      SUBROUTINE DEFSTOCK(/;"	s
DEFSTOCK	optim.stockghaa.f90	/^      SUBROUTINE DEFSTOCK(/;"	s
DEFTD	g.dbptd.f90	/^      SUBROUTINE DEFTD(/;"	s
DEFTD	optim.dbptd.f90	/^      SUBROUTINE DEFTD(/;"	s
DEFTD	pathsample.rigidb.f90	/^      SUBROUTINE DEFTD(/;"	s
DEFTDHD	g.tetrahedra.f90	/^      SUBROUTINE DEFTDHD(/;"	s
DEFTIP1	g.newtip.f90	/^      SUBROUTINE DEFTIP1(/;"	s
DEFTIP2	g.newtip.f90	/^      SUBROUTINE DEFTIP2(/;"	s
DEFTIP3	g.newtip.f90	/^      SUBROUTINE DEFTIP3(/;"	s
DEFTIP4	g.newtip.f90	/^      SUBROUTINE DEFTIP4(/;"	s
DEFTIP4	optim.newtip.f90	/^      SUBROUTINE DEFTIP4(/;"	s
DEFTIP5	g.newtip.f90	/^      SUBROUTINE DEFTIP5(/;"	s
DEFWATERPDC	g.waterpdc.f90	/^      SUBROUTINE DEFWATERPDC /;"	s
DEFWATERPKZ	g.waterpkz.f90	/^      SUBROUTINE DEFWATERPKZ(/;"	s
DEGTO	optim.modamber.f90	/^      DOUBLE PRECISION KT(42,42,42),TO(42,42,42),DEGTO(/;"	v	module:MODAMBER
DELETENODE	optim.gsdata.f90	/^  SUBROUTINE DELETENODE(/;"	s
DELETESTRING	optim.gsdata.f90	/^  SUBROUTINE DELETESTRING$/;"	s
DELRC	g.commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC,/;"	v	module:COMMONS
DELRC	g.commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ, DELRC,/;"	v	module:COMMONS
DELTA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA,/;"	v
DELTA	g.modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,/;"	v	module:consts
DELTA	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,/;"	v	module:consts_trans_97
DENDAT	g.Pbglue.f	116;"	c	block data:PB
DENDAT	g.Pbglue.f	187;"	c	subroutine:rh
DENDAT	g.Pbglue.f	217;"	c	subroutine:drh
DENOM	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,/;"	v	module:MODAMBER
DERHAM	g.frausi.f	/^      SUBROUTINE DERHAM(/;"	s
DERIVAT	optim.modunres.f90	57;"	c	module:MODUNRES
DERIVS1	g.MSorig.f	/^      SUBROUTINE DERIVS1(/;"	s
DERIVS1C	g.MSorigc.f	/^      SUBROUTINE DERIVS1C(/;"	s
DERIVS1T97	g.MStrans.97.f	/^      SUBROUTINE DERIVS1T97(/;"	s
DEROV	g.frausi.f	/^      SUBROUTINE DEROV(/;"	s
DESMAXAVGE	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE,/;"	v	module:KEY
DESMAXEJUMP	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP,/;"	v	module:KEY
DESMDEBUG	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG,/;"	v	module:KEY
DESMINT	optim.intcommons.f90	/^  LOGICAL :: DESMINT /;"	v	module:INTCOMMONS
DETERMINELINES	optim.ljcapsidmodule.f90	/^SUBROUTINE DETERMINELINES(/;"	s
DETERMINELINES	pathsample.dock.f90	/^SUBROUTINE DETERMINELINES(/;"	s	module:DOCKMODULE
DEWSET	g.dlsode.f	/^      SUBROUTINE DEWSET /;"	s
DF	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF,/;"	v
DF1T	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T,/;"	v	module:COMMONS
DF1T	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T,/;"	v	module:COMMONS
DF1T	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC, FREEZERES, DF1T,/;"	v	module:KEY
DF1grad	g.DF1.f	/^      SUBROUTINE DF1grad(/;"	s
DF1grad	optim.DF1.f	/^      SUBROUTINE DF1grad(/;"	s
DF1hess	optim.DF1.f	/^      subroutine DF1hess(/;"	s
DFCOULOMBDR	pathsample.rigidbody.f90	/^  FUNCTION DFCOULOMBDR /;"	f	module:RIGIDBODY
DFCOULOMBDR	pathsample.rigidbodymod.f90	/^  FUNCTION DFCOULOMBDR /;"	f	module:RIGIDBODYMOD
DFDERIV1	g.dftb.f	/^      SUBROUTINE DFDERIV1(/;"	s
DFDERIV1	optim.dftb.f	/^      SUBROUTINE DFDERIV1(/;"	s
DFLJDR	pathsample.rigidbody.f90	/^  FUNCTION DFLJDR(/;"	f	module:RIGIDBODY
DFLJDR	pathsample.rigidbodymod.f90	/^  FUNCTION DFLJDR(/;"	f	module:RIGIDBODYMOD
DFMORSEDR	pathsample.rigidbody.f90	/^  FUNCTION DFMORSEDR(/;"	f	module:RIGIDBODY
DFMORSEDR	pathsample.rigidbodymod.f90	/^  FUNCTION DFMORSEDR(/;"	f	module:RIGIDBODYMOD
DFPMIN	g.ddfpmin.f	/^      SUBROUTINE DFPMIN(/;"	s
DFTB	g.dftb.f	/^      SUBROUTINE DFTB(/;"	s
DFTB	optim.dftb.f	/^      SUBROUTINE DFTB(/;"	s
DFTBT	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT,/;"	v	module:COMMONS
DFTBT	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT,/;"	v	module:COMMONS
DFTBT	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT,/;"	v	module:KEY
DFTP	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP,/;"	v	module:KEY
DFTP	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,/;"	v	program:OPTIM4
DFUNC	pathsample.mind.f	/^      SUBROUTINE DFUNC(/;"	s
DG	optim.double.f	/^      SUBROUTINE DG(/;"	s
DGBFA	g.dlsode.f	/^      SUBROUTINE DGBFA /;"	s
DGBSL	g.dlsode.f	/^      SUBROUTINE DGBSL /;"	s
DGECON	pathsample.reweight.f	/^      SUBROUTINE DGECON(/;"	s
DGEEQU	pathsample.reweight.f	/^      SUBROUTINE DGEEQU(/;"	s
DGERFS	pathsample.reweight.f	/^      SUBROUTINE DGERFS(/;"	s
DGESL	g.dlsode.f	/^      SUBROUTINE DGESL /;"	s
DGESVX	pathsample.reweight.f	/^      SUBROUTINE DGESVX(/;"	s
DGETF2	g.dgetrf.f	/^      SUBROUTINE DGETF2(/;"	s
DGETF2	pathsample.reweight.f	/^      SUBROUTINE DGETF2(/;"	s
DGETRF	g.dgetrf.f	/^      SUBROUTINE DGETRF(/;"	s
DGETRF	pathsample.reweight.f	/^      SUBROUTINE DGETRF(/;"	s
DGETRI	g.dgetri.f	/^      SUBROUTINE DGETRI(/;"	s
DGETRS	pathsample.reweight.f	/^      SUBROUTINE DGETRS(/;"	s
DGTOutput	pathsample.GT2.f90	/^     SUBROUTINE DGTOutput(/;"	s	module:GRAPHTRANSFORMATIONMODULE
DGUESS	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS,/;"	v	module:COMMONS
DGUESS	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS,/;"	v	module:COMMONS
DGUESS	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS,/;"	v	module:KEY
DIAG	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: DIAG /;"	v	module:distance
DIAGONALISE2	pathsample.diagonalise2.f	/^      SUBROUTINE DIAGONALISE2$/;"	s
DID	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,DID,/;"	v	module:MODAMBER
DIELEC	optim.modamber.f90	/^      DOUBLE PRECISION DIELEC$/;"	v	module:MODAMBER
DIFF	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: PREVGRAD(:), DIFF(/;"	k	type:IMGNODE
DIFFRACTT	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT,/;"	v	module:COMMONS
DIFFRACTT	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT,/;"	v	module:COMMONS
DIHENEB	optim.chdummy.f	/^      SUBROUTINE DIHENEB(/;"	s
DIHINFO	optim.intcommons.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: DIHINFOS/;"	v	module:INTCOMMONS
DIHINFOSINGLE	optim.intcommons.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: DIHINFOSINGLE(/;"	v	module:INTCOMMONS
DIIS	optim.diis.f	/^      SUBROUTINE DIIS(/;"	s
DIJINIT	pathsample.Dijinit.f90	/^SUBROUTINE DIJINIT(/;"	s
DIJINITFLY	pathsample.Dijinitfly.f90	/^SUBROUTINE DIJINITFLY(/;"	s
DIJKSTRA	pathsample.Dijkstra.f90	/^SUBROUTINE DIJKSTRA(/;"	s
DIJKSTRALOCAL	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL,/;"	v	module:KEY
DINTDY	g.dlsode.f	/^      SUBROUTINE DINTDY /;"	s
DIP	g.welch.f	/^      SUBROUTINE DIP(/;"	s
DIP	optim.welch.f	/^      SUBROUTINE DIP(/;"	s
DIPGRAD	g.welch.f	/^      SUBROUTINE DIPGRAD(/;"	s
DIPGRAD	optim.welch.f	/^      SUBROUTINE DIPGRAD(/;"	s
DIPOL	g.fedor.f	1459;"	c	subroutine:dipoles
DIPOL	g.fedor.f	1671;"	c	subroutine:fenergy
DIPOL	g.fedor.f	2624;"	c	function:UTN
DIPOLE	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE,/;"	v	module:COMMONS
DIPOLE	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE,/;"	v	module:COMMONS
DIRCOS	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:,:) :: DIRCOS /;"	v	module:distance
DISCON	optim.c60diff.f	40;"	c	subroutine:C60DIFF
DISCON	optim.greatcirc.f	42;"	c	subroutine:GCLBFGS
DISCON	optim.mylbfgs.f	78;"	c	subroutine:MYLBFGS
DISCON	optim.oldneb.f	729;"	c	subroutine:MAKEGRADH
DISCON	optim.oldneb.f	838;"	c	subroutine:MAKEGRADR
DISCON	optim.rad.f	30;"	c	subroutine:RAD
DISCONNECT	pathsample.GT2.f90	/^     SUBROUTINE DISCONNECT(/;"	s	module:GRAPHTRANSFORMATIONMODULE
DISCONNECT	pathsample.GT2.save.f90	/^     SUBROUTINE DISCONNECT(/;"	s	module:GRAPHTRANSFORMATIONMODULE
DISPLAYGRADIENT	g.patchy.f90	/^SUBROUTINE DISPLAYGRADIENT(/;"	s
DIST	tr.f90	/^      DOUBLE PRECISION DIST(/;"	v
DISTANCEPAIRSWAP	optim.intcoords.f90	/^    SUBROUTINE DISTANCEPAIRSWAP(/;"	s	module:INTCUTILS
DISTFAC	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC,/;"	v	module:COMMONS
DISTFAC	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC,/;"	v	module:COMMONS
DISTFUNC	pathsample.mind.f	/^      SUBROUTINE DISTFUNC(/;"	s
DISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EPSALPHA(:), DISTREF(/;"	v	module:KEY
DJWCHECKOMEGA	optim.chdummy.f	/^      SUBROUTINE DJWCHECKOMEGA(/;"	s
DLACN2	pathsample.reweight.f	/^      SUBROUTINE DLACN2(/;"	s
DLACON	pathsample.reweight.f	/^      SUBROUTINE DLACON(/;"	s
DLACPY	optim.dsygvx.f	/^      SUBROUTINE DLACPY(/;"	s
DLAMC1	g.dlamch.f	/^      SUBROUTINE DLAMC1(/;"	s
DLAMC2	g.dlamch.f	/^      SUBROUTINE DLAMC2(/;"	s
DLAMC3	g.dlamch.f	/^      DOUBLE PRECISION FUNCTION DLAMC3(/;"	f
DLAMC4	g.dlamch.f	/^      SUBROUTINE DLAMC4(/;"	s
DLAMC5	g.dlamch.f	/^      SUBROUTINE DLAMC5(/;"	s
DLAMCH	g.dlamch.f	/^      DOUBLE PRECISION FUNCTION DLAMCH(/;"	f
DLANTR	pathsample.reweight.f	/^      DOUBLE PRECISION FUNCTION DLANTR(/;"	f
DLAQGE	pathsample.reweight.f	/^      SUBROUTINE DLAQGE(/;"	s
DLASWP	g.dgetrf.f	/^      SUBROUTINE DLASWP(/;"	s
DLASWP	pathsample.reweight.f	/^      SUBROUTINE DLASWP(/;"	s
DLATRS	pathsample.reweight.f	/^      SUBROUTINE DLATRS(/;"	s
DLLModule	pathsample.GT2DLL.f90	/^module DLLModule$/;"	m
DLLaddI	pathsample.GT2DLL.f90	/^     subroutine DLLaddI(/;"	s	module:DLLModule
DLLaddN	pathsample.GT2DLL.f90	/^     subroutine DLLaddN(/;"	s	module:DLLModule
DLLaddR	pathsample.GT2DLL.f90	/^     subroutine DLLaddR(/;"	s	module:DLLModule
DLLdelI	pathsample.GT2DLL.f90	/^     subroutine DLLdelI(/;"	s	module:DLLModule
DLLdelN	pathsample.GT2DLL.f90	/^     subroutine DLLdelN(/;"	s	module:DLLModule
DLLdelR	pathsample.GT2DLL.f90	/^     subroutine DLLdelR(/;"	s	module:DLLModule
DLLdivR	pathsample.GT2DLL.f90	/^     subroutine DLLdivR(/;"	s	module:DLLModule
DLLinitI	pathsample.GT2DLL.f90	/^     subroutine DLLinitI(/;"	s	module:DLLModule
DLLinitN	pathsample.GT2DLL.f90	/^     subroutine DLLinitN(/;"	s	module:DLLModule
DLLinitR	pathsample.GT2DLL.f90	/^     subroutine DLLinitR(/;"	s	module:DLLModule
DLLmulR	pathsample.GT2DLL.f90	/^     subroutine DLLmulR(/;"	s	module:DLLModule
DLLprintI	pathsample.GT2DLL.f90	/^     subroutine DLLprintI(/;"	s	module:DLLModule
DLLprintN	pathsample.GT2DLL.f90	/^     subroutine DLLprintN(/;"	s	module:DLLModule
DLLprintR	pathsample.GT2DLL.f90	/^     subroutine DLLprintR(/;"	s	module:DLLModule
DLLsumR	pathsample.GT2DLL.f90	/^     subroutine DLLsumR(/;"	s	module:DLLModule
DLS001	g.dlsode.f	1235;"	c	subroutine:DLSODE
DLS001	g.dlsode.f	1982;"	c	subroutine:DINTDY
DLS001	g.dlsode.f	2107;"	c	subroutine:DPREPJ
DLS001	g.dlsode.f	2289;"	c	subroutine:DSOLSY
DLS001	g.dlsode.f	2369;"	c	subroutine:DSRCOM
DLS001	g.dlsode.f	2499;"	c	subroutine:DSTODE
DLSODE	g.dlsode.f	/^      SUBROUTINE DLSODE /;"	s
DL_POLY	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY,/;"	v	module:COMMONS
DL_POLY	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY,/;"	v	module:COMMONS
DM	optim.amber.f	2911;"	c	subroutine:anglesecderivs
DM	optim.amber.f	6200;"	c	subroutine:hairyhell
DM	optim.amber.f	6388;"	c	subroutine:hairyimphell
DMBLMORSE	g.dmblmorse.f90	/^      SUBROUTINE DMBLMORSE(/;"	s
DMBLMT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT,/;"	v	module:COMMONS
DMBLMT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT,/;"	v	module:COMMONS
DMBLTD	g.dbptd.f90	/^      SUBROUTINE DMBLTD /;"	s
DMBLTD	optim.dbptd.f90	/^      SUBROUTINE DMBLTD /;"	s
DMIN	g.mc.F	1285;"	c	subroutine:TRANSITION
DN	optim.amber.f	2915;"	c	subroutine:anglesecderivs
DN	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DN,/;"	v	module:MODAMBER
DN2	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DN,DN2,/;"	v	module:MODAMBER
DN3	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DN,DN2,DN3$/;"	v	module:MODAMBER
DNEBSWITCH	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL, GEOMDIFFTOL, DNEBSWITCH,/;"	v	module:KEY
DOCK	pathsample.dock.f90	/^SUBROUTINE DOCK$/;"	s	module:DOCKMODULE
DOCKCYCLE	pathsample.dock.f90	/^SUBROUTINE DOCKCYCLE$/;"	s	module:DOCKMODULE
DOCKCYCLE2	pathsample.dock.f90	/^SUBROUTINE DOCKCYCLE2$/;"	s	module:DOCKMODULE
DOCKMODULE	pathsample.dock.f90	/^MODULE DOCKMODULE$/;"	m
DOCROSSCHECK	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK,/;"	v	module:KEY
DOGROUPROT	g.modamber9.f90	/^      LOGICAL :: GROUPROTT, DOGROUPROT=/;"	v	module:MODAMBER9
DOGROUPROT	optim.modamber9.f90	/^      LOGICAL :: GROUPROTT, DOGROUPROT=/;"	v	module:modamber9
DOH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DOH /;"	v	module:msevb_common
DOMOVEREST	g.commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL, DOMOVEREST$/;"	v	module:COMMONS
DOMOVEREST	g.commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL, DOMOVEREST$/;"	v	module:COMMONS
DONEDOUBLE	pathsample.donedouble.f90	/^SUBROUTINE DONEDOUBLE$/;"	s
DONTMOVE	g.commons.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(/;"	v	module:COMMONS
DONTMOVE	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(/;"	v	module:COMMONS
DONTMOVEALL	g.commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL,/;"	v	module:COMMONS
DONTMOVEALL	g.commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST, DONTMOVEALL,/;"	v	module:COMMONS
DONTMOVECENTRE	g.commons.f90	/^      INTEGER :: NDONTMOVE, DONTMOVECENTRE$/;"	v	module:COMMONS
DONTMOVECENTRE	g.commons.o.f90	/^      INTEGER :: NDONTMOVE, DONTMOVECENTRE$/;"	v	module:COMMONS
DONTMOVEGROUPT	g.commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT,/;"	v	module:COMMONS
DONTMOVEGROUPT	g.commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT,/;"	v	module:COMMONS
DONTMOVEGROUPTYPE	g.commons.f90	/^      CHARACTER (LEN=2) :: DONTMOVEGROUPTYPE$/;"	v	module:COMMONS
DONTMOVEGROUPTYPE	g.commons.o.f90	/^      CHARACTER (LEN=2) :: DONTMOVEGROUPTYPE$/;"	v	module:COMMONS
DONTMOVERADIUS	g.commons.f90	/^      DOUBLE PRECISION :: DONTMOVERADIUS$/;"	v	module:COMMONS
DONTMOVERADIUS	g.commons.o.f90	/^      DOUBLE PRECISION :: DONTMOVERADIUS$/;"	v	module:COMMONS
DONTMOVERES	g.commons.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(:),DONTMOVERES(/;"	v	module:COMMONS
DONTMOVERES	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE :: DONTMOVE(:),DONTMOVERES(/;"	v	module:COMMONS
DONTMOVEREST	g.commons.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST,/;"	v	module:COMMONS
DONTMOVEREST	g.commons.o.f90	/^      LOGICAL :: DONTMOVET, DONTMOVEGROUPT, DONTMOVEREST,/;"	v	module:COMMONS
DONTMOVET	g.commons.f90	/^      LOGICAL :: DONTMOVET,/;"	v	module:COMMONS
DONTMOVET	g.commons.o.f90	/^      LOGICAL :: DONTMOVET,/;"	v	module:COMMONS
DOO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DOO /;"	v	module:msevb_common
DOOEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DOOEQ /;"	v	module:msevb_common
DOS	pathsample.DOS.f	/^      SUBROUTINE DOS$/;"	s
DOUBLET	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE, NORESET, TWOD, &$/;"	v	module:KEY
DOVECC	g.dftb.f	/^      SUBROUTINE DOVECC(/;"	s
DOVECC	optim.dftb.f	/^      SUBROUTINE DOVECC(/;"	s
DP	optim.amber.f	2913;"	c	subroutine:anglesecderivs
DPBTF2	g.mylapack.f	/^      SUBROUTINE DPBTF2(/;"	s
DPBTF2	optim.mylapack.f	/^      SUBROUTINE DPBTF2(/;"	s
DPBTRF	g.mylapack.f	/^      SUBROUTINE DPBTRF(/;"	s
DPBTRF	optim.mylapack.f	/^      SUBROUTINE DPBTRF(/;"	s
DPBTRS	g.mylapack.f	/^      SUBROUTINE DPBTRS(/;"	s
DPBTRS	optim.mylapack.f	/^      SUBROUTINE DPBTRS(/;"	s
DPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: DPD$/;"	v
DPHI	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,/;"	v	module:MODAMBER
DPI1RMvec	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:LJCAPSIDMODULE
DPI1RMvec	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:PYMODULE
DPI1RMvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:LJCAPSIDMODULE
DPI1RMvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:PYMODULE
DPI2RMvec	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:LJCAPSIDMODULE
DPI2RMvec	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:PYMODULE
DPI2RMvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:LJCAPSIDMODULE
DPI2RMvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:PYMODULE
DPI3RMvec	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:LJCAPSIDMODULE
DPI3RMvec	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:PYMODULE
DPI3RMvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:LJCAPSIDMODULE
DPI3RMvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:PYMODULE
DPMU	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(:), DPMU(/;"	v	module:COMMONS
DPMU	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(:), DPMU(/;"	v	module:COMMONS
DPMU	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(:,:), RBSTLA(:,:), STCHRG(:), DPMU(/;"	v	module:COMMONS
DPRAND	func.f90	/^FUNCTION DPRAND(/;"	f
DPRAND	g.dprand.f	/^        DOUBLE PRECISION FUNCTION DPRAND(/;"	f
DPRAND	pathsample.dprand.f	/^        FUNCTION DPRAND(/;"	f
DPREPJ	g.dlsode.f	/^      SUBROUTINE DPREPJ /;"	s
DQ	optim.amber.f	2917;"	c	subroutine:anglesecderivs
DQAG	optim.dqag.f	/^      SUBROUTINE DQAG /;"	s
DQAGE	optim.dqag.f	/^      SUBROUTINE DQAGE /;"	s
DQAGKEY	optim.cubsplstring.f90	/^  INTEGER :: DQAGKEY$/;"	v	module:CUBSPLSTRING
DQK15	optim.dqag.f	/^      SUBROUTINE DQK15 /;"	s
DQK21	optim.dqag.f	/^      SUBROUTINE DQK21 /;"	s
DQK31	optim.dqag.f	/^      SUBROUTINE DQK31 /;"	s
DQK41	optim.dqag.f	/^      SUBROUTINE DQK41 /;"	s
DQK51	optim.dqag.f	/^      SUBROUTINE DQK51 /;"	s
DQK61	optim.dqag.f	/^      SUBROUTINE DQK61 /;"	s
DQPSRT	optim.dqag.f	/^      SUBROUTINE DQPSRT /;"	s
DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,3) :: DR$/;"	v
DR	optim.TIPmodes.f	86;"	c	subroutine:H2OMODES
DR	optim.h2o.f	315;"	c	subroutine:LC1
DR	optim.h2o.f	609;"	c	subroutine:DRVTV
DR	optim.h2o.f	85;"	c	subroutine:H2O
DREPCC	g.dftb.f	/^      SUBROUTINE DREPCC(/;"	s
DREPCC	optim.dftb.f	/^      SUBROUTINE DREPCC(/;"	s
DRSCL	pathsample.reweight.f	/^      SUBROUTINE DRSCL(/;"	s
DRVTV	optim.h2o.f	/^      SUBROUTINE DRVTV(/;"	s
DS	optim.double.f	/^      SUBROUTINE DS(/;"	s
DSC	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,/;"	v	module:MODUNRES
DSCAL	g.dlsode.f	/^      SUBROUTINE DSCAL /;"	s
DSCP	optim.escp.f	/^      SUBROUTINE DSCP(/;"	s
DSOLSY	g.dlsode.f	/^      SUBROUTINE DSOLSY /;"	s
DSORT	pathsample.dsort.f	/^      SUBROUTINE DSORT /;"	s
DSRCOM	g.dlsode.f	/^      SUBROUTINE DSRCOM /;"	s
DSTODE	g.dlsode.f	/^      SUBROUTINE DSTODE /;"	s
DSTRING1	optim.main.f90	/^      CHARACTER(LEN=21) DSTRING1,/;"	v	program:OPTIM4
DSTRING2	optim.main.f90	/^      CHARACTER(LEN=21) DSTRING1, DSTRING2$/;"	v	program:OPTIM4
DSYEVX	optim.dsygvx.f	/^      SUBROUTINE DSYEVX(/;"	s
DSYGVX	optim.dsygvx.f	/^      SUBROUTINE DSYGVX(/;"	s
DSYR	g.mylapack.f	/^      SUBROUTINE DSYR /;"	s
DSYR	optim.mylapack.f	/^      SUBROUTINE DSYR /;"	s
DTBSV	g.mylapack.f	/^      SUBROUTINE DTBSV /;"	s
DTBSV	optim.mylapack.f	/^      SUBROUTINE DTBSV /;"	s
DTEST	optim.key.f90	/^      LOGICAL :: DTEST,/;"	v	module:KEY
DTHRESH	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO, ESHIFT, FORCE, DTHRESH$/;"	v	module:MODTWOEND
DTRAP	optim.dtrap.f	/^      SUBROUTINE DTRAP(/;"	s
DTRTI2	g.dgetri.f	/^      SUBROUTINE DTRTI2(/;"	s
DTRTRI	g.dgetri.f	/^      SUBROUTINE DTRTRI(/;"	s
DTSGI	g.modamber9.f90	107;"	c	module:MODAMBER9
DTSGI	optim.modamber9.f90	123;"	c	module:modamber9
DTSGL	g.modamber9.f90	110;"	c	module:MODAMBER9
DTSGL	optim.modamber9.f90	126;"	c	module:modamber9
DU	optim.amber.f	2907;"	c	subroutine:anglesecderivs
DU	optim.amber.f	6196;"	c	subroutine:hairyhell
DU	optim.amber.f	6384;"	c	subroutine:hairyimphell
DUMACH	g.dlsode.f	/^      DOUBLE PRECISION FUNCTION DUMACH /;"	f
DUMBBELLP	g.dbpg.f90	/^      SUBROUTINE DUMBBELLP /;"	s
DUMBBELLP	optim.dbpg.f90	/^      SUBROUTINE DUMBBELLP /;"	s
DUMMY	optim.main.f90	/^      DOUBLE PRECISION DUMMY$/;"	v	program:OPTIM4
DUMPALLPATHS	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS,/;"	v	module:KEY
DUMPCOORDS	optim.growstring.f90	/^  SUBROUTINE DUMPCOORDS(/;"	s	module:GROWSTRINGUTILS
DUMPCOORDS	optim.specialfuncts.f90	/^  SUBROUTINE DUMPCOORDS(/;"	s	module:SPFUNCTS
DUMPDATAT	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT,/;"	v	module:KEY
DUMPFILE	g.commons.f90	/^      CHARACTER(LEN=130) DUMPFILE,/;"	v	module:COMMONS
DUMPFILE	g.commons.o.f90	/^      CHARACTER(LEN=130) DUMPFILE,/;"	v	module:COMMONS
DUMPFRAMES	optim.specialfuncts.f90	/^  SUBROUTINE DUMPFRAMES(/;"	s	module:SPFUNCTS
DUMPGSALL	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,FIXATMS, PREROTATE, DUMPGSALL /;"	k	type:IMGNODE
DUMPGSPATH	optim.growstring.f90	/^  SUBROUTINE DUMPGSPATH(/;"	s	module:GROWSTRINGUTILS
DUMPIND	optim.gsdata.f90	/^  INTEGER :: DUMPIND$/;"	k	type:IMGNODE
DUMPINT	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT,/;"	v	module:COMMONS
DUMPINT	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT,/;"	v	module:COMMONS
DUMPINTEOS	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS,/;"	v	module:KEY
DUMPINTEOSFREQ	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE, DUMPINTXYZFREQ, DUMPINTEOSFREQ,/;"	v	module:KEY
DUMPINTXYZ	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ,/;"	v	module:KEY
DUMPINTXYZFREQ	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE, DUMPINTXYZFREQ,/;"	v	module:KEY
DUMPIT	optim.dumpit.f	/^      SUBROUTINE DUMPIT(/;"	s
DUMPJ	g.mc.F	/^      SUBROUTINE DUMPJ(/;"	s
DUMPMODEN	g.modamber9.f90	/^      logical, dimension(:), allocatable :: DUMPMODEN$/;"	v	module:MODAMBER9
DUMPMODEN	optim.modamber9.f90	/^      logical, dimension(:), allocatable :: DUMPMODEN$/;"	v	module:modamber9
DUMPP	optim.dumpp.f	/^      SUBROUTINE DUMPP(/;"	s
DUMPQUT	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT,/;"	v	module:COMMONS
DUMPQUT	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT,/;"	v	module:COMMONS
DUMPSP	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP, DUMPSP,/;"	v	module:KEY
DUMPSTATE	g.GMINdump.f90	/^SUBROUTINE DUMPSTATE(/;"	s
DUMPSTEPST	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST,/;"	v	module:COMMONS
DUMPSTEPST	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR, DUMPSTEPST,/;"	v	module:COMMONS
DUMPSTRUCTURES	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES,/;"	v	module:COMMONS
DUMPSTRUCTURES	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES,/;"	v	module:COMMONS
DUMPSTRUCTURES	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES,/;"	v	module:KEY
DUMPT	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT,/;"	v	module:COMMONS
DUMPT	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT,/;"	v	module:COMMONS
DUMPV	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV,/;"	v	module:KEY
DUMPVUNIT	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT,/;"	v	module:COMMONS
DUMPVUNIT	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT,/;"	v	module:COMMONS
DUMPXYZUNIT	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT,/;"	v	module:COMMONS
DUMPXYZUNIT	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT,/;"	v	module:COMMONS
DUMSUM	g.dlsode.f	/^      SUBROUTINE DUMSUM(/;"	s
DV	optim.amber.f	2909;"	c	subroutine:anglesecderivs
DV	optim.amber.f	6198;"	c	subroutine:hairyhell
DV	optim.amber.f	6386;"	c	subroutine:hairyimphell
DVEC	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: DVEC(/;"	v	module:NGTMEM
DVECTEMP	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: DVEC(:), DVECTEMP(/;"	v	module:NGTMEM
DVN	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,DID,DVN,/;"	v	module:MODAMBER
DVN2	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,DID,DVN,DVN2$/;"	v	module:MODAMBER
DVN3	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,/;"	v	module:MODAMBER
DVNEB	optim.oldneb.f	315;"	c	subroutine:NEBBFGS
DVNEB	optim.oldneb.f	35;"	c	subroutine:OLDNEB
DVNEB	optim.oldneb.f	726;"	c	subroutine:MAKEGRADH
DVNEB	optim.oldneb.f	834;"	c	subroutine:MAKEGRADR
DVNORM	g.dlsode.f	/^      DOUBLE PRECISION FUNCTION DVNORM /;"	f
DX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,DX,/;"	v	module:MODAMBER
DXDS	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,/;"	v	module:MODUNRES
DXDV	optim.modunres.f90	/^     &                    DCDV,DXDV,/;"	v	module:MODUNRES
DXPY	g.tn.f	/^      SUBROUTINE DXPY(/;"	s
DY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,DX,DY,/;"	v	module:MODAMBER
DZ	g.Zetterling.f	240;"	c	subroutine:Z2
DZ	g.Zetterling.f	65;"	c	subroutine:Z1
DZ	g.dzugutov.f	49;"	c	subroutine:DZPOT
DZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,DX,DY,DZ$/;"	v	module:MODAMBER
DZP1	g.commons.f90	/^      DOUBLE PRECISION :: DZP1,/;"	v	module:COMMONS
DZP1	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1,/;"	v	module:COMMONS
DZP2	g.commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2,/;"	v	module:COMMONS
DZP2	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2,/;"	v	module:COMMONS
DZP3	g.commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3,/;"	v	module:COMMONS
DZP3	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3,/;"	v	module:COMMONS
DZP4	g.commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4,/;"	v	module:COMMONS
DZP4	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4,/;"	v	module:COMMONS
DZP5	g.commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5,/;"	v	module:COMMONS
DZP5	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5,/;"	v	module:COMMONS
DZP6	g.commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6,/;"	v	module:COMMONS
DZP6	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6,/;"	v	module:COMMONS
DZP7	g.commons.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6, DZP7$/;"	v	module:COMMONS
DZP7	g.commons.o.f90	/^      DOUBLE PRECISION :: DZP1, DZP2, DZP3, DZP4, DZP5, DZP6, DZP7$/;"	v	module:COMMONS
DZPOT	g.dzugutov.f	/^      SUBROUTINE DZPOT(/;"	s
DZTEST	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST,/;"	v	module:COMMONS
DZTEST	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST,/;"	v	module:COMMONS
DZUGUTOV	optim.dzugutov.f	/^      SUBROUTINE DZUGUTOV(/;"	s
D_BLN	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(:), D_BLN(/;"	v	module:COMMONS
D_BLN	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(:), D_BLN(/;"	v	module:COMMONS
D_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(:), D_BLN(/;"	v	module:KEY
D_rg	optim.amhglobals.f	/^      double precision D_rg,/;"	v	module:amhglobals
DataModule	pathsample.GT2data.f90	/^module DataModule$/;"	m
DenseGraphTransformation	pathsample.GT2.f90	/^     SUBROUTINE DenseGraphTransformation$/;"	s	module:GRAPHTRANSFORMATIONMODULE
DumpEveryNthQuench	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench,/;"	v	module:COMMONS
DumpEveryNthQuench	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench,/;"	v	module:COMMONS
E	bln.vars.inc.f90	/^        DOUBLE /;"	v
E	mc.vars.inc.f90	/^      DOUBLE /;"	v
E	optim.gsdata.f90	/^     DOUBLE /;"	k	type:IMGNODE
E	optim.intlbfgs.f90	/^     DOUBLE /;"	k	type:TSFOUNDTYPE
E	optim.intlbfgs.f90	/^   DOUBLE /;"	k	type:MINFOUNDTYPE
E	optim.intlbfgslj.f90	/^     DOUBLE /;"	k	type:TSFOUNDTYPE
E	optim.intlbfgslj.f90	/^   DOUBLE /;"	k	type:MINFOUNDTYPE
EACH_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: EACH_COULOMB$/;"	v	module:msevb_common
EAMALT	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT, &$/;"	v	module:COMMONS
EAMALT	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT, &$/;"	v	module:COMMONS
EAMLJ	g.EAMLJ_sub.f	/^      SUBROUTINE EAMLJ(/;"	s
EAMLJCOMM	g.EAMLJ_sub.f	124;"	c	function:func
EAMLJCOMM	g.EAMLJ_sub.f	35;"	c	subroutine:EAMLJ
EAMLJCOMM	g.keyword.f	50;"	c	subroutine:KEYWORD
EAMLJT	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT,/;"	v	module:COMMONS
EAMLJT	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT,/;"	v	module:COMMONS
EAMP	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP,/;"	v	module:COMMONS
EAMP	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP,/;"	v	module:COMMONS
EAMal	g.EAMal.f	/^      SUBROUTINE EAMal(/;"	s
EB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR, EB$/;"	v
EBEST	mc.vars.inc.f90	/^      DOUBLE PRECISION :: EBEST,/;"	v
EBLN	bln.f90	/^        SUBROUTINE EBLN(/;"	s	module:BLN
ECF	g.ljcapsidmodule.f90	/^SUBROUTINE ECF(/;"	s
ECFDC	g.takestepmsgb.f90	/^      SUBROUTINE ECFDC /;"	s
ECHO	func.f90	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECHO	g.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECHO	optim.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECHO	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,/;"	v	program:OPTIM4
ECHO	pathsample.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECONV	commons.f90	/^DOUBLE PRECISION :: ECONV=/;"	v	module:COMMONS
ECONV	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5, &$/;"	v	module:COMMONS
ECONV	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5, &$/;"	v	module:COMMONS
ECTRAP	optim.ectrap.f	/^      SUBROUTINE ECTRAP /;"	s
EDEBUG	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB, ACESOLV, CHDEBUG, EDEBUG$/;"	v	module:modcharmm
EDIFFTOL	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL,/;"	v	module:KEY
EDITIT	optim.key.f90	/^      CHARACTER(LEN=20) :: EDITIT$/;"	v	module:KEY
EDITRGYR	optim.chdummy.f	/^      SUBROUTINE EDITRGYR(/;"	s
EDOUBLE	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD(6), R2, EDOUBLE,/;"	v
EFAC	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,/;"	v	module:COMMONS
EFAC	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,/;"	v	module:COMMONS
EFIELD	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD,/;"	v	module:COMMONS
EFIELD	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD,/;"	v	module:COMMONS
EFIELD	optim.key.f90	/^      DOUBLE PRECISION :: EFIELD /;"	v	module:KEY
EFIELDCONVERSIONFACTOR	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: EFIELDCONVERSIONFACTOR /;"	k	type:RIGIDBODYPOTENTIAL
EFIELDCONVERSIONFACTOR	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: EFIELDCONVERSIONFACTOR /;"	k	type:RIGIDBODYPOTENTIAL
EFIELDT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT,/;"	v	module:COMMONS
EFIELDT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT,/;"	v	module:COMMONS
EFIELDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT, UNIAXT, STOCKAAT, &$/;"	v	module:KEY
EFOL	optim.efol.f90	/^      SUBROUTINE EFOL(/;"	s	module:MODEFOL
EFSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS,/;"	v	module:KEY
EFSTEPST	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST,/;"	v	module:KEY
EICCH	optim.chdummy.f	/^      SUBROUTINE EICCH(/;"	s
EIG	g.ptgrp.f	/^      SUBROUTINE EIG(/;"	s
EIG	optim.eig.f	/^      SUBROUTINE EIG(/;"	s
EIG	pathsample.eig.f	/^      SUBROUTINE EIG(/;"	s
EIGSRT	g.eigsrt.f	/^      SUBROUTINE EIGSRT(/;"	s
ELEMENT	g.molinfo.f90	/^        CHARACTER (LEN=5)  :: ELEMENT /;"	k	type:ATOM
ELLIPSOIDROTATION	g.ljcapsidmodule.f90	/^      SUBROUTINE ELLIPSOIDROTATION /;"	s
ELLIPSOIDROTATION	optim.ljcapsidmodule.f90	/^      SUBROUTINE ELLIPSOIDROTATION /;"	s
ELLIPSOIDT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT,/;"	v	module:COMMONS
ELLIPSOIDT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT,/;"	v	module:COMMONS
ELLIPSOIDT	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,ELLIPSOIDT,/;"	v	module:KEY
ELLMAT	g.pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(:,:),ELLST2(:,:),ELLMAT(/;"	v	module:PYMODULE
ELLST1	g.pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(/;"	v	module:PYMODULE
ELLST2	g.pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(:,:),ELLST2(/;"	v	module:PYMODULE
ELPSDRTMT	g.gbcalamitic.f90	/^      SUBROUTINE ELPSDRTMT /;"	s
EMIE	optim.emie.f	/^      SUBROUTINE EMIE(/;"	s
EMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB,/;"	v	module:modcharmm
EMINSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMINSAVE(/;"	v	module:SAVESTATE
END	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,/;"	v	program:OPTIM4
ENDHESS	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,/;"	v	module:modcharmm
ENDNUMHESS	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,ENDNUMHESS,/;"	v	module:modcharmm
ENDRES	optim.modunres.f90	/^      INTEGER :: STARTRES(10),ENDRES(/;"	v	module:MODUNRES
ENERGIESCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: ENERGIESLIGAND(:), ENERGIESCOMPLEX(/;"	v	module:DOCKMODULE
ENERGIESLIGAND	pathsample.dock.f90	/^double precision, allocatable :: ENERGIESLIGAND(/;"	v	module:DOCKMODULE
ENERGIESPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: ENERGIESLIGAND(:), ENERGIESCOMPLEX(:), ENERGIESPROTEIN(/;"	v	module:DOCKMODULE
ENERGY	bln.vars.inc.f90	/^        DOUBLE PRECISION ENERGY$/;"	v
ENERGY2INDEX	g.basinsampling.f90	/^      FUNCTION ENERGY2INDEX(/;"	f	subroutine:BASINSAMPLING
ENERGY_FH	commons.f90	/^INTEGER :: ENERGY_FH=/;"	v	module:COMMONS
ENUMERATE	g.enumerate.f90	/^SUBROUTINE ENUMERATE(/;"	s
EPANIC	optim.rotd.f	/^      SUBROUTINE EPANIC(/;"	s
EPREV	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV /;"	v	module:COMMONS
EPREV	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV /;"	v	module:COMMONS
EPREV	mc.vars.inc.f90	/^      DOUBLE PRECISION :: EBEST,EPREV,/;"	v
EPS	g.modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(/;"	v	module:consts_trans_97
EPS11	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ, &$/;"	v	module:COMMONS
EPS11	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ, &$/;"	v	module:COMMONS
EPS12	g.commons.f90	/^     &                 EPS11, EPS22, EPS12,/;"	v	module:COMMONS
EPS12	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12,/;"	v	module:COMMONS
EPS22	g.commons.f90	/^     &                 EPS11, EPS22,/;"	v	module:COMMONS
EPS22	g.commons.o.f90	/^     &                 EPS11, EPS22,/;"	v	module:COMMONS
EPSALPHA	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EPSALPHA(/;"	v	module:KEY
EPSILON	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON,/;"	v
EPSILON	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX, CGK(3), CGG(3), CGG2(3), CGCONST, EPSILON$/;"	v	module:VGW
EPSILON	g.vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON,/;"	v	module:VGWSP
EPSILON	optim.modamber.f90	/^      DOUBLE PRECISION RSTAR,EPSILON$/;"	v	module:MODAMBER
EPSILONREP	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: EPSILONREP /;"	k	type:CAPSOMER
EPSILONREP	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: EPSILONREP /;"	k	type:CAPSOMER
EPSILON_MIX	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: EPSILON_MIX /;"	v	module:msevb_common
EPSILON_MSEVB	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: EPSILON_MSEVB /;"	v	module:msevb_common
EPSNOT	g.commons.f90	/^     &                 SIGNOT, EPSNOT,/;"	v	module:COMMONS
EPSNOT	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT,/;"	v	module:COMMONS
EPSR	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(3,3), &$/;"	v	module:COMMONS
EPSR	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL, ABTHRESH, ACTHRESH, CSMPMAT(3,3), &$/;"	v	module:COMMONS
EPSSPHERE	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE,/;"	v	module:COMMONS
EPSSPHERE	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE,/;"	v	module:COMMONS
EPSp	g.modconsts.f90	/^     &                 EPSs,EPSp,/;"	v	module:consts
EPSp	g.modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(4),EPSs,EPSp,/;"	v	module:consts_trans_97
EPSs	g.modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,Vpppi,KAPPA,&$/;"	v	module:consts
EPSs	g.modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(4),EPSs,/;"	v	module:consts_trans_97
EQUIL	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL,/;"	v	module:COMMONS
EQUIL	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL,/;"	v	module:COMMONS
ESA	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(/;"	v	module:COMMONS
ESA	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(/;"	v	module:COMMONS
ESAVE	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ESAVE(/;"	v	module:COMMONS
ESAVE	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ESAVE(/;"	v	module:COMMONS
ESHIFT	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO, ESHIFT,/;"	v	module:MODTWOEND
ETA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ETA /;"	v	module:msevb_common
ETRAP	optim.etrap.f	/^      SUBROUTINE ETRAP /;"	s
ETSSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETSSAVE(/;"	v	module:SAVESTATE
EV	g.EAMal.f	34;"	c	subroutine:EAMal
EV	g.basinsampling.f90	52;"	c	subroutine:BASINSAMPLING
EV	g.bspt.F	76;"	c	subroutine:PTBASINSAMPLING
EV	g.capsid.f	37;"	c	subroutine:FCAPSID
EV	g.lj.f	255;"	c	subroutine:LJCUT
EV	g.mc.F	37;"	c	subroutine:MC
EV	g.mylbfgs.f	51;"	c	subroutine:MYLBFGS
EV	g.potential.f	49;"	c	subroutine:POTENTIAL
EV	g.qdtest.f	29;"	c	subroutine:QDTEST
EV	g.qdtest2.f	29;"	c	subroutine:QDTEST2
EV	g.rad.f	30;"	c	subroutine:RAD
EV	g.rad.f	87;"	c	subroutine:RADR
EV	g.sc.f	31;"	c	subroutine:SC
EV	g.strand.f	36;"	c	subroutine:STRAND
EV	g.symmetry.f90	59;"	c	subroutine:SYMMETRY
EV	mc.f90	40;"	c	subroutine:ACCREJ
EV	mylbfgs.old.f90	51;"	c	subroutine:MYLBFGS
EV	optim.capsid.f	62;"	c	subroutine:FCAPSID
EVALMIN	optim.intlbfgs.f90	/^     DOUBLE PRECISION,POINTER :: EVALMIN$/;"	k	type:TSFOUNDTYPE
EVALMIN	optim.intlbfgslj.f90	/^     DOUBLE PRECISION,POINTER :: EVALMIN$/;"	k	type:TSFOUNDTYPE
EVASH4	g.Q4.f	/^      SUBROUTINE EVASH4(/;"	s
EVCUT	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT,/;"	v	module:KEY
EVDISTTHRESH	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7, EVDISTTHRESH,/;"	v	module:COMMONS
EVOLVESTRING	optim.growstring.f90	/^  SUBROUTINE EVOLVESTRING(/;"	s	module:GROWSTRINGUTILS
EVOLVESTRINGT	optim.gsdata.f90	/^  LOGICAL :: EVOLVESTRINGT$/;"	k	type:IMGNODE
EVSTEPT	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT,/;"	v	module:COMMONS
EVSTEPT	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT,/;"	v	module:COMMONS
EXCHPROB	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB,/;"	v	module:COMMONS
EXCHPROB	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB,/;"	v	module:COMMONS
EXPD	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD,/;"	v	module:COMMONS
EXPD	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC, EXPD,/;"	v	module:COMMONS
EXPFAC	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC,/;"	v	module:COMMONS
EXPFAC	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT, EXPFAC,/;"	v	module:COMMONS
EXPON	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,EXPON,/;"	v	module:MODUNRES
EXPON2	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,EXPON,EXPON2,/;"	v	module:MODUNRES
EXTENDLEFT	optim.gsdata.f90	/^  SUBROUTINE EXTENDLEFT$/;"	s
EXTENDRIGHT	optim.gsdata.f90	/^  SUBROUTINE EXTENDRIGHT /;"	s
EXTRAP	optim.bfgsts.f	/^      SUBROUTINE EXTRAP(/;"	s
EXTRASTEPS	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,RANDOMCUTOFF,PERMDIHE(20), EXTRASTEPS$/;"	v	module:modcharmm
EYDTRAP	optim.EYtrap.f	/^      SUBROUTINE EYDTRAP(/;"	s
EYETRAP	optim.EYtrap.f	/^      SUBROUTINE EYETRAP /;"	s
EYTRAPT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS, INTLJT, INTTST, EYTRAPT$/;"	v	module:KEY
E_WRITE	g.amhdummy.f	/^	SUBROUTINE E_WRITE(/;"	s	module:AMH_INTERFACES
E_WRITE	g.amhdummy.f	/^       SUBROUTINE E_WRITE(/;"	s
E_ZERO	g.vgw.f90	/^     DOUBLE PRECISION :: E_ZERO,/;"	v	module:VGWSP
E_ZERO	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(6), E_ZERO,/;"	v	module:VGW
E_harm_springs	optim.amhglobals.f	/^      double precision E_temp, E_harm_springs$/;"	v	module:amhglobals
E_temp	optim.amhglobals.f	/^      double precision E_temp,/;"	v	module:amhglobals
Efd	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: Efd$/;"	v	module:ttm3f_mod
Efq	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: Efq$/;"	v	module:ttm3f_mod
EllipsoidsAAtoPolar	g.ljcapsidmodule.f90	/^SUBROUTINE EllipsoidsAAtoPolar(/;"	s
EllipsoidsAAtoPolar	optim.ljcapsidmodule.f90	/^SUBROUTINE EllipsoidsAAtoPolar(/;"	s
Energy2Index	g.tetherfunc.f90	/^      function Energy2Index(/;"	f	module:tetherfunc
ExtrapolationPercent	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent,/;"	v	module:COMMONS
ExtrapolationPercent	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent,/;"	v	module:COMMONS
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(-1:N+1,2) :: F$/;"	v
F1COM	g.modf1com.f90	/^MODULE F1COM$/;"	m
F1DIM	g.f1dim.f	/^      FUNCTION F1DIM(/;"	f
FAC	g.Q4.f	/^      DOUBLE PRECISION FUNCTION FAC(/;"	f
FACTOR	g.commons.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ, FACTOR /;"	v	module:COMMONS
FACTOR	g.commons.o.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ, FACTOR /;"	v	module:COMMONS
FAIL	g.MSorig.f	41;"	c	subroutine:MSORIG
FAIL	g.MSorigc.f	44;"	c	subroutine:MSORIGC
FAIL	g.MStrans.97.f	57;"	c	subroutine:MSTRANS97
FAIL	g.cgmin.f	38;"	c	subroutine:CGMIN
FAIL	g.dftb.f	55;"	c	subroutine:DFTB
FAIL	g.frausi.f	58;"	c	subroutine:FRAUSI
FAIL	g.linmin.f	35;"	c	subroutine:LINMIN
FAIL	g.mnbrak.f	31;"	c	subroutine:MNBRAK
FAIL	g.potential.f	48;"	c	subroutine:POTENTIAL
FAIL	optim.dftb.f	43;"	c	subroutine:DFTB
FAILT	optim.modcharmm.f90	/^      LOGICAL :: FAILT,/;"	v	module:modcharmm
FAKEWATER	g.modamb.f90	/^      LOGICAL FAKEWATER,/;"	v	module:MODAMBER
FAKEWATER	optim.modamber.f90	/^      LOGICAL FAKEWATER$/;"	v	module:MODAMBER
FAL	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL,/;"	v	module:COMMONS
FAL	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL,/;"	v	module:COMMONS
FARKAS	g.Farkas.f	/^      SUBROUTINE FARKAS(/;"	s
FB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: FB$/;"	v
FCAPSID	g.capsid.f	/^      SUBROUTINE FCAPSID(/;"	s
FCAPSID	optim.capsid.f	/^      SUBROUTINE FCAPSID(/;"	s
FCOULOMB	pathsample.rigidbody.f90	/^  FUNCTION FCOULOMB /;"	f	module:RIGIDBODY
FCOULOMB	pathsample.rigidbodymod.f90	/^  FUNCTION FCOULOMB /;"	f	module:RIGIDBODYMOD
FD	g.fd.f	/^      SUBROUTINE FD(/;"	s
FD	optim.fd.f	/^      SUBROUTINE FD(/;"	s
FD5H	g.commons.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD, FD5H$/;"	v	module:COMMONS
FD5H	g.commons.o.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD, FD5H$/;"	v	module:COMMONS
FD5H	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H,/;"	v	module:KEY
FDIST	g.ptgrp.f	/^      Double Precision FUNCTION FDIST(/;"	f
FDM	g.fdm.f	/^      SUBROUTINE FDM(/;"	s
FDUMP	optim.dqag.f	/^      SUBROUTINE FDUMP$/;"	s
FDUMP	pathsample.dsort.f	/^      SUBROUTINE FDUMP$/;"	s
FECOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: FELIGAND(:), FECOMPLEX(/;"	v	module:DOCKMODULE
FELIGAND	pathsample.dock.f90	/^double precision, allocatable :: FELIGAND(/;"	v	module:DOCKMODULE
FEMBED	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION FEMBED(/;"	f
FEMBED_D	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION FEMBED_D(/;"	f
FEMBED_DD	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION FEMBED_DD(/;"	f
FEPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: FELIGAND(:), FECOMPLEX(:), FEPROTEIN(/;"	v	module:DOCKMODULE
FETCHZ	optim.fetchz.f	/^      SUBROUTINE FETCHZ(/;"	s
FF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(/;"	v	module:COMMONS
FF	g.qmodule.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	module:QMODULE
FF	gmin.main.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	program:GMIN
FH	commons.f90	/^INTEGER :: FH=/;"	v	module:COMMONS
FH	pathsample.GT2data.f90	/^          logical :: FH,/;"	k	type:Node
FHcascadingCut	pathsample.GT2FibonacciHeap.f90	/^     recursive subroutine FHcascadingCut(/;"	s	module:FibonacciHeapModule
FHconcatenate	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHconcatenate(/;"	s	module:FibonacciHeapModule
FHconsolidate	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHconsolidate$/;"	s	module:FibonacciHeapModule
FHcut	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHcut(/;"	s	module:FibonacciHeapModule
FHdecreaseKey	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHdecreaseKey(/;"	s	module:FibonacciHeapModule
FHextractMin	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHextractMin(/;"	s	module:FibonacciHeapModule
FHincreaseKey	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHincreaseKey(/;"	s	module:FibonacciHeapModule
FHinit	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHinit$/;"	s	module:FibonacciHeapModule
FHinsert	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHinsert(/;"	s	module:FibonacciHeapModule
FHlink	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHlink(/;"	s	module:FibonacciHeapModule
FHmin	pathsample.GT2FibonacciHeap.f90	/^     type(Node),pointer :: FHmin$/;"	v	module:FibonacciHeapModule
FHremove	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHremove(/;"	s	module:FibonacciHeapModule
FIELDT	g.commons.f90	/^      LOGICAL :: FIELDT,/;"	v	module:COMMONS
FIELDT	g.commons.o.f90	/^      LOGICAL :: FIELDT,/;"	v	module:COMMONS
FIELDT	optim.key.f90	/^     &        VARIABLES, FIELDT,/;"	v	module:KEY
FIH	g.commons.f90	/^      DOUBLE PRECISION :: FOH, FIH,/;"	v	module:COMMONS
FIH	g.commons.o.f90	/^      DOUBLE PRECISION :: FOH, FIH,/;"	v	module:COMMONS
FIH	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH,/;"	v	module:KEY
FILEEXISTS	g.io_sanity.f90	/^FUNCTION FILEEXISTS(/;"	f
FILELENGTH	g.io_sanity.f90	/^FUNCTION FILELENGTH(/;"	f
FILLICT	optim.chdummy.f	/^      SUBROUTINE FILLICT(/;"	s
FILLICTABLE	optim.chdummy.f	/^      SUBROUTINE FILLICTABLE(/;"	s
FILTH	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH,/;"	v	module:KEY
FILTH	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG, FILTH,/;"	v	program:OPTIM4
FILTH2	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2,/;"	v	module:KEY
FILTH2	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG, FILTH, FILTH2$/;"	v	program:OPTIM4
FILTHSTR	optim.key.f90	/^      CHARACTER(LEN=80) :: SYS, FILTHSTR,/;"	v	module:KEY
FIN	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: FIN(/;"	v	program:GMIN
FIN	optim.modtwoend.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: FIN,/;"	v	module:MODTWOEND
FINALCUTOFF	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF,/;"	v	module:COMMONS
FINALCUTOFF	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF,/;"	v	module:COMMONS
FINALIO	finalio.f90	/^      SUBROUTINE FINALIO$/;"	s
FINALIO	g.finalio.f	/^      SUBROUTINE FINALIO$/;"	s
FINALQ	finalq.f90	/^      SUBROUTINE FINALQ$/;"	s
FINALQ	g.finalq.f	/^      SUBROUTINE FINALQ$/;"	s
FINC	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC,/;"	v	module:MODTWOEND
FINCORD	optim.key.f90	/^      DOUBLE PRECISION :: FINCORD(/;"	v	module:KEY
FINDCHIRALH	optim.chiralhyd.f90	/^      SUBROUTINE FINDCHIRALH(/;"	s
FINDPERMDIH	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPERMDIH$/;"	s
FINDPERMGROUP	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPERMGROUP(/;"	s
FINDPGCHAIN	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPGCHAIN(/;"	s
FINDPG_NOSWAPS	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPG_NOSWAPS(/;"	s
FINNMRSS	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS,/;"	v	module:KEY
FINNQUENCH	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS, FINNUMCRR, FINNUMPRR, FINNQUENCH$/;"	v	module:KEY
FINNUMCRR	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS, FINNUMCRR,/;"	v	module:KEY
FINNUMPRR	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS, FINNUMCRR, FINNUMPRR,/;"	v	module:KEY
FIRST	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST,/;"	k	type:IMGNODE
FIX	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX,/;"	v	module:COMMONS
FIX	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX,/;"	v	module:COMMONS
FIXAFTER	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS, NFREEZE, HINDEX, &$/;"	v	module:KEY
FIXATMS	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,FIXATMS,/;"	k	type:IMGNODE
FIXBIN	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN,/;"	v	module:COMMONS
FIXBIN	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN,/;"	v	module:COMMONS
FIXBOTH	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH,/;"	v	module:COMMONS
FIXBOTH	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH,/;"	v	module:COMMONS
FIXCOM	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM,/;"	v	module:COMMONS
FIXCOM	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM,/;"	v	module:COMMONS
FIXD	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD,/;"	v	module:COMMONS
FIXD	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD,/;"	v	module:COMMONS
FIXD	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD,/;"	v	module:KEY
FIXDIHEFLAG	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG,/;"	v	module:COMMONS
FIXDIHEFLAG	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG,/;"	v	module:COMMONS
FIXIMAGE	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE,/;"	v	module:COMMONS
FIXIMAGE	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE,/;"	v	module:COMMONS
FIXIMAGE	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE,/;"	v	module:KEY
FIXSTEP	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP,/;"	v	module:COMMONS
FIXSTEP	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP,/;"	v	module:COMMONS
FIXT	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT,/;"	v	module:COMMONS
FIXT	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT,/;"	v	module:COMMONS
FIXTEMP	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP,/;"	v	module:COMMONS
FIXTEMP	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP,/;"	v	module:COMMONS
FLDMINDIST	optim.rigidb.f90	/^      SUBROUTINE FLDMINDIST(/;"	s
FLDMINDIST	pathsample.rigidb.f90	/^      SUBROUTINE FLDMINDIST(/;"	s
FLJ	pathsample.rigidbody.f90	/^  FUNCTION FLJ(/;"	f	module:RIGIDBODY
FLJ	pathsample.rigidbodymod.f90	/^  FUNCTION FLJ(/;"	f	module:RIGIDBODYMOD
FMORSE	pathsample.rigidbody.f90	/^  FUNCTION FMORSE(/;"	f	module:RIGIDBODY
FMORSE	pathsample.rigidbodymod.f90	/^  FUNCTION FMORSE(/;"	f	module:RIGIDBODYMOD
FNAME	optim.main.f90	/^      CHARACTER FNAME*/;"	v	program:OPTIM4
FNI	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI,/;"	v	module:COMMONS
FNI	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI,/;"	v	module:COMMONS
FNORM2	optim.gsdata.f90	/^     DOUBLE PRECISION :: TNORM, FNORM2,/;"	k	type:IMGNODE
FOH	g.commons.f90	/^      DOUBLE PRECISION :: FOH,/;"	v	module:COMMONS
FOH	g.commons.o.f90	/^      DOUBLE PRECISION :: FOH,/;"	v	module:COMMONS
FOH	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH,/;"	v	module:KEY
FOLLOWARCBIS	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION FOLLOWARCBIS(/;"	f	module:CUBSPLSTRING
FOLLOWARCNEWT	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION FOLLOWARCNEWT(/;"	f	module:CUBSPLSTRING
FORCE	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO, ESHIFT, FORCE,/;"	v	module:MODTWOEND
FOURPIEO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: FOURPIEO /;"	v	module:msevb_common
FPGRP	optim.syminf.f90	/^      CHARACTER(LEN=4) :: FPGRP,/;"	v	module:SYMINF
FPSI	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FPSI(/;"	f
FPSI_D	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FPSI_D(/;"	f
FPSI_DD	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FPSI_DD(/;"	f
FQFLAG	commons.f90	/^LOGICAL :: FQFLAG=/;"	v	module:COMMONS
FQMAX	commons.f90	/^DOUBLE PRECISION :: FQMAX$/;"	v	module:COMMONS
FRACTIONAL	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL,/;"	v	module:KEY
FRAMEEDIFF	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF,/;"	v	module:KEY
FRAUSI	g.frausi.f	/^      SUBROUTINE FRAUSI(/;"	s
FRAUSIDER	g.frausi.f	/^      SUBROUTINE FRAUSIDER(/;"	s
FRAUSIT	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG, &$/;"	v	module:COMMONS
FRAUSIT	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS, FIXDIHEFLAG, &$/;"	v	module:COMMONS
FREEZE	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZEC/;"	v	module:COMMONS
FREEZE	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZEC/;"	v	module:COMMONS
FREEZE	optim.gsdata.f90	/^     LOGICAL :: FREEZE$/;"	k	type:IMGNODE
FREEZE	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV, FREEZE,/;"	v	module:KEY
FREEZEALL	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL,/;"	v	module:COMMONS
FREEZEALL	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL,/;"	v	module:COMMONS
FREEZECORE	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE,/;"	v	module:COMMONS
FREEZECORE	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE,/;"	v	module:COMMONS
FREEZEGROUPT	g.commons.f90	/^      LOGICAL :: FREEZEGROUPT$/;"	v	module:COMMONS
FREEZEGROUPT	g.commons.o.f90	/^      LOGICAL :: FREEZEGROUPT$/;"	v	module:COMMONS
FREEZEGROUPTYPE	g.commons.f90	/^      CHARACTER (LEN=2) :: FREEZEGROUPTYPE$/;"	v	module:COMMONS
FREEZEGROUPTYPE	g.commons.o.f90	/^      CHARACTER (LEN=2) :: FREEZEGROUPTYPE$/;"	v	module:COMMONS
FREEZENODEST	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST,/;"	v	module:KEY
FREEZERES	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES,/;"	v	module:COMMONS
FREEZERES	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES,/;"	v	module:COMMONS
FREEZERES	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC, FREEZERES,/;"	v	module:KEY
FREEZETOL	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER, GCMXSTP, GCSCALE, &$/;"	v	module:KEY
FREQCONVFACTOR	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: FREQCONVFACTOR /;"	k	type:RIGIDBODYPOTENTIAL
FREQCONVFACTOR	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: FREQCONVFACTOR /;"	k	type:RIGIDBODYPOTENTIAL
FRICTIONFAC	pathsample.frictionfac.f90	/^DOUBLE PRECISION FUNCTION FRICTIONFAC(/;"	f
FRINGS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(:,:), FRINGS(/;"	v	module:INTCOMMONS
FROT	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT,/;"	v	module:MODCHARMM
FROZEN	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN /;"	v	module:COMMONS
FROZEN	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN /;"	v	module:COMMONS
FROZEN	optim.key.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN,/;"	v	module:KEY
FROZENAMBER	g.modamber9.f90	/^LOGICAL, ALLOCATABLE,DIMENSION(:) :: FROZENAMBER$/;"	v	module:MODAMBER9
FROZENAMBER	optim.modamber9.f90	/^LOGICAL, ALLOCATABLE,DIMENSION(:) :: FROZENAMBER$/;"	v	module:modamber9
FROZENRES	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZENRES /;"	v	module:COMMONS
FROZENRES	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZENRES /;"	v	module:COMMONS
FROZENRES	optim.key.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN, FROZENRES /;"	v	module:KEY
FRR	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF, FRR(/;"	v
FS	g.FS.f	/^      SUBROUTINE FS /;"	s
FST	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST,/;"	v	module:COMMONS
FST	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST,/;"	v	module:COMMONS
FSTART	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART,/;"	v	module:MODTWOEND
FTD	g.commons.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD,/;"	v	module:COMMONS
FTD	g.commons.o.f90	/^      DOUBLE PRECISION :: FOH, FIH, FTD,/;"	v	module:COMMONS
FTD	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD,/;"	v	module:KEY
FTEST	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST,/;"	v	module:KEY
FTRANS	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS,/;"	v	module:MODCHARMM
FUDGE	g.modconsts_trans_97.f90	/^     &                 ALPHA,VECT(4),EPS(4),EPSs,EPSp,FUDGE$/;"	v	module:consts_trans_97
FUNC	func.f90	/^MODULE FUNC$/;"	m
FUNC	g.func.f90	/^MODULE FUNC$/;"	m
FUNC	gmin.func.f90	/^MODULE FUNC$/;"	m
FVARPHI	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FVARPHI /;"	f
FVARPHI_D	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FVARPHI_D /;"	f
FVARPHI_DD	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FVARPHI_DD /;"	f
FVIBMINCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(:), FVIBMINCOMPLEX(/;"	v	module:DOCKMODULE
FVIBMINLIGAND	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(/;"	v	module:DOCKMODULE
FVIBMINPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(:), FVIBMINCOMPLEX(:), FVIBMINPROTEIN(/;"	v	module:DOCKMODULE
Fembed	g.Ackland_metals.f90	/^        double precision function Fembed(/;"	f
Fembed_d	g.Ackland_metals.f90	/^        double precision function Fembed_d(/;"	f
Fembed_dd	g.Ackland_metals.f90	/^        double precision function Fembed_dd(/;"	f
FibonacciHeapModule	pathsample.GT2FibonacciHeap.f90	/^module FibonacciHeapModule$/;"	m
FinDifGrad	optim.finite_differences.f90	/^function FinDifGrad(/;"	f	module:finite_differences
FinDifHess	optim.finite_differences.f90	/^function FinDifHess(/;"	f	module:finite_differences
FinDifHess_Pot	optim.finite_differences.f90	/^function FinDifHess_Pot(/;"	f	module:finite_differences
FixedEndMoveT	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT,/;"	v	module:COMMONS
FixedEndMoveT	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT,/;"	v	module:COMMONS
FreeMemory	pathsample.GT2FreeMemory.f90	/^     subroutine FreeMemory$/;"	s	module:FreeMemoryModule
FreeMemoryModule	pathsample.GT2FreeMemory.f90	/^module FreeMemoryModule$/;"	m
G	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G,/;"	v
G	optim.double.f	/^     1                 V(3*N), R, G(/;"	v
G	pathsample.GT2data.f90	/^     type(NodeArray),allocatable :: G(/;"	v	module:DataModule
G2	optim.g2special.f	32;"	c	subroutine:G2SPECIAL
G2	optim.greatcirc.f	33;"	c	subroutine:GCLBFGS
G2	optim.keyword.f	95;"	c	subroutine:KEYWORD
G2	optim.mylbfgs.f	69;"	c	subroutine:MYLBFGS
G2	optim.odesd.f	36;"	c	subroutine:ODESD
G2	optim.oldneb.f	313;"	c	subroutine:NEBBFGS
G2SPECIAL	optim.g2special.f	/^      SUBROUTINE G2SPECIAL(/;"	s
G46	commons.f90	/^LOGICAL G46=/;"	v	module:COMMONS
G46	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46,/;"	v	module:COMMONS
G46	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46,/;"	v	module:COMMONS
GALPHA	optim.key.f90	/^     &        OMEGA, GALPHA,/;"	v	module:KEY
GAMESSUK	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK,/;"	v	module:KEY
GAMESSUS	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS,/;"	v	module:KEY
GAMMA	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA,/;"	v	module:COMMONS
GAMMA	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA,/;"	v	module:COMMONS
GAMMA_MSEVB	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: GAMMA_MSEVB /;"	v	module:msevb_common
GATOM	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM,/;"	v	module:COMMONS
GATOM	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM,/;"	v	module:COMMONS
GAUSSEE	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(/;"	v	module:COMMONS
GAUSSEE	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(/;"	v	module:COMMONS
GAUSSENERGYPB	g.vgw.f90	/^SUBROUTINE GAUSSENERGYPB(/;"	s
GAUSSIAN	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI, CONTAINER, DEBUG, &$/;"	v	module:KEY
GAUSSKK	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSKK(/;"	v	module:COMMONS
GAUSSKK	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSKK(/;"	v	module:COMMONS
GAUSST	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST,/;"	v	module:COMMONS
GAUSST	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST,/;"	v	module:COMMONS
GAYBERNE	g.ljcapsidmodule.f90	/^SUBROUTINE GAYBERNE(/;"	s
GAYBERNEDCT	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT,/;"	v	module:COMMONS
GAYBERNEDCT	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT,/;"	v	module:COMMONS
GAYBERNESECDER	g.ljcapsidmodule.f90	/^SUBROUTINE GAYBERNESECDER(/;"	s
GAYBERNET	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,/;"	v	module:COMMONS
GAYBERNET	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,/;"	v	module:COMMONS
GB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA/;"	v
GB	optim.gb.f90	/^      SUBROUTINE GB /;"	s
GBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA,/;"	v
GBANISOTROPYR	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ, &$/;"	v	module:COMMONS
GBANISOTROPYR	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ, &$/;"	v	module:COMMONS
GBANISOTROPYR	optim.key.f90	/^      DOUBLE PRECISION :: GBANISOTROPYR,/;"	v	module:KEY
GBA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I,/;"	v
GBA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J,/;"	v
GBA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J, GBA_K$/;"	v
GBBOX	optim.gbbox.f90	/^      SUBROUTINE GBBOX /;"	s
GBCALAMITIC	g.gbcalamitic.f90	/^      SUBROUTINE GBCALAMITIC /;"	s
GBCHI	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI,/;"	v	module:COMMONS
GBCHI	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI,/;"	v	module:COMMONS
GBCHI	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT, GBCHI,/;"	v	module:KEY
GBCHIPRM	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM,/;"	v	module:COMMONS
GBCHIPRM	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM,/;"	v	module:COMMONS
GBCHIPRM	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM,/;"	v	module:KEY
GBD	optim.gbd.f90	/^      SUBROUTINE GBD /;"	s
GBDDP	g.gbddp.f90	/^      SUBROUTINE GBDDP /;"	s
GBDISCOTIC	g.gbdiscotic.f90	/^      SUBROUTINE GBDISCOTIC /;"	s
GBDPEPS	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS,/;"	v	module:COMMONS
GBDPEPS	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS,/;"	v	module:COMMONS
GBDPFCT	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT,/;"	v	module:COMMONS
GBDPFCT	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT,/;"	v	module:COMMONS
GBDPMU	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU,/;"	v	module:COMMONS
GBDPMU	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU,/;"	v	module:COMMONS
GBDPT	g.commons.f90	/^     &        GBT, GBDT, GBDPT,/;"	v	module:COMMONS
GBDPT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT,/;"	v	module:COMMONS
GBDT	g.commons.f90	/^     &        GBT, GBDT,/;"	v	module:COMMONS
GBDT	g.commons.o.f90	/^     &        GBT, GBDT,/;"	v	module:COMMONS
GBDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT,/;"	v	module:KEY
GBEPSNOT	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT,/;"	v	module:COMMONS
GBEPSNOT	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT, GBEPSNOT,/;"	v	module:COMMONS
GBEPSNOT	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT,/;"	v	module:KEY
GBGTP	g.ljcapsidmodule.f90	/^      SUBROUTINE GBGTP(/;"	s
GBINIT	g.ljcapsidmodule.f90	/^      SUBROUTINE GBINIT(/;"	s
GBKAPPA	g.commons.f90	/^     &                 EPSR, GBKAPPA,/;"	v	module:COMMONS
GBKAPPA	g.commons.o.f90	/^     &                 EPSR, GBKAPPA,/;"	v	module:COMMONS
GBKAPPA	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA, BBRCONV, STOCKZTOL, &$/;"	v	module:KEY
GBKAPPRM	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM,/;"	v	module:COMMONS
GBKAPPRM	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM,/;"	v	module:COMMONS
GBKAPPRM	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM,/;"	v	module:KEY
GBMU	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,/;"	v	module:COMMONS
GBMU	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,/;"	v	module:COMMONS
GBMU	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU,/;"	v	module:KEY
GBNU	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU,/;"	v	module:COMMONS
GBNU	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU,/;"	v	module:COMMONS
GBNU	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU,/;"	v	module:KEY
GBSIGNOT	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
GBSIGNOT	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
GBSIGNOT	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT,/;"	v	module:KEY
GBT	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY, &$/;"	v	module:COMMONS
GBT	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS, CHECKCHIRALITY, &$/;"	v	module:COMMONS
GBT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT,/;"	v	module:KEY
GBWELLDEPTHR	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,/;"	v	module:COMMONS
GBWELLDEPTHR	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,/;"	v	module:COMMONS
GBWELLDEPTHR	optim.key.f90	/^      DOUBLE PRECISION :: GBANISOTROPYR, GBWELLDEPTHR$/;"	v	module:KEY
GCART	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZCART(:), GCART(/;"	k	type:IMGNODE
GCCONV	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE, GCCONV,/;"	v	module:KEY
GCHARMMFAIL	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,/;"	v	module:MODCHARMM
GCIMAGE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE,/;"	v	module:KEY
GCLBFGS	optim.greatcirc.f	/^      SUBROUTINE GCLBFGS(/;"	s
GCMXSTP	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER, GCMXSTP,/;"	v	module:KEY
GCSCALE	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER, GCMXSTP, GCSCALE,/;"	v	module:KEY
GCSEED	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS, GCUPDATE, GCSEED,/;"	v	module:KEY
GCSTEPS	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS,/;"	v	module:KEY
GCUPDATE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS, GCUPDATE,/;"	v	module:KEY
GD	g.mylbfgs.f	50;"	c	subroutine:MYLBFGS
GD	g.potential.f	50;"	c	subroutine:POTENTIAL
GD	mylbfgs.old.f90	50;"	c	subroutine:MYLBFGS
GDIIS	optim.gdiis.f90	/^MODULE GDIIS$/;"	m
GELC	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,GELC,/;"	v	module:MODUNRES
GEM	g.gem.f90	/^      SUBROUTINE GEM /;"	s
GEMRC	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC,/;"	v	module:COMMONS
GEMRC	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC,/;"	v	module:COMMONS
GEMT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT,/;"	v	module:COMMONS
GEMT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT,/;"	v	module:COMMONS
GENERGIES	optim.guesspath.f90	/^   SUBROUTINE GENERGIES(/;"	s	subroutine:GUESSPATH
GENERGIES	optim.unguesspath.f90	/^   SUBROUTINE GENERGIES(/;"	s	subroutine:UNGUESSPATH
GENIMPPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION MIDIMPPARAMS(4,6),GENIMPPARAMS(/;"	v	module:MODAMBER
GENTORSPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION GENTORSPARAMS(/;"	v	module:MODAMBER
GEOM	optim.mindist.f	40;"	c	subroutine:MINDIST
GEOM	optim.mindist.f	714;"	c	subroutine:MMYLBFGS
GEOM	pathsample.mindist.f	40;"	c	subroutine:MINDIST
GEOM	pathsample.mindist.f	714;"	c	subroutine:MMYLBFGS
GEOMDIFFTOL	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL, GEOMDIFFTOL,/;"	v	module:KEY
GEOPT	optim.geopt.f	/^      SUBROUTINE GEOPT(/;"	s
GETA	func.f90	/^      SUBROUTINE GETA(/;"	s
GETA	g.input.f	/^      SUBROUTINE GETA(/;"	s
GETA	optim.input.f	/^      SUBROUTINE GETA(/;"	s
GETA	pathsample.input.f	/^      SUBROUTINE GETA(/;"	s
GETALLMIN	pathsample.getallmin.f	/^      SUBROUTINE GETALLMIN(/;"	s
GETALLPATHS	pathsample.getallpaths.f	/^      SUBROUTINE GETALLPATHS$/;"	s
GETATOMN	optim.chdummy.f	/^      INTEGER FUNCTION GETATOMN(/;"	f
GETBACKBONE	optim.intcoords.f90	/^    SUBROUTINE GETBACKBONE$/;"	s	module:INTCUTILS
GETBARRIER	pathsample.getupair.f90	/^SUBROUTINE GETBARRIER(/;"	s
GETCHRMINTPARAM	optim.chdummy.f	/^      SUBROUTINE GETCHRMINTPARAM(/;"	s
GETDIHE	optim.chdummy.f	/^      SUBROUTINE GETDIHE(/;"	s
GETDIHEDIST	optim.chdummy.f	/^      SUBROUTINE GETDIHEDIST(/;"	s
GETDIHONLY	optim.ambnatintern_extras.f90	/^      SUBROUTINE GETDIHONLY(/;"	s
GETDISPLACEMENT	g.basinsampling.f90	/^      REAL(8) FUNCTION GETDISPLACEMENT(/;"	f	subroutine:BASINSAMPLING
GETDPAIR	pathsample.getdpair.f90	/^SUBROUTINE GETDPAIR(/;"	s
GETENERG	optim.greatcirc.f	/^      SUBROUTINE GETENERG(/;"	s
GETETERM	optim.chdummy.f	/^      SUBROUTINE GETETERM(/;"	s
GETF	func.f90	/^      SUBROUTINE GETF(/;"	s
GETF	g.input.f	/^      SUBROUTINE GETF(/;"	s
GETF	optim.input.f	/^      SUBROUTINE GETF(/;"	s
GETF	pathsample.input.f	/^      SUBROUTINE GETF(/;"	s
GETFREEBARRIER	pathsample.getfreebarrier.f90	/^SUBROUTINE GETFREEBARRIER(/;"	s
GETFREEPAIR	pathsample.getfreepair.f90	/^SUBROUTINE GETFREEPAIR(/;"	s
GETI	func.f90	/^      SUBROUTINE GETI(/;"	s
GETI	g.input.f	/^      SUBROUTINE GETI(/;"	s
GETI	optim.input.f	/^      SUBROUTINE GETI(/;"	s
GETI	pathsample.input.f	/^      SUBROUTINE GETI(/;"	s
GETICCOORDS	g.amber9dummy.f90	/^subroutine GETICCOORDS(/;"	s
GETICCOORDS	optim.amber9dummy.f90	/^subroutine GETICCOORDS(/;"	s
GETIMGDERVS	optim.greatcirc.f	/^      SUBROUTINE GETIMGDERVS(/;"	s
GETIMGPOT	optim.growstring.f90	/^  SUBROUTINE GETIMGPOT(/;"	s	module:GROWSTRINGUTILS
GETIPHI	optim.chdummy.f	/^      SUBROUTINE GETIPHI(/;"	s
GETKD	optim.chdummy.f	/^      SUBROUTINE GETKD(/;"	s
GETLDH	optim.ambnatintern_extras.f90	/^      SUBROUTINE GETLDH(/;"	s
GETMAXAIM	optim.chdummy.f	/^      SUBROUTINE GETMAXAIM$/;"	s
GETNATINTERN	optim.chdummy.f	/^      SUBROUTINE GETNATINTERN(/;"	s
GETNATINTERNFILE	optim.chdummy.f	/^      SUBROUTINE GETNATINTERNFILE$/;"	s
GETNCONN	ps.main.f90	/^      SUBROUTINE GETNCONN$/;"	s
GETNEWPATH	pathsample.getnewpath.f	/^      SUBROUTINE GETNEWPATH(/;"	s
GETNINT	optim.chdummy.f	/^      SUBROUTINE GETNINT(/;"	s
GETNNZ	optim.chdummy.f	/^      SUBROUTINE GETNNZ(/;"	s
GETNODES	pathsample.nodes.f90	/^     SUBROUTINE GETNODES(/;"	s	module:NODES
GETORBITS	g.getorbits.f90	/^SUBROUTINE GETORBITS(/;"	s
GETPAIR	pathsample.getpair.f90	/^SUBROUTINE GETPAIR(/;"	s
GETPERM	optim.connect.f	/^      SUBROUTINE GETPERM(/;"	s
GETPPAIR	pathsample.getppair.f90	/^SUBROUTINE GETPPAIR(/;"	s
GETPPSANGLE	optim.chdummy.f	/^      SUBROUTINE GETPPSANGLE(/;"	s
GETPTC	g.tn.f	/^      SUBROUTINE GETPTC(/;"	s
GETRESID	optim.ambnatintern_extras.f90	/^      SUBROUTINE GETRESID(/;"	s
GETRESNUM	optim.chdummy.f	/^      SUBROUTINE GETRESNUM(/;"	s
GETRND	func.f90	/^SUBROUTINE GETRND(/;"	s
GETRPAIR	pathsample.getrpair.f90	/^SUBROUTINE GETRPAIR(/;"	s
GETS	func.f90	/^      SUBROUTINE GETS(/;"	s
GETS	g.input.f	/^      SUBROUTINE GETS(/;"	s
GETS	optim.input.f	/^      SUBROUTINE GETS(/;"	s
GETS	pathsample.input.f	/^      SUBROUTINE GETS(/;"	s
GETSEEDATM	g.amber9dummy.f90	/^subroutine  GETSEEDATM(/;"	s
GETSEEDATM	optim.amber9dummy.f90	/^subroutine  GETSEEDATM(/;"	s
GETSPAIR	pathsample.getspair.f90	/^SUBROUTINE GETSPAIR(/;"	s
GETSPLVAL	optim.cubsplstring.f90	/^  SUBROUTINE GETSPLVAL(/;"	s	module:CUBSPLSTRING
GETSTUFF	optim.unrestransform.f	/^      SUBROUTINE GETSTUFF(/;"	s
GETTANGENTS	optim.growstring.f90	/^  SUBROUTINE GETTANGENTS$/;"	s	module:GROWSTRINGUTILS
GETUPAIR	pathsample.getupair.f90	/^SUBROUTINE GETUPAIR(/;"	s
GETUSEPAIR	pathsample.getusepair.f90	/^SUBROUTINE GETUSEPAIR(/;"	s
GET_ATOMS	g.molinfo.f90	/^        TYPE(ATOM) FUNCTION GET_ATOMS(/;"	f	module:MOLINFO
GET_RND	gmin.func.f90	/^SUBROUTINE GET_RND(/;"	s
GET_TWISTABLE	optim.amber9dummy.f90	/^subroutine GET_TWISTABLE(/;"	s
GFIELD	g.gauss.f	/^      SUBROUTINE GFIELD(/;"	s
GFRACTION	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION,/;"	v	module:KEY
GHPBC	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,/;"	v	module:MODUNRES
GHPBX	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,/;"	v	module:MODUNRES
GKSMALL	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(:), GKSMALL(/;"	v	module:COMMONS
GKSMALL	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: GAUSSEE(:), GKSMALL(/;"	v	module:COMMONS
GLOBALB	optim.cubsplstring.f90	/^  INTEGER :: GLOBALB /;"	v	module:CUBSPLSTRING
GLOC	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,/;"	v	module:MODUNRES
GLUDAT	g.Pbglue.f	118;"	c	block data:PB
GLUDAT	g.Pbglue.f	246;"	c	subroutine:uu
GLUDAT	g.Pbglue.f	270;"	c
GLYCART	optim.intcommons.f90	/^  LOGICAL :: GLYCART /;"	v	module:INTCOMMONS
GLYDIH	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: GLYDIH(/;"	v	module:INTCOMMONS
GLYINTPERM	optim.chiralhyd.f90	/^      SUBROUTINE GLYINTPERM(/;"	s
GMAX	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX,/;"	v	module:COMMONS
GMAX	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX,/;"	v	module:COMMONS
GMAX	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX,/;"	v	module:KEY
GMETRY	optim.gmetry.f	/^      SUBROUTINE GMETRY(/;"	s
GMIN	gmin.main.f90	/^      PROGRAM GMIN$/;"	p
GMODES	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES,/;"	v	module:COMMONS
GMODES	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES,/;"	v	module:COMMONS
GNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB,/;"	v
GOODSTRUCTURE1	g.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS, GOODSTRUCTURE1,/;"	v	module:MODAMBER9
GOODSTRUCTURE1	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1,/;"	v	module:modamber9
GOODSTRUCTURE2	g.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, CHECKCISTRANSALWAYS, GOODSTRUCTURE1, GOODSTRUCTURE2,/;"	v	module:MODAMBER9
GOODSTRUCTURE2	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2,/;"	v	module:modamber9
GOT	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT,/;"	v	module:KEY
GRAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G, GRAD$/;"	v
GRAD	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,/;"	v
GRAD	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(:), GRAD(/;"	k	type:IMGNODE
GRAD4T	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T,/;"	v	module:KEY
GRADC	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,/;"	v	module:MODUNRES
GRADCORR	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,GRADCORR,/;"	v	module:MODUNRES
GRADSQ	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV, FREEZE, GRADSQ,/;"	v	module:KEY
GRADT	bln.vars.inc.f90	/^        LOGICAL GRADT,/;"	v
GRADX	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,/;"	v	module:MODUNRES
GRADXORR	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,GRADCORR,GRADXORR,/;"	v	module:MODUNRES
GRADX_SCP	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,GELC,GRADX_SCP,/;"	v	module:MODUNRES
GRAD_MIN	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(/;"	v
GRAD_PLUS	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(N,3), GRAD_PLUS(/;"	v
GRAPH	pathsample.kshortestpaths.f90	/^MODULE GRAPH$/;"	m
GRAPHTRANSFORMATIONMODULE	pathsample.GT2.f90	/^MODULE GRAPHTRANSFORMATIONMODULE$/;"	m
GRAPHTRANSFORMATIONMODULE	pathsample.GT2.save.f90	/^MODULE GRAPHTRANSFORMATIONMODULE$/;"	m
GREATCIRCLET	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT, MORPHT, PERMDIST, &$/;"	v	module:KEY
GROUND	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND,/;"	v	module:COMMONS
GROUND	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND,/;"	v	module:COMMONS
GROUPCENTRE	g.commons.f90	/^      INTEGER :: GROUPCENTRE$/;"	v	module:COMMONS
GROUPCENTRE	g.commons.o.f90	/^      INTEGER :: GROUPCENTRE$/;"	v	module:COMMONS
GROUPRADIUS	g.commons.f90	/^      DOUBLE PRECISION :: GROUPRADIUS$/;"	v	module:COMMONS
GROUPRADIUS	g.commons.o.f90	/^      DOUBLE PRECISION :: GROUPRADIUS$/;"	v	module:COMMONS
GROUPROTATION	g.grouprotation.f90	/^      SUBROUTINE GROUPROTATION(/;"	s
GROUPROTATION	optim.grouprotation.f90	/^      SUBROUTINE GROUPROTATION(/;"	s
GROUPROTFREQ	g.modamber9.f90	/^      INTEGER :: GROUPROTFREQ,/;"	v	module:MODAMBER9
GROUPROTFREQ	optim.modamber9.f90	/^      INTEGER :: GROUPROTFREQ,/;"	v	module:modamber9
GROUPROTT	g.modamber9.f90	/^      LOGICAL :: GROUPROTT,/;"	v	module:MODAMBER9
GROUPROTT	optim.modamber9.f90	/^      LOGICAL :: GROUPROTT,/;"	v	module:modamber9
GROWSTRING	optim.growstring.f90	/^  SUBROUTINE GROWSTRING(/;"	s	module:GROWSTRINGUTILS
GROWSTRINGT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT,/;"	v	module:KEY
GROWSTRINGUTILS	optim.growstring.f90	/^MODULE GROWSTRINGUTILS$/;"	m
GRSTWFU	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: GRSTWFU$/;"	v	module:msevb_common
GSAVEIT	g.saveit.f	/^      SUBROUTINE GSAVEIT(/;"	s
GSCONV	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSGROWTOL, GSCONV,/;"	k	type:IMGNODE
GSDATA	optim.gsdata.f90	/^MODULE GSDATA$/;"	m
GSDGUESS	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSIMGDENSITY, GSITERDENSITY, GSDGUESS$/;"	k	type:IMGNODE
GSEED	g.seed.f	/^      SUBROUTINE GSEED$/;"	s
GSGROWTOL	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSGROWTOL,/;"	k	type:IMGNODE
GSIMGDENSITY	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSIMGDENSITY,/;"	k	type:IMGNODE
GSITERDENSITY	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSIMGDENSITY, GSITERDENSITY,/;"	k	type:IMGNODE
GSMAXTOTITD	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSMXSTP, GSMAXTOTITD$/;"	k	type:IMGNODE
GSMXSTP	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSMXSTP,/;"	k	type:IMGNODE
GSORT	func.f90	/^      SUBROUTINE GSORT(/;"	s
GSORT	gmin.func.f90	/^      SUBROUTINE GSORT(/;"	s
GSORT2	g.sort2.f	/^      SUBROUTINE GSORT2(/;"	s
GSTEPS	optim.modguess.f90	/^      INTEGER :: GSTEPS,/;"	v	module:MODGUESS
GSUPDATE	optim.gsdata.f90	/^  INTEGER :: GSUPDATE,/;"	k	type:IMGNODE
GT	pathsample.GT.f	/^      SUBROUTINE GT$/;"	s
GTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB, GTA,/;"	v
GTA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I,/;"	v
GTA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J,/;"	v
GTA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K,/;"	v
GTA_L	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K, GTA_L$/;"	v
GTEST	bln.vars.inc.f90	/^        LOGICAL GTEST,/;"	v
GTEST	optim.double.f	/^      LOGICAL GTEST,/;"	v
GTHRESHOLD	optim.modguess.f90	/^      DOUBLE PRECISION :: GTHRESHOLD,/;"	v	module:MODGUESS
GTIMS	g.tn.f	/^      SUBROUTINE GTIMS(/;"	s
GTOL	lbfgs.f	/^      DOUBLE PRECISION GTOL,/;"	v	block data:LB2
GUESSPATH	optim.guesspath.f90	/^SUBROUTINE GUESSPATH(/;"	s
GUESSPATHT	optim.modguess.f90	/^      LOGICAL :: GUESSPATHT=/;"	v	module:MODGUESS
GUESSTHRESH	optim.modcharmm.f90	/^      DOUBLE PRECISION  :: GUESSTHRESH,/;"	v	module:modcharmm
GUESSTST	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,/;"	v	module:modcharmm
GUIDECUT	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT,/;"	v	module:COMMONS
GUIDECUT	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT,/;"	v	module:COMMONS
GUPTA	g.Gupta.f	/^      SUBROUTINE GUPTA /;"	s
GUPTA	optim.Gupta.f	/^      SUBROUTINE GUPTA(/;"	s
GUPTAT	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT,/;"	v	module:COMMONS
GUPTAT	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT,/;"	v	module:COMMONS
GUPTATYPE	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN, KADJUSTFRQ, GUPTATYPE,/;"	v	module:KEY
GVDWC	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,/;"	v	module:MODUNRES
GVDWC_SCP	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,GELC,GRADX_SCP, &$/;"	v	module:MODUNRES
GVDWX	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,GRADCORR,GRADXORR,GVDWX$/;"	v	module:MODUNRES
GetDisplacement	g.tetherfunc.f90	/^      real(8) function GetDisplacement(/;"	f	module:tetherfunc
Go	optim.GoOptim.f	/^      SUBROUTINE Go(/;"	s
GoANGL	optim.GoOptim.f	/^      SUBROUTINE GoANGL(/;"	s
GoBonds	optim.GoOptim.f	/^      subroutine GoBonds(/;"	s
Gocontacts	optim.GoOptim.f	/^      subroutine Gocontacts(/;"	s
Godihedral	optim.GoOptim.f	/^      SUBROUTINE Godihedral(/;"	s
Goinit	optim.GoOptim.f	/^      subroutine Goinit(/;"	s
Gononcontacts	optim.GoOptim.f	/^      subroutine Gononcontacts(/;"	s
Gsort	g.sort.f	/^      SUBROUTINE Gsort(/;"	s
H	optim.double.f	/^     1                 V(3*N), R, G(2,2), H,/;"	v
H2O	optim.h2o.f	/^      SUBROUTINE H2O(/;"	s
H2OINTEREPSILON	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OINTEREPSILON /;"	v	module:msevb_common
H2OINTERSIGMA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OINTERSIGMA /;"	v	module:msevb_common
H2OKB	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OKB /;"	v	module:msevb_common
H2OKTHETA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OKTHETA /;"	v	module:msevb_common
H2OMODES	optim.TIPmodes.f	/^      SUBROUTINE H2OMODES(/;"	s
H2OROHEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OROHEQ /;"	v	module:msevb_common
HAM	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HAM,/;"	v	module:msevb_common
HAMCCA	g.dftb.f	/^      SUBROUTINE HAMCCA(/;"	s
HAMCCA	optim.dftb.f	/^      SUBROUTINE HAMCCA(/;"	s
HAMCCB	g.dftb.f	/^      SUBROUTINE HAMCCB(/;"	s
HAMCCB	optim.dftb.f	/^      SUBROUTINE HAMCCB(/;"	s
HAMIL	g.frausi.f	/^      SUBROUTINE HAMIL(/;"	s
HARM_AMH	g.commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH,/;"	v	module:COMMONS
HARM_AMH	g.commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH,/;"	v	module:COMMONS
HBINS	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,&$/;"	v	module:COMMONS
HBINS	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,&$/;"	v	module:COMMONS
HDIST	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(/;"	v	module:COMMONS
HDIST	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(/;"	v	module:COMMONS
HEIGHT	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: RHO, RADIUS, HEIGHT$/;"	k	type:CAPSOMER
HEIGHT	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: RHO, RADIUS, HEIGHT$/;"	k	type:CAPSOMER
HESS	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: HESS$/;"	v
HESS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS$/;"	v	module:COMMONS
HESS	g.commons.f90	/^      DOUBLE PRECISION :: HESS(/;"	v	module:COMMONS
HESS	g.commons.o.f90	/^      DOUBLE PRECISION :: HESS(/;"	v	module:COMMONS
HESS	g.modhess.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS /;"	v	module:MODHESS
HESS	optim.modhess.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS /;"	v	module:MODHESS
HESSGRAD	optim.gsdata.f90	/^  LOGICAL :: PTEST, JOINED, HESSGRAD,/;"	k	type:IMGNODE
HESSIAN	optim.PachecoC60.f	/^      subroutine HESSIAN(/;"	s
HESSOUT	optim.hessout.f	/^      SUBROUTINE HESSOUT(/;"	s
HESST	bln.vars.inc.f90	/^        LOGICAL GRADT, HESST$/;"	v
HIGHESTIMAGE	optim.modneb.f90	/^      LOGICAL :: NEBT, NEWNEBT, NEWCONNECTT, HIGHESTIMAGE=/;"	v	module:MODNEB
HINDEX	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS, NFREEZE, HINDEX,/;"	v	module:KEY
HISTFAC	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC,/;"	v	module:COMMONS
HISTFAC	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC,/;"	v	module:COMMONS
HISTFACMUL	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE, &$/;"	v	module:COMMONS
HISTFACMUL	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE, &$/;"	v	module:COMMONS
HISTMAX	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX,/;"	v	module:COMMONS
HISTMAX	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX,/;"	v	module:COMMONS
HISTMIN	g.commons.f90	/^     &                 TRENORM, HISTMIN,/;"	v	module:COMMONS
HISTMIN	g.commons.o.f90	/^     &                 TRENORM, HISTMIN,/;"	v	module:COMMONS
HISTSMOOTH	g.commons.f90	/^     &        TETHER, HISTSMOOTH,/;"	v	module:COMMONS
HISTSMOOTH	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH,/;"	v	module:COMMONS
HISTVALS	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS,/;"	v	module:COMMONS
HISTVALS	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS,/;"	v	module:COMMONS
HIT	g.commons.f90	/^     &        SORTT, HIT,/;"	v	module:COMMONS
HIT	g.commons.o.f90	/^     &        SORTT, HIT,/;"	v	module:COMMONS
HMCEIG	optim.key.f90	/^     &        BHSFRAC, HMCEIG,/;"	v	module:KEY
HMEVMAX	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX,/;"	v	module:KEY
HMMETHOD	optim.key.f90	/^      CHARACTER(LEN=2) :: HMMETHOD$/;"	v	module:KEY
HMMXSTP	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP,/;"	v	module:KEY
HMNBFGSMAX1	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS, HMNBFGSMAX1,/;"	v	module:KEY
HMNBFGSMAX2	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS, HMNBFGSMAX1, HMNBFGSMAX2,/;"	v	module:KEY
HMNEVL	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL,/;"	v	module:KEY
HMNEVS	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS,/;"	v	module:KEY
HMNSTEPS	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS,/;"	v	module:KEY
HPERCENT	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT,/;"	v	module:COMMONS
HPERCENT	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT,/;"	v	module:COMMONS
HPTGRP	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP,/;"	v	module:COMMONS
HPTGRP	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP,/;"	v	module:COMMONS
HS	optim.bfgsts.f	1902;"	c	subroutine:HSMOVE
HS	optim.connect.f	43;"	c	subroutine:CONNECT
HS	optim.keyword.f	106;"	c	subroutine:KEYWORD
HSMOVE	g.hsmove.f	/^      SUBROUTINE HSMOVE(/;"	s
HSMOVE	optim.bfgsts.f	/^      SUBROUTINE HSMOVE(/;"	s
HUPD	optim.potential.f	/^      SUBROUTINE HUPD(/;"	s
HUPDATE	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE,/;"	v	module:KEY
HVXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD,/;"	v
HWEIGHT	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(:), HWEIGHT(/;"	v	module:COMMONS
HWEIGHT	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: HDIST(:), HWEIGHT(/;"	v	module:COMMONS
HYBRIDMIN	optim.hybridmin.f	/^      SUBROUTINE HYBRIDMIN(/;"	s
HYBRIDMINT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL, BLNT, HYBRIDMINT,/;"	v	module:KEY
Hfunc	g.Ackland_metals.f90	/^	double precision function Hfunc(/;"	f
Hfunc	optim.Ackland_metals.f90	/^	double precision function Hfunc(/;"	f
Hfunc0	g.Ackland_metals.f90	/^	double precision function Hfunc0(/;"	f
Hfunc0	optim.Ackland_metals.f90	/^	double precision function Hfunc0(/;"	f
Horig	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: Horig /;"	v	module:distance
Hwindows	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows,/;"	v	module:COMMONS
Hwindows	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows,/;"	v	module:COMMONS
I	bln.vars.inc.f90	/^        IN/;"	v
I	g.ljcapsidmodule.f90	/^ IN/;"	v	module:LJCAPSIDMODULE
I	g.pymodule.f90	/^ IN/;"	v	module:PYMODULE
I	g.vgw.f90	/^  IN/;"	v
I	optim.ljcapsidmodule.f90	/^ IN/;"	v	module:LJCAPSIDMODULE
I	optim.pymodule.f90	/^ IN/;"	v	module:PYMODULE
I1MACH	optim.dqag.f	/^      INTEGER FUNCTION I1MACH /;"	f
I1MACH	pathsample.dsort.f	/^      INTEGER FUNCTION I1MACH /;"	f
I1_AMH	g.commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH, I1_AMH$/;"	v	module:COMMONS
I1_AMH	g.commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,HARM_AMH, I1_AMH$/;"	v	module:COMMONS
I3	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION ::I3(/;"	v	module:LJCAPSIDMODULE
I3	g.pymodule.f90	/^ DOUBLE PRECISION :: I3(/;"	v	module:PYMODULE
I3	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION ::I3(/;"	v	module:LJCAPSIDMODULE
I3	optim.pymodule.f90	/^ DOUBLE PRECISION ::I3(/;"	v	module:PYMODULE
IA	commons.f90	/^INTEGER IA,/;"	v	module:COMMONS
IALPH	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,/;"	v	module:MODUNRES
IATEL_E	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,/;"	v	module:MODUNRES
IATEL_S	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,/;"	v	module:MODUNRES
IATNUM	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  IATNUM /;"	v	module:COMMONS
IATNUM	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  IATNUM /;"	v	module:COMMONS
IATNUM	optim.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NR, IATNUM /;"	v	module:COMMONS
IATSCP_E	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,IATSCP_E,/;"	v	module:MODUNRES
IATSCP_S	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,/;"	v	module:MODUNRES
IATSC_E	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,ISCPEND,IATSC_S, &$/;"	v	module:MODUNRES
IATSC_S	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,ISCPEND,IATSC_S,/;"	v	module:MODUNRES
IBIB	optim.modamber9.f90	/^integer, allocatable:: IBIB(/;"	v	module:modamber9
ICCHECKPP	optim.chdummy.f	/^      SUBROUTINE ICCHECKPP(/;"	s
ICG	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,NVARU,NFL,ICG$/;"	v	module:MODUNRES
ICINTERPOL	optim.chdummy.f	/^      SUBROUTINE ICINTERPOL(/;"	s
ICINTERPT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,CHECKOMEGAT, ICINTERPT,/;"	v	module:modcharmm
ICOUNT	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX, ICOUNT$/;"	v
ICTYPECHECKAM	optim.amber9dummy.f90	/^subroutine ICTYPECHECKAM(/;"	s
IC_COORDS	g.modamber9.f90	/^integer, dimension(:,:),allocatable:: IC_COORDS$/;"	v	module:MODAMBER9
IC_COORDS	optim.modamber9.f90	/^integer, dimension(:,:),allocatable:: IC_COORDS$/;"	v	module:modamber9
IC_IMPROP	g.modamber9.f90	/^character(len=3), dimension(:), allocatable:: IC_IMPROP$/;"	v	module:MODAMBER9
IC_IMPROP	optim.modamber9.f90	/^character(len=3), dimension(:), allocatable:: IC_IMPROP$/;"	v	module:modamber9
IDAMAX	g.dlsode.f	/^      INTEGER FUNCTION IDAMAX /;"	f
IDELTA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,IVN,IDELTA,/;"	v	module:MODAMBER
IDIVF	g.modamb.f90	/^      INTEGER PN,IDIVF,/;"	v	module:MODAMBER
IDIVF	optim.modamber.f90	/^      INTEGER PN,IDIVF,/;"	v	module:MODAMBER
IEEECK	g.dgetrf.f	/^      INTEGER          FUNCTION IEEECK(/;"	f
IELEND	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,/;"	v	module:MODUNRES
IELSTART	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,/;"	v	module:MODUNRES
IEND	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,/;"	v	module:MODUNRES
IGNOREBIN	g.commons.f90	/^      LOGICAL, ALLOCATABLE ::  IGNOREBIN(/;"	v	module:COMMONS
IGNOREBIN	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE ::  IGNOREBIN(/;"	v	module:COMMONS
IH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,/;"	v
IHT	g.commons.f90	/^      LOGICAL :: FIELDT, OHT, IHT,/;"	v	module:COMMONS
IHT	g.commons.o.f90	/^      LOGICAL :: FIELDT, OHT, IHT,/;"	v	module:COMMONS
IHT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT,/;"	v	module:KEY
IK	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,/;"	v
ILAENV	g.dgetrf.f	/^      INTEGER          FUNCTION ILAENV(/;"	f
IMGD	optim.gsdata.f90	/^  DOUBLE PRECISION :: IMGD,/;"	k	type:IMGNODE
IMGNODE	optim.gsdata.f90	/^  TYPE IMGNODE$/;"	t	module:GSDATA
IMINCUT	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,/;"	v	module:modcharmm
IMP	optim.modamber.f90	/^      INTEGER ATOMS,ANG,IMP,/;"	v	module:MODAMBER
IMPDIH	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(:,:), FRINGS(:,:), LINDIH(:,:), &$/;"	v	module:INTCOMMONS
IMPENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,IMPENERGY,/;"	v	module:MODAMBER
IMSEPMAX	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS, IMSEPMIN, IMSEPMAX,/;"	v	module:KEY
IMSEPMIN	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS, IMSEPMIN,/;"	v	module:KEY
IN	optim.TIPmodes.f	88;"	c	subroutine:H2OMODES
IN	optim.h2o.f	314;"	c	subroutine:LC1
IN	optim.h2o.f	608;"	c	subroutine:DRVTV
IN	optim.h2o.f	88;"	c	subroutine:H2O
IN1	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,IVN,IDELTA,IN1$/;"	v	module:MODAMBER
INBLK	func.f90	/^      BLOCK DATA INBLK$/;"	b
INBLK	g.input.f	/^      BLOCK DATA INBLK$/;"	b
INBLK	optim.input.f	/^      BLOCK DATA INBLK$/;"	b
INBLK	pathsample.input.f	/^      BLOCK DATA INBLK$/;"	b
IND	optim.gsdata.f90	/^     INTEGER :: IND /;"	k	type:IMGNODE
INDEXT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL, BLNT, HYBRIDMINT, &$/;"	v	module:KEY
INERTIA	g.ptgrp.f	/^      SUBROUTINE INERTIA(/;"	s
INERTIA	optim.inertia.f	/^      SUBROUTINE INERTIA(/;"	s
INERTIA	pathsample.inertia.f	/^      SUBROUTINE INERTIA(/;"	s
INERTIA2	optim.inertia.f	/^      SUBROUTINE INERTIA2(/;"	s
INFILE	g.commons.f90	/^      CHARACTER(LEN=80) :: INFILE=/;"	v	module:COMMONS
INFILE	g.commons.o.f90	/^      CHARACTER(LEN=80) :: INFILE=/;"	v	module:COMMONS
INITIALISEINTERACTIONMAP	pathsample.rigidbody.f90	/^  SUBROUTINE INITIALISEINTERACTIONMAP$/;"	s	module:RIGIDBODY
INITIALISEINTERACTIONMAP	pathsample.rigidbodymod.f90	/^  SUBROUTINE INITIALISEINTERACTIONMAP$/;"	s	module:RIGIDBODYMOD
INITIALISELJCAPSIDMODEL	g.ljcapsidmodule.f90	/^SUBROUTINE INITIALISELJCAPSIDMODEL$/;"	s
INITIALISEPYGPERIODIC	g.ljcapsidmodule.f90	/^SUBROUTINE INITIALISEPYGPERIODIC$/;"	s
INITIALISEPYGPERIODIC	optim.ljcapsidmodule.f90	/^SUBROUTINE INITIALISEPYGPERIODIC$/;"	s
INITIALISERIGIDBODY	pathsample.rigidbody.f90	/^  SUBROUTINE INITIALISERIGIDBODY /;"	s	module:RIGIDBODY
INITIALISERIGIDBODY	pathsample.rigidbodymod.f90	/^  SUBROUTINE INITIALISERIGIDBODY /;"	s	module:RIGIDBODYMOD
INITIALIZE_VGW	g.vgw.f90	/^SUBROUTINE INITIALIZE_VGW(/;"	s
INITIALIZE_VGWSP	g.vgw.f90	/^SUBROUTINE INITIALIZE_VGWSP(/;"	s
INITIATE_RANDOM	optim.specialfuncts.f90	/^  SUBROUTINE INITIATE_RANDOM(/;"	s	module:SPFUNCTS
INITP3	g.tn.f	/^      SUBROUTINE INITP3(/;"	s
INITPC	g.tn.f	/^      SUBROUTINE INITPC(/;"	s
INITROT	g.modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART, INITROT,/;"	v	module:MODCHARMM
INPUT	func.f90	/^      SUBROUTINE INPUT(/;"	s
INPUT	g.input.f	/^      SUBROUTINE INPUT(/;"	s
INPUT	optim.input.f	/^      SUBROUTINE INPUT(/;"	s
INPUT	pathsample.input.f	/^      SUBROUTINE INPUT(/;"	s
INPUTI	func.f90	/^      SUBROUTINE INPUTI(/;"	s
INPUTI	g.input.f	/^      SUBROUTINE INPUTI(/;"	s
INPUTI	optim.input.f	/^      SUBROUTINE INPUTI(/;"	s
INPUTI	pathsample.input.f	/^      SUBROUTINE INPUTI(/;"	s
INPUTMODULE	pathsample.GT2input.f90	/^MODULE INPUTMODULE$/;"	m
INQF	func.f90	/^SUBROUTINE INQF(/;"	s	module:FUNC
INR	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR,/;"	v	module:COMMONS
INT1	optim.escp.f	165;"	c	subroutine:DSCP
INT1	optim.escp.f	34;"	c	subroutine:OESCP
INTBEIG	optim.intbeig.f	/^      SUBROUTINE INTBEIG(/;"	s
INTBFGSTS	optim.intbfgsts.f	/^      SUBROUTINE INTBFGSTS(/;"	s
INTCLEANUP	optim.intcoords.f90	/^   SUBROUTINE INTCLEANUP$/;"	s	module:INTCUTILS
INTCOMMONS	optim.intcommons.f90	/^MODULE INTCOMMONS$/;"	m
INTCONFRAC	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC,/;"	v	module:KEY
INTCONMAX	optim.key.f90	/^      INTEGER :: INTCONMAX=/;"	v	module:KEY
INTCONSEP	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN, SDCHARGE, BOWMANPES, &$/;"	v	module:KEY
INTCONSTEPS	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS,/;"	v	module:KEY
INTCONSTRAINREPCUT	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF, INTCONSTRAINTREP, INTCONSTRAINREPCUT,/;"	v	module:KEY
INTCONSTRAINTDEL	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL,/;"	v	module:KEY
INTCONSTRAINTREP	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF, INTCONSTRAINTREP,/;"	v	module:KEY
INTCONSTRAINTT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT, ADDREPT, INTCONSTRAINTT,/;"	v	module:KEY
INTCONSTRAINTTOL	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL,/;"	v	module:KEY
INTCUTILS	optim.intcoords.f90	/^MODULE INTCUTILS$/;"	m
INTDGUESS	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT, NEBDGUESS, INTDGUESS,/;"	v	module:KEY
INTDISTANCE	optim.intcoords.f90	/^      SUBROUTINE INTDISTANCE(/;"	s	module:INTCUTILS
INTDISTANCET	optim.intcommons.f90	/^  LOGICAL :: INTDISTANCET /;"	v	module:INTCOMMONS
INTEDUMPFILE	g.commons.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME, INTEDUMPFILE$/;"	v	module:COMMONS
INTEDUMPFILE	g.commons.o.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME, INTEDUMPFILE$/;"	v	module:COMMONS
INTEFF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	module:COMMONS
INTEFF	g.qmodule.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	module:QMODULE
INTEFF	gmin.main.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	program:GMIN
INTEFINALIO	g.amber9dummy.f90	/^SUBROUTINE INTEFINALIO(/;"	s
INTEPSILON	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS, TIMELIMIT, TSTART, &$/;"	v	module:KEY
INTEQMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:COMMONS
INTEQMIN	g.qmodule.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:QMODULE
INTEQMIN	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	program:GMIN
INTEQMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:COMMONS
INTEQMINP	g.qmodule.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:QMODULE
INTEQMINP	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	program:GMIN
INTERACT	optim.modunres.f90	73;"	c	module:MODUNRES
INTERATOMICR	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: INTERATOMICR$/;"	v	module:msevb_common
INTERESTORE	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE,/;"	v	module:COMMONS
INTERESTORE	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET, CSMT, A9INTET, INTERESTORE,/;"	v	module:COMMONS
INTERPBACKTCUT	optim.intcommons.f90	/^  DOUBLE PRECISION :: MINBACKTCUT = 1.0D-4, INTERPBACKTCUT /;"	v	module:INTCOMMONS
INTERPCHOICE	optim.intcommons.f90	/^  LOGICAL :: INTERPCHOICE /;"	v	module:INTCOMMONS
INTERPCUBSPL	optim.cubsplstring.f90	/^  SUBROUTINE INTERPCUBSPL$/;"	s	module:CUBSPLSTRING
INTERPOLATE	optim.growstring.f90	/^  SUBROUTINE INTERPOLATE$/;"	s	module:GROWSTRINGUTILS
INTERPSIMPLE	optim.intcommons.f90	/^  LOGICAL :: BBCART = .FALSE., INTINTERPT = .FALSE., INTERPSIMPLE /;"	v	module:INTCOMMONS
INTERV	g.fedor.f	/^      SUBROUTINE INTERV(/;"	s
INTER_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: INTER_COULOMB$/;"	v	module:msevb_common
INTGRAD	optim.unresoptim.f	/^      SUBROUTINE INTGRAD(/;"	s
INTGRADLJ	optim.intgradlj.f90	/^SUBROUTINE INTGRADLJ(/;"	s
INTGRADLJ	pathsample.make_conpot.f90	/^SUBROUTINE INTGRADLJ(/;"	s
INTHUP	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP,/;"	v	module:KEY
INTH_ALIGN	g.dummyoptim.f90	/^SUBROUTINE INTH_ALIGN(/;"	s
INTH_ALIGN	optim.intcoords.f90	/^     SUBROUTINE INTH_ALIGN(/;"	s
INTIMAGE	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE,/;"	v	module:KEY
INTINTERPOLATE	optim.intcoords.f90	/^    SUBROUTINE INTINTERPOLATE(/;"	s	module:INTCUTILS
INTINTERPT	optim.intcommons.f90	/^  LOGICAL :: BBCART = .FALSE., INTINTERPT /;"	v	module:INTCOMMONS
INTLBFGS	optim.intlbfgs.f90	/^SUBROUTINE INTLBFGS(/;"	s
INTLBFGSLJ	optim.intlbfgslj.f90	/^SUBROUTINE INTLBFGSLJ(/;"	s
INTLJDEL	optim.key.f90	/^     &        INTLJTOL, INTLJDEL,/;"	v	module:KEY
INTLJEPS	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS,/;"	v	module:KEY
INTLJSTEPS	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS, INTSTEPS1, INTLJSTEPS,/;"	v	module:KEY
INTLJT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS, INTLJT,/;"	v	module:KEY
INTLJTOL	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP, CPCONSTRAINREPCUT, CPCONFRAC, &$/;"	v	module:KEY
INTMINONLY	optim.congrad.f90	/^SUBROUTINE INTMINONLY(/;"	s
INTMINPERM	optim.intcoords.f90	/^  SUBROUTINE INTMINPERM(/;"	s	module:INTCUTILS
INTMINPERMT	g.modamber9.f90	/^logical :: INTMINPERMT=/;"	v	module:MODAMBER9
INTMINPERMT	optim.modamber9.f90	/^logical :: INTMINPERMT /;"	v	module:modamber9
INTMINPERM_CHIRAL	optim.intcoords.f90	/^      SUBROUTINE INTMINPERM_CHIRAL(/;"	s	module:INTCUTILS
INTMINT	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT,/;"	v	module:COMMONS
INTMINT	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT,/;"	v	module:COMMONS
INTMINT	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,ENDNUMHESS,PERMDIHET,INTMINT$/;"	v	module:modcharmm
INTMUPDATE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE,/;"	v	module:KEY
INTNEWT	optim.intcommons.f90	/^  LOGICAL :: NATINT = .FALSE., INTNEWT /;"	v	module:INTCOMMONS
INTPARFILE	optim.intcommons.f90	/^  CHARACTER*100 :: INTPARFILE /;"	v	module:INTCOMMONS
INTPTEST	optim.gsdata.f90	/^  LOGICAL :: PTEST, JOINED, HESSGRAD, INTPTEST$/;"	k	type:IMGNODE
INTRELSTEPS	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS,/;"	v	module:KEY
INTREPSEP	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP,/;"	v	module:KEY
INTRMSTOL	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE, INTRMSTOL,/;"	v	module:KEY
INTS	optim.meccano.f90	40;"	c	subroutine:MECCANO
INTS	optim.meccano.f90	622;"	c	subroutine:MAKEGRADMEC
INTS	optim.oldneb.f	1090;"	c	subroutine:MAKEIMAGE
INTS	optim.oldneb.f	318;"	c	subroutine:NEBBFGS
INTS	optim.oldneb.f	39;"	c	subroutine:OLDNEB
INTS	optim.oldneb.f	728;"	c	subroutine:MAKEGRADH
INTS	optim.oldneb.f	836;"	c	subroutine:MAKEGRADR
INTS	optim.unmeccano.f90	40;"	c	subroutine:UNMECCANO
INTS	optim.unmeccano.f90	631;"	c	subroutine:UNMAKEGRADMEC
INTSECDET	optim.unrestransform.f	/^      SUBROUTINE INTSECDET(/;"	s
INTSECDIAG	optim.intsecdiag.f	/^      SUBROUTINE INTSECDIAG(/;"	s
INTSETUP	optim.intcoords.f90	/^     SUBROUTINE INTSETUP$/;"	s	module:INTCUTILS
INTSTEP	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: INTSTEP /;"	v	module:MODUNRES
INTSTEPS1	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS, INTSTEPS1,/;"	v	module:KEY
INTTST	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS, INTLJT, INTTST,/;"	v	module:KEY
INTXMYLBFGS	optim.intxmylbfgs.f	/^      SUBROUTINE INTXMYLBFGS(/;"	s
INVDET	g.vgw.f90	/^SUBROUTINE INVDET(/;"	s
INVERSION_THROUGH_ORIGIN	g.transforms.f90	/^    FUNCTION INVERSION_THROUGH_ORIGIN(/;"	f	module:TRANSFORMS
INVERSION_THROUGH_POINT	g.transforms.f90	/^    FUNCTION INVERSION_THROUGH_POINT(/;"	f	module:TRANSFORMS
INVKAP	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP,/;"	v	module:COMMONS
INVKAP	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP,/;"	v	module:COMMONS
INVMTRX	optim.rbperm.f90	/^      SUBROUTINE INVMTRX(/;"	s
INVMTRX	pathsample.rbperm.f90	/^      SUBROUTINE INVMTRX(/;"	s
IO1	g.io1.f	/^      SUBROUTINE IO1$/;"	s
ION	g.Natb.f	28;"	c	subroutine:NATB
ION	g.Natb.f	77;"	c	subroutine:entots
ION	optim.Natb.f	28;"	c	subroutine:NATB
ION	optim.Natb.f	78;"	c	subroutine:entots
IONS	optim.ions.f	/^      SUBROUTINE IONS(/;"	s
IOS	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS,/;"	v	program:OPTIM4
IPHASE	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,IPHASE$/;"	v	module:MODAMBER
IPHASE	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,IPHASE$/;"	v	module:MODAMBER
IPHI	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,/;"	v	module:MODAMBER
IPK	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,/;"	v	module:MODAMBER
IPK	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,/;"	v	module:MODAMBER
IPN	g.modamb.f90	/^      INTEGER PN,IDIVF,PN2,PN3,IPN$/;"	v	module:MODAMBER
IPN	optim.modamber.f90	/^      INTEGER PN,IDIVF,PN2,PN3,IPN$/;"	v	module:MODAMBER
IPRNT	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT,/;"	v	module:COMMONS
IPS	g.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,/;"	v	module:MODAMBER9
IPS	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,/;"	v	module:modamber9
IR	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR,/;"	v	program:OPTIM4
IRANDOMSELECT	optim.specialfuncts.f90	/^    SUBROUTINE IRANDOMSELECT(/;"	s	module:SPFUNCTS
IRES	g.amhdummy.f	/^      INTEGER IRES(/;"	v	module:AMHGLOBALS
IS	optim.beig.f	41;"	c	subroutine:BEIG
IS	optim.bfgsts.f	1090;"	c	subroutine:ITEIG
IS	optim.bfgsts.f	1592;"	c	subroutine:CHECKIND
IS	optim.bfgsts.f	1775;"	c	subroutine:CHECKIND2
IS	optim.intbeig.f	42;"	c	subroutine:INTBEIG
ISCP	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,IATSCP_E,ISPP,ISCP$/;"	v	module:MODUNRES
ISCPEND	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,ISCPEND,/;"	v	module:MODUNRES
ISCPSTART	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,/;"	v	module:MODUNRES
ISEED	g.modcharmm.f90	/^      INTEGER :: ISEED,/;"	v	module:MODCHARMM
ISGEND	g.modamber9.f90	/^      integer ISGSTA,ISGEND,/;"	v	module:MODAMBER9
ISGEND	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,/;"	v	module:modamber9
ISGSTA	g.modamber9.f90	/^      integer ISGSTA,/;"	v	module:MODAMBER9
ISGSTA	optim.modamber9.f90	/^      integer ISGSTA,/;"	v	module:modamber9
ISNEWTS	optim.connect.f	/^      SUBROUTINE ISNEWTS(/;"	s
ISPP	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,IATSCP_E,ISPP,/;"	v	module:MODUNRES
ISSIDECHAIN	optim.modcharmm.f90	/^      LOGICAL, DIMENSION(:), ALLOCATABLE :: ISSIDECHAIN$/;"	v	module:modcharmm
ISTART	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,/;"	v	module:MODUNRES
ISTATUS	optim.commons.f90	/^      INTEGER :: ISTATUS$/;"	v	module:COMMONS
ISTCRT	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT,/;"	v	module:COMMONS
ISTEP	commons.f90	/^INTEGER :: ISTEP$/;"	v	module:COMMONS
ISTEP	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP,/;"	v	module:COMMONS
ISTEP	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP,/;"	v	module:COMMONS
IS_DIGIT	stringmod.f90	/^FUNCTION IS_DIGIT(/;"	f	module:strings
IS_LETTER	stringmod.f90	/^FUNCTION IS_LETTER(/;"	f	module:strings
IS_SIDECHAIN	g.modamber9.f90	/^logical, dimension(:), allocatable :: IS_SIDECHAIN$/;"	v	module:MODAMBER9
IS_SIDECHAIN	optim.modamber9.f90	/^logical, dimension(:), allocatable :: IS_SIDECHAIN$/;"	v	module:modamber9
ITEIG	optim.bfgsts.f	/^      SUBROUTINE ITEIG(/;"	s
ITEIGN	optim.bfgsts.f	/^      SUBROUTINE ITEIGN(/;"	s
ITEL	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,EXPON,EXPON2, &$/;"	v	module:MODUNRES
ITEM	optim.main.f90	/^      INTEGER ITEM,/;"	v	program:OPTIM4
ITERATIONS	mc.vars.inc.f90	/^      INTEGER ITERATIONS,/;"	v
ITERD	optim.gsdata.f90	/^  DOUBLE PRECISION :: IMGD, ITERD /;"	k	type:IMGNODE
ITOA	g.ptgrp.f	/^       CHARACTER*(*) FUNCTION ITOA(/;"	f
ITOA	optim.utils.f	/^       CHARACTER*(*) FUNCTION ITOA(/;"	f
ITXMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB,/;"	v	module:modcharmm
ITYMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB, ITYMINB,/;"	v	module:modcharmm
ITYPE	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,/;"	v	module:MODUNRES
ITYPRO	optim.modunres.f90	/^     &           ITEL,ITYPRO,/;"	v	module:MODUNRES
ITZMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB, ITYMINB, ITZMINB,/;"	v	module:modcharmm
IUMACH	g.dlsode.f	/^      INTEGER FUNCTION IUMACH(/;"	f
IVAR	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,/;"	v	module:MODUNRES
IVEC	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC,/;"	v	module:COMMONS
IVEC2	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2,/;"	v	module:COMMONS
IVN	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,IVN,/;"	v	module:MODAMBER
IXSAV	g.dlsode.f	/^      INTEGER FUNCTION IXSAV /;"	f
I_RES	optim.main.f90	/^      INTEGER :: NRES,I_RES,/;"	v	program:OPTIM4
InputFile	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile="GTkeywords",InputFile=/;"	v	module:DataModule
Insrt	pathsample.dock.f90	/^  Subroutine Insrt(/;"	s	module:DOCKMODULE
InsrtSwap	pathsample.dock.f90	/^  Subroutine InsrtSwap(/;"	s	module:DOCKMODULE
IntegerList	pathsample.GT2data.f90	/^     type IntegerList$/;"	t	module:DataModule
J	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J,/;"	v
J	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J,/;"	v	module:LJCAPSIDMODULE
J	g.pymodule.f90	/^ INTEGER          :: I, J,/;"	v	module:PYMODULE
J	g.vgw.f90	/^  INTEGER :: N, I, J$/;"	v
J	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J,/;"	v	module:LJCAPSIDMODULE
J	optim.pymodule.f90	/^ INTEGER          :: I, J,/;"	v	module:PYMODULE
J1	bln.vars.inc.f90	/^        INTEGER J1,/;"	v
J1	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:LJCAPSIDMODULE
J1	g.pymodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:PYMODULE
J1	optim.double.f	/^      INTEGER N, J1,/;"	v
J1	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:LJCAPSIDMODULE
J1	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR, LAST, J1$/;"	v	program:OPTIM4
J1	optim.pymodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:PYMODULE
J1	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1,/;"	v	module:NODES
J2	bln.vars.inc.f90	/^        INTEGER J1,J2$/;"	v
J2	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:LJCAPSIDMODULE
J2	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:PYMODULE
J2	optim.double.f	/^      INTEGER N, J1, J2$/;"	v
J2	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:LJCAPSIDMODULE
J2	optim.main.f90	/^      INTEGER J2,/;"	v	program:OPTIM4
J2	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:PYMODULE
J3	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:LJCAPSIDMODULE
J3	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:PYMODULE
J3	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:LJCAPSIDMODULE
J3	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:PYMODULE
J4	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:LJCAPSIDMODULE
J4	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:PYMODULE
J4	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:LJCAPSIDMODULE
J4	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:PYMODULE
J4SAVE	optim.dqag.f	/^      FUNCTION J4SAVE /;"	f
J4SAVE	pathsample.dsort.f	/^      FUNCTION J4SAVE /;"	f
J5	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:LJCAPSIDMODULE
J5	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:PYMODULE
J5	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:LJCAPSIDMODULE
J5	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:PYMODULE
J6	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:LJCAPSIDMODULE
J6	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:PYMODULE
J6	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:LJCAPSIDMODULE
J6	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:PYMODULE
JA	commons.f90	/^INTEGER IA, JA$/;"	v	module:COMMONS
JAC	g.vgw.f90	/^SUBROUTINE JAC$/;"	s
JACCPREV	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,/;"	v
JBJB	optim.modamber9.f90	/^integer, allocatable:: IBIB(:),JBJB(/;"	v	module:modamber9
JDUMP	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP,/;"	v	module:COMMONS
JDUMP	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP,/;"	v	module:COMMONS
JH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,JH,/;"	v
JK	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,/;"	v
JM2	optim.JM.f	/^      SUBROUTINE JM2(/;"	s
JM2C	g.JM.f	/^      SUBROUTINE JM2C /;"	s
JM2C	optim.JM.f	/^      SUBROUTINE JM2C /;"	s
JM2CC	optim.JM.f	/^      SUBROUTINE JM2CC(/;"	s
JM2P	optim.JM.f	/^      SUBROUTINE JM2P /;"	s
JM3	optim.JM.f	/^      SUBROUTINE JM3(/;"	s
JM3C	g.JM.f	/^      SUBROUTINE JM3C /;"	s
JM3C	optim.JM.f	/^      SUBROUTINE JM3C /;"	s
JM3CC	optim.JM.f	/^      SUBROUTINE JM3CC(/;"	s
JM3P	optim.JM.f	/^      SUBROUTINE JM3P /;"	s
JMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX,/;"	v
JMAX	tr.f90	/^      INTEGER JMAX$/;"	v
JMAX2	tr.f90	/^      INTEGER JMAX2$/;"	v
JME	optim.JM.f	/^      SUBROUTINE JME(/;"	s
JMEC	g.JM.f	/^      SUBROUTINE JMEC(/;"	s
JMEC	optim.JM.f	/^      SUBROUTINE JMEC(/;"	s
JMECC	optim.JM.f	/^      SUBROUTINE JMECC(/;"	s
JMEP	optim.JM.f	/^      SUBROUTINE JMEP(/;"	s
JMT	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT,/;"	v	module:COMMONS
JMT	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT,/;"	v	module:COMMONS
JOINED	optim.gsdata.f90	/^  LOGICAL :: PTEST, JOINED,/;"	k	type:IMGNODE
JOVOSAP	g.minperm.f	/^      SUBROUTINE JOVOSAP(/;"	s
JOVOSAP	optim.minperm.f	/^      SUBROUTINE JOVOSAP(/;"	s
JOVOSAP	pathsample.minperm.f	/^      SUBROUTINE JOVOSAP(/;"	s
JPN	pathsample.nodes.f90	/^     INTEGER :: JPN,/;"	v	module:NODES
JUMPINT	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT,/;"	v	module:COMMONS
JUMPINT	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT,/;"	v	module:COMMONS
JUMPM	g.mc.F	/^      SUBROUTINE JUMPM(/;"	s
JUMPMOVE	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE,/;"	v	module:COMMONS
JUMPMOVE	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE,/;"	v	module:COMMONS
JUMPTO	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO,/;"	v	module:COMMONS
JUMPTO	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO,/;"	v	module:COMMONS
JZ	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ,/;"	v	module:KEY
K	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K,/;"	v
K1	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:LJCAPSIDMODULE
K1	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:PYMODULE
K1	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:LJCAPSIDMODULE
K1	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:PYMODULE
K2	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:LJCAPSIDMODULE
K2	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:PYMODULE
K2	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:LJCAPSIDMODULE
K2	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:PYMODULE
KADJUSTFRAC	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL, KADJUSTFRAC,/;"	v	module:KEY
KADJUSTFRQ	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN, KADJUSTFRQ,/;"	v	module:KEY
KADJUSTTOL	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL, KADJUSTFRAC, KADJUSTTOL,/;"	v	module:KEY
KALPHA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: KALPHA /;"	v	module:msevb_common
KAPPA	g.modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,Vpppi,KAPPA,/;"	v	module:consts
KAPPA	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,KAPPA,/;"	v	module:consts_trans_97
KAPPANEW	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA, REPULSE, BONDAGE, KAPPANEW /;"	v	module:distance
KD	optim.intcommons.f90	/^  INTEGER :: KD,/;"	v	module:INTCOMMONS
KEEPINDEX	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX,/;"	v	module:KEY
KEEPSYM	g.takestep.f	/^      SUBROUTINE KEEPSYM(/;"	s
KEGEN	g.gauss.f	/^      SUBROUTINE KEGEN$/;"	s
KEXP	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: KEXP /;"	v	module:msevb_common
KEY	optim.key.f90	/^MODULE KEY$/;"	m
KEY	pathsample.key.f90	/^MODULE KEY /;"	m
KEYINTPRINT	optim.intcoords.f90	/^   SUBROUTINE KEYINTPRINT$/;"	s	module:INTCUTILS
KEYWORD	g.keyword.f	/^      SUBROUTINE KEYWORD$/;"	s
KEYWORD	keyword.f90	/^      SUBROUTINE KEYWORD(/;"	s
KEYWORD	optim.keyword.f	/^      SUBROUTINE KEYWORD(/;"	s
KEYWORD	pathsample.keyword.f90	/^      SUBROUTINE KEYWORD$/;"	s
KH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,JH,KH$/;"	v
KI	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,/;"	v
KJ	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,/;"	v
KKJ	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ,/;"	v	module:COMMONS
KKJ	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20, ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ,/;"	v	module:COMMONS
KKJ	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ,/;"	v	module:KEY
KMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX,/;"	v
KMC	pathsample.KMC.f	/^      SUBROUTINE KMC$/;"	s
KMCA2B	pathsample.KMC.a2b.f	/^      SUBROUTINE KMCA2B$/;"	s
KMCCOMMIT	pathsample.KMCcommit.f	/^      SUBROUTINE KMCCOMMIT$/;"	s
KMINUSSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETSSAVE(:), KPLUSSAVE(:), KMINUSSAVE(/;"	v	module:SAVESTATE
KNOWN	optim.OPTIM.F	87;"	c	subroutine:OPTIM
KNOWN	optim.bfgsts.f	92;"	c	subroutine:BFGSTS
KNOWN	optim.bhinterp.f90	47;"	c	subroutine:BHINTERP
KNOWN	optim.bisect.f90	43;"	c	subroutine:BISECT_OPT
KNOWN	optim.connect.f	1785;"	c	subroutine:TSSEARCH
KNOWN	optim.efol.f90	50;"	c	subroutine:EFOL
KNOWN	optim.func.f90	66;"	c	subroutine:OPTIM
KNOWN	optim.geopt.f	1206;"	c	subroutine:MAKENUMHESS
KNOWN	optim.geopt.f	1268;"	c	subroutine:MAKENUMHESSRP
KNOWN	optim.geopt.f	54;"	c	subroutine:GEOPT
KNOWN	optim.greatcirc.f	38;"	c	subroutine:GCLBFGS
KNOWN	optim.hybridmin.f	56;"	c	subroutine:HYBRIDMIN
KNOWN	optim.intbfgsts.f	66;"	c	subroutine:INTBFGSTS
KNOWN	optim.intlbfgs.f90	41;"	c	subroutine:INTLBFGS
KNOWN	optim.intlbfgslj.f90	35;"	c	subroutine:INTLBFGSLJ
KNOWN	optim.meccano.f90	265;"	c	subroutine:MECBFGS
KNOWN	optim.morph.f	45;"	c	subroutine:MORPH
KNOWN	optim.mylbfgs.f	74;"	c	subroutine:MYLBFGS
KNOWN	optim.odesd.f	38;"	c	subroutine:ODESD
KNOWN	optim.path.f	90;"	c	subroutine:PATH
KNOWN	optim.potential.f	78;"	c	subroutine:POTENTIAL
KNOWN	optim.unmeccano.f90	231;"	c	subroutine:UNMECBFGS
KPLUSSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETSSAVE(:), KPLUSSAVE(/;"	v	module:SAVESTATE
KR	optim.modamber.f90	/^      DOUBLE PRECISION KR(/;"	v	module:MODAMBER
KSHORTESTPATHS	pathsample.kshortestpaths.f90	/^SUBROUTINE KSHORTESTPATHS(/;"	s
KSHORT_PRINTING	pathsample.kshortestpaths.f90	/^SUBROUTINE KSHORT_PRINTING(/;"	s
KT	optim.modamber.f90	/^      DOUBLE PRECISION KT(/;"	v	module:MODAMBER
KTWN	g.modamber9.f90	/^      double precision :: KTWN$/;"	v	module:MODAMBER9
KTWN	optim.modamber9.f90	/^      double precision :: KTWN$/;"	v	module:modamber9
KTWNT	g.modamber9.f90	/^      logical :: KTWNT$/;"	v	module:MODAMBER9
KTWNT	optim.modamber9.f90	/^      logical :: KTWNT$/;"	v	module:modamber9
KeywordsFile	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile=/;"	v	module:DataModule
LAMBDA	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA,/;"	v	module:distance
LAMBDA	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,/;"	v	module:MODAMBER
LANCZOST	optim.key.f90	/^     &        INDEXT, LANCZOST,/;"	v	module:KEY
LANV	optim.modtwoend.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: LANV /;"	v	module:MODTWOEND
LARGE_FORCE	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: LARGE_FORCE /;"	v	module:msevb_common
LAST	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST, LAST,/;"	k	type:IMGNODE
LAST	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR, LAST,/;"	v	program:OPTIM4
LATMIN	optim.latmin.f	/^      SUBROUTINE LATMIN(/;"	s
LB1	lbfgs.f	/^      SUBROUTINE LB1(/;"	s
LB2	g.LB2.f	/^      SUBROUTINE LB2(/;"	s
LB2	lbfgs.f	/^      BLOCK DATA LB2$/;"	b
LB2T	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T,/;"	v	module:COMMONS
LB2T	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T,/;"	v	module:COMMONS
LB3	g.io1.f	35;"	c	subroutine:IO1
LB3	lbfgs.f	187;"	c	subroutine:LBFGS
LB3	lbfgs.f	449;"	c	subroutine:LB1
LB3	lbfgs.f	516;"	c	block data:LB2
LB3	lbfgs.f	632;"	c	subroutine:MCSRCH
LB3	optim.changep.f	37;"	c	subroutine:CHANGEP
LBFGS	lbfgs.f	/^      SUBROUTINE LBFGS(/;"	s
LBFGST	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST,/;"	v	module:COMMONS
LBFGST	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST,/;"	v	module:COMMONS
LC1	optim.h2o.f	/^      SUBROUTINE LC1(/;"	s
LCE	g.mylapack.f	/^      LOGICAL FUNCTION LCE(/;"	f
LCE	optim.mylapack.f	/^      LOGICAL FUNCTION LCE(/;"	f
LCOUNT	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1, N1, N2, LCOUNT$/;"	v	module:NODES
LDE	g.mylapack.f	/^      LOGICAL FUNCTION LDE(/;"	f
LDE	optim.mylapack.f	/^      LOGICAL FUNCTION LDE(/;"	f
LEAPDIHE	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE,/;"	v	module:COMMONS
LEAPDIHE	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE,/;"	v	module:COMMONS
LEFTFRONT	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST, LAST, LEFTFRONT,/;"	k	type:IMGNODE
LEGZO	optim.specialfuncts.f90	/^    SUBROUTINE LEGZO(/;"	s	module:SPFUNCTS
LEN_DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LEN_DR$/;"	v
LEU_SWAP	optim.intcoords.f90	/^      SUBROUTINE LEU_SWAP(/;"	s	module:INTCUTILS
LF	optim.gsdata.f90	/^     LOGICAL :: LF,/;"	k	type:IMGNODE
LFH	commons.f90	/^INTEGER :: LFH=/;"	v	module:COMMONS
LFN	commons.f90	/^CHARACTER(LEN=100) LFN$/;"	v	module:COMMONS
LHISTVALS	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS, LHISTVALS /;"	v	module:COMMONS
LHISTVALS	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: HISTVALS, LHISTVALS /;"	v	module:COMMONS
LIGMOVET	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,/;"	v	module:COMMONS
LIGMOVET	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,/;"	v	module:COMMONS
LINDER	g.tn.f	/^      SUBROUTINE LINDER(/;"	s
LINDH2PERMG	optim.ambnatintern_extras.f90	/^      SUBROUTINE LINDH2PERMG(/;"	s
LINDIH	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(:,:), FRINGS(:,:), LINDIH(/;"	v	module:INTCOMMONS
LINE	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE,/;"	v	program:OPTIM4
LINEMIN	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN,/;"	v	module:KEY
LINMIN	g.linmin.f	/^      SUBROUTINE LINMIN(/;"	s
LINROD	g.linrod.f90	/^      SUBROUTINE LINROD /;"	s
LINRODT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT,/;"	v	module:COMMONS
LINRODT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT,/;"	v	module:COMMONS
LJ	g.lj.f	/^      SUBROUTINE LJ(/;"	s
LJA1	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA1=/;"	v	module:VGW
LJA2	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA1=35.14249661727566D0, LJA2=/;"	v	module:VGW
LJA3	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA3=/;"	v	module:VGW
LJA4	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA3=13.25329843520143D0, LJA4=/;"	v	module:VGW
LJA5	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA5=/;"	v	module:VGW
LJA6	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJA5=1.671802581756990D0, LJA6=/;"	v	module:VGW
LJATT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP, LJATT$/;"	v
LJATT_BLN	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(/;"	v	module:COMMONS
LJATT_BLN	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(/;"	v	module:COMMONS
LJATT_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(/;"	v	module:KEY
LJC1	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC1=/;"	v	module:VGW
LJC2	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC1=31279960.65933084D0, LJC2=/;"	v	module:VGW
LJC3	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC3=/;"	v	module:VGW
LJC4	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC3=91092.34069670191D0, LJC4=/;"	v	module:VGW
LJC5	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC5=/;"	v	module:VGW
LJC6	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: LJC5=-8.46844309983970D0, LJC6=/;"	v	module:VGW
LJCAPSIDMODEL	g.ljcapsidmodule.f90	/^SUBROUTINE LJCAPSIDMODEL /;"	s
LJCAPSIDMODULE	g.ljcapsidmodule.f90	/^MODULE LJCAPSIDMODULE$/;"	m
LJCAPSIDMODULE	optim.ljcapsidmodule.f90	/^MODULE LJCAPSIDMODULE$/;"	m
LJCAPSIDT	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT,/;"	v	module:COMMONS
LJCAPSIDT	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT,/;"	v	module:COMMONS
LJCOUL	g.ljcoulomb.f	/^      SUBROUTINE LJCOUL(/;"	s
LJCOULT	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT,/;"	v	module:COMMONS
LJCOULT	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT,/;"	v	module:COMMONS
LJCUT	g.lj.f	/^      SUBROUTINE LJCUT(/;"	s
LJDIFF	g.lj.f	/^      SUBROUTINE LJDIFF(/;"	s
LJDIFF	optim.ljdiff.f	/^      SUBROUTINE LJDIFF(/;"	s
LJEPSILON	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON,/;"	v	module:COMMONS
LJEPSILON	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON,/;"	v	module:COMMONS
LJG	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(/;"	v	module:VGW
LJG	g.vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON, LJG(/;"	v	module:VGWSP
LJG	optim.ljdiff.f	/^      SUBROUTINE LJG(/;"	s
LJG2	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(/;"	v	module:VGW
LJG2	g.vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON, LJG(NGAUSS), LJK(NGAUSS), LJG2(/;"	v	module:VGWSP
LJK	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(/;"	v	module:VGW
LJK	g.vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA, EPSILON, LJG(NGAUSS), LJK(/;"	v	module:VGWSP
LJMFT	g.commons.f90	/^     &        OTPT, LJMFT,/;"	v	module:COMMONS
LJMFT	g.commons.o.f90	/^     &        OTPT, LJMFT,/;"	v	module:COMMONS
LJMS	optim.ljms.f	/^      SUBROUTINE LJMS /;"	s
LJMSG	optim.ljms.f	/^      SUBROUTINE LJMSG(/;"	s
LJMSS	optim.ljms.f	/^      SUBROUTINE LJMSS(/;"	s
LJPBIN	g.ljpbin.f	/^      SUBROUTINE LJPBIN(/;"	s
LJPBIN	optim.ljpbin.f	/^      SUBROUTINE LJPBIN(/;"	s
LJPBING	g.ljpbin.f	/^      SUBROUTINE LJPBING(/;"	s
LJPBING	optim.ljpbin.f	/^      SUBROUTINE LJPBING(/;"	s
LJPBINS	g.ljpbin.f	/^      SUBROUTINE LJPBINS(/;"	s
LJPBINS	optim.ljpbin.f	/^      SUBROUTINE LJPBINS(/;"	s
LJPDIFF	optim.ljpdiff.f	/^      SUBROUTINE LJPDIFF(/;"	s
LJPG	optim.ljpdiff.f	/^      SUBROUTINE LJPG(/;"	s
LJPKOB	optim.ljpkob.f	/^      SUBROUTINE LJPKOB(/;"	s
LJPKOBG	optim.ljpkob.f	/^      SUBROUTINE LJPKOBG(/;"	s
LJPKOBS	optim.ljpkob.f	/^      SUBROUTINE LJPKOBS(/;"	s
LJPS	optim.ljpdiff.f	/^      SUBROUTINE LJPS(/;"	s
LJPSHIFT	g.ljpshift.f	/^      SUBROUTINE LJPSHIFT(/;"	s
LJPSHIFT	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFT(/;"	s
LJPSHIFTBIN	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTBIN(/;"	s
LJPSHIFTBIN2	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTBIN2(/;"	s
LJPSHIFTBINC	g.BLJcluster.f	/^      SUBROUTINE LJPSHIFTBINC(/;"	s
LJPSHIFTBINC	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTBINC(/;"	s
LJPSHIFTG	g.ljpshift.f	/^      SUBROUTINE LJPSHIFTG(/;"	s
LJPSHIFTG	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTG(/;"	s
LJPSHIFTGBIN	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTGBIN(/;"	s
LJPSHIFTGBIN2	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTGBIN2(/;"	s
LJPSHIFTGBINC	g.BLJcluster.f	/^      SUBROUTINE LJPSHIFTGBINC(/;"	s
LJPSHIFTGBINC	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTGBINC(/;"	s
LJPSHIFTS	g.ljpshift.f	/^      SUBROUTINE LJPSHIFTS(/;"	s
LJPSHIFTS	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTS(/;"	s
LJPSHIFTSBIN	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTSBIN(/;"	s
LJPSHIFTSBIN2	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTSBIN2(/;"	s
LJPSHIFTSBINC	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTSBINC(/;"	s
LJPSLATMIN	optim.ljpshift.f	/^      SUBROUTINE LJPSLATMIN(/;"	s
LJR	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: LJR$/;"	v	module:msevb_common
LJREP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,/;"	v
LJREP_BLN	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(/;"	v	module:COMMONS
LJREP_BLN	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: LJREP_BLN(/;"	v	module:COMMONS
LJREP_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(/;"	v	module:KEY
LJS	g.lj.f	/^      SUBROUTINE LJS(/;"	s
LJS	optim.ljdiff.f	/^      SUBROUTINE LJS(/;"	s
LJSIGMA	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA,/;"	v	module:COMMONS
LJSIGMA	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA,/;"	v	module:COMMONS
LJSITE	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE,/;"	v	module:COMMONS
LJSITE	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE,/;"	v	module:COMMONS
LJSITE	optim.key.f90	/^      LOGICAL          :: LJSITE,/;"	v	module:KEY
LJSITEATTR	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR,/;"	v	module:COMMONS
LJSITEATTR	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT, LJSITE, BLJSITE, LJSITEATTR,/;"	v	module:COMMONS
LJSITEATTR	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,/;"	v	module:KEY
LJSITECOORDS	g.commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(/;"	v	module:COMMONS
LJSITECOORDS	g.commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(/;"	v	module:COMMONS
LJSITECOORDS	optim.key.f90	/^     &                     PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(/;"	v	module:KEY
LJSITECOORDST	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES, &$/;"	v	module:COMMONS
LJSITECOORDST	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST, LIGMOVET,DUMPSTRUCTURES, &$/;"	v	module:COMMONS
LJSITECOORDST	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,ELLIPSOIDT,LJSITECOORDST,/;"	v	module:KEY
LJ_INTER	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: LJ_INTER$/;"	v	module:msevb_common
LMQN	g.tn.f	/^      SUBROUTINE LMQN /;"	s
LNBLNK	g.ptgrp.f	/^       INTEGER FUNCTION LNBLNK /;"	f
LNBLNK	optim.utils.f	/^       INTEGER FUNCTION LNBLNK /;"	f
LNDET	g.vgw.f90	/^SUBROUTINE LNDET(/;"	s
LNP	g.vgw.f90	/^SUBROUTINE LNP(/;"	s
LNPS	g.vgw.f90	/^SUBROUTINE LNPS(/;"	s
LOC	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC,/;"	v	program:OPTIM4
LOCALPERMDIST	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT, ADDREPT, INTCONSTRAINTT, &$/;"	v	module:KEY
LOCALSAMPLET	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET,/;"	v	module:COMMONS
LOCALSAMPLET	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT, LOCALSAMPLET,/;"	v	module:COMMONS
LOCALSTEEREDMINT	g.modamber9.f90	/^LOGICAL :: STEEREDMINT, LOCALSTEEREDMINT$/;"	v	module:MODAMBER9
LOCALSTEEREDMINT	optim.modamber9.f90	/^LOGICAL STEEREDMINT, LOCALSTEEREDMINT$/;"	v	module:modamber9
LOCASE	func.f90	/^      ENTRY LOCASE(/;"	e	subroutine:UPPERCASE
LOCASE	g.input.f	/^      ENTRY LOCASE(/;"	e	subroutine:MYUPCASE
LOCASE	optim.input.f	/^      ENTRY LOCASE(/;"	e	subroutine:UPPERCASE
LOCASE	pathsample.input.f	/^      ENTRY LOCASE(/;"	e	subroutine:UPCASE
LOCATIONASAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: LOCATIONASAVE(/;"	v	module:SAVESTATE
LOCATIONBSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: LOCATIONASAVE(:), LOCATIONBSAVE(/;"	v	module:SAVESTATE
LOOPCENTERS	optim.ambnatintern_extras.f90	/^      SUBROUTINE LOOPCENTERS(/;"	s
LOWESTFRQT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST, STOCKSPIN, LOWESTFRQT,/;"	v	module:KEY
LP	lbfgs.f	/^      INTEGER LP,/;"	v	block data:LB2
LPCOMPLEX	pathsample.dock.f90	/^                              & LPLIGAND(:),LPCOMPLEX(/;"	v	module:DOCKMODULE
LPDGEOMDIFFTOL	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,        &$/;"	v	module:KEY
LPLIGAND	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(:), FVIBMINCOMPLEX(:), FVIBMINPROTEIN(:), &$/;"	v	module:DOCKMODULE
LPPROTEIN	pathsample.dock.f90	/^                              & LPLIGAND(:),LPCOMPLEX(:),LPPROTEIN(/;"	v	module:DOCKMODULE
LPRSQ	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ,/;"	v	module:COMMONS
LPRSQ	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ,/;"	v	module:COMMONS
LSAME	g.dgetri.f	/^      LOGICAL          FUNCTION LSAME(/;"	f
LSE	g.mylapack.f	/^      LOGICAL FUNCTION LSE(/;"	f
LSE	optim.mylapack.f	/^      LOGICAL FUNCTION LSE(/;"	f
LSOUT	g.tn.f	/^      SUBROUTINE LSOUT(/;"	s
LSQDFR	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR,/;"	v	module:COMMONS
LSQDFR	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR,/;"	v	module:COMMONS
LSYS	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS,/;"	v	module:COMMONS
LSYS	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS,/;"	v	module:COMMONS
LSYS	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS,/;"	v	module:KEY
LSYS	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS,/;"	v	program:OPTIM4
LWCNSTA	g.commons.f90	/^     &                 LWRCUT, LWCNSTA,/;"	v	module:COMMONS
LWCNSTA	g.commons.o.f90	/^     &                 LWRCUT, LWCNSTA,/;"	v	module:COMMONS
LWCNSTB	g.commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB,/;"	v	module:COMMONS
LWCNSTB	g.commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB,/;"	v	module:COMMONS
LWOTP	g.lwotp.f90	/^      SUBROUTINE  LWOTP /;"	s
LWOTPBOX	optim.lwotpbox.f90	/^      SUBROUTINE LWOTPBOX /;"	s
LWOTPC	g.lwotp.f90	/^      SUBROUTINE  LWOTPC /;"	s
LWOTPGH	optim.lwotpgh.f90	/^      SUBROUTINE LWOTPGH /;"	s
LWOTPT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT,/;"	v	module:COMMONS
LWOTPT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT,/;"	v	module:COMMONS
LWOTPT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT,/;"	v	module:KEY
LWRCUT	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT, &$/;"	v	module:COMMONS
LWRCUT	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT, &$/;"	v	module:COMMONS
LWRCUT2SQ	g.commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ,/;"	v	module:COMMONS
LWRCUT2SQ	g.commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ, LWRCUT2SQ,/;"	v	module:COMMONS
LWRCUTSQ	g.commons.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ,/;"	v	module:COMMONS
LWRCUTSQ	g.commons.o.f90	/^     &                 LWRCUT, LWCNSTA, LWCNSTB, LWRCUTSQ,/;"	v	module:COMMONS
M	optim.gsdata.f90	/^  INTEGER :: MA/;"	k	type:IMGNODE
MACHINE	optim.key.f90	/^     LOGICAL :: MACHINE=/;"	v	module:KEY
MACHINE	pathsample.key.f90	/^     LOGICAL :: MACHINE=/;"	v	module:KEY
MAKED	pathsample.KMCcommit.f	/^      SUBROUTINE MAKED(/;"	s
MAKED2	pathsample.Pfold.f90	/^SUBROUTINE MAKED2(/;"	s
MAKED4	pathsample.kshortestpaths.f90	/^      SUBROUTINE MAKED4(/;"	s
MAKEDMAT3	pathsample.KMC.f	/^      SUBROUTINE MAKEDMAT3(/;"	s
MAKEGRADH	optim.oldneb.f	/^      SUBROUTINE MAKEGRADH(/;"	s
MAKEGRADMEC	optim.meccano.f90	/^SUBROUTINE MAKEGRADMEC(/;"	s
MAKEGRADR	optim.oldneb.f	/^      SUBROUTINE MAKEGRADR(/;"	s
MAKEIMAGE	optim.oldneb.f	/^      SUBROUTINE MAKEIMAGE(/;"	s
MAKENUMHESS	optim.geopt.f	/^      SUBROUTINE MAKENUMHESS(/;"	s
MAKENUMHESSRP	optim.geopt.f	/^      SUBROUTINE MAKENUMHESSRP(/;"	s
MAKENUMINTHESS	optim.geopt.f	/^      SUBROUTINE MAKENUMINTHESS(/;"	s
MAKEOLIGOSTART	g.modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART,/;"	v	module:MODCHARMM
MAKEOLIGOT	g.modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT,/;"	v	module:MODCHARMM
MAKE_CONPOT	optim.make_conpot.f90	/^SUBROUTINE MAKE_CONPOT(/;"	s
MAKE_CONPOT	pathsample.make_conpot.f90	/^SUBROUTINE MAKE_CONPOT(/;"	s
MALPHA1	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1,/;"	v	module:KEY
MALPHA2	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2,/;"	v	module:KEY
MARKOV_FH	commons.f90	/^INTEGER :: MARKOV_FH=/;"	v	module:COMMONS
MASS	optim.H2O.pjt2.f	8;"	c	subroutine:POTV
MASS	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  MASS$/;"	v	module:MODAMBER
MASS	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)), ALLOCATABLE :: MASS(/;"	k	type:RIGIDBODYPOTENTIAL
MASS	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, ALLOCATABLE :: MASS(/;"	k	type:RIGIDBODYPOTENTIAL
MASSARRY	g.vgw.f90	/^     DOUBLE PRECISION, ALLOCATABLE, SAVE :: MASSARRY(/;"	v	module:VGW
MASSARRY	g.vgw.f90	/^     DOUBLE PRECISION, ALLOCATABLE, SAVE :: MASSARRY(/;"	v	module:VGWSP
MASSES	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MASSES(/;"	v	module:COMMONS
MASSES	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MASSES(/;"	v	module:COMMONS
MASSES	optim.modunres.f90	/^      DOUBLE PRECISION :: MASSES(/;"	v	module:MODUNRES
MASST	optim.key.f90	/^      LOGICAL :: DTEST, MASST,/;"	v	module:KEY
MASSWT	optim.geopt.f	/^      SUBROUTINE MASSWT(/;"	s
MASSWT2	optim.geopt.f	/^      SUBROUTINE MASSWT2(/;"	s
MASSWTRP	optim.geopt.f	/^      SUBROUTINE MASSWTRP(/;"	s
MATDIFF	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF,/;"	v	module:COMMONS
MATDIFF	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF,/;"	v	module:COMMONS
MATMUL	g.ptgrp.f	/^      SUBROUTINE MATMUL(/;"	s
MATMULV	g.ptgrp.f	/^      SUBROUTINE MATMULV(/;"	s
MATMULV	optim.utils.f	/^      SUBROUTINE MATMULV(/;"	s
MATRIX_TRANSFORM	g.transforms.f90	/^    FUNCTION MATRIX_TRANSFORM(/;"	f	module:TRANSFORMS
MAXBARRIER	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER,/;"	v	module:KEY
MAXBFGS	commons.f90	/^INTEGER :: MAXBFGS=/;"	v	module:COMMONS
MAXBFGS	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS,/;"	v	module:COMMONS
MAXBFGS	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS,/;"	v	module:COMMONS
MAXBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS,/;"	v	module:KEY
MAXBFGSB	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,/;"	v	module:modcharmm
MAXBFGSI	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,/;"	v	module:modcharmm
MAXBFGSP	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,/;"	v	module:modcharmm
MAXBFGST	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,/;"	v	module:modcharmm
MAXCONE	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE,/;"	v	module:KEY
MAXCONUSE	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE,/;"	v	module:KEY
MAXDIM	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM,/;"	v	module:MODUNRES
MAXDROPS	optim.gsdata.f90	/^  INTEGER :: MAXDROPS,/;"	k	type:IMGNODE
MAXEFALL	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL,/;"	v	module:COMMONS
MAXEFALL	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL,/;"	v	module:COMMONS
MAXERISE	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE,/;"	v	module:COMMONS
MAXERISE	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE,/;"	v	module:COMMONS
MAXERISE	optim.gsdata.f90	/^  DOUBLE PRECISION :: MAXERISE /;"	k	type:IMGNODE
MAXERISE	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE,/;"	v	module:KEY
MAXGCYCLES	optim.modguess.f90	/^      INTEGER :: GSTEPS, MAXGCYCLES /;"	v	module:MODGUESS
MAXGROWSTEPS	optim.gsdata.f90	/^  INTEGER :: GSUPDATE, MAXGROWSTEPS$/;"	k	type:IMGNODE
MAXHBONDLENGTH	optim.msevb_common.f90	/^  DOUBLE PRECISION :: MAXHBONDLENGTH,/;"	v	module:msevb_common
MAXINTBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS, MAXNEBBFGS, MAXINTBFGS,/;"	v	module:KEY
MAXINTE	optim.modguess.f90	/^      DOUBLE PRECISION :: GTHRESHOLD, MAXINTE /;"	v	module:MODGUESS
MAXINTERACTIONS	g.commons.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(3), MAXINTERACTIONS$/;"	v	module:COMMONS
MAXINTERACTIONS	g.commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(3), MAXINTERACTIONS$/;"	v	module:COMMONS
MAXINTERACTIONS	optim.key.f90	/^      INTEGER          :: MAXINTERACTIONS,/;"	v	module:KEY
MAXINTIMAGE	optim.key.f90	/^     &        NTRAPPOW, MAXINTIMAGE$/;"	v	module:KEY
MAXINT_GR	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,/;"	v	module:MODUNRES
MAXIT	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT,/;"	v	module:COMMONS
MAXIT	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT,/;"	v	module:COMMONS
MAXIT2	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2,/;"	v	module:COMMONS
MAXIT2	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2,/;"	v	module:COMMONS
MAXITER	optim.ttm3f.f90	/^integer, parameter          :: MAXITER /;"	v	module:ttm3f_mod
MAXLEN	optim.gsdata.f90	/^  DOUBLE PRECISION :: MAXLEN$/;"	k	type:IMGNODE
MAXLENPERIM	optim.gsdata.f90	/^  DOUBLE PRECISION :: MAXLENPERIM$/;"	k	type:IMGNODE
MAXMAX	optim.key.f90	/^     &        MINMAX, MAXMAX,/;"	v	module:KEY
MAXMAXBARRIER	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, MAXMAXBARRIER,/;"	v	module:KEY
MAXMBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS,/;"	v	module:KEY
MAXNARGS	commons.f90	/^INTEGER, PARAMETER :: MAXNARGS=/;"	v	module:COMMONS
MAXNEBBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS, MAXNEBBFGS,/;"	v	module:KEY
MAXSAVE	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE,/;"	v	module:COMMONS
MAXSAVE	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE,/;"	v	module:COMMONS
MAXTOTSTEPS	optim.gsdata.f90	/^  INTEGER :: MAXTOTSTEPS,/;"	k	type:IMGNODE
MAXTSENERGY	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY,/;"	v	module:KEY
MAXVAR	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM, MAXVAR,/;"	v	module:MODUNRES
MAXXBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS,/;"	v	module:KEY
MB	g.MB.f	/^      SUBROUTINE MB(/;"	s
MB	optim.MB.f	/^      SUBROUTINE MB(/;"	s
MBADJACENT	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: MBBONDNUM(:), MBADJACENT(/;"	v	module:INTCOMMONS
MBBONDNUM	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: MBBONDNUM(/;"	v	module:INTCOMMONS
MBFINISH1	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,/;"	v	module:COMMONS
MBFINISH1	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,/;"	v	module:COMMONS
MBFINISH2	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,/;"	v	module:COMMONS
MBFINISH2	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,/;"	v	module:COMMONS
MBHEIGHT1	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,/;"	v	module:COMMONS
MBHEIGHT1	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,/;"	v	module:COMMONS
MBHEIGHT2	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,/;"	v	module:COMMONS
MBHEIGHT2	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,/;"	v	module:COMMONS
MBSTART1	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,/;"	v	module:COMMONS
MBSTART1	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,/;"	v	module:COMMONS
MBSTART2	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,/;"	v	module:COMMONS
MBSTART2	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,/;"	v	module:COMMONS
MC	g.mc.F	/^      SUBROUTINE MC(/;"	s
MC	g.mc.sim.f90	/^      SUBROUTINE MC(/;"	s
MC	mc.f90	/^      SUBROUTINE MC(/;"	s
MCCycles	g.commons.f90	/^     &        NINTS, NumberOfTrajectories, &$/;"	v	module:COMMONS
MCCycles	g.commons.o.f90	/^     &        NINTS, NumberOfTrajectories, &$/;"	v	module:COMMONS
MCCyclesEquilibration	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration,/;"	v	module:COMMONS
MCCyclesEquilibration	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration,/;"	v	module:COMMONS
MCHPR1	g.tn.f	/^      DOUBLE PRECISION FUNCTION MCHPR1(/;"	f
MCRUNS	g.mcruns.f	/^      SUBROUTINE MCRUNS(/;"	s
MCRUNS	mcruns.f90	/^      SUBROUTINE MCRUNS(/;"	s
MCSRCH	lbfgs.f	/^      SUBROUTINE MCSRCH(/;"	s
MCSTEP	lbfgs.f	/^      SUBROUTINE MCSTEP(/;"	s
MCSTEPS	commons.f90	/^INTEGER :: MCSTEPS=/;"	v	module:COMMONS
MCSTEPS	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,&$/;"	v	module:COMMONS
MCSTEPS	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX, CURRENTIMP,&$/;"	v	module:COMMONS
MCY	optim.VRTMCY5f.f90	/^module MCY$/;"	m
MDCRD_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT, MDCRD_UNIT,/;"	v	module:modamber9
MDIFF	optim.mdiff.f	/^      SUBROUTINE MDIFF(/;"	s
MDINFO_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT,/;"	v	module:modamber9
MDSTEPT	g.modamber9.f90	/^      LOGICAL MDSTEPT,/;"	v	module:MODAMBER9
MDSTEPT	optim.modamber9.f90	/^      LOGICAL MDSTEPT,/;"	v	module:modamber9
ME1	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,/;"	v	module:COMMONS
ME1	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,/;"	v	module:COMMONS
ME2	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,/;"	v	module:COMMONS
ME2	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,/;"	v	module:COMMONS
ME3	g.commons.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3,/;"	v	module:COMMONS
ME3	g.commons.o.f90	/^     &                 MSTART,MFINISH,MBSTART1,MBFINISH1,MBSTART2,MBFINISH2,MBHEIGHT1,MBHEIGHT2,ME1,ME2,ME3,/;"	v	module:COMMONS
MECBFGS	optim.meccano.f90	/^SUBROUTINE MECBFGS(/;"	s
MECCANO	optim.meccano.f90	/^SUBROUTINE MECCANO(/;"	s
MECCANOT	optim.modmec.f90	/^      LOGICAL :: MECCANOT=/;"	v	module:MODMEC
MECDGUESS	optim.modmec.f90	/^      DOUBLE PRECISION :: MECDGUESS /;"	v	module:MODMEC
MECDIST	optim.modmec.f90	/^      DOUBLE PRECISION :: MECDIST,/;"	v	module:MODMEC
MECIMDENS	optim.modmec.f90	/^      DOUBLE PRECISION :: MECIMDENS,/;"	v	module:MODMEC
MECITDENS	optim.modmec.f90	/^      DOUBLE PRECISION :: MECIMDENS, MECITDENS /;"	v	module:MODMEC
MECLAMBDA	optim.modmec.f90	/^      DOUBLE PRECISION :: MECDIST, MECLAMBDA /;"	v	module:MODMEC
MECMAXIMAGES	optim.modmec.f90	/^      INTEGER :: MECMAXIT, MECMAXIMAGES$/;"	v	module:MODMEC
MECMAXIT	optim.modmec.f90	/^      INTEGER :: MECMAXIT,/;"	v	module:MODMEC
MECRMSTOL	optim.modmec.f90	/^      DOUBLE PRECISION :: MECRMSTOL,/;"	v	module:MODMEC
MECSTEP	optim.modmec.f90	/^      DOUBLE PRECISION :: MECRMSTOL, MECSTEP /;"	v	module:MODMEC
MECUPDATE	optim.modmec.f90	/^      INTEGER :: MECUPDATE /;"	v	module:MODMEC
MERGE	pathsample.merge.f	/^      SUBROUTINE MERGE(/;"	s
MERGEDB	pathsample.mergedb.f90	/^SUBROUTINE MERGEDB$/;"	s
MERGEDNV	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE ::  MERGEDNV(/;"	v	module:NGTMEM
MERGEDPB	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: NEWPBRANCH(:,:), MERGEDPB(/;"	v	module:NGTMEM
METAL	g.Natb.f	29;"	c	subroutine:NATB
METAL	g.Natb.f	547;"	c	subroutine:ftss
METAL	g.Natb.f	598;"	c	subroutine:ftsz
METAL	g.Natb.f	651;"	c	subroutine:frss
METAL	g.Natb.f	83;"	c	subroutine:entots
METAL	optim.Natb.f	29;"	c	subroutine:NATB
METAL	optim.Natb.f	548;"	c	subroutine:ftss
METAL	optim.Natb.f	599;"	c	subroutine:ftsz
METAL	optim.Natb.f	652;"	c	subroutine:frss
METAL	optim.Natb.f	84;"	c	subroutine:entots
MFINISH	g.commons.f90	/^     &                 MSTART,MFINISH,/;"	v	module:COMMONS
MFINISH	g.commons.o.f90	/^     &                 MSTART,MFINISH,/;"	v	module:COMMONS
MFPT	pathsample.Dijkstra.f90	/^SUBROUTINE MFPT(/;"	s
MFRACTION1	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE, GCCONV, NEBK, &$/;"	v	module:KEY
MFRACTION2	optim.key.f90	/^     &        MFRACTION1, MFRACTION2,/;"	v	module:KEY
MG	optim.morse.f	/^      SUBROUTINE MG(/;"	s
MGBWATER	g.modamb.f90	/^      LOGICAL FAKEWATER, MGBWATER$/;"	v	module:MODAMBER
MGGLUE	g.Mgglue.f	/^      SUBROUTINE MGGLUE /;"	s
MGGLUET	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET,/;"	v	module:COMMONS
MGGLUET	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET,/;"	v	module:COMMONS
MIDIMPPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION MIDIMPPARAMS(/;"	v	module:MODAMBER
MIED	optim.mied.f	/^      SUBROUTINE MIED(/;"	s
MIEL	optim.miel.f	/^      SUBROUTINE MIEL(/;"	s
MIN1REDO	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MIN1REDO(/;"	v	module:KEY
MIN2REDO	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MIN1REDO(:), MIN2REDO(/;"	v	module:KEY
MINBACKTCUT	optim.intcommons.f90	/^  DOUBLE PRECISION :: MINBACKTCUT /;"	v	module:INTCOMMONS
MIND	pathsample.mind.f	/^      SUBROUTINE MIND(/;"	s
MINDIST	optim.mindist.f	/^      SUBROUTINE MINDIST(/;"	s
MINDIST	pathsample.mindist.f	/^      SUBROUTINE MINDIST(/;"	s
MINDISTA	optim.minpermdistrbcom.f90	/^      SUBROUTINE MINDISTA(/;"	s
MINDISTA	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE MINDISTA(/;"	s
MINDOM	optim.mindist.f	335;"	c	function:distfunc
MINDOM	optim.mindist.f	41;"	c	subroutine:MINDIST
MINDOM	optim.mindist.f	478;"	c	subroutine:ROTGEOM
MINDOM	optim.mindist.f	715;"	c	subroutine:MMYLBFGS
MINDOM	optim.newmindist.f90	45;"	c	subroutine:NEWMINDIST
MINDOM	pathsample.mind.f	258;"	c	subroutine:DISTFUNC
MINDOM	pathsample.mind.f	36;"	c	subroutine:MIND
MINDOM	pathsample.mindist.f	335;"	c	function:distfunc
MINDOM	pathsample.mindist.f	41;"	c	subroutine:MINDIST
MINDOM	pathsample.mindist.f	478;"	c	subroutine:ROTGEOM
MINDOM	pathsample.mindist.f	715;"	c	subroutine:MMYLBFGS
MINDOM	pathsample.newmindist.f90	40;"	c	subroutine:NEWMINDIST
MINDOUBLE	pathsample.mindouble.f90	/^SUBROUTINE MINDOUBLE$/;"	s
MINFOUNDTYPE	optim.intlbfgs.f90	/^TYPE MINFOUNDTYPE$/;"	t	subroutine:INTLBFGS
MINFOUNDTYPE	optim.intlbfgslj.f90	/^TYPE MINFOUNDTYPE$/;"	t	subroutine:INTLBFGSLJ
MINHBONDANGLE	optim.msevb_common.f90	/^  DOUBLE PRECISION :: MAXHBONDLENGTH, MINHBONDANGLE$/;"	v	module:msevb_common
MINIM	g.hsmove.f	/^      DOUBLE PRECISION FUNCTION MINIM(/;"	f
MINIM	optim.bfgsts.f	/^      DOUBLE PRECISION FUNCTION MINIM(/;"	f
MINMAX	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT, NEBDGUESS, INTDGUESS,  &$/;"	v	module:KEY
MINMAXD2	optim.congrad.f90	/^SUBROUTINE MINMAXD2(/;"	s
MINMAXD2	pathsample.make_conpot.f90	/^SUBROUTINE MINMAXD2(/;"	s
MINMAXD2R	optim.congrad.f90	/^SUBROUTINE MINMAXD2R(/;"	s
MINMAXD2R	pathsample.make_conpot.f90	/^SUBROUTINE MINMAXD2R(/;"	s
MINOMEGA	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA,/;"	v	module:COMMONS
MINOMEGA	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA,/;"	v	module:COMMONS
MINOMEGA	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MINOMEGA$/;"	v	module:modcharmm
MINPERMDIST	g.minpermdist.f90	/^SUBROUTINE MINPERMDIST(/;"	s
MINPERMDIST	optim.minpermdist.f90	/^SUBROUTINE MINPERMDIST(/;"	s
MINPERMDIST	pathsample.minpermdist.f90	/^SUBROUTINE MINPERMDIST(/;"	s
MINPERMDISTRBCOM	optim.minpermdistrbcom.f90	/^      SUBROUTINE MINPERMDISTRBCOM(/;"	s
MINPERMDISTRBCOM	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE MINPERMDISTRBCOM(/;"	s
MINPERMRB	optim.minpermrb.f90	/^SUBROUTINE MINPERMRB(/;"	s
MINPERM_CHIRAL	optim.chiralhyd.f90	/^      SUBROUTINE MINPERM_CHIRAL(/;"	s
MINUSSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(:), MINUSSAVE(/;"	v	module:SAVESTATE
MINUSTRIGUNITY	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: MINUSTRIGUNITY /;"	v	module:msevb_common
MKFNAMES	optim.connect.f	/^      SUBROUTINE MKFNAMES(/;"	s
MLATDIFF	optim.mlatmin.f	/^      SUBROUTINE MLATDIFF(/;"	s
MLATMIN	optim.mlatmin.f	/^      SUBROUTINE MLATMIN(/;"	s
MM	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM,/;"	v	module:COMMONS
MM	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM,/;"	v	module:COMMONS
MME2WRAPPER	g.amber9dummy.f90	/^SUBROUTINE MME2WRAPPER(/;"	s
MME2WRAPPER	optim.amber9dummy.f90	/^SUBROUTINE MME2WRAPPER(/;"	s
MMEINITWRAPPER	g.amber9dummy.f90	/^SUBROUTINE MMEINITWRAPPER(/;"	s
MMEINITWRAPPER	optim.amber9dummy.f90	/^SUBROUTINE MMEINITWRAPPER(/;"	s
MMID	optim.odesd.f	/^      SUBROUTINE MMID(/;"	s
MMRSDPT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT,/;"	v	module:COMMONS
MMRSDPT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT,/;"	v	module:COMMONS
MMUPDATE	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS, MUPDATE, XMUPDATE, &$/;"	v	module:KEY
MMYLBFGS	optim.mindist.f	/^      SUBROUTINE MMYLBFGS(/;"	s
MMYLBFGS	pathsample.mind.f	/^      SUBROUTINE MMYLBFGS(/;"	s
MMYLBFGS	pathsample.mindist.f	/^      SUBROUTINE MMYLBFGS(/;"	s
MN	optim.amber.f	2919;"	c	subroutine:anglesecderivs
MN	optim.amber.f	6203;"	c	subroutine:hairyhell
MN	optim.amber.f	6391;"	c	subroutine:hairyimphell
MNBFGSMAX1	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1,/;"	v	module:KEY
MNBFGSMAX2	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1, MNBFGSMAX2,/;"	v	module:KEY
MNBRAK	g.mnbrak.f	/^      SUBROUTINE MNBRAK(/;"	s
MODAMBER	g.modamb.f90	/^      MODULE MODAMBER /;"	m
MODAMBER	optim.modamber.f90	/^MODULE MODAMBER$/;"	m
MODAMBER2	optim.modamber2.f90	/^MODULE MODAMBER2$/;"	m
MODAMBER9	g.modamber9.f90	/^      MODULE MODAMBER9 /;"	m
MODCHARMM	g.modcharmm.f90	/^MODULE MODCHARMM$/;"	m
MODCOMMONDEINIT	g.commons.f90	/^      SUBROUTINE MODCOMMONDEINIT$/;"	s	module:COMMONS
MODCOMMONDEINIT	g.commons.o.f90	/^      SUBROUTINE MODCOMMONDEINIT$/;"	s	module:COMMONS
MODCOMMONINIT	g.commons.f90	/^      SUBROUTINE MODCOMMONINIT$/;"	s	module:COMMONS
MODCOMMONINIT	g.commons.o.f90	/^      SUBROUTINE MODCOMMONINIT$/;"	s	module:COMMONS
MODEFOL	optim.efol.f90	/^MODULE MODEFOL$/;"	m
MODEL1	g.model1.f90	/^SUBROUTINE MODEL1(/;"	s
MODEL1T	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T,/;"	v	module:COMMONS
MODEL1T	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T,/;"	v	module:COMMONS
MODGUESS	optim.modguess.f90	/^MODULE MODGUESS$/;"	m
MODHESS	g.modhess.f90	/^MODULE MODHESS$/;"	m
MODHESS	optim.modhess.f90	/^MODULE MODHESS$/;"	m
MODLNP	g.tn.f	/^      SUBROUTINE MODLNP(/;"	s
MODMEC	optim.modmec.f90	/^MODULE MODMEC$/;"	m
MODMXATMS	g.modmxatms.f90	/^MODULE MODMXATMS$/;"	m
MODMXATMS	optim.modmxatms.f90	/^MODULE MODMXATMS$/;"	m
MODNEB	optim.modneb.f90	/^MODULE MODNEB$/;"	m
MODTWOEND	optim.modtwoend.f90	/^MODULE MODTWOEND$/;"	m
MODUNRES	optim.modunres.f90	/^MODULE MODUNRES$/;"	m
MODZ	g.tn.f	/^      SUBROUTINE MODZ(/;"	s
MOLINFO	g.molinfo.f90	/^MODULE MOLINFO$/;"	m
MOL_INFO	g.molinfo.f90	/^    TYPE(ATOM), DIMENSION(:), PRIVATE, SAVE :: MOL_INFO$/;"	v	module:MOLINFO
MON1	g.modcharmm.f90	/^      INTEGER  :: MON1(/;"	v	module:MODCHARMM
MON2	g.modcharmm.f90	/^      INTEGER  :: MON1(2),MON2(/;"	v	module:MODCHARMM
MONIT	g.tn.f	/^      SUBROUTINE MONIT(/;"	s
MONOMERMASS	pathsample.rigidbody.f90	/^  FUNCTION MONOMERMASS /;"	f	module:RIGIDBODY
MONOMERMASS	pathsample.rigidbodymod.f90	/^  FUNCTION MONOMERMASS /;"	f	module:RIGIDBODYMOD
MONOMERTOAA	pathsample.rigidbody.f90	/^  SUBROUTINE MONOMERTOAA /;"	s	module:RIGIDBODY
MONOMERTOAA	pathsample.rigidbodymod.f90	/^  SUBROUTINE MONOMERTOAA /;"	s	module:RIGIDBODYMOD
MONOMERTOCARTESIANS	pathsample.rigidbody.f90	/^  SUBROUTINE MONOMERTOCARTESIANS /;"	s	module:RIGIDBODY
MONOMERTOCARTESIANS	pathsample.rigidbodymod.f90	/^  SUBROUTINE MONOMERTOCARTESIANS /;"	s	module:RIGIDBODYMOD
MORPH	optim.morph.f	/^      SUBROUTINE MORPH(/;"	s
MORPHDATA	optim.greatcirc.f	44;"	c	subroutine:GCLBFGS
MORPHDATA	optim.morph.f	46;"	c	subroutine:MORPH
MORPHDATA	optim.mylbfgs.f	80;"	c	subroutine:MYLBFGS
MORPHEMAX	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX,/;"	v	module:KEY
MORPHERISE	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE,/;"	v	module:KEY
MORPHMXSTP	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP,/;"	v	module:KEY
MORPHT	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT, MORPHT,/;"	v	module:KEY
MORSE	g.morse.f	/^      SUBROUTINE MORSE(/;"	s
MORSE	optim.morse.f	/^      SUBROUTINE MORSE /;"	s
MORSEPARAMETERS	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)), ALLOCATABLE :: MORSEPARAMETERS(/;"	k	type:RIGIDBODYPOTENTIAL
MORSEPARAMETERS	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, ALLOCATABLE :: MORSEPARAMETERS(/;"	k	type:RIGIDBODYPOTENTIAL
MORSET	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET,/;"	v	module:COMMONS
MORSET	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET,/;"	v	module:COMMONS
MOVABLEATOMLIST	g.commons.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLIST /;"	v	module:COMMONS
MOVABLEATOMLIST	g.commons.o.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLIST /;"	v	module:COMMONS
MOVABLEATOMLISTLOGICAL	g.commons.f90	/^      LOGICAL,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLISTLOGICAL /;"	v	module:COMMONS
MOVABLEATOMLISTLOGICAL	g.commons.o.f90	/^      LOGICAL,ALLOCATABLE,DIMENSION(:) :: MOVABLEATOMLISTLOGICAL /;"	v	module:COMMONS
MOVABLEATOMST	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST,/;"	v	module:COMMONS
MOVABLEATOMST	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST, MOVABLEATOMST,/;"	v	module:COMMONS
MOVESHELLT	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT,/;"	v	module:COMMONS
MOVESHELLT	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT,/;"	v	module:COMMONS
MOVIE	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE,/;"	v	module:KEY
MP	lbfgs.f	/^      INTEGER LP,MP$/;"	v	block data:LB2
MPDIFF	optim.mpdiff.f	/^      SUBROUTINE MPDIFF(/;"	s
MPDIFFDS	optim.mpdiff.f	/^      SUBROUTINE MPDIFFDS(/;"	s
MPIT	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT,/;"	v	module:COMMONS
MPIT	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT,/;"	v	module:COMMONS
MREQ	g.commons.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ,/;"	v	module:COMMONS
MREQ	g.commons.o.f90	/^     &                 DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, EFIELD, GEMRC, MREQ,/;"	v	module:COMMONS
MRHO11	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11,/;"	v	module:COMMONS
MRHO11	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11,/;"	v	module:COMMONS
MRHO12	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12,/;"	v	module:COMMONS
MRHO12	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12,/;"	v	module:COMMONS
MRHO22	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22,/;"	v	module:COMMONS
MRHO22	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22,/;"	v	module:COMMONS
MS	optim.morse.f	/^      SUBROUTINE MS(/;"	s
MSBCOORDS	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBCOORDS(/;"	v	module:COMMONS
MSBCOORDS	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBCOORDS(/;"	v	module:COMMONS
MSBE	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBE(/;"	v	module:COMMONS
MSBE	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MSBE(/;"	v	module:COMMONS
MSDIFF	optim.msdiff.f	/^      SUBROUTINE MSDIFF(/;"	s
MSEVB_hess	optim.drvmsevb.f90	/^subroutine MSEVB_hess /;"	s
MSGAYBERNE	g.msgayberne.f90	/^      SUBROUTINE MSGAYBERNE /;"	s
MSGBT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT, &$/;"	v	module:COMMONS
MSGBT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT, &$/;"	v	module:COMMONS
MSLATDIFF	optim.mslatmin.f	/^      SUBROUTINE MSLATDIFF(/;"	s
MSLATMIN	optim.mslatmin.f	/^      SUBROUTINE MSLATMIN(/;"	s
MSLV	g.tn.f	/^      SUBROUTINE MSLV(/;"	s
MSOLVE	g.tn.f	/^      SUBROUTINE MSOLVE(/;"	s
MSORIG	g.MSorig.f	/^      SUBROUTINE MSORIG(/;"	s
MSORIGC	g.MSorigc.f	/^      SUBROUTINE MSORIGC(/;"	s
MSORIGT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY, &$/;"	v	module:COMMONS
MSORIGT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT, FREEZERES, CENTXY, &$/;"	v	module:COMMONS
MSPYGT	g.commons.f90	/^     &        MSGBT, MSPYGT,/;"	v	module:COMMONS
MSPYGT	g.commons.o.f90	/^     &        MSGBT, MSPYGT,/;"	v	module:COMMONS
MSSTOCKGH	optim.msstock.f90	/^      SUBROUTINE MSSTOCKGH /;"	s
MSSTOCKT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT,/;"	v	module:COMMONS
MSSTOCKT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT,/;"	v	module:COMMONS
MSSTOCKT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT,/;"	v	module:KEY
MSTART	g.commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(3), &$/;"	v	module:COMMONS
MSTART	g.commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(3), &$/;"	v	module:COMMONS
MSTBIN	g.mstbin.f90	/^      SUBROUTINE MSTBIN(/;"	s
MSTBINT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT,/;"	v	module:COMMONS
MSTBINT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT,/;"	v	module:COMMONS
MSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS,/;"	v	module:KEY
MSTRANS97	g.MStrans.97.f	/^      SUBROUTINE MSTRANS97(/;"	s
MSTRANST	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST,/;"	v	module:COMMONS
MSTRANST	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST,/;"	v	module:COMMONS
MTRANS	g.ptgrp.f	/^      SUBROUTINE MTRANS(/;"	s
MTRANSOPT	optim.utils.f	/^      SUBROUTINE MTRANSOPT(/;"	s
MTRXIN	g.pyg.f90	/^      SUBROUTINE MTRXIN(/;"	s
MTRXIN	optim.pyg.f90	/^      SUBROUTINE MTRXIN(/;"	s
MTRXINGB	g.takestepmsgb.f90	/^      SUBROUTINE MTRXINGB(/;"	s
MU	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,/;"	v	module:MODAMBER
MUL3	optim.siaz.f	/^      SUBROUTINE MUL3(/;"	s
MULLERBROWNT	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT,/;"	v	module:COMMONS
MULLERBROWNT	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT,/;"	v	module:COMMONS
MULTISITEPY	g.multisitepy.f90	/^      SUBROUTINE MULTISITEPY /;"	s
MULTISITEPY2	g.multisitepy.f90	/^      SUBROUTINE MULTISITEPY2 /;"	s
MULTISITEPYT	g.commons.f90	/^     &        CSMGUIDET, MULTISITEPYT$/;"	v	module:COMMONS
MULTISITEPYT	g.commons.o.f90	/^     &        CSMGUIDET, MULTISITEPYT$/;"	v	module:COMMONS
MULTPAHA	g.multpaha.f90	/^      SUBROUTINE MULTPAHA /;"	s
MULTPAHAT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,& $/;"	v	module:COMMONS
MULTPAHAT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T, ELLIPSOIDT, GAYBERNET,& $/;"	v	module:COMMONS
MULTSTOCK	g.multstock.f90	/^      SUBROUTINE MULTSTOCK /;"	s
MUPDATE	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE,/;"	v	module:COMMONS
MUPDATE	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE,/;"	v	module:COMMONS
MUPDATE	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS, MUPDATE,/;"	v	module:KEY
MWVECTORS	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS,/;"	v	module:KEY
MXATMS	g.modmxatms.f90	/^      INTEGER :: MXATMS=/;"	v	module:MODMXATMS
MXATMS	optim.modmxatms.f90	/^      INTEGER :: MXATMS=/;"	v	module:MODMXATMS
MXSTP	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP,/;"	v	module:KEY
MYBUNIT	g.commons.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT,/;"	v	module:COMMONS
MYBUNIT	g.commons.o.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT,/;"	v	module:COMMONS
MYCPU_TIME	g.mycpu_time.f90	/^SUBROUTINE MYCPU_TIME(/;"	s
MYCPU_TIME	optim.mycpu_time.f90	/^SUBROUTINE MYCPU_TIME(/;"	s
MYCROSS	g.ptgrp.f	/^      SUBROUTINE MYCROSS(/;"	s
MYCUTHB	g.modcharmm.f90	/^      DOUBLE PRECISION :: MYCUTHB,/;"	v	module:MODCHARMM
MYCUTHBA	g.modcharmm.f90	/^      DOUBLE PRECISION :: MYCUTHB,MYCUTHBA$/;"	v	module:MODCHARMM
MYDAXPY	g.dlsode.f	/^      SUBROUTINE MYDAXPY /;"	s
MYDDOT	g.dlsode.f	/^      DOUBLE PRECISION FUNCTION MYDDOT /;"	f
MYDOT	g.ptgrp.f	/^      DOUBLE PRECISION FUNCTION MYDOT(/;"	f
MYEUNIT	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT, &$/;"	v	module:COMMONS
MYEUNIT	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2, CSMGPINDEX, CSMGUIDEGPINDEX, CSMSTEPS, CSMQUENCHES, CSMMAXIT, &$/;"	v	module:COMMONS
MYFILENAME	g.commons.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME,/;"	v	module:COMMONS
MYFILENAME	g.commons.o.f90	/^      CHARACTER(LEN=130) DUMPFILE, MYFILENAME,/;"	v	module:COMMONS
MYLBFGS	g.mylbfgs.f	/^      SUBROUTINE MYLBFGS(/;"	s
MYLBFGS	mylbfgs.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYLBFGS	mylbfgs.old.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYLBFGS	optim.mylbfgs.f	/^      SUBROUTINE MYLBFGS(/;"	s
MYLINE	optim.main.f90	/^      CHARACTER(LEN=80) ARGSTRING, MYLINE$/;"	v	program:OPTIM4
MYMATMUL	g.ptgrp.f	/^      SUBROUTINE MYMATMUL(/;"	s
MYMERGE	pathsample.mymerge.f	/^      SUBROUTINE MYMERGE(/;"	s
MYMUNIT	g.commons.f90	/^     &        MYEUNIT, MYMUNIT,/;"	v	module:COMMONS
MYMUNIT	g.commons.o.f90	/^     &        MYEUNIT, MYMUNIT,/;"	v	module:COMMONS
MYNODE	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE,/;"	v	module:COMMONS
MYNODE	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE,/;"	v	module:COMMONS
MYORIENT	g.orient.f	/^      SUBROUTINE MYORIENT(/;"	s
MYORIENT	optim.myorient.f	/^      SUBROUTINE MYORIENT(/;"	s
MYORIENT	pathsample.myorient.f	/^      SUBROUTINE MYORIENT(/;"	s
MYPOT	finalq.f90	15;"	c	subroutine:FINALQ
MYPOT	g.basinsampling.f90	50;"	c	subroutine:BASINSAMPLING
MYPOT	g.bspt.F	75;"	c	subroutine:PTBASINSAMPLING
MYPOT	g.cgmin.f	37;"	c	subroutine:CGMIN
MYPOT	g.finalq.f	37;"	c	subroutine:FINALQ
MYPOT	g.mc.F	1471;"	c	subroutine:REST
MYPOT	g.mc.F	1618;"	c	subroutine:REN
MYPOT	g.mc.F	1786;"	c	subroutine:NEWRES
MYPOT	g.mc.F	38;"	c	subroutine:MC
MYPOT	g.mylbfgs.f	47;"	c	subroutine:MYLBFGS
MYPOT	g.ptmc.F	52;"	c	subroutine:PARALLELTEMPERING
MYPOT	g.symmetry.f90	56;"	c	subroutine:SYMMETRY
MYPOT	g.symmetry2.f90	49;"	c	subroutine:SYMMETRY2
MYPOT	g.symmetrycsm.f90	39;"	c	subroutine:SYMMETRYCSM
MYPOT	gmin.main.f90	33;"	c	program:GMIN
MYPOT	mc.vars.inc.f90	3;"	c
MYPOT	mylbfgs.old.f90	47;"	c	subroutine:MYLBFGS
MYPOT	quench.f90	32;"	c	subroutine:QUENCH
MYPOWER	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER,/;"	v	module:COMMONS
MYPOWER	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER,/;"	v	module:COMMONS
MYPUNIT	g.commons.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT, MYPUNIT$/;"	v	module:COMMONS
MYPUNIT	g.commons.o.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT, MYPUNIT$/;"	v	module:COMMONS
MYQMINSAVE	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: MYQMINSAVE$/;"	v	module:MODUNRES
MYRESET	g.mc.F	/^      SUBROUTINE MYRESET(/;"	s
MYRUNIT	g.commons.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT,/;"	v	module:COMMONS
MYRUNIT	g.commons.o.f90	/^     &        MYEUNIT, MYMUNIT, MYBUNIT, MYRUNIT,/;"	v	module:COMMONS
MYSD	g.mysd.f	/^      SUBROUTINE MYSD(/;"	s
MYSDT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT,/;"	v	module:COMMONS
MYSDT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT, BLNT, MYSDT,/;"	v	module:COMMONS
MYSYSTEM	func.f90	/^SUBROUTINE MYSYSTEM(/;"	s	module:FUNC
MYSYSTEM	pathsample.mysystem.f90	/^SUBROUTINE MYSYSTEM(/;"	s
MYUNIT	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT,/;"	v	module:COMMONS
MYUNIT	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT,/;"	v	module:COMMONS
MYUNIT	optim.key.f90	/^      INTEGER          :: MAXINTERACTIONS,PYBINARYTYPE1,MYUNIT$/;"	v	module:KEY
MYUNITNEW	optim.modamber9.f90	/^       INTEGER MYUNITNEW,/;"	v	module:modamber9
MYUNRESDUMP	optim.unresdump.f	/^      SUBROUTINE MYUNRESDUMP(/;"	s
MYUNRESDUMP	pathsample.unresdump.f	/^      SUBROUTINE MYUNRESDUMP(/;"	s
MYUPCASE	g.input.f	/^      SUBROUTINE MYUPCASE(/;"	s
MYWAIT	pathsample.mywait.f90	/^SUBROUTINE MYWAIT(/;"	s
M_LBFGS	commons.f90	/^INTEGER :: M_LBFGS=/;"	v	module:COMMONS
M_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg, delR_rg, M_rg,/;"	v	module:amhglobals
MaxDegree	pathsample.GT2FibonacciHeap.f90	/^     integer,parameter :: MaxDegree=/;"	v	module:FibonacciHeapModule
MaximalTemperature	g.commons.f90	/^     &                 MinimalTemperature, MaximalTemperature,/;"	v	module:COMMONS
MaximalTemperature	g.commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature,/;"	v	module:COMMONS
Mfunc	g.Ackland_metals.f90	/^	double precision function Mfunc(/;"	f
Mfunc	optim.Ackland_metals.f90	/^	double precision function Mfunc(/;"	f
Mfunc_d	g.Ackland_metals.f90	/^	double precision function Mfunc_d(/;"	f
Mfunc_d	optim.Ackland_metals.f90	/^	double precision function Mfunc_d(/;"	f
Mfunc_dd	g.Ackland_metals.f90	/^        double precision function Mfunc_dd(/;"	f
Mfunc_dd	optim.Ackland_metals.f90	/^        double precision function Mfunc_dd(/;"	f
MinimalTemperature	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL, &$/;"	v	module:COMMONS
MinimalTemperature	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL, &$/;"	v	module:COMMONS
N	bln.vars.inc.f90	/^        INT/;"	v
N	g.vgw.f90	/^  INT/;"	v
N	optim.double.f	/^      INT/;"	v
N1	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1, N1,/;"	v	module:NODES
N2	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1, N1, N2,/;"	v	module:NODES
N3_ATOM	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM,/;"	v	module:VGW
N3_ATOM	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM,/;"	v	module:VGWSP
NA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: NA /;"	v	module:msevb_common
NABT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT,/;"	v	module:KEY
NABT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,NABT,/;"	v	program:OPTIM4
NACCEPT	commons.f90	/^INTEGER :: NACCEPT=/;"	v	module:COMMONS
NACCEPT	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT,/;"	v	module:COMMONS
NACCEPT	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT,/;"	v	module:COMMONS
NADM	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM,/;"	v	module:KEY
NAG	pathsample.nag.f90	/^MODULE NAG$/;"	m
NAMES	optim.modunres.f90	65;"	c	module:MODUNRES
NARG	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG,/;"	v	program:OPTIM4
NARGS	commons.f90	/^INTEGER NARGS$/;"	v	module:COMMONS
NATB	g.Natb.f	/^        SUBROUTINE NATB(/;"	s
NATB	optim.Natb.f	/^        SUBROUTINE NATB(/;"	s
NATBT	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT,/;"	v	module:COMMONS
NATBT	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT,/;"	v	module:COMMONS
NATBT	optim.key.f90	/^     &        REPEL,UNRST, NATBT,/;"	v	module:KEY
NATINT	optim.intcommons.f90	/^  LOGICAL :: NATINT /;"	v	module:INTCOMMONS
NATINTSETUP	optim.intcoords.f90	/^     SUBROUTINE NATINTSETUP$/;"	s	module:INTCUTILS
NATOMS	commons.f90	/^INTEGER :: NATOMS=/;"	v	module:COMMONS
NATOMS	g.commons.f90	/^      INTEGER :: NATOMS,/;"	v	module:COMMONS
NATOMS	g.commons.o.f90	/^      INTEGER :: NATOMS,/;"	v	module:COMMONS
NATOMS	optim.commons.f90	/^      INTEGER :: NATOMS$/;"	v	module:COMMONS
NATOMSINA	g.modamber9.f90	/^INTEGER :: NATOMSINA,/;"	v	module:MODAMBER9
NATOMSINA	optim.modamber9.f90	/^INTEGER :: NATOMSINA,/;"	v	module:modamber9
NATOMSINB	g.modamber9.f90	/^INTEGER :: NATOMSINA, NATOMSINB,/;"	v	module:MODAMBER9
NATOMSINB	optim.modamber9.f90	/^INTEGER :: NATOMSINA, NATOMSINB$/;"	v	module:modamber9
NATOMSINC	g.modamber9.f90	/^INTEGER :: NATOMSINA, NATOMSINB, NATOMSINC$/;"	v	module:MODAMBER9
NBASALSITES	pathsample.rigidbody.f90	/^     INTEGER :: NBASALSITES$/;"	k	type:CAPSOMER
NBASALSITES	pathsample.rigidbodymod.f90	/^     INTEGER :: NBASALSITES$/;"	k	type:CAPSOMER
NBDS	optim.intcommons.f90	/^  INTEGER :: NBDS,/;"	v	module:INTCOMMONS
NBFGSMAX1	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1,/;"	v	module:KEY
NBFGSMAX2	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2,/;"	v	module:KEY
NBOND	optim.modamber9.f90	/^integer :: NBOND$/;"	v	module:modamber9
NBOXTS	optim.key.f90	/^     &        FIXAFTER, NBOXTS,/;"	v	module:KEY
NC	optim.gsdata.f90	/^  INTEGER :: NC /;"	k	type:IMGNODE
NCAPT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT,/;"	v	module:COMMONS
NCAPT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT,/;"	v	module:COMMONS
NCAPT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT,/;"	v	module:KEY
NCARBON	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON,/;"	v	module:COMMONS
NCARBON	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON,/;"	v	module:COMMONS
NCARBON	optim.key.f90	/^     &        TIPID, PAHID, NCARBON,/;"	v	module:KEY
NCHENCALLS	g.modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS,/;"	v	module:MODCHARMM
NCHENCALLS	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE, NGUESS, NCHENCALLS,/;"	v	module:modcharmm
NCHIRAL	g.modamber9.f90	/^integer, dimension(:), allocatable :: NCHIRAL$/;"	v	module:MODAMBER9
NCHIRAL	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,NCHIRAL /;"	v	module:MODCHARMM
NCHIRAL	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NCHIRAL$/;"	v	module:modamber9
NCHIRAL	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,NCHIRAL /;"	v	module:modcharmm
NCHIRALTOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,NOMEGACTOT,NSIDECHAINTOT,NCHIRALTOT$/;"	v	module:modcharmm
NCMP	g.commons.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(:), NCMP(/;"	v	module:COMMONS
NCMP	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(:), NCMP(/;"	v	module:COMMONS
NCNT	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT,/;"	v	module:INTCOMMONS
NCNT2	optim.intcommons.f90	/^  INTEGER :: NCNT2 /;"	v	module:INTCOMMONS
NCOM	g.modf1com.f90	/^      integer :: NCOM$/;"	v	module:F1COM
NCONSTRAINT	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT,/;"	v	module:KEY
NCONSTRAINTON	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON,/;"	v	module:KEY
NCOOP	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP,/;"	v	module:COMMONS
NCOOP	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP,/;"	v	module:COMMONS
NCORE	commons.f90	/^INTEGER :: NCORE$/;"	v	module:COMMONS
NCORE	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE,/;"	v	module:COMMONS
NCORE	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE,/;"	v	module:COMMONS
NCPCONMAX	optim.key.f90	/^      INTEGER :: INTCONMAX=10, NCPCONMAX=/;"	v	module:KEY
NCPCONSTRAINT	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT,/;"	v	module:KEY
NCPREPMAX	optim.key.f90	/^      INTEGER :: NREPMAX=10, NCPREPMAX=/;"	v	module:KEY
NCPREPULSIVE	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON, CPREPSEP, CPCONSEP, &$/;"	v	module:KEY
NCR	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR,/;"	v	program:OPTIM4
NCRBN	g.commons.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(/;"	v	module:COMMONS
NCRBN	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: NCRBN(/;"	v	module:COMMONS
NCRT	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH, NIMP, NCRT,/;"	v	module:INTCOMMONS
NCT	optim.modunres.f90	/^      INTEGER :: NNT,NCT,/;"	v	module:MODUNRES
NCWALL	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,NCWALL,/;"	v	module:MODCHARMM
NDHESS	g.tosifumi.f	/^      SUBROUTINE NDHESS(/;"	s
NDHESS	optim.tosifumi.f	/^      SUBROUTINE NDHESS(/;"	s
NDIA3	g.tn.f	/^      SUBROUTINE NDIA3(/;"	s
NDIH	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH, NIMP, NCRT, NDIH$/;"	v	module:INTCOMMONS
NDIHEDRALS	g.modamb.f90	/^      INTEGER  match,bean,bondnumber,t, NDIHEDRALS$/;"	v	module:MODAMBER
NDIHEDRALS	optim.modamber.f90	/^      INTEGER NDIHEDRALS$/;"	v	module:MODAMBER
NDIIA	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN, KADJUSTFRQ, GUPTATYPE, &$/;"	v	module:KEY
NDIIS	optim.gdiis.f90	/^      INTEGER, PARAMETER :: NDIIS=/;"	v	module:GDIIS
NDONE	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,QDONE,NDONE$/;"	v
NDONTMOVE	g.commons.f90	/^      INTEGER :: NDONTMOVE,/;"	v	module:COMMONS
NDONTMOVE	g.commons.o.f90	/^      INTEGER :: NDONTMOVE,/;"	v	module:COMMONS
NDUMMY	gmin.main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(/;"	v	program:GMIN
NDUMMY2	gmin.main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(:), NDUMMY2(/;"	v	program:GMIN
NEBBFGS	optim.oldneb.f	/^      SUBROUTINE NEBBFGS(/;"	s
NEBDGUESS	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT, NEBDGUESS,/;"	v	module:KEY
NEBFACTOR	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL, NEBKFINAL, NEBFACTOR,/;"	v	module:KEY
NEBK	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE, GCCONV, NEBK,/;"	v	module:KEY
NEBKFINAL	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL, NEBKFINAL,/;"	v	module:KEY
NEBKINITIAL	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL,/;"	v	module:KEY
NEBMAG	optim.modneb.f90	/^      INTEGER :: NSTEPNEB, NIMAGE, NEBMAG$/;"	v	module:MODNEB
NEBMIND	optim.key.f90	/^     LOGICAL :: MACHINE=.FALSE., NEBMIND=/;"	v	module:KEY
NEBMUPDATE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE,/;"	v	module:KEY
NEBRESEEDBMAX	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX, NEBRESEEDBMAX,/;"	v	module:KEY
NEBRESEEDDEL1	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX, NEBRESEEDBMAX, NEBRESEEDDEL1,/;"	v	module:KEY
NEBRESEEDDEL2	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX, NEBRESEEDBMAX, NEBRESEEDDEL1, &$/;"	v	module:KEY
NEBRESEEDEMAX	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX,/;"	v	module:KEY
NEBRESEEDINT	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS, NEBRESEEDINT,/;"	v	module:KEY
NEBRESEEDPOW1	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1,/;"	v	module:KEY
NEBRESEEDPOW2	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2,/;"	v	module:KEY
NEBRESEEDT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT,/;"	v	module:KEY
NEBRMS	optim.connect.f	1783;"	c	subroutine:TSSEARCH
NEBRMS	optim.connect.f	44;"	c	subroutine:CONNECT
NEBRMS	optim.meccano.f90	260;"	c	subroutine:MECBFGS
NEBRMS	optim.meccano.f90	37;"	c	subroutine:MECCANO
NEBRMS	optim.meccano.f90	620;"	c	subroutine:MAKEGRADMEC
NEBRMS	optim.oldneb.f	1097;"	c	subroutine:MAKEIMAGE
NEBRMS	optim.oldneb.f	314;"	c	subroutine:NEBBFGS
NEBRMS	optim.oldneb.f	36;"	c	subroutine:OLDNEB
NEBRMS	optim.oldneb.f	725;"	c	subroutine:MAKEGRADH
NEBRMS	optim.oldneb.f	833;"	c	subroutine:MAKEGRADR
NEBRMS	optim.unmeccano.f90	226;"	c	subroutine:UNMECBFGS
NEBRMS	optim.unmeccano.f90	37;"	c	subroutine:UNMECCANO
NEBRMS	optim.unmeccano.f90	629;"	c	subroutine:UNMAKEGRADMEC
NEBT	optim.modneb.f90	/^      LOGICAL :: NEBT,/;"	v	module:MODNEB
NEGVEC	g.tn.f	/^      SUBROUTINE NEGVEC(/;"	s
NELEMENTS	optim.main.f90	/^      INTEGER J2, NELEMENTS,/;"	v	program:OPTIM4
NENDHESS	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS,/;"	v	module:KEY
NENRPER	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER,/;"	v	module:COMMONS
NENRPER	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER,/;"	v	module:COMMONS
NEON	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON,/;"	v	module:COMMONS
NEON	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON,/;"	v	module:COMMONS
NEQUIL	g.commons.f90	/^     &                 PTSTEPS, NEQUIL,/;"	v	module:COMMONS
NEQUIL	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL,/;"	v	module:COMMONS
NERROR	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR,/;"	v	program:OPTIM4
NEVL	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES, &$/;"	v	module:COMMONS
NEVL	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ, CHNRES, &$/;"	v	module:COMMONS
NEVL	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1, MNBFGSMAX2, PVSTEPS, &$/;"	v	module:KEY
NEVS	g.commons.f90	/^     &        NEVL, NEVS,/;"	v	module:COMMONS
NEVS	g.commons.o.f90	/^     &        NEVL, NEVS,/;"	v	module:COMMONS
NEVS	optim.key.f90	/^     &        NEVL, NEVS,/;"	v	module:KEY
NEW	g.MSorig.f	42;"	c	subroutine:MSORIG
NEW	g.MSorigc.f	45;"	c	subroutine:MSORIGC
NEWCAPSID	g.newcapsid.f90	/^      SUBROUTINE NEWCAPSID /;"	s
NEWCAPSID	optim.newcapsid.f90	/^      SUBROUTINE NEWCAPSID /;"	s
NEWCONFST	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT, RMSSAVE, NEWCONFST,/;"	v	module:MODCHARMM
NEWCONFT	g.modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT, NEWCONFT,/;"	v	module:MODCHARMM
NEWCONN	pathsample.newconn.f	/^      SUBROUTINE NEWCONN(/;"	s
NEWCONNECTT	optim.modneb.f90	/^      LOGICAL :: NEBT, NEWNEBT, NEWCONNECTT,/;"	v	module:MODNEB
NEWINERTIA	g.newinertia.f	/^      SUBROUTINE NEWINERTIA(/;"	s
NEWJUMP	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP,/;"	v	module:COMMONS
NEWJUMP	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP,/;"	v	module:COMMONS
NEWMINDIST	g.newmindist.f90	/^SUBROUTINE NEWMINDIST(/;"	s
NEWMINDIST	optim.newmindist.f90	/^SUBROUTINE NEWMINDIST(/;"	s
NEWMINDIST	pathsample.newmindist.f90	/^SUBROUTINE NEWMINDIST(/;"	s
NEWNEBT	optim.modneb.f90	/^      LOGICAL :: NEBT, NEWNEBT,/;"	v	module:MODNEB
NEWNVAL	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NEWNVAL(/;"	v	module:NGTMEM
NEWPAH	g.newpah.f90	/^      SUBROUTINE NEWPAH /;"	s
NEWPBRANCH	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: NEWPBRANCH(/;"	v	module:NGTMEM
NEWREAD	optim.chdummy.f	/^      SUBROUTINE NEWREAD(/;"	s
NEWREAD	pathsample.unresdump.f	/^      SUBROUTINE NEWREAD(/;"	s
NEWRES	g.mc.F	/^      SUBROUTINE NEWRES(/;"	s
NEWRESTART	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART,/;"	v	module:COMMONS
NEWRESTART	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART,/;"	v	module:COMMONS
NEWRESTART_MD	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD,/;"	v	module:COMMONS
NEWRESTART_MD	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD,/;"	v	module:COMMONS
NEWRES_TEMP	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP,/;"	v	module:COMMONS
NEWRES_TEMP	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP,/;"	v	module:COMMONS
NEWRES_TEMP	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7, EVDISTTHRESH, NEWRES_TEMP$/;"	v	module:COMMONS
NEWROTGEOM	g.newmindist.f90	/^SUBROUTINE NEWROTGEOM(/;"	s
NEWROTGEOM	optim.newmindist.f90	/^SUBROUTINE NEWROTGEOM(/;"	s
NEWROTGEOM	pathsample.newmindist.f90	/^SUBROUTINE NEWROTGEOM(/;"	s
NEWROTGEOMA	optim.minpermdistrbcom.f90	/^      SUBROUTINE NEWROTGEOMA(/;"	s
NEWROTGEOMA	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE NEWROTGEOMA(/;"	s
NEWROTGEOMSTOCK	g.newmindist.f90	/^SUBROUTINE NEWROTGEOMSTOCK(/;"	s
NEWROTGEOMSTOCK	optim.newmindist.f90	/^SUBROUTINE NEWROTGEOMSTOCK(/;"	s
NEWTIP	g.newtip.f90	/^      SUBROUTINE NEWTIP(/;"	s
NEWTIP	optim.newtip.f90	/^      SUBROUTINE NEWTIP /;"	s
NEXT	optim.gsdata.f90	/^     TYPE(IMGNODE), POINTER :: NEXT$/;"	k	type:IMGNODE
NFAIL	mc.vars.inc.f90	/^      INTEGER NFAIL,/;"	v
NFAILMAX	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX,/;"	v	module:KEY
NFAILT	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT,/;"	v
NFINISH	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH,/;"	v	module:NODES
NFINISH2	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2,/;"	v	module:NODES
NFIX	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX,/;"	v	module:COMMONS
NFIX	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX, HPTGRP, NFIX,/;"	v	module:COMMONS
NFIXSEG	g.modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS, NREPEAT, NKNOWN, NFIXSEG$/;"	v	module:MODCHARMM
NFL	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,NVARU,NFL,/;"	v	module:MODUNRES
NFREEZE	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE,/;"	v	module:COMMONS
NFREEZE	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE,/;"	v	module:COMMONS
NFREEZE	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS, NFREEZE,/;"	v	module:KEY
NFRG	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG,/;"	v	module:INTCOMMONS
NGAUSS	g.vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=3, NGAUSS=/;"	v	module:VGWSP
NGBSITE	g.commons.f90	/^      INTEGER  NGBSITE,/;"	v	module:COMMONS
NGBSITE	g.commons.o.f90	/^      INTEGER  NGBSITE,/;"	v	module:COMMONS
NGLYDIH	optim.intcommons.f90	/^  INTEGER ::NGLYDIH$/;"	v	module:INTCOMMONS
NGRADIENTS	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS,/;"	v	module:KEY
NGROUPS	g.modamber9.f90	/^      INTEGER :: GROUPROTFREQ, NGROUPS$/;"	v	module:MODAMBER9
NGROUPS	optim.modamber9.f90	/^      INTEGER :: GROUPROTFREQ, NGROUPS$/;"	v	module:modamber9
NGT	pathsample.NGT.f	/^      SUBROUTINE NGT$/;"	s
NGTMEM	pathsample.NGTmem.f90	/^MODULE NGTMEM$/;"	m
NGTREALLOC	pathsample.NGTrealloc.f90	/^SUBROUTINE NGTREALLOC(/;"	s
NGTREALLOC_CRSTORAGE	pathsample.NGTrealloc_crstorage.f90	/^SUBROUTINE NGTREALLOC_CRSTORAGE(/;"	s
NGTREMOVEI	pathsample.NGTremovei.f90	/^SUBROUTINE NGTREMOVEI(/;"	s
NGTREMOVEID	pathsample.NGTremoveid.f90	/^SUBROUTINE NGTREMOVEID(/;"	s
NGTREMOVEID_CRSTORAGE	pathsample.NGTremoveid_crstorage.f90	/^SUBROUTINE NGTREMOVEID_CRSTORAGE(/;"	s
NGTREMOVEI_CRSTORAGE	pathsample.NGTremovei_crstorage.f90	/^SUBROUTINE NGTREMOVEI_CRSTORAGE(/;"	s
NGTRENORM	pathsample.NGTrenorm.f90	/^SUBROUTINE NGTRENORM(/;"	s
NGTRENORM_CRSTORAGE	pathsample.NGTrenorm_crstorage.f90	/^SUBROUTINE NGTRENORM_CRSTORAGE(/;"	s
NGT_CRSTORAGE	pathsample.NGT_crstorage.f	/^      SUBROUTINE NGT_CRSTORAGE(/;"	s
NGUESS	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE, NGUESS,/;"	v	module:modcharmm
NHCHECK	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK,/;"	v	module:KEY
NHSMOVE	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE,/;"	v	module:COMMONS
NHSMOVE	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE,/;"	v	module:COMMONS
NHSRESTART	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART,/;"	v	module:COMMONS
NHSRESTART	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART,/;"	v	module:COMMONS
NHUP	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=/;"	v	module:KEY
NICTOT	g.modamber9.f90	/^integer, dimension(:), allocatable :: NICTOT /;"	v	module:MODAMBER9
NICTOT	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NICTOT /;"	v	module:modamber9
NIINIT	g.Farkas.f	/^      SUBROUTINE NIINIT$/;"	s
NIM	optim.gsdata.f90	/^  INTEGER :: NIM,/;"	k	type:IMGNODE
NIMAGE	optim.modneb.f90	/^      INTEGER :: NSTEPNEB, NIMAGE,/;"	v	module:MODNEB
NIMAGEMAX	optim.modneb.f90	/^      INTEGER, PARAMETER :: NIMAGEMAX=/;"	v	module:MODNEB
NIMP	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH, NIMP,/;"	v	module:INTCOMMONS
NINTC	optim.intcommons.f90	/^  INTEGER :: NINTC /;"	v	module:INTCOMMONS
NINTERP	optim.modguess.f90	/^      INTEGER :: NINTERP /;"	v	module:MODGUESS
NINTIM	optim.intcommons.f90	/^  INTEGER :: NINTIM /;"	v	module:INTCOMMONS
NINTS	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP, &$/;"	v	module:COMMONS
NINTS	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA, ISTEP, &$/;"	v	module:COMMONS
NINTS	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT, NMOL, NINTS,/;"	v	module:COMMONS
NINTV	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE, &$/;"	v	module:COMMONS
NINTV	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE, &$/;"	v	module:COMMONS
NINTV	optim.key.f90	/^     &        NDIIA, NINTV,/;"	v	module:KEY
NINT_AMH	g.commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH,/;"	v	module:COMMONS
NINT_AMH	g.commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH,/;"	v	module:COMMONS
NINT_GR	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,/;"	v	module:MODUNRES
NITEMS	optim.main.f90	/^      INTEGER ITEM, NITEMS,/;"	v	program:OPTIM4
NITSTART	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NITSTART(/;"	v	module:KEY
NKNOWN	g.modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS, NREPEAT, NKNOWN,/;"	v	module:MODCHARMM
NLDH	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH,/;"	v	module:INTCOMMONS
NLIM	optim.gsdata.f90	/^  INTEGER :: NIM, NLIM,/;"	k	type:IMGNODE
NMDONE	optim.vecck.f90	/^       INTEGER :: NMDONE$/;"	v	module:VECCK
NMINASAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE,/;"	v	module:SAVESTATE
NMINB	optim.modcharmm.f90	/^      INTEGER :: NMINB,/;"	v	module:modcharmm
NMINBSAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE, NMINBSAVE,/;"	v	module:SAVESTATE
NMINSAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE, NMINBSAVE, NMINSAVE,/;"	v	module:SAVESTATE
NMOL	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT, NMOL,/;"	v	module:COMMONS
NMOVABLEATOMS	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS,/;"	v	module:COMMONS
NMOVABLEATOMS	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP, NMOVABLEATOMS,/;"	v	module:COMMONS
NMRES	g.amhdummy.f	/^      INTEGER NMRES$/;"	v	module:AMHGLOBALS
NMRES	optim.amhglobals.f	/^      INTEGER NMRES$/;"	v	module:amhglobals
NMSBSAVE	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE,/;"	v	module:COMMONS
NMSBSAVE	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE,/;"	v	module:COMMONS
NN	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN,/;"	v	module:COMMONS
NN	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN,/;"	v	module:COMMONS
NNBIPS	g.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST/;"	v	module:MODAMBER9
NNBIPS	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST/;"	v	module:modamber9
NNBIPST	g.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST,/;"	v	module:MODAMBER9
NNBIPST	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST,/;"	v	module:modamber9
NNEWNCOL	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NEWNVAL(:,:), NNEWNCOL(/;"	v	module:NGTMEM
NNLEN	pathsample.nodes.f90	/^     INTEGER :: JPN,NNODES,NNLEN$/;"	v	module:NODES
NNODES	pathsample.nodes.f90	/^     INTEGER :: JPN,NNODES,/;"	v	module:NODES
NNREPULSIVE	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS, NEBRESEEDINT, NREPULSIVE, &$/;"	v	module:KEY
NNT	optim.modunres.f90	/^      INTEGER :: NNT,/;"	v	module:MODUNRES
NNZ	optim.intcommons.f90	/^  INTEGER :: KD, NNZ$/;"	v	module:INTCOMMONS
NO	optim.SD.f90	/^integer :: NO,/;"	v	module:SDwater
NOCISTRANS	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS,/;"	v	module:COMMONS
NOCISTRANS	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS, MODEL1T, NEWRESTART_MD, CHANGE_TEMP, NOCISTRANS,/;"	v	module:COMMONS
NOCISTRANS	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,/;"	v	module:modcharmm
NOCISTRANSDNA	g.modamber9.f90	/^      LOGICAL NOCISTRANSDNA,/;"	v	module:MODAMBER9
NOCISTRANSDNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA,/;"	v	module:modamber9
NOCISTRANSRNA	g.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA,/;"	v	module:MODAMBER9
NOCISTRANSRNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA,/;"	v	module:modamber9
NODEN	pathsample.nodes.f90	/^     CHARACTER(LEN=120) :: NODEN$/;"	v	module:NODES
NODENAME	pathsample.nodes.f90	/^     CHARACTER(LEN=80),ALLOCATABLE,DIMENSION(:) :: NODENAME$/;"	v	module:NODES
NODES	pathsample.nodes.f90	/^MODULE NODES$/;"	m
NODESTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=120) :: NODESTRING$/;"	v	module:NODES
NOFRQS	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP, DUMPSP, NOFRQS,/;"	v	module:KEY
NOGLY	optim.main.f90	/^      INTEGER :: NRES,I_RES,NOGLY$/;"	v	program:OPTIM4
NOHESS	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS,/;"	v	module:KEY
NOIT	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT,/;"	v	module:KEY
NOLBFGS	optim.gsdata.f90	/^  LOGICAL :: NOLBFGS$/;"	k	type:IMGNODE
NOMEGAC	g.modamber9.f90	/^integer, dimension(:), allocatable :: NOMEGAC$/;"	v	module:MODAMBER9
NOMEGAC	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,/;"	v	module:MODCHARMM
NOMEGAC	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NOMEGAC$/;"	v	module:modamber9
NOMEGAC	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,/;"	v	module:modcharmm
NOMEGACTOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,NOMEGACTOT,/;"	v	module:modcharmm
NOPERMPROCHIRAL	optim.modamber9.f90	/^logical :: NOPERMPROCHIRAL /;"	v	module:modamber9
NOPHIPSIT	g.modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT,/;"	v	module:MODCHARMM
NOPT	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT,/;"	v	module:COMMONS
NORANDOM	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,/;"	v	module:modcharmm
NORDER	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER,/;"	v	module:KEY
NORDERB	optim.modcharmm.f90	/^      INTEGER :: NMINB,NORDERB$/;"	v	module:modcharmm
NORESET	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET,/;"	v	module:COMMONS
NORESET	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET,/;"	v	module:COMMONS
NORESET	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE, NORESET,/;"	v	module:KEY
NORMAL	g.ptgrp.f	/^      SUBROUTINE NORMAL(/;"	s
NORMAL	optim.utils.f	/^      SUBROUTINE NORMAL(/;"	s
NORMALIZE	optim.specialfuncts.f90	/^    SUBROUTINE NORMALIZE(/;"	s	module:SPFUNCTS
NOSHIFT	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT,/;"	v	module:KEY
NO_zero	optim.amhglobals.f	/^        double precision sigma_h,sigma_NO,ho_zero,NO_zero$/;"	v	module:amhglobals
NPAHT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT,/;"	v	module:COMMONS
NPAHT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT,/;"	v	module:COMMONS
NPAIRS	commons.f90	/^INTEGER :: NPAIRS$/;"	v	module:COMMONS
NPAIRS	g.commons.f90	/^      INTEGER :: NPAIRS$/;"	v	module:COMMONS
NPAIRS	g.commons.o.f90	/^      INTEGER :: NPAIRS$/;"	v	module:COMMONS
NPAR	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR,/;"	v	module:COMMONS
NPAR	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR,/;"	v	module:COMMONS
NPERMDIHE	optim.modcharmm.f90	/^      INTEGER :: NPERMDIHE$/;"	v	module:modcharmm
NPERMGROUP	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP,/;"	v	module:COMMONS
NPERMGROUP	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ, BSPTDUMPFRQ, NPERMGROUP,/;"	v	module:COMMONS
NPERMGROUP	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP,/;"	v	module:KEY
NPERMSIZE	g.commons.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v	module:COMMONS
NPERMSIZE	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v	module:COMMONS
NPERMSIZE	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v	module:KEY
NPHI	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,/;"	v	module:MODUNRES
NPHIPSI	g.modamber9.f90	/^integer, dimension(:), allocatable :: NPHIPSI$/;"	v	module:MODAMBER9
NPHIPSI	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,/;"	v	module:MODCHARMM
NPHIPSI	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NPHIPSI$/;"	v	module:modamber9
NPHIPSI	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,/;"	v	module:modcharmm
NPHIPSITOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,/;"	v	module:modcharmm
NPHYSICALSITES	pathsample.rigidbody.f90	/^     INTEGER :: NPHYSICALSITES /;"	k	type:RIGIDBODYPOTENTIAL
NPHYSICALSITES	pathsample.rigidbodymod.f90	/^     INTEGER :: NPHYSICALSITES /;"	k	type:RIGIDBODYPOTENTIAL
NPOWER	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER,/;"	v	module:KEY
NPROC	optim.key.f90	/^      CHARACTER(LEN=4) :: NPROC$/;"	v	module:KEY
NPS	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS,/;"	v	module:COMMONS
NPS	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS,/;"	v	module:COMMONS
NPYSITE	g.commons.f90	/^      INTEGER  NGBSITE, NPYSITE,/;"	v	module:COMMONS
NPYSITE	g.commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE,/;"	v	module:COMMONS
NQ	commons.f90	/^INTEGER :: NQ$/;"	v	module:COMMONS
NQ	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ,/;"	v	module:COMMONS
NQ	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ,/;"	v	module:COMMONS
NQTOT	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS, NSUCCESST, NQTOT$/;"	v
NQUENCH	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH,/;"	v	module:COMMONS
NQUENCH	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH,/;"	v	module:COMMONS
NR	optim.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NR,/;"	v	module:COMMONS
NRBGROUP	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP,/;"	v	module:KEY
NRBSITES	g.commons.f90	/^     &        HBINS, NRBSITES,/;"	v	module:COMMONS
NRBSITES	g.commons.o.f90	/^     &        HBINS, NRBSITES,/;"	v	module:COMMONS
NRBSITES	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT, NMOL, NINTS, NRBSITES$/;"	v	module:COMMONS
NRBSITES1	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1,/;"	v	module:COMMONS
NRBSITES1	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1,/;"	v	module:COMMONS
NRBTRIES	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE, DUMPINTXYZFREQ, DUMPINTEOSFREQ, &$/;"	v	module:KEY
NRELAX	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX,/;"	v	module:COMMONS
NRELAX	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX,/;"	v	module:COMMONS
NRENORM	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM,/;"	v	module:COMMONS
NRENORM	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM,/;"	v	module:COMMONS
NRENSTUCK	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,/;"	v	module:COMMONS
NRENSTUCK	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS, MUPDATE, LSYS, NHSMOVE, NRENORM, NRELAX, NHSRESTART, NRENSTUCK,/;"	v	module:COMMONS
NREPCUT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:), NREPCUT(/;"	v	module:KEY
NREPEAT	g.modcharmm.f90	/^      INTEGER :: ISEED, NCHENCALLS, NREPEAT,/;"	v	module:MODCHARMM
NREPELTS	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS,/;"	v	module:KEY
NREPI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NREPI(/;"	v	module:KEY
NREPJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NREPI(:), NREPJ(/;"	v	module:KEY
NREPMAX	optim.key.f90	/^      INTEGER :: NREPMAX=/;"	v	module:KEY
NREPULSIVE	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS, NEBRESEEDINT, NREPULSIVE,/;"	v	module:KEY
NRES	optim.main.f90	/^      INTEGER :: NRES,/;"	v	program:OPTIM4
NRES	optim.modunres.f90	/^      INTEGER :: NRES,/;"	v	module:MODUNRES
NRES0	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,/;"	v	module:MODUNRES
NRES_AMH_TEMP	optim.key.f90	/^      INTEGER :: NRES_AMH_TEMP /;"	v	module:KEY
NRIM	optim.gsdata.f90	/^  INTEGER :: NIM, NLIM, NRIM /;"	k	type:IMGNODE
NRMLMD	optim.newtip.f90	/^      SUBROUTINE NRMLMD /;"	s
NRNG	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG,/;"	v	module:INTCOMMONS
NROTE	optim.rotd.f	/^      SUBROUTINE NROTE(/;"	s
NRUNS	g.commons.f90	/^     &        MCSTEPS(3), NRUNS,/;"	v	module:COMMONS
NRUNS	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS,/;"	v	module:COMMONS
NS	g.commons.f90	/^     &        NINTV, NSE/;"	v	module:COMMONS
NS	g.commons.o.f90	/^     &        NINTV, NSE/;"	v	module:COMMONS
NSACCEPT	g.commons.f90	/^     &        NSUPER, NSACCEPT,/;"	v	module:COMMONS
NSACCEPT	g.commons.o.f90	/^     &        NSUPER, NSACCEPT,/;"	v	module:COMMONS
NSAVE	commons.f90	/^INTEGER :: NSAVE=/;"	v	module:COMMONS
NSAVE	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE,/;"	v	module:COMMONS
NSAVE	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE,/;"	v	module:COMMONS
NSAVEINTE	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE,/;"	v	module:COMMONS
NSAVEINTE	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=0, NFREEZE, NSAVEINTE,/;"	v	module:COMMONS
NSCP_GR	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,/;"	v	module:MODUNRES
NSECDIAG	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG,/;"	v	module:KEY
NSEED	g.commons.f90	/^     &        NINTV, NSEED,/;"	v	module:COMMONS
NSEED	g.commons.o.f90	/^     &        NINTV, NSEED,/;"	v	module:COMMONS
NSEGATOMS	g.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS,/;"	v	module:MODCHARMM
NSEGATOMS	optim.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS /;"	v	module:modcharmm
NSETS	g.commons.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v	module:COMMONS
NSETS	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v	module:COMMONS
NSETS	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v	module:KEY
NSHESS	g.tosifumi.f	/^      SUBROUTINE NSHESS(/;"	s
NSHESS	optim.tosifumi.f	/^      SUBROUTINE NSHESS(/;"	s
NSIDE	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,/;"	v	module:MODUNRES
NSIDECHAIN	g.modamber9.f90	/^integer, dimension(:), allocatable :: NSIDECHAIN$/;"	v	module:MODAMBER9
NSIDECHAIN	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,/;"	v	module:MODCHARMM
NSIDECHAIN	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NSIDECHAIN$/;"	v	module:modamber9
NSIDECHAIN	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,/;"	v	module:modcharmm
NSIDECHAINTOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,NOMEGACTOT,NSIDECHAINTOT,/;"	v	module:modcharmm
NSITES	pathsample.rigidbody.f90	/^     INTEGER :: NSITES$/;"	k	type:RIGIDBODYPOTENTIAL
NSITES	pathsample.rigidbodymod.f90	/^     INTEGER :: NSITES$/;"	k	type:RIGIDBODYPOTENTIAL
NSSTOP	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP,/;"	v	module:COMMONS
NSSTOP	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP,/;"	v	module:COMMONS
NSTART	pathsample.nodes.f90	/^     INTEGER NSTART,/;"	v	module:NODES
NSTART2	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2,/;"	v	module:NODES
NSTEP	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM, N3_ATOM, CONPOT, NSTEP$/;"	v	module:VGWSP
NSTEPMIN	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN,/;"	v	module:KEY
NSTEPNEB	optim.modneb.f90	/^      INTEGER :: NSTEPNEB,/;"	v	module:MODNEB
NSTEPS	mc.vars.inc.f90	/^      INTEGER NSTEPS$/;"	v
NSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS,/;"	v	module:KEY
NSTHUP	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP,/;"	v	module:KEY
NSUCCESS	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS,/;"	v
NSUCCESST	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS, NSUCCESST,/;"	v
NSUMMARY	optim.key.f90	/^      INTEGER :: NSUMMARY,/;"	v	module:KEY
NSUPER	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN, &$/;"	v	module:COMMONS
NSUPER	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT, COULN, &$/;"	v	module:COMMONS
NSUPERSTEP	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP,/;"	v	module:COMMONS
NSUPERSTEP	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP,/;"	v	module:COMMONS
NSURFMOVES	g.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE, NSURFMOVES /;"	v	module:COMMONS
NSURFMOVES	g.commons.o.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NT, NQ, BLOCK, JUMPINT, JUMPTO, NCORE, NSURFMOVES /;"	v	module:COMMONS
NSYMINTERVAL	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL,/;"	v	module:COMMONS
NSYMINTERVAL	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL,/;"	v	module:COMMONS
NSYMQMAX	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX,/;"	v	module:COMMONS
NSYMQMAX	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX,/;"	v	module:COMMONS
NSYMREM	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=/;"	v	module:COMMONS
NSYMREM	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID, NSYMREM=/;"	v	module:COMMONS
NSpline	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline,/;"	v	module:COMMONS
NSpline	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline,/;"	v	module:COMMONS
NT	g.commons.f90	/^      INTE/;"	v	module:COMMONS
NT	g.commons.o.f90	/^      INTE/;"	v	module:COMMONS
NTAB	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB,/;"	v	module:COMMONS
NTAB	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB,/;"	v	module:COMMONS
NTAG	optim.commons.f90	/^      INTEGER NTAG$/;"	v	module:COMMONS
NTARGETS	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS,/;"	v	module:COMMONS
NTARGETS	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS,/;"	v	module:COMMONS
NTHETA	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,/;"	v	module:MODUNRES
NTIPT	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT,/;"	v	module:COMMONS
NTIPT	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT,/;"	v	module:COMMONS
NTIPT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT,/;"	v	module:KEY
NTRAPPOW	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS, INTSTEPS1, INTLJSTEPS, &$/;"	v	module:KEY
NTSITES	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES,/;"	v	module:KEY
NTSSAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE, NMINBSAVE, NMINSAVE, NTSSAVE$/;"	v	module:SAVESTATE
NTWO	optim.modtwoend.f90	/^      INTEGER :: NTWO,/;"	v	module:MODTWOEND
NTWOITER	optim.modtwoend.f90	/^      INTEGER :: NTWO, NTWOITER$/;"	v	module:MODTWOEND
NTW_ANGLES	g.modamber9.f90	/^integer:: NTW_ANGLES /;"	v	module:MODAMBER9
NTW_ANGLES	optim.modamber9.f90	/^integer:: NTW_ANGLES /;"	v	module:modamber9
NTYP	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM, MAXVAR, NTYP,/;"	v	module:MODUNRES
NTYP1	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM, MAXVAR, NTYP, NTYP1$/;"	v	module:MODUNRES
NTYPE	bln.vars.inc.f90	/^        INTEGER NTYPE(/;"	v
NTYPE	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(/;"	v	program:OPTIM4
NTempPoints	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints,/;"	v	module:COMMONS
NTempPoints	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints,/;"	v	module:COMMONS
NUBONDS	optim.intcommons.f90	/^  INTEGER :: NUBONDS=/;"	v	module:INTCOMMONS
NUMBER_OF_ATOMS	func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	g.func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	gmin.func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	gmin.main.f90	/^      INTEGER :: NUMBER_OF_ATOMS$/;"	v	program:GMIN
NUMER	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,/;"	v	module:MODAMBER
NUMERICALZEROLIMIT	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: NUMERICALZEROLIMIT /;"	v	module:msevb_common
NUMGLY	optim.key.f90	/^      INTEGER :: SEQ(500),NUMGLY$/;"	v	module:KEY
NUMPRO	g.amhdummy.f	/^      INTEGER NUMPRO$/;"	v	module:AMHGLOBALS
NUMPRO_AMH	g.commons.f90	/^      INTEGER NUMPRO_AMH,/;"	v	module:COMMONS
NUMPRO_AMH	g.commons.o.f90	/^      INTEGER NUMPRO_AMH,/;"	v	module:COMMONS
NUMRBTYPES	pathsample.rigidbody.f90	/^  INTEGER :: NUMRBTYPES$/;"	v	module:RIGIDBODY
NUMRBTYPES	pathsample.rigidbodymod.f90	/^  INTEGER :: NUMRBTYPES$/;"	v	module:RIGIDBODYMOD
NUMSEC	optim.modunres.f90	/^      INTEGER :: STARTRES(10),ENDRES(10),NUMSEC$/;"	v	module:MODUNRES
NUM_G	g.vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=3, NUM_G=/;"	v	module:VGW
NUM_TO_CHAR	g.amhdummy.f	/^      SUBROUTINE NUM_TO_CHAR(/;"	s
NUNIQUE	optim.commons.f90	/^      INTEGER :: NUNIQUE,/;"	v	module:COMMONS
NUP	optim.zwk.f90	/^       INTEGER :: NUP$/;"	v	module:ZWK
NURINGS	optim.intcommons.f90	/^  INTEGER :: NURINGS=/;"	v	module:INTCOMMONS
NUSEEV	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS, GCUPDATE, GCSEED, &$/;"	v	module:KEY
NVAL	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NVAL(/;"	v	module:NGTMEM
NVALTEMP	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NVAL(:,:), NVALTEMP(/;"	v	module:NGTMEM
NVALTMP	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NEWNVAL(:,:), NNEWNCOL(:), NVALTMP(/;"	v	module:NGTMEM
NVALUES	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES,/;"	v	module:KEY
NVAR	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR,/;"	v	module:COMMONS
NVAR	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR,/;"	v	module:COMMONS
NVARU	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,NVARU,/;"	v	module:MODUNRES
NVEC	g.commons.f90	/^     &        NINTV, NSEED, NVEC,/;"	v	module:COMMONS
NVEC	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC,/;"	v	module:COMMONS
NVECTORS	g.commons.f90	/^     &        NEVL, NEVS, NVECTORS,/;"	v	module:COMMONS
NVECTORS	g.commons.o.f90	/^     &        NEVL, NEVS, NVECTORS,/;"	v	module:COMMONS
NVECTORS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS,/;"	v	module:KEY
NZERO	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO,/;"	v	module:KEY
N_ATOM	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM,/;"	v	module:VGW
N_ATOM	g.vgw.f90	/^     INTEGER, SAVE :: N_ATOM,/;"	v	module:VGWSP
N_DIM	g.vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=/;"	v	module:VGW
N_DIM	g.vgw.f90	/^     INTEGER, PARAMETER :: N_DIM=/;"	v	module:VGWSP
Na	optim.SD.f90	/^integer :: NO, Na$/;"	v	module:SDwater
Nats	optim.ttm3f.f90	/^integer :: Nats,/;"	v	module:ttm3f_mod
Natsd	optim.ttm3f.f90	/^integer :: Nats, Natsd,/;"	v	module:ttm3f_mod
Natsq	optim.ttm3f.f90	/^integer :: Nats, Natsd, Natsq$/;"	v	module:ttm3f_mod
Ninodes	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,Nsinks,Ninodes,/;"	v	module:DataModule
Nnodes	pathsample.GT2data.f90	/^     integer :: Nnodes,/;"	v	module:DataModule
Node	pathsample.GT2data.f90	/^     type Node$/;"	t	module:DataModule
NodeArray	pathsample.GT2data.f90	/^     type NodeArray$/;"	t	module:DataModule
NodeList	pathsample.GT2data.f90	/^     type NodeList$/;"	t	module:DataModule
Nsinks	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,Nsinks,/;"	v	module:DataModule
Nsources	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,/;"	v	module:DataModule
NumberOfTrajectories	g.commons.f90	/^     &        NINTS, NumberOfTrajectories,/;"	v	module:COMMONS
NumberOfTrajectories	g.commons.o.f90	/^     &        NINTS, NumberOfTrajectories,/;"	v	module:COMMONS
NunprocessedNodes	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,Nsinks,Ninodes,NunprocessedNodes$/;"	v	module:DataModule
Nw_old	optim.ttm3f.f90	/^integer :: Nw_old$/;"	v	module:ttm3f_mod
OBJCTF	g.pyg.f90	/^      SUBROUTINE OBJCTF(/;"	s
OBJCTF	optim.pyg.f90	/^      SUBROUTINE OBJCTF(/;"	s
OBJCTFGB	g.takestepmsgb.f90	/^      SUBROUTINE OBJCTFGB(/;"	s
OCCUPANCY	g.molinfo.f90	/^        DOUBLE PRECISION   :: OCCUPANCY /;"	k	type:ATOM
OCHARMM	optim.chdummy.f	/^      SUBROUTINE OCHARMM(/;"	s
ODDCHARGE	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE,/;"	v	module:COMMONS
ODDCHARGE	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP, EAMP, DISTFAC, ODDCHARGE,/;"	v	module:COMMONS
ODDTHOMSON	g.thomson.f	/^      SUBROUTINE ODDTHOMSON(/;"	s
ODESD	g.odesd.f	/^      SUBROUTINE ODESD(/;"	s
ODESD	optim.odesd.f	/^      SUBROUTINE ODESD(/;"	s
ODIHET	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET,/;"	v	module:MODCHARMM
ODIHET	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,/;"	v	module:modcharmm
OEINTT	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT, ORGYT, OHYDRGYT, OEINTT$/;"	v	module:MODCHARMM
OEPATH	optim.OPTIM.F	93;"	c	subroutine:OPTIM
OEPATH	optim.func.f90	72;"	c	subroutine:OPTIM
OEPATH	optim.geopt.f	80;"	c	subroutine:GEOPT
OESCP	optim.escp.f	/^      SUBROUTINE OESCP(/;"	s
OFFSET	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:LJCAPSIDMODULE
OFFSET	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:PYMODULE
OFFSET	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:LJCAPSIDMODULE
OFFSET	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:PYMODULE
OHT	g.commons.f90	/^      LOGICAL :: FIELDT, OHT,/;"	v	module:COMMONS
OHT	g.commons.o.f90	/^      LOGICAL :: FIELDT, OHT,/;"	v	module:COMMONS
OHT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT,/;"	v	module:KEY
OHYDRGYT	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT, ORGYT, OHYDRGYT,/;"	v	module:MODCHARMM
OLDC	optim.connect.f	1788;"	c	subroutine:TSSEARCH
OLDECF	g.ljcapsidmodule.f90	/^SUBROUTINE OLDECF(/;"	s
OLDECF2	g.ljcapsidmodule.f90	/^SUBROUTINE OLDECF2(/;"	s
OLDECFcheck	g.ljcapsidmodule.f90	/^SUBROUTINE OLDECFcheck(/;"	s
OLDINTMINPERMT	optim.intcommons.f90	/^  LOGICAL :: OLDINTMINPERMT=/;"	v	module:INTCOMMONS
OLDNEB	optim.oldneb.f	/^      SUBROUTINE OLDNEB(/;"	s
OLDPARAMONOV	g.ljcapsidmodule.f90	/^       SUBROUTINE OLDPARAMONOV(/;"	s
OLDROTGEOMSTOCK	optim.newmindist.f90	/^SUBROUTINE OLDROTGEOMSTOCK(/;"	s
OLD_INTMINPERM	optim.intcoords.f90	/^    SUBROUTINE OLD_INTMINPERM(/;"	s	module:INTCUTILS
OMEG	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,PHI,ALPH,OMEG$/;"	v	module:MODUNRES
OMEGA	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL, PVCONV, PVTOL, &$/;"	v	module:KEY
OMEGAC	g.modamber9.f90	/^integer, dimension(:), allocatable :: OMEGAC$/;"	v	module:MODAMBER9
OMEGAC	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,/;"	v	module:MODCHARMM
OMEGAC	optim.modamber9.f90	/^integer, dimension(:), allocatable :: OMEGAC$/;"	v	module:modamber9
OMEGAC	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,/;"	v	module:modcharmm
OMEGAEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: OMEGAEQ /;"	v	module:msevb_common
OMEGASTART	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB, ITYMINB, ITZMINB, OMEGASTART$/;"	v	module:modcharmm
OMEGAT	g.modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT,/;"	v	module:MODCHARMM
OMOVE	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE, OMOVE /;"	v	module:COMMONS
OMOVE	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE, OMOVE /;"	v	module:COMMONS
OMOVI	g.amhdummy.f	/^      INTEGER OMOVI$/;"	v	module:AMHGLOBALS
ONELET	optim.modunres.f90	/^      CHARACTER(LEN=1) :: ONELET$/;"	v	module:MODUNRES
ONETEP	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY, CASTEP, ONETEP,/;"	v	module:KEY
ONETEP	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,/;"	v	program:OPTIM4
ONETEPJOB	optim.key.f90	/^      CHARACTER(LEN=120) :: CASTEPJOB, CP2KJOB, ONETEPJOB$/;"	v	module:KEY
ONHBT	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT,/;"	v	module:MODCHARMM
ONNHBT	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT,/;"	v	module:MODCHARMM
OOCLASH_SQ	optim.msevb_common.f90	/^  DOUBLE PRECISION :: OOCLASH_SQ$/;"	v	module:msevb_common
OPENDATA	g.io_sanity.f90	/^FUNCTION OPENDATA(/;"	f
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OPENF	g.func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OPENF	gmin.func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OPENINPUT	g.io_sanity.f90	/^FUNCTION OPENINPUT(/;"	f
OPENIOSTAT	func.f90	/^     SUBROUTINE OPENIOSTAT(/;"	s
OPENIOSTAT	pathsample.utils.f90	/^     SUBROUTINE OPENIOSTAT(/;"	s	module:UTILS
OPTIM	optim.OPTIM.F	/^      SUBROUTINE OPTIM(/;"	s
OPTIM	optim.func.f90	/^      SUBROUTINE OPTIM(/;"	s
OPTIM4	optim.main.f90	/^      PROGRAM OPTIM4$/;"	p
OPTMAXE	optim.modguess.f90	/^      LOGICAL :: OPTTOTAL=.FALSE., OPTMAXE=/;"	v	module:MODGUESS
OPTTOTAL	optim.modguess.f90	/^      LOGICAL :: OPTTOTAL=/;"	v	module:MODGUESS
ORDERBLABEL	optim.modcharmm.f90	/^      CHARACTER(LEN=8) ORDERBLABEL(/;"	v	module:modcharmm
ORDERBPARAM	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:) :: ORDERBPARAM(/;"	v	module:modcharmm
ORDERBT	optim.modcharmm.f90	/^      LOGICAL :: ORDERBT$/;"	v	module:modcharmm
ORDERI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: ORDERI(/;"	v	module:KEY
ORDERJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: ORDERI(:), ORDERJ(/;"	v	module:KEY
ORDERNUM	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(:), ORDERNUM(/;"	v	module:KEY
ORDERODATA	pathsample.orderodata.f	/^      SUBROUTINE ORDERODATA(/;"	s
ORDERPARAMT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT,/;"	v	module:KEY
ORDERQ4	g.Q4.f	/^      SUBROUTINE ORDERQ4(/;"	s
ORGYT	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT, ONNHBT, ONHBT, ORGYT,/;"	v	module:MODCHARMM
ORIENT	pathsample.orient.f	/^      SUBROUTINE ORIENT(/;"	s
ORIENT2D	pathsample.orient.f	/^      SUBROUTINE ORIENT2D(/;"	s
ORIENTA	optim.minpermdistrbcom.f90	/^      SUBROUTINE ORIENTA(/;"	s
ORIENTA	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE ORIENTA(/;"	s
ORMSDT	g.modcharmm.f90	/^      LOGICAL :: OSASAT, ODIHET, ORMSDT,/;"	v	module:MODCHARMM
ORTHO	g.ortho.f	/^      SUBROUTINE ORTHO(/;"	s
ORTHOGOPT	optim.bfgsts.f	/^      SUBROUTINE ORTHOGOPT(/;"	s
ORTHOGRIGID	optim.rigidb.f90	/^      SUBROUTINE ORTHOGRIGID /;"	s
ORTHOGSTOCK	optim.stock.f	/^      SUBROUTINE ORTHOGSTOCK(/;"	s
ORTHOGTH	optim.thomson.f	/^      SUBROUTINE ORTHOGTH(/;"	s
OSASAT	g.modcharmm.f90	/^      LOGICAL :: OSASAT,/;"	v	module:MODCHARMM
OSASAT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,/;"	v	module:modcharmm
OST	g.pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(/;"	v	module:PYMODULE
OSTEP	commons.f90	/^DOUBLE PRECISION :: OSTEP=/;"	v	module:COMMONS
OSTEP	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP,/;"	v	module:COMMONS
OSTEP	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP, OSTEP,/;"	v	module:COMMONS
OSTRING	optim.main.f90	/^      CHARACTER(LEN=20) OTEMP, OSTRING,/;"	v	program:OPTIM4
OTEMP	optim.main.f90	/^      CHARACTER(LEN=20) OTEMP,/;"	v	program:OPTIM4
OTPT	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID, FREEZE, &$/;"	v	module:COMMONS
OTPT	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM, CAPSID, FREEZE, &$/;"	v	module:COMMONS
OUTPUT	optim.growstring.f90	/^  SUBROUTINE OUTPUT(/;"	s	module:GROWSTRINGUTILS
OUTPUT	pathsample.GT2.save.f90	/^     SUBROUTINE OUTPUT(/;"	s	module:GRAPHTRANSFORMATIONMODULE
OVECC	g.dftb.f	/^      SUBROUTINE OVECC(/;"	s
OVECC	optim.dftb.f	/^      SUBROUTINE OVECC(/;"	s
OVERL	g.frausi.f	/^      SUBROUTINE OVERL(/;"	s
P	optim.msevb_common.f90	/^  DOUBLE PR/;"	v	module:msevb_common
P	pathsample.GT2data.f90	/^          type(RealList),pointer :: P$/;"	k	type:Node
P	pathsample.GT2data.f90	/^     double precision,dimension(:,:),allocatable :: P$/;"	v	module:DataModule
P46	commons.f90	/^LOGICAL P46=/;"	v	module:COMMONS
P46	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46,/;"	v	module:COMMONS
P46	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46,/;"	v	module:COMMONS
P46MERDIFF	g.p46merdiff.f	/^        SUBROUTINE P46MERDIFF(/;"	s
P46MERDIFF	p46merdiff.f	/^        SUBROUTINE P46MERDIFF(/;"	s
P4DIFF	optim.p4diff.f	/^      SUBROUTINE P4DIFF(/;"	s
P4G	optim.p4diff.f	/^      SUBROUTINE P4G(/;"	s
P4S	optim.p4diff.f	/^      SUBROUTINE P4S(/;"	s
PACHECO	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO,/;"	v	module:COMMONS
PACHECO	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO,/;"	v	module:COMMONS
PAH	g.pah.f	/^      SUBROUTINE PAH(/;"	s
PAHA	g.paha.f90	/^      SUBROUTINE PAHA /;"	s
PAHAGH	optim.pahagh.f90	/^      SUBROUTINE PAHAGH /;"	s
PAHAT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT,/;"	v	module:COMMONS
PAHAT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT,/;"	v	module:COMMONS
PAHAT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT,/;"	v	module:KEY
PAHID	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID,/;"	v	module:COMMONS
PAHID	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID, PAHID,/;"	v	module:COMMONS
PAHID	optim.key.f90	/^     &        TIPID, PAHID,/;"	v	module:KEY
PAHT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT,/;"	v	module:COMMONS
PAHT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT,/;"	v	module:COMMONS
PAHW99	g.pahw99.f90	/^      SUBROUTINE PAHW99(/;"	s
PAHW99T	g.commons.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T,/;"	v	module:COMMONS
PAHW99T	g.commons.o.f90	/^     &        MSGBT, MSPYGT, MSTBINT, MMRSDPT, MSSTOCKT, LWOTPT, NCAPT, NPAHT, NTIPT, PAHW99T,/;"	v	module:COMMONS
PAIRDIST	commons.f90	/^INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:COMMONS
PAIRDIST	g.commons.f90	/^      INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:COMMONS
PAIRDIST	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:COMMONS
PAIRDISTANCE	g.operations.f90	/^FUNCTION PAIRDISTANCE(/;"	f
PAIRDISTT	commons.f90	/^LOGICAL :: PAIRDISTT$/;"	v	module:COMMONS
PAIRDISTT	g.commons.f90	/^      LOGICAL :: PAIRDISTT$/;"	v	module:COMMONS
PAIRDISTT	g.commons.o.f90	/^      LOGICAL :: PAIRDISTT$/;"	v	module:COMMONS
PAIRDIST_FH	commons.f90	/^INTEGER :: PAIRDIST_FH=/;"	v	module:COMMONS
PAIRDOUBLE	pathsample.pairdouble.f90	/^SUBROUTINE PAIRDOUBLE$/;"	s
PARALLEL	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL,/;"	v	module:KEY
PARALLELT	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT,/;"	v	module:COMMONS
PARALLELT	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT,/;"	v	module:COMMONS
PARALLELTEMPERING	g.ptmc.F	/^      SUBROUTINE PARALLELTEMPERING$/;"	s
PARAM1	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=/;"	v	module:COMMONS
PARAM2	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2,/;"	v	module:COMMONS
PARAM3	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3,/;"	v	module:COMMONS
PARAM4	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4,/;"	v	module:COMMONS
PARAM5	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5,/;"	v	module:COMMONS
PARAM6	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6,/;"	v	module:COMMONS
PARAM7	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7,/;"	v	module:COMMONS
PARAMB2	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,/;"	v	module:COMMONS
PARAMB2	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,/;"	v	module:COMMONS
PARAMONOVCUTOFF	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF,/;"	v	module:COMMONS
PARAMONOVCUTOFF	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF,/;"	v	module:COMMONS
PARAMONOVCUTOFF	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,PARAMONOVPBCY,PARAMONOVPBCZ,PARAMONOVCUTOFF$/;"	v	module:KEY
PARAMONOVNUMFIRSTDER	g.ljcapsidmodule.f90	/^SUBROUTINE PARAMONOVNUMFIRSTDER(/;"	s
PARAMONOVNUMFIRSTDER	optim.ljcapsidmodule.f90	/^SUBROUTINE PARAMONOVNUMFIRSTDER(/;"	s
PARAMONOVPBCX	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T, &$/;"	v	module:COMMONS
PARAMONOVPBCX	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T, &$/;"	v	module:COMMONS
PARAMONOVPBCX	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,/;"	v	module:KEY
PARAMONOVPBCY	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY,/;"	v	module:COMMONS
PARAMONOVPBCY	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY,/;"	v	module:COMMONS
PARAMONOVPBCY	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,PARAMONOVPBCY,/;"	v	module:KEY
PARAMONOVPBCZ	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ,/;"	v	module:COMMONS
PARAMONOVPBCZ	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ,/;"	v	module:COMMONS
PARAMONOVPBCZ	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,PARAMONOVPBCY,PARAMONOVPBCZ,/;"	v	module:KEY
PARAMONOVSECDER	g.ljcapsidmodule.f90	/^SUBROUTINE PARAMONOVSECDER(/;"	s
PARAMONOVT	g.commons.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT,/;"	v	module:COMMONS
PARAMONOVT	g.commons.o.f90	/^     &        PROJIT, PROJIHT, LEAPDIHE, DUMPQUT, PARAMONOVT,/;"	v	module:COMMONS
PARAMS	g.JM.f	168;"	c	subroutine:JM2C
PARAMS	g.JM.f	222;"	c	subroutine:JM3C
PARAMS	g.JM.f	42;"	c	subroutine:JMEC
PARAMS	optim.JM.f	1145;"	c	subroutine:JM3C
PARAMS	optim.JM.f	173;"	c	subroutine:JM2C
PARAMS	optim.JM.f	2003;"	c	subroutine:JM3P
PARAMS	optim.JM.f	2645;"	c	subroutine:JMEC
PARAMS	optim.JM.f	2866;"	c	subroutine:JMEP
PARAMS	optim.JM.f	456;"	c	subroutine:JM2P
PARAM_CUT_OFF	optim.Ackland_metals.f90	108;"	c	function:RHO_POT_DD
PARAM_CUT_OFF	optim.Ackland_metals.f90	156;"	c	function:VPOT
PARAM_CUT_OFF	optim.Ackland_metals.f90	23;"	c	function:RHO_POT
PARAM_CUT_OFF	optim.Ackland_metals.f90	243;"	c	function:VPOT_D
PARAM_CUT_OFF	optim.Ackland_metals.f90	338;"	c	function:VPOT_DD
PARAM_CUT_OFF	optim.Ackland_metals.f90	485;"	c	function:FEMBED
PARAM_CUT_OFF	optim.Ackland_metals.f90	539;"	c	function:FEMBED_D
PARAM_CUT_OFF	optim.Ackland_metals.f90	606;"	c	function:FEMBED_DD
PARAM_CUT_OFF	optim.Ackland_metals.f90	62;"	c	function:RHO_POT_D
PARAMa1	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,/;"	v	module:COMMONS
PARAMa1	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,/;"	v	module:COMMONS
PARAMa2	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,/;"	v	module:COMMONS
PARAMa2	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,/;"	v	module:COMMONS
PARAMb1	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,/;"	v	module:COMMONS
PARAMb1	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,/;"	v	module:COMMONS
PARAMc1	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,/;"	v	module:COMMONS
PARAMc1	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,/;"	v	module:COMMONS
PARAMc2	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,/;"	v	module:COMMONS
PARAMc2	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,/;"	v	module:COMMONS
PARSE	stringmod.f90	/^SUBROUTINE PARSE(/;"	s	module:strings
PATCHY	g.commons.f90	/^       LOGICAL :: PATCHY,/;"	v	module:COMMONS
PATCHY	g.commons.o.f90	/^       LOGICAL :: PATCHY,/;"	v	module:COMMONS
PATCHYD	optim.patchyd.f90	/^SUBROUTINE PATCHYD /;"	s
PATCHYDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT,/;"	v	module:KEY
PATCHYPAIR	g.patchy.f90	/^SUBROUTINE PATCHYPAIR /;"	s
PATCHYPOT	g.patchy.f90	/^SUBROUTINE PATCHYPOT /;"	s
PATH	optim.path.f	/^      SUBROUTINE PATH(/;"	s
PATHSDSTEPS	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS,/;"	v	module:KEY
PATHSTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=200) :: PATHSTRING$/;"	v	module:NODES
PATHSTRINGARRAY	pathsample.dock.f90	/^character(len=30), allocatable  ::  PATHSTRINGARRAY(/;"	v	module:DOCKMODULE
PATOM1	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1,/;"	v	module:COMMONS
PATOM1	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1,/;"	v	module:COMMONS
PATOM1	optim.key.f90	/^     &        INTCONSEP, PATOM1,/;"	v	module:KEY
PATOM2	g.commons.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2,/;"	v	module:COMMONS
PATOM2	g.commons.o.f90	/^     &        CPS, CPF, ACKLANDID, PATOM1, PATOM2,/;"	v	module:COMMONS
PATOM2	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2,/;"	v	module:KEY
PB	g.Pbglue.f	/^      BLOCK DATA PB$/;"	b
PBGLUE	g.Pbglue.f	/^      SUBROUTINE PBGLUE /;"	s
PBGLUET	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET,/;"	v	module:COMMONS
PBGLUET	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET,/;"	v	module:COMMONS
PBRANCH	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: PBRANCH(/;"	v	module:NGTMEM
PBRANCHTEMP	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: PBRANCH(:,:), PBRANCHTEMP(/;"	v	module:NGTMEM
PBRANCHTMP	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE ::  PBRANCHTMP(/;"	v	module:NGTMEM
PCALL	g.io1.f	39;"	c	subroutine:IO1
PCALL	g.keyword.f	61;"	c	subroutine:KEYWORD
PCALL	g.potential.f	51;"	c	subroutine:POTENTIAL
PCALL	g.saveit.f	105;"	c	subroutine:A9INTESAVEIT
PCALL	g.saveit.f	29;"	c	subroutine:GSAVEIT
PCALL	optim.OPTIM.F	750;"	c	subroutine:TSUMMARY
PCALL	optim.OPTIM.F	78;"	c	subroutine:OPTIM
PCALL	optim.func.f90	57;"	c	subroutine:OPTIM
PCALL	optim.func.f90	729;"	c	subroutine:TSUMMARY
PCALL	optim.geopt.f	52;"	c	subroutine:GEOPT
PCALL	optim.potential.f	76;"	c	subroutine:POTENTIAL
PCUT	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT,/;"	v	module:COMMONS
PCUT	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(120,3,3), GMAX, CUTOFF, PCUT,/;"	v	module:COMMONS
PCUT	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT,/;"	v	module:KEY
PCUTOFF	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF,/;"	v	module:COMMONS
PCUTOFF	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF,/;"	v	module:COMMONS
PCUTOFF	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,/;"	v	module:KEY
PENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,/;"	v	module:MODAMBER
PEPSILON0	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,/;"	v	module:COMMONS
PEPSILON0	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,/;"	v	module:COMMONS
PEPSILON1	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,&$/;"	v	module:COMMONS
PEPSILON1	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(2),PEPSILON0,&$/;"	v	module:COMMONS
PEPSILON1	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(/;"	v	module:KEY
PEPSILONATTR	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(3), &$/;"	v	module:COMMONS
PEPSILONATTR	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(3), &$/;"	v	module:COMMONS
PEPSILONATTR	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2), &$/;"	v	module:KEY
PEPTBOND	optim.modunres.f90	52;"	c	module:MODUNRES
PERIODIC	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC,/;"	v	module:COMMONS
PERIODIC	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC,/;"	v	module:COMMONS
PERMCHAIN	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: PERMNEIGHBOURS(:,:), PERMCHAIN(/;"	v	module:INTCOMMONS
PERMDIHE	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,RANDOMCUTOFF,PERMDIHE(/;"	v	module:modcharmm
PERMDIHET	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,ENDNUMHESS,PERMDIHET,/;"	v	module:modcharmm
PERMDIST	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST,/;"	v	module:COMMONS
PERMDIST	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST,/;"	v	module:COMMONS
PERMDIST	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT, MORPHT, PERMDIST,/;"	v	module:KEY
PERMDISTINIT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG, CHRIGIDT, PERMDISTINIT,/;"	v	module:KEY
PERMGROUP	g.commons.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v	module:COMMONS
PERMGROUP	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v	module:COMMONS
PERMGROUP	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v	module:KEY
PERMNANGLE	optim.intcommons.f90	/^  DOUBLE PRECISION, ALLOCATABLE :: PERMNANGLE(/;"	v	module:INTCOMMONS
PERMNEIGHBOURS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: PERMNEIGHBOURS(/;"	v	module:INTCOMMONS
PERMOPT	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT,/;"	v	module:COMMONS
PERMOPT	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT,/;"	v	module:COMMONS
PERMU	g.modperm.f90	/^MODULE PERMU$/;"	m
PERMUTE	g.commons.f90	/^      INTEGER, ALLOCATABLE :: PERMUTE(/;"	v	module:COMMONS
PERMUTE	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: PERMUTE(/;"	v	module:COMMONS
PERTABLE	optim.pertable.f	/^      SUBROUTINE PERTABLE$/;"	s
PERTDIHAM	optim.amber9dummy.f90	/^subroutine PERTDIHAM(/;"	s
PERTDIHE	optim.chdummy.f	/^      SUBROUTINE PERTDIHE(/;"	s
PERTDIHET	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,/;"	v	module:modcharmm
PERTHRESH	g.modamber9.f90	/^double precision:: PERTHRESH /;"	v	module:MODAMBER9
PERTHRESH	optim.modamber9.f90	/^double precision:: PERTHRESH /;"	v	module:modamber9
PERTURBGEOMETRY	g.basinsampling.f90	/^      FUNCTION PERTURBGEOMETRY(/;"	f	subroutine:BASINSAMPLING
PFMINSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMINSAVE(:), PFMINSAVE(/;"	v	module:SAVESTATE
PFOLD	pathsample.Pfold.f90	/^SUBROUTINE PFOLD$/;"	s
PFORCE	g.commons.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE,/;"	v	module:COMMONS
PFORCE	g.commons.o.f90	/^     &                 BSPTQMAX, BSPTQMIN, PFORCE,/;"	v	module:COMMONS
PFORCE	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA, REPCON, PFORCE,/;"	v	module:KEY
PFTOTALASAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION PFTOTALASAVE,/;"	v	module:SAVESTATE
PFTOTALBSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION PFTOTALASAVE, PFTOTALBSAVE /;"	v	module:SAVESTATE
PGRAD	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV, FREEZE, GRADSQ, &$/;"	v	module:KEY
PGRP	optim.syminf.f90	/^      CHARACTER(LEN=4) :: FPGRP,/;"	v	module:SYMINF
PHASE	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,/;"	v	module:MODAMBER
PHASE	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,/;"	v	module:MODAMBER
PHASE2	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,/;"	v	module:MODAMBER
PHASE2	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,/;"	v	module:MODAMBER
PHASE3	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,/;"	v	module:MODAMBER
PHASE3	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,/;"	v	module:MODAMBER
PHI	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,PHI,/;"	v	module:MODUNRES
PHIG	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG,/;"	v	module:KEY
PHIPSI	g.modamber9.f90	/^integer, dimension(:), allocatable :: PHIPSI$/;"	v	module:MODAMBER9
PHIPSI	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,/;"	v	module:MODCHARMM
PHIPSI	optim.modamber9.f90	/^integer, dimension(:), allocatable :: PHIPSI$/;"	v	module:modamber9
PHIPSI	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,/;"	v	module:modcharmm
PHI_INTERP	optim.amber9dummy.f90	/^double precision function PHI_INTERP(/;"	f
PI	g.vgw.f90	/^     DOUBLE PRECISION, PARAMETER :: PI=/;"	v	module:VGWSP
PI	optim.intcommons.f90	/^  DOUBLE PRECISION, PARAMETER :: PI=/;"	v	module:INTCOMMONS
PI	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: PI /;"	v	module:msevb_common
PI4	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 = 1.8326D0, PI4=/;"	v
PIKSR2	g.ptgrp.f	/^        SUBROUTINE PIKSR2(/;"	s
PIKSR2	optim.utils.f	/^        SUBROUTINE PIKSR2(/;"	s
PIVOTP	g.modcharmm.f90	/^      DOUBLE PRECISION :: PIVOTP,/;"	v	module:MODCHARMM
PK	g.modamb.f90	/^      DOUBLE PRECISION PK,/;"	v	module:MODAMBER
PK	optim.modamber.f90	/^      DOUBLE PRECISION PK,/;"	v	module:MODAMBER
PK2	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,/;"	v	module:MODAMBER
PK2	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,/;"	v	module:MODAMBER
PK3	g.modamb.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,/;"	v	module:MODAMBER
PK3	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,/;"	v	module:MODAMBER
PLACERMAX	g.modcharmm.f90	/^      DOUBLE PRECISION :: PLACERMIN, PLACERMAX$/;"	v	module:MODCHARMM
PLACERMIN	g.modcharmm.f90	/^      DOUBLE PRECISION :: PLACERMIN,/;"	v	module:MODCHARMM
PLUS	g.commons.f90	/^     &        STAR, PLUS,/;"	v	module:COMMONS
PLUS	g.commons.o.f90	/^     &        STAR, PLUS,/;"	v	module:COMMONS
PLUSSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(/;"	v	module:SAVESTATE
PN	g.modamb.f90	/^      INTEGER PN,/;"	v	module:MODAMBER
PN	optim.modamber.f90	/^      INTEGER PN,/;"	v	module:MODAMBER
PN2	g.modamb.f90	/^      INTEGER PN,IDIVF,PN2,/;"	v	module:MODAMBER
PN2	optim.modamber.f90	/^      INTEGER PN,IDIVF,PN2,/;"	v	module:MODAMBER
PN3	g.modamb.f90	/^      INTEGER PN,IDIVF,PN2,PN3,/;"	v	module:MODAMBER
PN3	optim.modamber.f90	/^      INTEGER PN,IDIVF,PN2,PN3,/;"	v	module:MODAMBER
PNEWJUMP	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP,/;"	v	module:COMMONS
PNEWJUMP	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT, CEIG, PNEWJUMP,/;"	v	module:COMMONS
POINTERMSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(:), MINUSSAVE(:), POINTERMSAVE(/;"	v	module:SAVESTATE
POINTERPSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(:), MINUSSAVE(:), POINTERMSAVE(:), POINTERPSAVE(/;"	v	module:SAVESTATE
PORFUNCS	g.porfuncs.f90	/^MODULE PORFUNCS$/;"	m
POTDAT	g.Pbglue.f	121;"	c	block data:PB
POTDAT	g.Pbglue.f	294;"	c
POTDAT	g.Pbglue.f	325;"	c
POTEL	gmin.main.f90	/^      DOUBLE PRECISION POTEL$/;"	v	program:GMIN
POTENTIAL	g.potential.f	/^      SUBROUTINE POTENTIAL(/;"	s
POTENTIAL	optim.potential.f	/^      SUBROUTINE POTENTIAL(/;"	s
POTENTIAL	potential.f90	/^      SUBROUTINE POTENTIAL(/;"	s
POTS	optim.H2O.pjt2.f	/^      SUBROUTINE POTS(/;"	s
POTV	optim.H2O.pjt2.f	/^      SUBROUTINE POTV(/;"	s
POWERS	optim.escp.f	163;"	c	subroutine:DSCP
POWERS	optim.escp.f	32;"	c	subroutine:OESCP
POWERS	optim.scl.f	32;"	c	subroutine:SCL
PPVALU	g.fedor.f	/^      DOUBLE PRECISION FUNCTION PPVALU(/;"	f
PQ	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,Y,Z,PQ$/;"	v	module:MODAMBER
PRC60	g.PachecoC60.f	/^      SUBROUTINE PRC60(/;"	s
PRC60	optim.PachecoC60.f	/^      SUBROUTINE PRC60(/;"	s
PREPAREDATAFILE	pathsample.dock.f90	/^SUBROUTINE PREPAREDATAFILE(/;"	s	module:DOCKMODULE
PREPAREGMINDIRS	pathsample.dock.f90	/^SUBROUTINE PREPAREGMINDIRS(/;"	s	module:DOCKMODULE
PREPAREGMINFILES	pathsample.dock.f90	/^SUBROUTINE PREPAREGMINFILES$/;"	s	module:DOCKMODULE
PREPAREOPTIMFILES	pathsample.dock.f90	/^SUBROUTINE PREPAREOPTIMFILES$/;"	s	module:DOCKMODULE
PREROTATE	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,FIXATMS, PREROTATE,/;"	k	type:IMGNODE
PRESS	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS,/;"	v	module:KEY
PRESSURE	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE,/;"	v	module:KEY
PREV	optim.gsdata.f90	/^     TYPE(IMGNODE), POINTER :: PREV$/;"	k	type:IMGNODE
PREVDIH	optim.intcommons.f90	/^  DOUBLE PRECISION, POINTER :: PREVDIH(/;"	v	module:INTCOMMONS
PREVGRAD	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: PREVGRAD(/;"	k	type:IMGNODE
PREVXCART	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZCART(:), GCART(:), PREVXCART(/;"	k	type:IMGNODE
PREVXYZ	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: PREVGRAD(:), DIFF(:), PREVXYZ(/;"	k	type:IMGNODE
PRINTCOORDS	optim.intcommons.f90	/^  LOGICAL :: PRINTCOORDS$/;"	v	module:INTCOMMONS
PRINTDIHE	optim.chdummy.f	/^      SUBROUTINE PRINTDIHE(/;"	s
PRINTMATRIX	pathsample.GT2.f90	/^     SUBROUTINE PRINTMATRIX(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTMATRIX	pathsample.GT2.save.f90	/^     SUBROUTINE PRINTMATRIX(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTNODEINFO	pathsample.GT2.f90	/^     SUBROUTINE PRINTNODEINFO(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTNODEINFO	pathsample.GT2.save.f90	/^     SUBROUTINE PRINTNODEINFO(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTPTS	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS,/;"	v	module:KEY
PROBABIL	optim.amber9dummy.f90	/^double precision function PROBABIL(/;"	f
PROBACC	pathsample.probacc.f	/^      SUBROUTINE PROBACC(/;"	s
PROCHIRALCNT	optim.modamber9.f90	/^integer, allocatable :: PROCHIRALCNT(/;"	v	module:modamber9
PROCHIRALH	optim.modamber9.f90	/^logical, allocatable :: PROCHIRALH(/;"	v	module:modamber9
PROCNT	optim.key.f90	/^      INTEGER PROCNT,/;"	v	module:KEY
PROD	optim.mindist.f	/^      SUBROUTINE PROD(/;"	s
PROD	pathsample.mindist.f	/^      SUBROUTINE PROD(/;"	s
PROGRESS	g.commons.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS,/;"	v	module:COMMONS
PROGRESS	g.commons.o.f90	/^     &        PTMC, BINSTRUCTURES, PROGRESS,/;"	v	module:COMMONS
PROJ	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES, &$/;"	v	module:COMMONS
PROJ	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT, MULLERBROWNT, CHARMMENERGIES, &$/;"	v	module:COMMONS
PROJH	optim.projh.f	/^      SUBROUTINE PROJH(/;"	s
PROJI	g.projI.f90	/^SUBROUTINE PROJI(/;"	s
PROJIH	g.projIh.f90	/^SUBROUTINE PROJIH(/;"	s
PROJIHINIT	g.projIh.f90	/^SUBROUTINE PROJIHINIT(/;"	s
PROJIHT	g.commons.f90	/^     &        PROJIT, PROJIHT,/;"	v	module:COMMONS
PROJIHT	g.commons.o.f90	/^     &        PROJIT, PROJIHT,/;"	v	module:COMMONS
PROJIINIT	g.projI.f90	/^SUBROUTINE PROJIINIT(/;"	s
PROJIT	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL, &$/;"	v	module:COMMONS
PROJIT	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES, FREEZEALL, &$/;"	v	module:COMMONS
PROL_PERMUTE	optim.ambnatintern_extras.f90	/^      SUBROUTINE PROL_PERMUTE(/;"	s
PROT	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,/;"	v	module:MODCHARMM
PROT	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,TRANSMAX,PROT,/;"	v	module:modcharmm
PRTFRQ	g.commons.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ,/;"	v	module:COMMONS
PRTFRQ	g.commons.o.f90	/^     &        lhbins, sampledbins, MYNODE, NENRPER, DUMPINT, MYUNIT, PRTFRQ,/;"	v	module:COMMONS
PSCALEFAC1	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(/;"	v	module:COMMONS
PSCALEFAC1	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(/;"	v	module:COMMONS
PSCALEFAC1	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(3),PSCALEFAC1(/;"	v	module:KEY
PSCALEFAC1vec	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC1vec	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:PYMODULE
PSCALEFAC1vec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC1vec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:PYMODULE
PSCALEFAC2	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(/;"	v	module:COMMONS
PSCALEFAC2	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(/;"	v	module:COMMONS
PSCALEFAC2	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(/;"	v	module:KEY
PSCALEFAC2vec	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC2vec	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:PYMODULE
PSCALEFAC2vec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC2vec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:PYMODULE
PSFPHI	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,PSFPHI /;"	v	module:modcharmm
PSIGMA0	g.commons.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(/;"	v	module:COMMONS
PSIGMA0	g.commons.o.f90	/^     &                 GBANISOTROPYR,GBWELLDEPTHR,PARAMa1,PARAMb1,PARAMc1,PARAMa2,PARAMB2,PARAMc2,PSIGMA0(/;"	v	module:COMMONS
PSIGMAATTR	g.commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(/;"	v	module:COMMONS
PSIGMAATTR	g.commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(/;"	v	module:COMMONS
PSIGMAATTR	optim.key.f90	/^     &                     PEPSILONATTR(2),PSIGMAATTR(/;"	v	module:KEY
PSIX	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: PSIX,/;"	v	module:msevb_common
PSIY	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: PSIX, PSIY,/;"	v	module:msevb_common
PSIZ	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: PSIX, PSIY, PSIZ /;"	v	module:msevb_common
PST	g.pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(/;"	v	module:PYMODULE
PTBASINSAMPLING	g.bspt.F	/^      SUBROUTINE PTBASINSAMPLING$/;"	s
PTEMAX	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX,/;"	v	module:COMMONS
PTEMAX	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX,/;"	v	module:COMMONS
PTEMIN	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN,/;"	v	module:COMMONS
PTEMIN	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN,/;"	v	module:COMMONS
PTEST	optim.gsdata.f90	/^  LOGICAL :: PTEST,/;"	k	type:IMGNODE
PTGP	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(/;"	v	module:COMMONS
PTGP	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(/;"	v	module:COMMONS
PTGPGUIDE	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(:,:,:), PTGPGUIDE(/;"	v	module:COMMONS
PTGPGUIDE	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(:), PTGP(:,:,:), PTGPGUIDE(/;"	v	module:COMMONS
PTGROUP	g.commons.f90	/^      CHARACTER(LEN=4), ALLOCATABLE, DIMENSION(:) :: PTGROUP /;"	v	module:COMMONS
PTGROUP	g.commons.o.f90	/^      CHARACTER(LEN=4), ALLOCATABLE, DIMENSION(:) :: PTGROUP /;"	v	module:COMMONS
PTGRP	g.ptgrp.f	/^      SUBROUTINE PTGRP(/;"	s
PTMC	g.commons.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T, & $/;"	v	module:COMMONS
PTMC	g.commons.o.f90	/^     &        ZETT2, RESTART, CONJG, NEWRESTART, AVOID, NATBT, DIFFRACTT, CHRMMT, INTMINT, LB2T, & $/;"	v	module:COMMONS
PTRANS	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,/;"	v	module:MODCHARMM
PTRANS	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,/;"	v	module:modcharmm
PTSTEPS	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB, &$/;"	v	module:COMMONS
PTSTEPS	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX, EXCHPROB, &$/;"	v	module:COMMONS
PTTMAX	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX,/;"	v	module:COMMONS
PTTMAX	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN, PTTMAX,/;"	v	module:COMMONS
PTTMIN	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN,/;"	v	module:COMMONS
PTTMIN	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq, PTEMIN, PTEMAX, PTTMIN,/;"	v	module:COMMONS
PTYPE	bln.vars.inc.f90	/^        CHARACTER(LEN=*) :: PTYPE$/;"	v
PULLT	commons.f90	/^LOGICAL PULLT=/;"	v	module:COMMONS
PULLT	g.commons.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT,/;"	v	module:COMMONS
PULLT	g.commons.o.f90	/^     &        LJSITECOORDST, VGW, ACKLANDT, G46, DF1T, PULLT,/;"	v	module:COMMONS
PULLT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT,/;"	v	module:KEY
PURGICPHI	optim.chdummy.f	/^      SUBROUTINE PURGICPHI(/;"	s
PUSHCUT	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT,/;"	v	module:KEY
PUSHOFF	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF,/;"	v	module:KEY
PV	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV,/;"	v	module:KEY
PVCONV	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL, PVCONV,/;"	v	module:KEY
PVF	optim.OPTIM.F	75;"	c	subroutine:OPTIM
PVF	optim.PV.f	40;"	c	subroutine:PVOPT
PVF	optim.bfgsts.f	78;"	c	subroutine:BFGSTS
PVF	optim.efol.f90	66;"	c	subroutine:EFOL
PVF	optim.func.f90	54;"	c	subroutine:OPTIM
PVF	optim.greatcirc.f	32;"	c	subroutine:GCLBFGS
PVF	optim.hybridmin.f	46;"	c	subroutine:HYBRIDMIN
PVF	optim.intbfgsts.f	50;"	c	subroutine:INTBFGSTS
PVF	optim.morph.f	41;"	c	subroutine:MORPH
PVF	optim.mylbfgs.f	68;"	c	subroutine:MYLBFGS
PVF	optim.odesd.f	35;"	c	subroutine:ODESD
PVF	optim.oldneb.f	312;"	c	subroutine:NEBBFGS
PVF	optim.twoend.f	40;"	c	subroutine:TWOEND
PVOPT	optim.PV.f	/^      SUBROUTINE PVOPT(/;"	s
PVSTEPS	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1, MNBFGSMAX2, PVSTEPS,/;"	v	module:KEY
PVTOL	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL, PVCONV, PVTOL,/;"	v	module:KEY
PVTS	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS,/;"	v	module:KEY
PYA1	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(/;"	v	module:COMMONS
PYA1	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(/;"	v	module:COMMONS
PYA1	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM, &$/;"	v	module:KEY
PYA11	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(/;"	v	module:COMMONS
PYA11	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(/;"	v	module:COMMONS
PYA11	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(/;"	v	module:KEY
PYA12	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(/;"	v	module:COMMONS
PYA12	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(/;"	v	module:COMMONS
PYA12	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(/;"	v	module:KEY
PYA1bin	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(/;"	v	module:COMMONS
PYA1bin	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(/;"	v	module:COMMONS
PYA2	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(/;"	v	module:COMMONS
PYA2	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(/;"	v	module:COMMONS
PYA2	optim.key.f90	/^     &        PYA1(3), PYA2(/;"	v	module:KEY
PYA21	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(/;"	v	module:COMMONS
PYA21	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(/;"	v	module:COMMONS
PYA21	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(/;"	v	module:KEY
PYA22	g.commons.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(/;"	v	module:COMMONS
PYA22	g.commons.o.f90	/^     &                 PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2),PYA11(3),PYA21(3),PYA12(3),PYA22(/;"	v	module:COMMONS
PYA22	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(/;"	v	module:KEY
PYA2bin	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(:,:), PYA2bin(/;"	v	module:COMMONS
PYA2bin	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE     :: PYA1bin(:,:), PYA2bin(/;"	v	module:COMMONS
PYBINARYT	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT,/;"	v	module:COMMONS
PYBINARYT	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT,/;"	v	module:COMMONS
PYBINARYT	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,/;"	v	module:KEY
PYBINARYTYPE1	g.commons.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1,/;"	v	module:COMMONS
PYBINARYTYPE1	g.commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1,/;"	v	module:COMMONS
PYBINARYTYPE1	optim.key.f90	/^      INTEGER          :: MAXINTERACTIONS,PYBINARYTYPE1,/;"	v	module:KEY
PYDPEPS	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS,/;"	v	module:COMMONS
PYDPEPS	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS,/;"	v	module:COMMONS
PYDPFCT	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT,/;"	v	module:COMMONS
PYDPFCT	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU, PYDPEPS, PYDPFCT,/;"	v	module:COMMONS
PYDPMU	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU,/;"	v	module:COMMONS
PYDPMU	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT, PYA1(3), PYA2(3), PYDPMU,/;"	v	module:COMMONS
PYEPSNOT	g.commons.f90	/^     &                 PYSIGNOT, PYEPSNOT,/;"	v	module:COMMONS
PYEPSNOT	g.commons.o.f90	/^     &                 PYSIGNOT, PYEPSNOT,/;"	v	module:COMMONS
PYEPSNOT	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT,/;"	v	module:KEY
PYG	g.pyg.f90	/^      SUBROUTINE PYG /;"	s
PYG	optim.pyg.f90	/^      SUBROUTINE PYG /;"	s
PYGDP	g.pygdp.f90	/^      SUBROUTINE PYGDP /;"	s
PYGDPT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT,/;"	v	module:COMMONS
PYGDPT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT,/;"	v	module:COMMONS
PYGPERIODIC	g.ljcapsidmodule.f90	/^      SUBROUTINE PYGPERIODIC /;"	s
PYGPERIODIC	optim.ljcapsidmodule.f90	/^      SUBROUTINE PYGPERIODIC /;"	s
PYGPERIODICSECDER	optim.ljcapsidmodule.f90	/^SUBROUTINE PYGPERIODICSECDER(/;"	s
PYGPERIODICT	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT,/;"	v	module:COMMONS
PYGPERIODICT	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT,/;"	v	module:COMMONS
PYGPERIODICT	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,/;"	v	module:KEY
PYGSECDER	optim.ljcapsidmodule.f90	/^SUBROUTINE PYGSECDER(/;"	s
PYGT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT,/;"	v	module:COMMONS
PYGT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT,/;"	v	module:COMMONS
PYGT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT,/;"	v	module:KEY
PYMODULE	g.pymodule.f90	/^ MODULE PYMODULE$/;"	m
PYMODULE	optim.pymodule.f90	/^MODULE PYMODULE$/;"	m
PYOVERLAPTHRESH	g.commons.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH,/;"	v	module:COMMONS
PYOVERLAPTHRESH	g.commons.o.f90	/^     &                 PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH,/;"	v	module:COMMONS
PYOVERLAPTHRESH	optim.key.f90	/^     &                     PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH,/;"	v	module:KEY
PYPES	g.ljcapsidmodule.f90	/^SUBROUTINE PYPES(/;"	s
PYRANDOMSWAP	optim.ljcapsidmodule.f90	/^SUBROUTINE PYRANDOMSWAP(/;"	s
PYREALIGNXYZ	optim.ljcapsidmodule.f90	/^SUBROUTINE PYREALIGNXYZ$/;"	s
PYSIGNOT	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT, &$/;"	v	module:COMMONS
PYSIGNOT	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF, INVKAP, ESA(3), LPRSQ, LSQDFR, GBDPMU, GBDPEPS, GBDPFCT, &$/;"	v	module:COMMONS
PYSIGNOT	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT,/;"	v	module:KEY
PYSITEORIENTATIONS	g.multisitepy.f90	/^      SUBROUTINE PYSITEORIENTATIONS /;"	s
PYSWAP	g.commons.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(/;"	v	module:COMMONS
PYSWAP	g.commons.o.f90	/^      INTEGER  NGBSITE, NPYSITE, PYBINARYTYPE1, PYSWAP(/;"	v	module:COMMONS
PZEXTR	optim.odesd.f	/^      SUBROUTINE PZEXTR(/;"	s
PerturbGeometry	g.tetherfunc.f90	/^      function PerturbGeometry(/;"	f	module:tetherfunc
PrintXyz	g.tetherfunc.f90	/^      subroutine PrintXyz(/;"	s	module:tetherfunc
Q	g.vgw.f90	/^  DOUBLE PRECISION :: Q(/;"	v
Q0_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,/;"	v	module:amhglobals
Q0_b	optim.amhglobals.f	/^      double precision        width_Qexp_b, Q0_b,/;"	v	module:amhglobals
Q0_inc_a	optim.amhglobals.f	/^     *           Q0_safe_a, Q0_safe_b,$/;"	v	module:amhglobals
Q0_inc_b	optim.amhglobals.f	/^     *           Q0_inc_a,Q0_inc_b,/;"	v	module:amhglobals
Q0_safe_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,Q_weight_a,Q_clip_a,$/;"	v	module:amhglobals
Q0_safe_b	optim.amhglobals.f	/^     *           Q0_safe_a, Q0_safe_b,/;"	v	module:amhglobals
Q2	optim.VRTMCY5f.f90	/^real*8, parameter :: Q2 /;"	v	module:MCY
Q4	g.Q4.f	/^      DOUBLE PRECISION FUNCTION Q4(/;"	f
Q4C	g.cgmin.f	39;"	c	subroutine:CGMIN
Q4C	g.mc.F	40;"	c	subroutine:MC
Q4C	g.mylbfgs.f	48;"	c	subroutine:MYLBFGS
Q4C	mylbfgs.old.f90	48;"	c	subroutine:MYLBFGS
Q4COEF	g.Q4.f	143;"	c	subroutine:EVASH4
Q4COEF	g.Q4.f	67;"	c	subroutine:SHINIT
Q4T	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T,/;"	v	module:COMMONS
Q4T	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T,/;"	v	module:COMMONS
QCUTOFF	g.modamb.f90	/^      DOUBLE PRECISION  QCUTOFF,/;"	v	module:MODAMBER
QD2T	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T,/;"	v	module:COMMONS
QD2T	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT, QD2T,/;"	v	module:COMMONS
QDLIMIT	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT,/;"	v	module:COMMONS
QDLIMIT	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,  NTAB, NCARBON, NCOOP, NSYMINTERVAL, QDLIMIT,/;"	v	module:COMMONS
QDONE	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,QDONE,/;"	v
QDT	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT,/;"	v	module:COMMONS
QDT	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT, AMHT, MOVESHELLT, QDT,/;"	v	module:COMMONS
QDTEST	g.qdtest.f	/^      SUBROUTINE QDTEST(/;"	s
QDTEST2	g.qdtest2.f	/^      SUBROUTINE QDTEST2(/;"	s
QENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,IMPENERGY,QENERGY,/;"	v	module:MODAMBER
QEXCHH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QEXCHH /;"	v	module:msevb_common
QEXCHO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QEXCHO /;"	v	module:msevb_common
QINTERH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QINTERH /;"	v	module:msevb_common
QINTERO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QINTERO /;"	v	module:msevb_common
QMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:COMMONS
QMIN	g.qmodule.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:QMODULE
QMIN	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	program:GMIN
QMINAV	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(/;"	v	module:COMMONS
QMINAV	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(:,:), CSMAV(:), QMINAV(/;"	v	module:COMMONS
QMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:COMMONS
QMINP	g.qmodule.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:QMODULE
QMINP	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	program:GMIN
QMINPCSMAV	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
QMINPCSMAV	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINPCSMAV(/;"	v	module:COMMONS
QMODULE	g.qmodule.f90	/^MODULE QMODULE$/;"	m
QORDER_BLJ	g.qorderparam_blj.f90	/^      SUBROUTINE QORDER_BLJ(/;"	s
QORDER_LJ	g.qorderparam_lj.f90	/^      SUBROUTINE QORDER_LJ(/;"	s
QROTAA	optim.rbperm.f90	/^      SUBROUTINE QROTAA(/;"	s
QROTAA	pathsample.rbperm.f90	/^      SUBROUTINE QROTAA(/;"	s
QROTMAT	optim.rbperm.f90	/^      SUBROUTINE QROTMAT(/;"	s
QROTMAT	pathsample.rbperm.f90	/^      SUBROUTINE QROTMAT(/;"	s
QROTQ	optim.rbperm.f90	/^      SUBROUTINE QROTQ(/;"	s
QROTQ	pathsample.rbperm.f90	/^      SUBROUTINE QROTQ(/;"	s
QSPCFWT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT, RPFIXT, CHECKCONINT, &$/;"	v	module:KEY
QTIP3P_H	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QTIP3P_H /;"	v	module:msevb_common
QTIP3P_O	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QTIP3P_O /;"	v	module:msevb_common
QTIP4PFT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT,/;"	v	module:KEY
QTSALLIS	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS,/;"	v	module:COMMONS
QTSALLIS	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE, QTSALLIS,/;"	v	module:COMMONS
QUAD	g.quad.f	/^      SUBROUTINE QUAD(/;"	s
QUADT	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT,/;"	v	module:COMMONS
QUADT	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET, QUADT,/;"	v	module:COMMONS
QUCENTRE	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE,/;"	v	module:COMMONS
QUCENTRE	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE,/;"	v	module:COMMONS
QUENCH	g.quench.f	/^      SUBROUTINE QUENCH(/;"	s
QUENCH	g.quench.sim.f90	/^      SUBROUTINE QUENCH(/;"	s
QUENCH	quench.f90	/^      SUBROUTINE QUENCH(/;"	s
QUENCHDOS	g.commons.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS,/;"	v	module:COMMONS
QUENCHDOS	g.commons.o.f90	/^     &        EAMALT, ALGLUET, MGGLUET, GUPTAT, FST, DECAY, COOP, FIXBIN, GAUSST, QUENCHDOS,/;"	v	module:COMMONS
QUENCHFRQ	g.commons.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ,/;"	v	module:COMMONS
QUENCHFRQ	g.commons.o.f90	/^     &        NSUPER, NSACCEPT, NSUPERSTEP, GMODES, DUMPXYZUNIT, DUMPVUNIT, QUENCHFRQ,/;"	v	module:COMMONS
QX	optim.modamber.f90	/^      DOUBLE PRECISION  QX(/;"	v	module:MODAMBER
QY	optim.modamber.f90	/^      DOUBLE PRECISION  QX(3),QY(/;"	v	module:MODAMBER
QZ	optim.modamber.f90	/^      DOUBLE PRECISION  QX(3),QY(3),QZ(/;"	v	module:MODAMBER
Q_clip_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,Q_weight_a,Q_clip_a,/;"	v	module:amhglobals
Q_clip_b	optim.amhglobals.f	/^      double precision        width_Qexp_b, Q0_b,Q_weight_b,Q_clip_b$/;"	v	module:amhglobals
Q_ij_a	optim.amhglobals.f	/^       double precision del_r_a(1:AMHmaxsiz),$/;"	v	module:amhglobals
Q_ij_b	optim.amhglobals.f	/^       double precision del_r_b(1:AMHmaxsiz),$/;"	v	module:amhglobals
Q_weight_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,Q_weight_a,/;"	v	module:amhglobals
Q_weight_b	optim.amhglobals.f	/^      double precision        width_Qexp_b, Q0_b,Q_weight_b,/;"	v	module:amhglobals
Qbiaspoly_a	optim.amhglobals.f	/^     *           biaspoly(1:100),Qbiaspoly_a(/;"	v	module:amhglobals
Qbiaspoly_b	optim.amhglobals.f	/^      double precision   Qbiaspoly_b(/;"	v	module:amhglobals
Qvalue_a	optim.amhglobals.f	/^     *           Q0_inc_a,Q0_inc_b,Qvalue_a,/;"	v	module:amhglobals
Qvalue_b	optim.amhglobals.f	/^     *           Q0_inc_a,Q0_inc_b,Qvalue_a,Qvalue_b$/;"	v	module:amhglobals
R	bln.vars.inc.f90	/^        DOUBLE PRE/;"	v
R	g.dist.f90	/^DOUBLE PRE/;"	v	module:distance
R	optim.double.f	/^     1                 V(3*N), R,/;"	v
R	optim.modamber.f90	/^      DOUBLE PRE/;"	v	module:MODAMBER
R2	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD(6), R2,/;"	v
RAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(15) :: RAD,/;"	v
RAD	func.f90	/^      SUBROUTINE RAD(/;"	s	module:FUNC
RAD	g.rad.f	/^      SUBROUTINE RAD(/;"	s
RAD	g.vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(3), CV(3), CR, RAD$/;"	v
RAD	gmin.func.f90	/^      SUBROUTINE RAD(/;"	s	module:FUNC
RAD	optim.rad.f	/^      SUBROUTINE RAD(/;"	s
RADIFT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT,/;"	v	module:COMMONS
RADIFT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT,/;"	v	module:COMMONS
RADIFT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT,/;"	v	module:KEY
RADIUS	g.commons.f90	/^     &                 CQMAX, RADIUS,/;"	v	module:COMMONS
RADIUS	g.commons.o.f90	/^     &                 CQMAX, RADIUS,/;"	v	module:COMMONS
RADIUS	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS,/;"	v	module:KEY
RADIUS	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: RHO, RADIUS,/;"	k	type:CAPSOMER
RADIUS	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: RHO, RADIUS,/;"	k	type:CAPSOMER
RADR	func.f90	/^      SUBROUTINE RADR(/;"	s	module:FUNC
RADR	g.rad.f	/^      SUBROUTINE RADR(/;"	s
RADR	gmin.func.f90	/^      SUBROUTINE RADR(/;"	s	module:FUNC
RADS	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: RADS /;"	v	module:msevb_common
RANDDP	func.f90	299;"	c	subroutine:SDPRND
RANDDP	g.dprand.f	18;"	c	subroutine:SDPRND
RANDDP	g.dprand.f	62;"	c	function:DPRAND
RANDDP	optim.dprand.f	12;"	c	subroutine:SDPRND
RANDDP	pathsample.dprand.f	12;"	c	function:DPRAND
RANDDP	pathsample.sdprnd.f	38;"	c	subroutine:SDPRND
RANDOMCUTOFF	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,RANDOMCUTOFF,/;"	v	module:modcharmm
RANDOMSEEDT	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT,/;"	v	module:COMMONS
RANDOMSEEDT	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT,/;"	v	module:COMMONS
RANGESQ	g.commons.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ,/;"	v	module:COMMONS
RANGESQ	g.commons.o.f90	/^       DOUBLE PRECISION :: SIGMASQ, RANGESQ,/;"	v	module:COMMONS
RATECONST_SETUP	pathsample.rateconst_setup.f90	/^      SUBROUTINE RATECONST_SETUP(/;"	s
RATES	optim.connect.f	/^      SUBROUTINE RATES(/;"	s
RATIOS	optim.commons.f90	/^      LOGICAL REDOPATH, REDOPATHXYZ, RATIOS,/;"	v	module:COMMONS
RBAAT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST, STOCKSPIN, LOWESTFRQT, &$/;"	v	module:KEY
RBATOMSMAX	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS, ACKLANDID, RBATOMSMAX,/;"	v	module:KEY
RBCOMMINDIST	optim.rigidb.f90	/^      SUBROUTINE RBCOMMINDIST(/;"	s
RBCOMMINDIST	pathsample.rigidb.f90	/^      SUBROUTINE RBCOMMINDIST(/;"	s
RBCUTOFF	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF,/;"	v	module:KEY
RBFRAME	optim.rbperm.f90	/^      SUBROUTINE RBFRAME(/;"	s
RBGROUP	optim.key.f90	/^      INTEGER, ALLOCATABLE :: RBGROUP(/;"	v	module:KEY
RBIO	g.finalio.f	/^      SUBROUTINE RBIO(/;"	s
RBMINDIST	optim.rigidb.f90	/^      SUBROUTINE RBMINDIST /;"	s
RBMINDIST	pathsample.rigidb.f90	/^      SUBROUTINE RBMINDIST(/;"	s
RBMINDIST2	optim.rigidb.f90	/^      SUBROUTINE RBMINDIST2(/;"	s
RBMINDISTCM	optim.rigidb.f90	/^      SUBROUTINE RBMINDISTCM(/;"	s
RBMINPERMDIST	optim.rbperm.f90	/^      SUBROUTINE RBMINPERMDIST(/;"	s
RBMINPERMDIST	pathsample.rbperm.f90	/^      SUBROUTINE RBMINPERMDIST(/;"	s
RBNEWROTGEOM	optim.rigidb.f90	/^      SUBROUTINE RBNEWROTGEOM(/;"	s
RBNEWROTGEOM	pathsample.rigidb.f90	/^      SUBROUTINE RBNEWROTGEOM(/;"	s
RBNEWROTGEOMMYORIENT	optim.rigidb.f90	/^      SUBROUTINE RBNEWROTGEOMMYORIENT(/;"	s
RBNINGROUP	optim.key.f90	/^      INTEGER, ALLOCATABLE :: RBGROUP(:), RBNINGROUP(/;"	v	module:KEY
RBOPS	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBOPS(/;"	v	module:KEY
RBORIENT	optim.rbperm.f90	/^      SUBROUTINE RBORIENT(/;"	s
RBORIENT	pathsample.rbperm.f90	/^      SUBROUTINE RBORIENT(/;"	s
RBPOTENTIAL	pathsample.rigidbody.f90	/^  TYPE(RIGIDBODYPOTENTIAL) :: RBPOTENTIAL$/;"	v	module:RIGIDBODY
RBPOTENTIAL	pathsample.rigidbodymod.f90	/^  TYPE(RIGIDBODYPOTENTIAL) :: RBPOTENTIAL$/;"	v	module:RIGIDBODYMOD
RBROT	optim.rbperm.f90	/^      SUBROUTINE RBROT(/;"	s
RBROT	pathsample.rbperm.f90	/^      SUBROUTINE RBROT(/;"	s
RBROTMAT	optim.rbperm.f90	/^      SUBROUTINE RBROTMAT(/;"	s
RBROTXZ	optim.rbperm.f90	/^      SUBROUTINE RBROTXZ(/;"	s
RBROTXZ	pathsample.rbperm.f90	/^      SUBROUTINE RBROTXZ(/;"	s
RBSITE	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(/;"	v	module:COMMONS
RBSITESORIENT	optim.rbperm.f90	/^      SUBROUTINE RBSITESORIENT(/;"	s
RBSITESORIENT	pathsample.rbperm.f90	/^      SUBROUTINE RBSITESORIENT(/;"	s
RBSITESROTXZ	optim.rbperm.f90	/^      SUBROUTINE RBSITESROTXZ(/;"	s
RBSITESROTXZ	pathsample.rbperm.f90	/^      SUBROUTINE RBSITESROTXZ(/;"	s
RBSORT	optim.minpermrb.f90	/^SUBROUTINE RBSORT(/;"	s
RBSTLA	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(/;"	v	module:COMMONS
RBSTLA	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(/;"	v	module:COMMONS
RBSTLA	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(:,:), RBSTLA(/;"	v	module:COMMONS
RBSYMT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT,/;"	v	module:KEY
RBUV	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(/;"	v	module:COMMONS
RBUV	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(/;"	v	module:COMMONS
RC	g.modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,/;"	v	module:consts
RC	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,/;"	v	module:consts_trans_97
RCM	g.vgw.f90	/^  DOUBLE PRECISION :: Q(3*N), RCM(/;"	v
RCONST	g.ljpshift.f	261;"	c	subroutine:LJPSHIFTG
RCONST	g.ljpshift.f	322;"	c	subroutine:LJPSHIFTS
RCONST	g.ljpshift.f	50;"	c	subroutine:LJPSHIFT
RCONST	optim.ljpshift.f	1147;"	c	subroutine:LJPSHIFT
RCONST	optim.ljpshift.f	1272;"	c	subroutine:LJPSHIFTG
RCONST	optim.ljpshift.f	1311;"	c	subroutine:LJPSHIFTS
RCONSTBIN	g.BLJcluster.f	230;"	c	subroutine:LJPSHIFTGBINC
RCONSTBIN	g.BLJcluster.f	33;"	c	subroutine:LJPSHIFTBINC
RCONSTBIN	optim.ljpshift.f	1509;"	c	subroutine:LJPSHIFTBIN2
RCONSTBIN	optim.ljpshift.f	1746;"	c	subroutine:LJPSHIFTGBIN2
RCONSTBIN	optim.ljpshift.f	1800;"	c	subroutine:LJPSHIFTSBIN2
RCONSTBIN	optim.ljpshift.f	320;"	c	subroutine:LJPSHIFTGBIN
RCONSTBIN	optim.ljpshift.f	462;"	c	subroutine:LJPSHIFTSBIN
RCONSTBIN	optim.ljpshift.f	53;"	c	subroutine:LJPSHIFTBIN
RCONSTBIN	optim.ljpshift.f	710;"	c	subroutine:LJPSHIFTBINC
RCONSTBIN	optim.ljpshift.f	906;"	c	subroutine:LJPSHIFTGBINC
RCONSTBIN	optim.ljpshift.f	967;"	c	subroutine:LJPSHIFTSBINC
RCONSTKOB	optim.ljpkob.f	264;"	c	subroutine:LJPKOBG
RCONSTKOB	optim.ljpkob.f	326;"	c	subroutine:LJPKOBS
RCONSTKOB	optim.ljpkob.f	54;"	c	subroutine:LJPKOB
RCOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,TEMPCOORDS,RCOORDS,/;"	v
RCOORDSO	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,TEMPCOORDS,RCOORDS,RCOORDSO$/;"	v
RCUTOFF	g.modamb.f90	/^      DOUBLE PRECISION  QCUTOFF, RCUTOFF,/;"	v	module:MODAMBER
READA	func.f90	/^      SUBROUTINE READA(/;"	s
READA	g.input.f	/^      SUBROUTINE READA(/;"	s
READA	optim.input.f	/^      SUBROUTINE READA(/;"	s
READA	pathsample.input.f	/^      SUBROUTINE READA(/;"	s
READCH	func.f90	/^      SUBROUTINE READCH(/;"	s
READCH	g.input.f	/^      SUBROUTINE READCH(/;"	s
READCH	optim.input.f	/^      SUBROUTINE READCH(/;"	s
READCH	pathsample.input.f	/^      SUBROUTINE READCH(/;"	s
READF	func.f90	/^      SUBROUTINE READF(/;"	s
READF	g.input.f	/^      SUBROUTINE READF(/;"	s
READF	optim.input.f	/^      SUBROUTINE READF(/;"	s
READF	pathsample.input.f	/^      SUBROUTINE READF(/;"	s
READHESS	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS,/;"	v	module:KEY
READI	func.f90	/^      SUBROUTINE READI(/;"	s
READI	g.input.f	/^      SUBROUTINE READI(/;"	s
READI	optim.input.f	/^      SUBROUTINE READI(/;"	s
READI	pathsample.input.f	/^      SUBROUTINE READI(/;"	s
READINPUT	pathsample.GT2input.f90	/^     SUBROUTINE READINPUT(/;"	s	module:INPUTMODULE
READK	func.f90	/^      SUBROUTINE READK(/;"	s
READK	g.input.f	/^      SUBROUTINE READK(/;"	s
READK	optim.input.f	/^      SUBROUTINE READK(/;"	s
READK	pathsample.input.f	/^      SUBROUTINE READK(/;"	s
READL	func.f90	/^      ENTRY READL(/;"	e	subroutine:READU
READL	g.input.f	/^      ENTRY READL(/;"	e	subroutine:READU
READL	optim.input.f	/^      ENTRY READL(/;"	e	subroutine:READU
READL	pathsample.input.f	/^      ENTRY READL(/;"	e	subroutine:READU
READMINIMA	pathsample.dock.f90	/^SUBROUTINE READMINIMA$/;"	s	module:DOCKMODULE
READREF	func.f90	/^      SUBROUTINE READREF(/;"	s
READREF	optim.chdummy.f	/^      SUBROUTINE READREF(/;"	s
READRST	g.io_sanity.f90	/^FUNCTION READRST(/;"	f
READSNGL	func.f90	/^      SUBROUTINE READSNGL(/;"	s
READSNGL	g.input.f	/^      SUBROUTINE READSNGL(/;"	s
READSNGL	optim.input.f	/^      SUBROUTINE READSNGL(/;"	s
READSNGL	pathsample.input.f	/^      SUBROUTINE READSNGL(/;"	s
READSP	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP,/;"	v	module:KEY
READTOBUFFER	g.io_sanity.f90	/^FUNCTION READTOBUFFER(/;"	f
READU	func.f90	/^      SUBROUTINE READU(/;"	s
READU	g.input.f	/^      SUBROUTINE READU(/;"	s
READU	optim.input.f	/^      SUBROUTINE READU(/;"	s
READU	pathsample.input.f	/^      SUBROUTINE READU(/;"	s
READV	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV,/;"	v	module:KEY
READ_CMD_ARGS	g.read_cmd_args.f90	/^SUBROUTINE READ_CMD_ARGS$/;"	s
READ_CMD_ARGS	pathsample.read_cmd_args.f90	/^SUBROUTINE READ_CMD_ARGS$/;"	s
REALIGNXYZ	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,ELLIPSOIDT,LJSITECOORDST,REALIGNXYZ$/;"	v	module:KEY
REALNATOMS	g.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:LJCAPSIDMODULE
REALNATOMS	g.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:PYMODULE
REALNATOMS	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:LJCAPSIDMODULE
REALNATOMS	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:PYMODULE
REALQCUTOFF	g.modamb.f90	/^      DOUBLE PRECISION  QCUTOFF, RCUTOFF, REALQCUTOFF,/;"	v	module:MODAMBER
REALRCUTOFF	g.modamb.f90	/^      DOUBLE PRECISION  QCUTOFF, RCUTOFF, REALQCUTOFF, REALRCUTOFF$/;"	v	module:MODAMBER
REBUILD	optim.chdummy.f	/^      SUBROUTINE REBUILD(/;"	s
REBUILDIMAGE	optim.chdummy.f	/^      SUBROUTINE REBUILDIMAGE(/;"	s
REBUILDNEB	optim.chdummy.f	/^      SUBROUTINE REBUILDNEB(/;"	s
REBUILDSC	optim.modcharmm.f90	/^      DOUBLE PRECISION  :: GUESSTHRESH, REBUILDSC$/;"	v	module:modcharmm
REBUILDSCT	optim.modcharmm.f90	/^      LOGICAL :: FAILT, REBUILDSCT /;"	v	module:modcharmm
RECORD_STAT	g.basinsampling.f90	/^      SUBROUTINE RECORD_STAT(/;"	s	subroutine:BASINSAMPLING
REDOBFGSSTEPS	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS,/;"	v	module:KEY
REDOE1	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1,/;"	v	module:KEY
REDOE2	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2,/;"	v	module:KEY
REDOFRAC	optim.key.f90	/^     &        REDOK, REDOFRAC,/;"	v	module:KEY
REDOK	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF, INTCONSTRAINTREP, INTCONSTRAINREPCUT, &$/;"	v	module:KEY
REDOKADD	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD,/;"	v	module:KEY
REDOPATH	optim.commons.f90	/^      LOGICAL REDOPATH,/;"	v	module:COMMONS
REDOPATH1	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1,/;"	v	module:KEY
REDOPATH2	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1, REDOPATH2,/;"	v	module:KEY
REDOPATHNEB	optim.commons.f90	/^      LOGICAL REDOPATH, REDOPATHXYZ, RATIOS, REDOPATHNEB$/;"	v	module:COMMONS
REDOPATHXYZ	optim.commons.f90	/^      LOGICAL REDOPATH, REDOPATHXYZ,/;"	v	module:COMMONS
REDOTSIM	optim.key.f90	/^     &        NRBTRIES, REDOTSIM,/;"	v	module:KEY
REDUCEDBONDLENGTHT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT,/;"	v	module:KEY
REFCOORD	g.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,/;"	v	module:MODCHARMM
REFCOORD	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,/;"	v	module:modcharmm
REFIHB	g.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: REFIHB,/;"	v	module:MODCHARMM
REFIHB	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: REFIHB,/;"	v	module:modcharmm
REFJHB	g.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: REFIHB,REFJHB,/;"	v	module:MODCHARMM
REFJHB	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: REFIHB, REFJHB,/;"	v	module:modcharmm
REFKHB	g.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: REFIHB,REFJHB,REFKHB$/;"	v	module:MODCHARMM
REFKHB	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: REFIHB, REFJHB, REFKHB$/;"	v	module:modcharmm
REFLECT	g.ptgrp.f	/^      SUBROUTINE REFLECT(/;"	s
REFLECT	optim.utils.f	/^      SUBROUTINE REFLECT(/;"	s
REFNHB	g.modcharmm.f90	/^      INTEGER  :: REFNHB$/;"	v	module:MODCHARMM
REFNHB	optim.modcharmm.f90	/^      INTEGER  :: REFNHB$/;"	v	module:modcharmm
REFPPSANGLE	g.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,COORCOMP,REFPPSANGLE /;"	v	module:MODCHARMM
REFPPSANGLE	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD, REFPPSANGLE /;"	v	module:modcharmm
REGROUP	pathsample.regroup.f	/^      SUBROUTINE REGROUP(/;"	s
REGROUPFREE	pathsample.regroupfree.f90	/^SUBROUTINE REGROUPFREE$/;"	s
REGROUPFREE2	pathsample.regroupfree2.f90	/^SUBROUTINE REGROUPFREE2(/;"	s
REGROUPRATE	pathsample.regrouprate.f90	/^SUBROUTINE REGROUPRATE(/;"	s
RELFECOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: RELFELIGAND(:), RELFECOMPLEX(/;"	v	module:DOCKMODULE
RELFELIGAND	pathsample.dock.f90	/^double precision, allocatable :: RELFELIGAND(/;"	v	module:DOCKMODULE
RELFEPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: RELFELIGAND(:), RELFECOMPLEX(:), RELFEPROTEIN(/;"	v	module:DOCKMODULE
REMMIN	optim.connect.f	/^      SUBROUTINE REMMIN(/;"	s
REMMIN2	optim.connect.f	/^      SUBROUTINE REMMIN2(/;"	s
REMOVEBKSL	stringmod.f90	/^SUBROUTINE REMOVEBKSL(/;"	s	module:strings
REMOVE_UNCONNECTED	pathsample.remove_unconnected.f90	/^      SUBROUTINE REMOVE_UNCONNECTED$/;"	s
REN	g.mc.F	/^      SUBROUTINE REN(/;"	s
RENORM	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM,/;"	v	module:COMMONS
RENORM	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST, FREEZECORE, NEWJUMP, RENORM,/;"	v	module:COMMONS
REOPT	optim.key.f90	/^     &        DOUBLET, REOPT,/;"	v	module:KEY
REOPTIMISEENDPOINTS	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS,/;"	v	module:KEY
REORIENT	g.reorient.f90	/^SUBROUTINE REORIENT(/;"	s
REPARAMETRIZE	optim.growstring.f90	/^  SUBROUTINE REPARAMETRIZE$/;"	s	module:GROWSTRINGUTILS
REPARAMTOL	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSGROWTOL, GSCONV, REPARAMTOL$/;"	k	type:IMGNODE
REPATF	g.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS, REPATF,/;"	v	module:MODCHARMM
REPATL	g.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS, REPATF, REPATL /;"	v	module:MODCHARMM
REPCON	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA, REPCON,/;"	v	module:KEY
REPCUT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(/;"	v	module:KEY
REPEL	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS, RKMIN, REPELT/;"	v	module:KEY
REPELFROM	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM,/;"	v	module:KEY
REPELPUSH	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH,/;"	v	module:KEY
REPELSP	optim.repelsp.f	/^      SUBROUTINE REPELSP(/;"	s
REPELTS	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: REPELTS /;"	v	module:KEY
REPELTST	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS, RKMIN, REPELTST,/;"	v	module:KEY
REPI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: REPI(/;"	v	module:KEY
REPJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: REPI(:), REPJ(/;"	v	module:KEY
REPORT	func.f90	/^      SUBROUTINE REPORT(/;"	s
REPORT	g.input.f	/^      SUBROUTINE REPORT(/;"	s
REPORT	optim.input.f	/^      SUBROUTINE REPORT(/;"	s
REPORT	pathsample.input.f	/^      SUBROUTINE REPORT(/;"	s
REPPHIF	g.modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: REPPHIF,/;"	v	module:MODCHARMM
REPPHIL	g.modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: REPPHIF, REPPHIL /;"	v	module:MODCHARMM
REPPOW	optim.key.f90	/^      INTEGER, ALLOCATABLE :: ORDERI(:), ORDERJ(:), REPPOW(/;"	v	module:KEY
REPULSE	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2, LAMBDA, REPULSE,/;"	v	module:distance
REPULSE_INTER	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: REPULSE_INTER$/;"	v	module:msevb_common
REQ11	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11,/;"	v	module:COMMONS
REQ11	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11,/;"	v	module:COMMONS
REQ12	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12,/;"	v	module:COMMONS
REQ12	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12,/;"	v	module:COMMONS
REQ22	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22,/;"	v	module:COMMONS
REQ22	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22,/;"	v	module:COMMONS
REREAD	func.f90	/^      SUBROUTINE REREAD(/;"	s
REREAD	g.input.f	/^      SUBROUTINE REREAD(/;"	s
REREAD	optim.input.f	/^      SUBROUTINE REREAD(/;"	s
REREAD	pathsample.input.f	/^      SUBROUTINE REREAD(/;"	s
RESCALEC6	optim.c60diff.f	/^      SUBROUTINE RESCALEC6(/;"	s
RESEED	g.reseed.f	/^      SUBROUTINE RESEED(/;"	s
RESIZE	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE,/;"	v	module:COMMONS
RESIZE	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM, RESIZE,/;"	v	module:COMMONS
RESIZE	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE,/;"	v	module:KEY
RESIZET	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET,/;"	v	module:COMMONS
RESIZET	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET,/;"	v	module:COMMONS
RESLIST	optim.intcommons.f90	/^  CHARACTER*8, ALLOCATABLE :: RESLIST(/;"	v	module:INTCOMMONS
RESSTARTS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: RESSTARTS(/;"	v	module:INTCOMMONS
REST	g.mc.F	/^      SUBROUTINE REST(/;"	s
RESTART	g.commons.f90	/^     &        ZETT2, RESTART,/;"	v	module:COMMONS
RESTART	g.commons.o.f90	/^     &        ZETT2, RESTART,/;"	v	module:COMMONS
RESTORESTATE	g.GMINdump.f90	/^SUBROUTINE RESTORESTATE(/;"	s
RESTORET	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET,/;"	v	module:COMMONS
RESTORET	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP, ARMT, FixedEndMoveT, FIXCOM, RESTORET,/;"	v	module:COMMONS
RESTYP	optim.modunres.f90	/^      CHARACTER(LEN=3) :: RESTYP$/;"	v	module:MODUNRES
RES_ID	g.molinfo.f90	/^        INTEGER            :: RES_ID /;"	k	type:ATOM
RES_NAME	g.molinfo.f90	/^        CHARACTER (LEN=10) :: RES_NAME /;"	k	type:ATOM
RES_TYPE_ALA	optim.key.f90	/^      CHARACTER(LEN=3) :: RES_TYPE_ALA=/;"	v	module:KEY
REVERSE	optim.connect.f	/^      SUBROUTINE REVERSE(/;"	s
REVERSEBLOCK	optim.connect.f	/^      SUBROUTINE REVERSEBLOCK(/;"	s
REWEIGHT	pathsample.reweight.f	/^      SUBROUTINE REWEIGHT$/;"	s
RF	optim.gsdata.f90	/^     LOGICAL :: LF, RF /;"	k	type:IMGNODE
RGCL2	g.commons.f90	/^     &        PROJ, RGCL2,/;"	v	module:COMMONS
RGCL2	g.commons.o.f90	/^     &        PROJ, RGCL2,/;"	v	module:COMMONS
RHO	g.commons.f90	/^     DOUBLE PRECISION RHO,/;"	v	module:COMMONS
RHO	g.commons.o.f90	/^     DOUBLE PRECISION RHO,/;"	v	module:COMMONS
RHO	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO,/;"	v	module:COMMONS
RHO	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)) :: RHO,/;"	k	type:CAPSOMER
RHO	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: RHO,/;"	k	type:CAPSOMER
RHOC10H	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H,/;"	v	module:COMMONS
RHOC10H	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H,/;"	v	module:COMMONS
RHOC10H	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H,/;"	v	module:KEY
RHOC20H	g.commons.f90	/^     &                 RHOCH10, RHOC20H,/;"	v	module:COMMONS
RHOC20H	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H,/;"	v	module:COMMONS
RHOC20H	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10, RHOC20H,/;"	v	module:KEY
RHOCC0	g.commons.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12, &$/;"	v	module:COMMONS
RHOCC0	g.commons.o.f90	/^     &                 EPS11, EPS22, EPS12, MRHO11, MRHO22, MRHO12, REQ11, REQ22, REQ12, &$/;"	v	module:COMMONS
RHOCC0	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, MAXMAXBARRIER, &$/;"	v	module:KEY
RHOCC10	g.commons.f90	/^     &                 RHOCC0, RHOCC10,/;"	v	module:COMMONS
RHOCC10	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10,/;"	v	module:COMMONS
RHOCC10	optim.key.f90	/^     &        RHOCC0, RHOCC10,/;"	v	module:KEY
RHOCC20	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,/;"	v	module:COMMONS
RHOCC20	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,/;"	v	module:COMMONS
RHOCC20	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,/;"	v	module:KEY
RHOCH0	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0,/;"	v	module:COMMONS
RHOCH0	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0,/;"	v	module:COMMONS
RHOCH0	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0,/;"	v	module:KEY
RHOCH10	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, &$/;"	v	module:COMMONS
RHOCH10	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, &$/;"	v	module:COMMONS
RHOCH10	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10,/;"	v	module:KEY
RHOCH20	g.commons.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20,/;"	v	module:COMMONS
RHOCH20	g.commons.o.f90	/^     &                 RHOCH10, RHOC20H, RHOCH20,/;"	v	module:COMMONS
RHOCH20	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10, RHOC20H, RHOCH20,/;"	v	module:KEY
RHOHH0	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0,/;"	v	module:COMMONS
RHOHH0	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0,/;"	v	module:COMMONS
RHOHH0	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0,/;"	v	module:KEY
RHOHH10	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10,/;"	v	module:COMMONS
RHOHH10	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10,/;"	v	module:COMMONS
RHOHH10	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10,/;"	v	module:KEY
RHOHH20	g.commons.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20,/;"	v	module:COMMONS
RHOHH20	g.commons.o.f90	/^     &                 RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20,/;"	v	module:COMMONS
RHOHH20	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20,/;"	v	module:KEY
RHO_POT	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION RHO_POT(/;"	f
RHO_POT_D	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION RHO_POT_D(/;"	f
RHO_POT_DD	optim.Ackland_metals.f90	/^        DOUBLE PRECISION  FUNCTION RHO_POT_DD(/;"	f
RHS	g.vgw.f90	/^SUBROUTINE RHS(/;"	s
RHSS	g.vgw.f90	/^SUBROUTINE RHSS(/;"	s
RIGHTFRONT	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST, LAST, LEFTFRONT, RIGHTFRONT$/;"	k	type:IMGNODE
RIGID	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID,/;"	v	module:COMMONS
RIGID	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID,/;"	v	module:COMMONS
RIGIDBODY	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY,/;"	v	module:KEY
RIGIDBODY	pathsample.rigidbody.f90	/^MODULE RIGIDBODY$/;"	m
RIGIDBODYMOD	pathsample.rigidbodymod.f90	/^MODULE RIGIDBODYMOD$/;"	m
RIGIDBODYPOTENTIAL	pathsample.rigidbody.f90	/^  TYPE RIGIDBODYPOTENTIAL$/;"	t	module:RIGIDBODY
RIGIDBODYPOTENTIAL	pathsample.rigidbodymod.f90	/^  TYPE RIGIDBODYPOTENTIAL$/;"	t	module:RIGIDBODYMOD
RINDEX	optim.commons.f90	/^      INTEGER :: RINDEX /;"	v	module:COMMONS
RINGPOLYMERT	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1, REDOPATH2, ANGLEAXIS2, &$/;"	v	module:KEY
RINGPOLYMERT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,NABT,RINGPOLYMERT$/;"	v	program:OPTIM4
RINGROTSCALE	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE,/;"	v	module:COMMONS
RINGROTSCALE	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB, RINGROTSCALE,/;"	v	module:COMMONS
RINGS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(/;"	v	module:INTCOMMONS
RKCK	optim.odesd.f	/^      SUBROUTINE RKCK(/;"	s
RKMIN	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN,/;"	v	module:COMMONS
RKMIN	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN,/;"	v	module:COMMONS
RKMIN	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS, RKMIN,/;"	v	module:KEY
RKQS	optim.odesd.f	/^      SUBROUTINE RKQS(/;"	s
RK_R	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R,/;"	v
RK_R	g.commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR, &$/;"	v	module:COMMONS
RK_R	g.commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR, &$/;"	v	module:COMMONS
RK_R	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE, RK_R,/;"	v	module:KEY
RK_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R, RK_THETA$/;"	v
RK_THETA	g.commons.f90	/^     &                 RK_R, RK_THETA,/;"	v	module:COMMONS
RK_THETA	g.commons.o.f90	/^     &                 RK_R, RK_THETA,/;"	v	module:COMMONS
RK_THETA	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE, RK_R, RK_THETA,/;"	v	module:KEY
RM	optim.ttm3f.f90	/^double precision, dimension(:,:), allocatable :: RM$/;"	v	module:ttm3f_mod
RMASS	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS,/;"	v
RMASS	commons.f90	/^DOUBLE PRECISION ::     RMASS(/;"	v	module:COMMONS
RMAT	optim.vars.f90	/^DOUBLE PRECISION :: RMAT(/;"	v	module:VARS
RMDFAS	optim.rigidb.f90	/^      SUBROUTINE RMDFAS(/;"	s
RMDRVT	g.rigidbaa.f90	/^      SUBROUTINE RMDRVT(/;"	s
RMDRVT	optim.rigidb.f90	/^      SUBROUTINE RMDRVT(/;"	s
RMIvec	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:LJCAPSIDMODULE
RMIvec	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:PYMODULE
RMIvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:LJCAPSIDMODULE
RMIvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:PYMODULE
RMS	g.commons.f90	/^     &                 TFAC(3), RMS,/;"	v	module:COMMONS
RMS	g.commons.o.f90	/^     &                 TFAC(3), RMS,/;"	v	module:COMMONS
RMSBEST	g.modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: RMSBEST,/;"	v	module:MODCHARMM
RMSCOOR	g.modcharmm.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: RMSBEST,RMSCOOR /;"	v	module:MODCHARMM
RMSLIMIT	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,/;"	v	module:MODCHARMM
RMSNEB	optim.modneb.f90	/^      DOUBLE PRECISION :: RMSNEB$/;"	v	module:MODNEB
RMSSAVE	g.modcharmm.f90	/^      INTEGER :: CHMDFREQ, CHFREQ, FTRANS, FROT, RMSSAVE,/;"	v	module:MODCHARMM
RMST	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT, RMST,/;"	v	module:MODCHARMM
RMSTOL	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,/;"	v	module:MODCHARMM
RMSTWO	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO,/;"	v	module:MODTWOEND
RND	commons.f90	/^DOUBLE PRECISION ::     RND(/;"	v	module:COMMONS
RO	optim.modamber.f90	/^      DOUBLE PRECISION KR(42,42),RO(/;"	v	module:MODAMBER
ROHEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ROHEQ /;"	v	module:msevb_common
ROOEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ROOEQ /;"	v	module:msevb_common
ROTAMERT	g.modamber9.f90	/^      LOGICAL :: ROTAMERT$/;"	v	module:MODAMBER9
ROTAMERT	optim.modamber9.f90	/^      LOGICAL :: ROTAMERT$/;"	v	module:modamber9
ROTATE	optim.specialfuncts.f90	/^    SUBROUTINE ROTATE(/;"	s	module:SPFUNCTS
ROTATEANGLAXIS	optim.specialfuncts.f90	/^    SUBROUTINE ROTATEANGLAXIS(/;"	s	module:SPFUNCTS
ROTATEZERO	optim.specialfuncts.f90	/^    SUBROUTINE ROTATEZERO(/;"	s	module:SPFUNCTS
ROTATE_ABOUT_AXIS_ORIGIN	g.transforms.f90	/^   FUNCTION ROTATE_ABOUT_AXIS_ORIGIN(/;"	f	module:TRANSFORMS
ROTATE_ABOUT_XYZ	g.transforms.f90	/^    FUNCTION ROTATE_ABOUT_XYZ(/;"	f	module:TRANSFORMS
ROTATION	g.takestepmsgb.f90	/^      SUBROUTINE ROTATION /;"	s
ROTATM	optim.minpermdistrbcom.f90	/^      SUBROUTINE ROTATM(/;"	s
ROTATM	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE ROTATM(/;"	s
ROTATMXZ	optim.minpermdistrbcom.f90	/^      SUBROUTINE ROTATMXZ(/;"	s
ROTATMXZ	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE ROTATMXZ(/;"	s
ROTCENTRE	g.modamber9.f90	/^      INTEGER :: ROTMAXCHANGE, ROTCENTRE$/;"	v	module:MODAMBER9
ROTCENTRE	optim.modamber9.f90	/^      INTEGER :: ROTMAXCHANGE, ROTCENTRE$/;"	v	module:modamber9
ROTCON	optim.rotcon.f	/^      SUBROUTINE ROTCON(/;"	s
ROTCUTOFF	g.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW, ROTCUTOFF /;"	v	module:MODAMBER9
ROTCUTOFF	optim.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW, ROTCUTOFF /;"	v	module:modamber9
ROTD	optim.rotd.f	/^      SUBROUTINE ROTD(/;"	s
ROTDERIV	optim.rotd.f	/^      SUBROUTINE ROTDERIV(/;"	s
ROTENERGY	optim.rotd.f	/^      SUBROUTINE ROTENERGY(/;"	s
ROTGEOM	optim.mindist.f	/^      SUBROUTINE ROTGEOM(/;"	s
ROTGEOM	pathsample.mindist.f	/^      SUBROUTINE ROTGEOM(/;"	s
ROTM	g.ptgrp.f	/^      SUBROUTINE ROTM(/;"	s
ROTM	optim.rotm.f	/^      SUBROUTINE ROTM(/;"	s
ROTMAT	g.lwotp.f90	/^      SUBROUTINE ROTMAT /;"	s
ROTMAT	optim.rigidb.f90	/^      SUBROUTINE ROTMAT(/;"	s
ROTMAT	pathsample.rigidb.f90	/^      SUBROUTINE ROTMAT(/;"	s
ROTMAX	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,/;"	v	module:MODCHARMM
ROTMAX	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,TRANSMAX,PROT,ROTMAX$/;"	v	module:modcharmm
ROTMAXCHANGE	g.modamber9.f90	/^      INTEGER :: ROTMAXCHANGE,/;"	v	module:MODAMBER9
ROTMAXCHANGE	optim.modamber9.f90	/^      INTEGER :: ROTMAXCHANGE,/;"	v	module:modamber9
ROTOCCUW	g.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW,/;"	v	module:MODAMBER9
ROTOCCUW	optim.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW,/;"	v	module:modamber9
ROTPSELECT	g.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT,/;"	v	module:MODAMBER9
ROTPSELECT	optim.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT,/;"	v	module:modamber9
ROTXZ	g.orient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTXZ	optim.myorient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTXZ	pathsample.myorient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTXZ	pathsample.orient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTZT	g.modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART, INITROT, TRANSXYT, ROTZT$/;"	v	module:MODCHARMM
ROW_PTR	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: ROW_PTR(/;"	v	module:NGTMEM
RPBETA	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA,/;"	v	module:KEY
RPCYCLICT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT,/;"	v	module:KEY
RPDOF	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF,/;"	v	module:KEY
RPFIXT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT, RPFIXT,/;"	v	module:KEY
RPIMAGES	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES,/;"	v	module:KEY
RPMASSES	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RPMASSES(/;"	v	module:KEY
RPRO	g.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,/;"	v	module:MODCHARMM
RPRO	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,/;"	v	module:modcharmm
RPSYSTEM	optim.key.f90	/^      CHARACTER(LEN=5) :: RPSYSTEM$/;"	v	module:KEY
RSTAR	optim.modamber.f90	/^      DOUBLE PRECISION RSTAR,/;"	v	module:MODAMBER
RTEST	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST,/;"	v	module:KEY
RUNTYPE	optim.OPTIM.F	81;"	c	subroutine:OPTIM
RUNTYPE	optim.func.f90	60;"	c	subroutine:OPTIM
RUNTYPE	optim.geopt.f	65;"	c	subroutine:GEOPT
RUNTYPE	optim.greatcirc.f	36;"	c	subroutine:GCLBFGS
RUNTYPE	optim.keyword.f	100;"	c	subroutine:KEYWORD
RUNTYPE	optim.meccano.f90	263;"	c	subroutine:MECBFGS
RUNTYPE	optim.mylbfgs.f	72;"	c	subroutine:MYLBFGS
RUNTYPE	optim.path.f	88;"	c	subroutine:PATH
RUNTYPE	optim.unmeccano.f90	229;"	c	subroutine:UNMECBFGS
RVAT	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS) :: RVAT,/;"	v
RVATO	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS) :: RVAT, RVATO$/;"	v
RWG	optim.intlbfgs.f90	/^SUBROUTINE RWG(/;"	s
RZEXTR	optim.odesd.f	/^      SUBROUTINE RZEXTR(/;"	s
ReadInpFile	optim.binaryio.f90	/^     subroutine ReadInpFile(/;"	s	module:BinaryIO
RealList	pathsample.GT2data.f90	/^     type RealList$/;"	t	module:DataModule
Rg_biaspoly	optim.amhglobals.f	/^      double precision Rg_biaspoly(/;"	v	module:amhglobals
S	bln.vars.inc.f90	/^        DOUBLE PRECISI/;"	v
S2	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: R, S2,/;"	v	module:distance
SACCRAT	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT,/;"	v	module:COMMONS
SACCRAT	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS, SACCRAT,/;"	v	module:COMMONS
SAVEBINSTRUCTURES	g.basinsampling.f90	/^    SUBROUTINE SAVEBINSTRUCTURES(/;"	s	subroutine:BASINSAMPLING
SAVEBINSTRUCTURES	g.tetherfunc.f90	/^    SUBROUTINE SAVEBINSTRUCTURES(/;"	s	module:tetherfunc
SAVEBINSTRUCTURESMPI	g.tetherfunc.f90	/^    SUBROUTINE SAVEBINSTRUCTURESMPI(/;"	s	module:tetherfunc
SAVECOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,/;"	v
SAVEF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SAVES(:), SAVEF(/;"	v	module:KEY
SAVEQ	g.commons.f90	/^     &        SORTT, HIT, SAVEQ,/;"	v	module:COMMONS
SAVEQ	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ,/;"	v	module:COMMONS
SAVES	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SAVES(/;"	v	module:KEY
SAVESTATE	pathsample.savestate.f90	/^MODULE SAVESTATE$/;"	m
SBEG	g.mylapack.f	/^      FUNCTION SBEG(/;"	f
SBEG	optim.mylapack.f	/^      FUNCTION SBEG(/;"	f
SC	g.sc.f	/^      SUBROUTINE SC(/;"	s
SCALEFAC	mc.vars.inc.f90	/^      DOUBLE PRECISION :: SCALEFAC,/;"	v
SCC	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC,/;"	v	module:COMMONS
SCC	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC,/;"	v	module:COMMONS
SCDIFF	optim.scdiff.f	/^      SUBROUTINE SCDIFF(/;"	s
SCDOT	optim.utils.f	/^      SUBROUTINE SCDOT(/;"	s
SCEPS	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS,/;"	v	module:COMMONS
SCEPS	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS,/;"	v	module:COMMONS
SCHCK1	g.mylapack.f	/^      SUBROUTINE SCHCK1(/;"	s
SCHCK1	optim.mylapack.f	/^      SUBROUTINE SCHCK1(/;"	s
SCHCK2	g.mylapack.f	/^      SUBROUTINE SCHCK2(/;"	s
SCHCK2	optim.mylapack.f	/^      SUBROUTINE SCHCK2(/;"	s
SCHCK3	g.mylapack.f	/^      SUBROUTINE SCHCK3(/;"	s
SCHCK3	optim.mylapack.f	/^      SUBROUTINE SCHCK3(/;"	s
SCHCK4	g.mylapack.f	/^      SUBROUTINE SCHCK4(/;"	s
SCHCK4	optim.mylapack.f	/^      SUBROUTINE SCHCK4(/;"	s
SCHCK5	g.mylapack.f	/^      SUBROUTINE SCHCK5(/;"	s
SCHCK5	optim.mylapack.f	/^      SUBROUTINE SCHCK5(/;"	s
SCL	optim.scl.f	/^      SUBROUTINE SCL(/;"	s
SCLOCAL	optim.modunres.f90	51;"	c	module:MODUNRES
SCORE_QUEUE	optim.key.f90	/^      LOGICAL :: SCORE_QUEUE$/;"	v	module:KEY
SCREENC	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SCREENC	mc.vars.inc.f90	/^      DOUBLE PRECISION :: SCALEFAC, SCREENC(/;"	v
SCT	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT,/;"	v	module:COMMONS
SCT	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT,/;"	v	module:COMMONS
SDCHARGE	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN, SDCHARGE,/;"	v	module:KEY
SDHYDROGEN	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN,/;"	v	module:KEY
SDIFF	g.mylapack.f	/^      FUNCTION SDIFF(/;"	f
SDIFF	optim.mylapack.f	/^      FUNCTION SDIFF(/;"	f
SDOXYGEN	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN,/;"	v	module:KEY
SDPRND	func.f90	/^     SUBROUTINE SDPRND /;"	s
SDPRND	g.dprand.f	/^        SUBROUTINE SDPRND /;"	s
SDPRND	optim.dprand.f	/^        SUBROUTINE SDPRND /;"	s
SDPRND	pathsample.sdprnd.f	/^        SUBROUTINE SDPRND(/;"	s
SDT	optim.key.f90	/^     &        RINGPOLYMERT, SDT,/;"	v	module:KEY
SDTOL	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL,/;"	v	module:COMMONS
SDTOL	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG, SDTOL,/;"	v	module:COMMONS
SDwater	optim.SD.f90	/^module SDwater$/;"	m
SECDFTB	optim.dftb.f	/^      SUBROUTINE SECDFTB(/;"	s
SECDIAG	optim.secdiag.f	/^      SUBROUTINE SECDIAG(/;"	s
SECSI	optim.tight.f	/^      SUBROUTINE SECSI(/;"	s
SEEDT	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT,/;"	v	module:COMMONS
SEEDT	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT,/;"	v	module:COMMONS
SEED_AMH	g.commons.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,/;"	v	module:COMMONS
SEED_AMH	g.commons.o.f90	/^      INTEGER NUMPRO_AMH, NINT_AMH, SEED_AMH,/;"	v	module:COMMONS
SEGMENTT	g.modcharmm.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: SEGMENTT$/;"	v	module:MODCHARMM
SEG_NAME	g.molinfo.f90	/^        CHARACTER (LEN=10) :: SEG_NAME /;"	k	type:ATOM
SELECTT	g.modcharmm.f90	/^      LOGICAL :: DAESTAT, NOPHIPSIT, OMEGAT, NEWCONFT, SELECTT,/;"	v	module:MODCHARMM
SELFT	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT,/;"	v	module:COMMONS
SELFT	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT,/;"	v	module:COMMONS
SEQ	optim.key.f90	/^      INTEGER :: SEQ(/;"	v	module:KEY
SETCARTATMS	optim.intcoords.f90	/^      SUBROUTINE SETCARTATMS$/;"	s	module:INTCUTILS
SETCENT	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT,/;"	v	module:COMMONS
SETCENT	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT,/;"	v	module:COMMONS
SETCENTRE	centre.f	/^      SUBROUTINE SETCENTRE(/;"	s
SETCENTRE	g.centre.f	/^      SUBROUTINE SETCENTRE(/;"	s
SETCHIRAL	g.modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL, SETCHIRAL,/;"	v	module:MODAMBER9
SETCHIRAL	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST, UACHIRAL, SETCHIRAL$/;"	v	module:modamber9
SETDIHE	optim.chdummy.f	/^      SUBROUTINE SETDIHE$/;"	s
SETDIHEAM	optim.amber9dummy.f90	/^subroutine SETDIHEAM(/;"	s
SETPAR	g.tn.f	/^      SUBROUTINE SETPAR(/;"	s
SETS	g.commons.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v	module:COMMONS
SETS	g.commons.o.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v	module:COMMONS
SETS	optim.key.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v	module:KEY
SETSEED	optim.chdummy.f	/^      SUBROUTINE SETSEED$/;"	s
SETUCR	g.tn.f	/^      SUBROUTINE SETUCR(/;"	s
SETUP	pathsample.setup.f	/^      SUBROUTINE SETUP$/;"	s
SETUP	ps.setup.f90	/^      SUBROUTINE SETUP$/;"	s
SETUPAMB	g.amber9dummy.f90	/^SUBROUTINE SETUPAMB(/;"	s
SETUPAMB	optim.amber9dummy.f90	/^SUBROUTINE SETUPAMB(/;"	s
SETUP_SIS	pathsample.setup_sis.f	/^      SUBROUTINE SETUP_SIS$/;"	s
SET_ATOMS	g.molinfo.f90	/^        LOGICAL FUNCTION SET_ATOMS(/;"	f	module:MOLINFO
SET_CHECK_CHIRAL	g.amber9dummy.f90	/^SUBROUTINE SET_CHECK_CHIRAL(/;"	s
SGBMV	g.mylapack.f	/^      SUBROUTINE SGBMV(/;"	s
SGBMV	optim.mylapack.f	/^      SUBROUTINE SGBMV(/;"	s
SGDETACHNODE	pathsample.GT2.f90	/^     SUBROUTINE SGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
SGDETACHNODE	pathsample.GT2.save.f90	/^     SUBROUTINE SGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
SGEMV	g.mylapack.f	/^      SUBROUTINE SGEMV(/;"	s
SGEMV	optim.mylapack.f	/^      SUBROUTINE SGEMV(/;"	s
SGER	g.mylapack.f	/^      SUBROUTINE SGER(/;"	s
SGER	optim.mylapack.f	/^      SUBROUTINE SGER(/;"	s
SGTOutput	pathsample.GT2.f90	/^     subroutine SGTOutput /;"	s	module:GRAPHTRANSFORMATIONMODULE
SHELLMOVEMAX	g.commons.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX,/;"	v	module:COMMONS
SHELLMOVEMAX	g.commons.o.f90	/^     &        NINTV, NSEED, NVEC, NS, NSSTOP, MAXIT2, NSAVE, SHELLMOVEMAX,/;"	v	module:COMMONS
SHELLMOVES	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: SHELLMOVES /;"	v	module:COMMONS
SHELLMOVES	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: SHELLMOVES /;"	v	module:COMMONS
SHELLPROB	g.commons.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB,/;"	v	module:COMMONS
SHELLPROB	g.commons.o.f90	/^     &                 TRENORM, HISTMIN, HISTMAX, HISTFAC, EPSSPHERE, FINALCUTOFF, SHELLPROB,/;"	v	module:COMMONS
SHIFTCUT	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT,/;"	v	module:COMMONS
SHIFTCUT	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT,/;"	v	module:COMMONS
SHIFTED	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED,/;"	v	module:KEY
SHIFTH	optim.shifth.f	/^      SUBROUTINE SHIFTH(/;"	s
SHIFTHTH	optim.thomson.f	/^      SUBROUTINE SHIFTHTH(/;"	s
SHIFTL	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(/;"	v	module:KEY
SHIFTLAN	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN,/;"	v	module:KEY
SHIFTRIGID	optim.rigidb.f90	/^      SUBROUTINE SHIFTRIGID /;"	s
SHIFTSTOCK	optim.stock.f	/^      SUBROUTINE SHIFTSTOCK(/;"	s
SHIFTV	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV,/;"	v	module:KEY
SHIFTZERO	optim.specialfuncts.f90	/^    SUBROUTINE SHIFTZERO(/;"	s	module:SPFUNCTS
SHINIT	g.Q4.f	/^      SUBROUTINE SHINIT$/;"	s
SHORTCUT	optim.connect.f	/^      SUBROUTINE SHORTCUT(/;"	s
SIAZ	g.ptgrp.f	/^      SUBROUTINE SIAZ(/;"	s
SIAZ	optim.siaz.f	/^      SUBROUTINE SIAZ(/;"	s
SIDECHAIN	g.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,/;"	v	module:MODCHARMM
SIDECHAIN	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,/;"	v	module:modcharmm
SIDECHAINP	g.modcharmm.f90	/^      DOUBLE PRECISION :: PIVOTP, SIDECHAINP$/;"	v	module:MODCHARMM
SIG	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG,/;"	v	module:COMMONS
SIG	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG,/;"	v	module:COMMONS
SIG2	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(6), E_ZERO, SIGMA, SIG2,/;"	v	module:VGW
SIGMA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA,/;"	v
SIGMA	g.modconsts_trans_97.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,KAPPA,SIGMA,/;"	v	module:consts_trans_97
SIGMA	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: LJK(6), LJG(6), LJG2(6), E_ZERO, SIGMA,/;"	v	module:VGW
SIGMA	g.vgw.f90	/^     DOUBLE PRECISION, SAVE:: SIGMA,/;"	v	module:VGWSP
SIGMA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: SIGMA /;"	v	module:msevb_common
SIGMAF	g.commons.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF,/;"	v	module:COMMONS
SIGMAF	g.commons.o.f90	/^     &                 SIGNOT, EPSNOT, SIGMAF,/;"	v	module:COMMONS
SIGMASQ	g.commons.f90	/^       DOUBLE PRECISION :: SIGMASQ,/;"	v	module:COMMONS
SIGMASQ	g.commons.o.f90	/^       DOUBLE PRECISION :: SIGMASQ,/;"	v	module:COMMONS
SIGMA_MIX	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: SIGMA_MIX /;"	v	module:msevb_common
SIGNOT	g.commons.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
SIGNOT	g.commons.o.f90	/^     &                 EPSR, GBKAPPA, GBKAPPRM, GBMU,GBNU, GBSIGNOT,/;"	v	module:COMMONS
SIO2	optim.SiO2.f	/^      SUBROUTINE SIO2(/;"	s
SIO2C6	optim.SiO2.f	/^      SUBROUTINE SIO2C6(/;"	s
SIO2C6T	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T,/;"	v	module:KEY
SIO2GRAD	optim.SiO2.f	/^      SUBROUTINE SIO2GRAD(/;"	s
SIO2IND	optim.SiO2.f	/^      SUBROUTINE SIO2IND(/;"	s
SIO2NDHESS	optim.SiO2.f	/^      SUBROUTINE SIO2NDHESS(/;"	s
SIO2NSHESS	optim.SiO2.f	/^      SUBROUTINE SIO2NSHESS(/;"	s
SIO2POL	optim.SiO2.f	/^      SUBROUTINE SIO2POL(/;"	s
SIO2SEC	optim.SiO2.f	/^      SUBROUTINE SIO2SEC(/;"	s
SIO2T	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T,/;"	v	module:KEY
SISW	g.SiSW.f	/^      subroutine SISW(/;"	s
SITE	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(/;"	v	module:COMMONS
SITE	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(/;"	v	module:COMMONS
SITE	pathsample.rigidbody.f90	/^     REAL (KIND=KIND(0.0D0)), ALLOCATABLE :: SITE(/;"	k	type:RIGIDBODYPOTENTIAL
SITE	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, ALLOCATABLE :: SITE(/;"	k	type:RIGIDBODYPOTENTIAL
SITEBF	g.multisitepy.f90	/^      SUBROUTINE SITEBF /;"	s
SITECOORDS	g.pymodule.f90	/^       DOUBLE PRECISION, ALLOCATABLE :: PST(:,:),OST(:,:),ELLST1(:,:),ELLST2(:,:),ELLMAT(:,:,:),SITECOORDS(/;"	v	module:PYMODULE
SITELABEL	pathsample.rigidbody.f90	/^     CHARACTER(5), ALLOCATABLE :: SITELABEL(/;"	k	type:RIGIDBODYPOTENTIAL
SITELABEL	pathsample.rigidbodymod.f90	/^     CHARACTER(5), ALLOCATABLE :: SITELABEL(/;"	k	type:RIGIDBODYPOTENTIAL
SITEPOS	optim.rbperm.f90	/^      SUBROUTINE SITEPOS(/;"	s
SITEPOS	pathsample.rbperm.f90	/^      SUBROUTINE SITEPOS(/;"	s
SITESINTERACT	pathsample.rigidbody.f90	/^  LOGICAL, ALLOCATABLE :: SITESINTERACT(/;"	v	module:RIGIDBODY
SITESINTERACT	pathsample.rigidbodymod.f90	/^  LOGICAL, ALLOCATABLE :: SITESINTERACT(/;"	v	module:RIGIDBODYMOD
SKIPBL	func.f90	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SKIPBL	g.input.f	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SKIPBL	optim.input.f	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SKIPBL	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,/;"	v	program:OPTIM4
SKIPBL	pathsample.input.f	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SLEN	commons.f90	/^INTEGER, PARAMETER :: SLEN=/;"	v	module:COMMONS
SMAKE	g.mylapack.f	/^      SUBROUTINE SMAKE(/;"	s
SMAKE	optim.mylapack.f	/^      SUBROUTINE SMAKE(/;"	s
SMALLANGLE	pathsample.rigidbody.f90	/^  REAL (KIND=KIND(0.0D0)), PARAMETER :: SMALLANGLE /;"	v	module:RIGIDBODY
SMALLANGLE	pathsample.rigidbodymod.f90	/^  DOUBLE PRECISION, PARAMETER :: SMALLANGLE /;"	v	module:RIGIDBODYMOD
SMALL_B	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: SMALL_B /;"	v	module:msevb_common
SMESSG	g.mylapack.f	/^      SUBROUTINE SMESSG(/;"	s
SMESSG	optim.mylapack.f	/^      SUBROUTINE SMESSG(/;"	s
SMINATOMA	g.modamber9.f90	/^INTEGER :: SMINATOMA,/;"	v	module:MODAMBER9
SMINATOMA	optim.modamber9.f90	/^INTEGER SMINATOMA,/;"	v	module:modamber9
SMINATOMB	g.modamber9.f90	/^INTEGER :: SMINATOMA, SMINATOMB$/;"	v	module:MODAMBER9
SMINATOMB	optim.modamber9.f90	/^INTEGER SMINATOMA, SMINATOMB$/;"	v	module:modamber9
SMINDISTFINISH	g.modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH,/;"	v	module:MODAMBER9
SMINDISTFINISH	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH,/;"	v	module:modamber9
SMINDISTSTART	g.modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC, SMINDISTSTART,/;"	v	module:MODAMBER9
SMINDISTSTART	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC, SMINDISTSTART,/;"	v	module:modamber9
SMINK	g.modamber9.f90	/^DOUBLE PRECISION :: SMINK,/;"	v	module:MODAMBER9
SMINK	optim.modamber9.f90	/^DOUBLE PRECISION SMINK,/;"	v	module:modamber9
SMINKCURRENT	g.modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH, SMINKCURRENT$/;"	v	module:MODAMBER9
SMINKCURRENT	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH, SMINKCURRENT$/;"	v	module:modamber9
SMINKINC	g.modamber9.f90	/^DOUBLE PRECISION :: SMINK, SMINKINC,/;"	v	module:MODAMBER9
SMINKINC	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC,/;"	v	module:modamber9
SO	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,/;"	v	module:amhglobals
SOPEN	g.mylapack.f	/^      SUBROUTINE SOPEN(/;"	s
SOPEN	optim.mylapack.f	/^      SUBROUTINE SOPEN(/;"	s
SORT	pathsample.sort.f	/^      SUBROUTINE SORT(/;"	s
SORT2	pathsample.sort.f	/^      SUBROUTINE SORT2(/;"	s
SORT3	g.sort3.f	/^      SUBROUTINE SORT3(/;"	s
SORT3	pathsample.Dijkstra.f90	/^      SUBROUTINE SORT3(/;"	s
SORT4	g.sort4.f	/^      SUBROUTINE SORT4(/;"	s
SORT4	pathsample.sort.f	/^      SUBROUTINE SORT4(/;"	s
SORT5	g.supermc.f	/^      SUBROUTINE SORT5(/;"	s
SORTN	g.hsmove.f	/^      SUBROUTINE SORTN(/;"	s
SORTN	optim.bfgsts.f	/^      SUBROUTINE SORTN(/;"	s
SORTT	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT, &$/;"	v	module:COMMONS
SORTT	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP, RIGID, Q4T, MPIT, JMT, LJCOULT, SETCENT, &$/;"	v	module:COMMONS
SORTXYZ	g.ptgrp.f	/^      SUBROUTINE SORTXYZ(/;"	s
SORTXYZ	optim.sortxyz.f	/^      SUBROUTINE SORTXYZ(/;"	s
SPARSEGRAPHTRANSFORMATION	pathsample.GT2.f90	/^     SUBROUTINE SPARSEGRAPHTRANSFORMATION$/;"	s	module:GRAPHTRANSFORMATIONMODULE
SPARSEGRAPHTRANSFORMATION	pathsample.GT2.save.f90	/^     SUBROUTINE SPARSEGRAPHTRANSFORMATION$/;"	s	module:GRAPHTRANSFORMATIONMODULE
SPECIMPPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION GENTORSPARAMS(100,6),SPECTORSPARAMS(100,14),SPECIMPPARAMS(/;"	v	module:MODAMBER
SPECTORSPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION GENTORSPARAMS(100,6),SPECTORSPARAMS(/;"	v	module:MODAMBER
SPFUNCTS	optim.specialfuncts.f90	/^MODULE SPFUNCTS$/;"	m
SPHERERAD	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,ROTMAX,RMSLIMIT,RMSTOL,NCWALL,BOXSIZE,SPHERERAD$/;"	v	module:MODCHARMM
SPHERET	g.modcharmm.f90	/^      LOGICAL :: GCHARMMFAIL,CHRIGIDTRANST, CHRIGIDROTT, BOXT, RMST, SPHERET,/;"	v	module:MODCHARMM
SPLIT	stringmod.f90	/^SUBROUTINE SPLIT(/;"	s	module:strings
SQMAX	commons.f90	/^DOUBLE PRECISION :: SQMAX$/;"	v	module:COMMONS
SQUEEZED	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED,/;"	v	module:COMMONS
SQUEEZED	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED,/;"	v	module:COMMONS
SQUEEZER	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER,/;"	v	module:COMMONS
SQUEEZER	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER,/;"	v	module:COMMONS
SQUEEZET	g.commons.f90	/^     &        MSORIGT, SQUEEZET,/;"	v	module:COMMONS
SQUEEZET	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET,/;"	v	module:COMMONS
SRUTU	optim.unresoptim.f	54;"	c	subroutine:UENERGY
SRUTU	optim.unresoptim.f	93;"	c	subroutine:INTGRAD
SSBFGS	g.tn.f	/^      SUBROUTINE SSBFGS(/;"	s
SSBMV	g.mylapack.f	/^      SUBROUTINE SSBMV(/;"	s
SSBMV	optim.mylapack.f	/^      SUBROUTINE SSBMV(/;"	s
SSHPARALLEL	pathsample.nodes.f90	/^     LOGICAL :: SSHPARALLEL=/;"	v	module:NODES
SSHSUBMIT	pathsample.nodes.f90	/^     SUBROUTINE SSHSUBMIT(/;"	s	module:NODES
SSHSUBMITFRQ	pathsample.dock.f90	/^SUBROUTINE SSHSUBMITFRQ(/;"	s	module:DOCKMODULE
SSHSUBMITGMIN	pathsample.dock.f90	/^SUBROUTINE SSHSUBMITGMIN(/;"	s	module:DOCKMODULE
SSPMV	g.mylapack.f	/^      SUBROUTINE SSPMV(/;"	s
SSPMV	optim.mylapack.f	/^      SUBROUTINE SSPMV(/;"	s
SSPR	g.mylapack.f	/^      SUBROUTINE SSPR(/;"	s
SSPR	optim.mylapack.f	/^      SUBROUTINE SSPR(/;"	s
SSPR2	g.mylapack.f	/^      SUBROUTINE SSPR2(/;"	s
SSPR2	optim.mylapack.f	/^      SUBROUTINE SSPR2(/;"	s
SSYMV	g.mylapack.f	/^      SUBROUTINE SSYMV(/;"	s
SSYMV	optim.mylapack.f	/^      SUBROUTINE SSYMV(/;"	s
SSYR	g.mylapack.f	/^      SUBROUTINE SSYR(/;"	s
SSYR	optim.mylapack.f	/^      SUBROUTINE SSYR(/;"	s
SSYR2	g.mylapack.f	/^      SUBROUTINE SSYR2(/;"	s
SSYR2	optim.mylapack.f	/^      SUBROUTINE SSYR2(/;"	s
ST	g.cgmin.f	36;"	c	subroutine:CGMIN
ST	g.linmin.f	34;"	c	subroutine:LINMIN
STAKESTEP	g.supermc.f	/^      SUBROUTINE STAKESTEP(/;"	s
STAR	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE, &$/;"	v	module:COMMONS
STAR	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT, EVSTEPT, PACHECO, DL_POLY, QUCENTRE, &$/;"	v	module:COMMONS
START	optim.modtwoend.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: FIN, START /;"	v	module:MODTWOEND
STARTLINDH	optim.intcommons.f90	/^  INTEGER:: STARTLINDH$/;"	v	module:INTCOMMONS
STARTRES	optim.modunres.f90	/^      INTEGER :: STARTRES(/;"	v	module:MODUNRES
STARTUP	optim.connect.f	/^      SUBROUTINE STARTUP(/;"	s
STBMV	g.mylapack.f	/^      SUBROUTINE STBMV(/;"	s
STBMV	optim.mylapack.f	/^      SUBROUTINE STBMV(/;"	s
STBSV	g.mylapack.f	/^      SUBROUTINE STBSV(/;"	s
STBSV	optim.mylapack.f	/^      SUBROUTINE STBSV(/;"	s
STCHRG	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(/;"	v	module:COMMONS
STCHRG	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SITE(:,:), RBUV(:,:), RBSTLA(:,:), STCHRG(/;"	v	module:COMMONS
STCHRG	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(:,:), RBSTLA(:,:), STCHRG(/;"	v	module:COMMONS
STD_ORIENT	optim.connect.f	/^      SUBROUTINE STD_ORIENT(/;"	s
STD_ORIENT2D	optim.connect.f	/^      SUBROUTINE STD_ORIENT2D(/;"	s
STEEREDMINT	g.modamber9.f90	/^LOGICAL :: STEEREDMINT,/;"	v	module:MODAMBER9
STEEREDMINT	optim.modamber9.f90	/^LOGICAL STEEREDMINT,/;"	v	module:modamber9
STEP	commons.f90	/^DOUBLE PRECISION :: STEP=/;"	v	module:COMMONS
STEP	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP,/;"	v	module:COMMONS
STEP	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP, STEP,/;"	v	module:COMMONS
STEP1	g.tn.f	/^      DOUBLE PRECISION FUNCTION STEP1(/;"	f
STEPANGLE	g.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO, STEPBOND, STEPANGLE,/;"	v	module:MODCHARMM
STEPBOND	g.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO, STEPBOND,/;"	v	module:MODCHARMM
STEPDIHE	g.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO, STEPBOND, STEPANGLE, STEPDIHE$/;"	v	module:MODCHARMM
STEPOUT	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT,/;"	v	module:COMMONS
STEPOUT	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT,/;"	v	module:COMMONS
STEST	bln.vars.inc.f90	/^        LOGICAL GTEST, STEST$/;"	v
STEST	optim.double.f	/^      LOGICAL GTEST, STEST$/;"	v
STICKY	g.sticky.f	/^      SUBROUTINE STICKY(/;"	s
STICKYSIG	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG,/;"	v	module:COMMONS
STICKYSIG	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART, MATDIFF, STICKYSIG,/;"	v	module:COMMONS
STICKYT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT,/;"	v	module:COMMONS
STICKYT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT, STICKYT,/;"	v	module:COMMONS
STOCK	g.stock.f	/^      SUBROUTINE STOCK(/;"	s
STOCK	optim.stock.f	/^      SUBROUTINE STOCK(/;"	s
STOCKAA	g.stockaa.f90	/^      SUBROUTINE STOCKAA /;"	s
STOCKAAT	g.commons.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT,/;"	v	module:COMMONS
STOCKAAT	g.commons.o.f90	/^     &        GBT, GBDT, GBDPT, GEMT, LINRODT, PYGT, RADIFT, PYGDPT, DBPT, DBPTDT, DBLPYT, DMBLMT, EFIELDT, PAHAT, STOCKAAT,/;"	v	module:COMMONS
STOCKAAT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT, UNIAXT, STOCKAAT,/;"	v	module:KEY
STOCKGHAA	optim.stockghaa.f90	/^      SUBROUTINE STOCKGHAA /;"	s
STOCKLAMBDA	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA,/;"	v	module:COMMONS
STOCKLAMBDA	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA,/;"	v	module:COMMONS
STOCKLAMBDA	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA,/;"	v	module:KEY
STOCKMAXSPIN	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN,/;"	v	module:KEY
STOCKMU	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU,/;"	v	module:COMMONS
STOCKMU	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU,/;"	v	module:COMMONS
STOCKMU	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU,/;"	v	module:KEY
STOCKSPIN	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST, STOCKSPIN,/;"	v	module:KEY
STOCKT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT,/;"	v	module:COMMONS
STOCKT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT, MSTRANST, STOCKT,/;"	v	module:COMMONS
STOCKT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT,/;"	v	module:KEY
STOCKZTOL	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA, BBRCONV, STOCKZTOL,/;"	v	module:KEY
STOPD	optim.connect.f	2040;"	c	subroutine:ADDMIN
STOPD	optim.connect.f	54;"	c	subroutine:CONNECT
STOPD	optim.connect.f	852;"	c	subroutine:REMMIN
STOPD	optim.keyword.f	114;"	c	subroutine:KEYWORD
STPMAX	g.tn.f	/^      SUBROUTINE STPMAX(/;"	s
STPMAX	lbfgs.f	/^      DOUBLE PRECISION GTOL,STPMIN,STPMAX$/;"	v	block data:LB2
STPMAX	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: STPMAX /;"	v	module:COMMONS
STPMIN	lbfgs.f	/^      DOUBLE PRECISION GTOL,STPMIN,/;"	v	block data:LB2
STPMV	g.mylapack.f	/^      SUBROUTINE STPMV(/;"	s
STPMV	optim.mylapack.f	/^      SUBROUTINE STPMV(/;"	s
STPSV	g.mylapack.f	/^      SUBROUTINE STPSV(/;"	s
STPSV	optim.mylapack.f	/^      SUBROUTINE STPSV(/;"	s
STRAND	g.strand.f	/^      SUBROUTINE STRAND(/;"	s
STRANDT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT,/;"	v	module:COMMONS
STRANDT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT,/;"	v	module:COMMONS
STRANSITION	g.supermc.f	/^      SUBROUTINE STRANSITION(/;"	s
STRING	g.ptgrp.f	/^      CHARACTER(LEN=4) FUNCTION STRING(/;"	f
STRING	optim.utils.f	/^      CHARACTER(LEN=4) FUNCTION STRING(/;"	f
STRINGLEN	optim.gsdata.f90	/^  DOUBLE PRECISION :: STRINGLEN /;"	k	type:IMGNODE
STRINGS	optim.OPTIM.F	77;"	c	subroutine:OPTIM
STRINGS	optim.bbrsdm.f90	14;"	c	subroutine:BBRSDM
STRINGS	optim.dumpit.f	30;"	c	subroutine:DUMPIT
STRINGS	optim.efol.f90	64;"	c	subroutine:EFOL
STRINGS	optim.func.f90	56;"	c	subroutine:OPTIM
STRINGS	optim.greatcirc.f	40;"	c	subroutine:GCLBFGS
STRINGS	optim.meccano.f90	267;"	c	subroutine:MECBFGS
STRINGS	optim.mylbfgs.f	76;"	c	subroutine:MYLBFGS
STRINGS	optim.potential.f	72;"	c	subroutine:POTENTIAL
STRINGS	optim.symmetry.f	60;"	c	subroutine:SYMMETRY
STRINGS	optim.unmeccano.f90	233;"	c	subroutine:UNMECBFGS
STRMV	g.mylapack.f	/^      SUBROUTINE STRMV(/;"	s
STRMV	optim.mylapack.f	/^      SUBROUTINE STRMV(/;"	s
STRSV	g.mylapack.f	/^      SUBROUTINE STRSV(/;"	s
STRSV	optim.mylapack.f	/^      SUBROUTINE STRSV(/;"	s
SUBMITFRQJOBS	pathsample.dock.f90	/^SUBROUTINE SUBMITFRQJOBS(/;"	s	module:DOCKMODULE
SUBMITGMINJOBS	pathsample.dock.f90	/^SUBROUTINE SUBMITGMINJOBS(/;"	s	module:DOCKMODULE
SUBMITOPTIMJOB	pathsample.submitoptimjob.f90	/^SUBROUTINE SUBMITOPTIMJOB(/;"	s
SUBSCR	g.tn.f	1024;"	c	subroutine:INITPC
SUBSCR	g.tn.f	1085;"	c	subroutine:SETPAR
SUBSCR	g.tn.f	155;"	c	subroutine:LMQN
SUBSCR	g.tn.f	888;"	c	subroutine:GTIMS
SUBSCR	g.tn.f	926;"	c	subroutine:MSOLVE
SUMMARYT	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT,/;"	v	module:KEY
SUPERMC	g.supermc.f	/^      SUBROUTINE SUPERMC(/;"	s
SUPERSTEP	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP,/;"	v	module:COMMONS
SUPERSTEP	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP,/;"	v	module:COMMONS
SUPSTEP	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP,/;"	v	module:COMMONS
SUPSTEP	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP,/;"	v	module:COMMONS
SVERT	g.ljcapsidmodule.f90	/^      SUBROUTINE SVERT(/;"	s
SVtype	g.dist.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: SVtype /;"	v	module:distance
SW	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW,/;"	v	module:COMMONS
SW	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW,/;"	v	module:COMMONS
SWAP2ATONCE	optim.intcoords.f90	/^      SUBROUTINE SWAP2ATONCE(/;"	s	module:INTCUTILS
SWAP3ATONCE	optim.intcoords.f90	/^SUBROUTINE SWAP3ATONCE(/;"	s	module:INTCUTILS
SWAP4ATONCE	optim.intcoords.f90	/^SUBROUTINE SWAP4ATONCE(/;"	s	module:INTCUTILS
SWAP5ATONCE	optim.intcoords.f90	/^      SUBROUTINE SWAP5ATONCE(/;"	s	module:INTCUTILS
SWAPMOVEST	g.commons.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST,/;"	v	module:COMMONS
SWAPMOVEST	g.commons.o.f90	/^     &        AMBERT, RANDOMSEEDT, PYGPERIODICT, LJCAPSIDT, PYBINARYT, SWAPMOVEST,/;"	v	module:COMMONS
SWAPNODE	pathsample.swapnode.f90	/^SUBROUTINE SWAPNODE(/;"	s
SWLATMIN	optim.SW.f	/^      SUBROUTINE SWLATMIN(/;"	s
SWT	g.commons.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT,/;"	v	module:COMMONS
SWT	g.commons.o.f90	/^     &        OTPT, LJMFT, STRANDT, PAHT, SWT,/;"	v	module:COMMONS
SWTHREE	g.SW.f	/^      SUBROUTINE SWTHREE(/;"	s
SWTHREE	optim.SW.f	/^      SUBROUTINE SWTHREE(/;"	s
SWTWO	g.SW.f	/^      SUBROUTINE SWTWO(/;"	s
SWTWO	optim.SW.f	/^      SUBROUTINE SWTWO(/;"	s
SWTWOG	optim.SW.f	/^      SUBROUTINE SWTWOG(/;"	s
SWTWOS	optim.SW.f	/^      SUBROUTINE SWTWOS(/;"	s
SYMCUT	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT,/;"	v	module:KEY
SYMINF	optim.syminf.f90	/^MODULE SYMINF$/;"	m
SYMMETRIZE	g.commons.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART, &$/;"	v	module:COMMONS
SYMMETRIZE	g.commons.o.f90	/^     &        SORTT, HIT, SAVEQ, PARALLELT, FIXD, RKMIN, BSMIN, PERMDIST, PERMOPT, BSWL, BSPT, BSPTRESTART, &$/;"	v	module:COMMONS
SYMMETRIZECSM	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM,/;"	v	module:COMMONS
SYMMETRIZECSM	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM,/;"	v	module:COMMONS
SYMMETRY	g.symmetry.f90	/^SUBROUTINE SYMMETRY(/;"	s
SYMMETRY	optim.symmetry.f	/^      SUBROUTINE SYMMETRY(/;"	s
SYMMETRY2	g.symmetry2.f90	/^SUBROUTINE SYMMETRY2(/;"	s
SYMMETRYCSM	g.symmetrycsm.f90	/^SUBROUTINE SYMMETRYCSM(/;"	s
SYMREM	g.commons.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(/;"	v	module:COMMONS
SYMREM	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE, SYMREM(/;"	v	module:COMMONS
SYMTOL1	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1,/;"	v	module:COMMONS
SYMTOL1	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1,/;"	v	module:COMMONS
SYMTOL2	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2,/;"	v	module:COMMONS
SYMTOL2	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2,/;"	v	module:COMMONS
SYMTOL3	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3,/;"	v	module:COMMONS
SYMTOL3	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3,/;"	v	module:COMMONS
SYMTOL4	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4,/;"	v	module:COMMONS
SYMTOL4	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4,/;"	v	module:COMMONS
SYMTOL5	g.commons.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5,/;"	v	module:COMMONS
SYMTOL5	g.commons.o.f90	/^     &                 CQMAX, RADIUS, BQMAX,  MAXBFGS, DECAYPARAM, SYMTOL1, SYMTOL2, SYMTOL3, SYMTOL4, SYMTOL5,/;"	v	module:COMMONS
SYS	g.commons.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	module:COMMONS
SYS	g.commons.o.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	module:COMMONS
SYS	optim.OPTIM.F	89;"	c	subroutine:OPTIM
SYS	optim.connect.f	1782;"	c	subroutine:TSSEARCH
SYS	optim.connect.f	2037;"	c	subroutine:ADDMIN
SYS	optim.connect.f	2925;"	c	subroutine:ISNEWTS
SYS	optim.connect.f	51;"	c	subroutine:CONNECT
SYS	optim.connect.f	760;"	c	subroutine:SHORTCUT
SYS	optim.connect.f	957;"	c	subroutine:CLEANUP
SYS	optim.efol.f90	52;"	c	subroutine:EFOL
SYS	optim.func.f90	68;"	c	subroutine:OPTIM
SYS	optim.greatcirc.f	46;"	c	subroutine:GCLBFGS
SYS	optim.growstring.f90	50;"	c	subroutine:GROWSTRING
SYS	optim.growstring.f90	737;"	c	subroutine:REPARAMETRIZE
SYS	optim.intcoords.f90	1826;"	c	subroutine:OLD_INTMINPERM
SYS	optim.intcoords.f90	250;"	c	subroutine:INTMINPERM
SYS	optim.intcoords.f90	45;"	c	subroutine:INTINTERPOLATE
SYS	optim.key.f90	/^      CHARACTER(LEN=80) :: SYS,/;"	v	module:KEY
SYS	optim.main.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	program:OPTIM4
SYS	optim.meccano.f90	43;"	c	subroutine:MECCANO
SYS	optim.morph.f	43;"	c	subroutine:MORPH
SYS	optim.mylbfgs.f	82;"	c	subroutine:MYLBFGS
SYS	optim.oldneb.f	41;"	c	subroutine:OLDNEB
SYS	optim.path.f	93;"	c	subroutine:PATH
SYS	optim.unresconnectsections.f	558;"	c	subroutine:UNRESGUESSMINSEC
SYS	optim.unresguessts.f	438;"	c	subroutine:UNRESGUESSMIN
SYSTEMTOAA	pathsample.rigidbody.f90	/^  SUBROUTINE SYSTEMTOAA /;"	s	module:RIGIDBODY
SYSTEMTOAA	pathsample.rigidbodymod.f90	/^  SUBROUTINE SYSTEMTOAA /;"	s	module:RIGIDBODYMOD
SYSTEMTOCARTESIANS	pathsample.rigidbody.f90	/^  SUBROUTINE SYSTEMTOCARTESIANS /;"	s	module:RIGIDBODY
SYSTEMTOCARTESIANS	pathsample.rigidbodymod.f90	/^  SUBROUTINE SYSTEMTOCARTESIANS /;"	s	module:RIGIDBODYMOD
SaveNth	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth,/;"	v	module:COMMONS
SaveNth	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth,/;"	v	module:COMMONS
SortC	optim.sortc.f	/^      SUBROUTINE SortC /;"	s
SwapProb	g.commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb,/;"	v	module:COMMONS
SwapProb	g.commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb,/;"	v	module:COMMONS
T	optim.SD.f90	/^pure function T(/;"	f	module:SDwater
T	optim.modamber.f90	/^      INTE/;"	v	module:MODAMBER
T12FAC	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC,/;"	v	module:COMMONS
T12FAC	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC,/;"	v	module:COMMONS
T12FAC	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC,/;"	v	module:KEY
TABOO	g.taboo.f	/^      SUBROUTINE TABOO(/;"	s
TABOOT	g.commons.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT,/;"	v	module:COMMONS
TABOOT	g.commons.o.f90	/^     &        SYMMETRIZE, SYMMETRIZECSM, DUMPT, NEON, ARGON, P46, NORESET, TABOOT,/;"	v	module:COMMONS
TAGFAC	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TAGFAC(/;"	v	module:COMMONS
TAGNUM	optim.commons.f90	/^      INTEGER, ALLOCATABLE :: TAGNUM(/;"	v	module:COMMONS
TAGT	optim.commons.f90	/^      LOGICAL TAGT,/;"	v	module:COMMONS
TAKESTEP	func.f90	/^SUBROUTINE TAKESTEP$/;"	s
TAKESTEP	g.takestep.f	/^      SUBROUTINE TAKESTEP(/;"	s
TAKESTEP	gmin.func.f90	/^SUBROUTINE TAKESTEP$/;"	s
TAKESTEPAMDIHED	optim.amber9dummy.f90	/^subroutine  TAKESTEPAMDIHED(/;"	s
TAKESTEPAMM	optim.amber9dummy.f90	/^subroutine TAKESTEPAMM(/;"	s
TAKESTEPCH	optim.chdummy.f	/^      SUBROUTINE TAKESTEPCH(/;"	s
TAKESTEPDB	g.dbpg.f90	/^      SUBROUTINE TAKESTEPDB /;"	s
TAKESTEPELLIPSOIDS	g.ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPELLIPSOIDS(/;"	s
TAKESTEPELPSD	g.ljcapsidmodule.f90	/^      SUBROUTINE TAKESTEPELPSD /;"	s
TAKESTEPGB	g.ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPGB(/;"	s
TAKESTEPLJC	g.ljcoulomb.f	/^      SUBROUTINE TAKESTEPLJC(/;"	s
TAKESTEPLWOTP	g.lwotp.f90	/^      SUBROUTINE TAKESTEPLWOTP /;"	s
TAKESTEPMSGB	g.takestepmsgb.f90	/^      SUBROUTINE TAKESTEPMSGB /;"	s
TAKESTEPMSPY	g.takestepmspy.f90	/^      SUBROUTINE TAKESTEPMSPY /;"	s
TAKESTEPMULTISITEPY	g.multisitepy.f90	/^      SUBROUTINE TAKESTEPMULTISITEPY /;"	s
TAKESTEPPARAM	g.ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPPARAM(/;"	s
TAKESTEPSWAPMOVES	g.ljcapsidmodule.f90	/^SUBROUTINE TAKESTEPSWAPMOVES(/;"	s
TANTYPE	optim.gsdata.f90	/^  INTEGER :: TANTYPE$/;"	k	type:IMGNODE
TARFL	optim.key.f90	/^      CHARACTER(LEN=5) :: TARFL$/;"	v	module:KEY
TARGET	commons.f90	/^LOGICAL TARGET=/;"	v	module:COMMONS
TARGET	g.commons.f90	/^      LOGICAL DEBUG, TARGET,/;"	v	module:COMMONS
TARGET	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET,/;"	v	module:COMMONS
TARGETS	commons.f90	/^DOUBLE PRECISION, DIMENSION(:) :: TARGETS$/;"	v	module:COMMONS
TARGETS	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TARGETS(/;"	v	module:COMMONS
TARGETS	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TARGETS(/;"	v	module:COMMONS
TAU	g.vgw.f90	/^     DOUBLE PRECISION, ALLOCATABLE, SAVE :: MASSARRY(:), TAU(/;"	v	module:VGWSP
TAUMAX	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX,/;"	v	module:COMMONS
TAUMAX	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX,/;"	v	module:COMMONS
TAUMAX	g.vgw.f90	/^     DOUBLE PRECISION, SAVE ::  TAUMAX,/;"	v	module:VGWSP
TAUMAX	g.vgw.f90	/^     DOUBLE PRECISION, SAVE :: TAUMAX,/;"	v	module:VGW
TAUMAXFULL	g.commons.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX, &$/;"	v	module:COMMONS
TAUMAXFULL	g.commons.o.f90	/^     &                 PTSTEPS, NEQUIL, NQUENCH, COLDFUSIONLIMIT, NEWRES_TEMP, MINOMEGA, LJSIGMA, LJEPSILON, TAUMAX, &$/;"	v	module:COMMONS
TCHECK	optim.tcheck.f	/^      SUBROUTINE TCHECK(/;"	s
TCOORDS	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: TCOORDS$/;"	v	module:COMMONS
TCOORDS	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: TCOORDS$/;"	v	module:COMMONS
TDHDT	g.commons.f90	/^     &        MULTPAHAT, TDHDT,/;"	v	module:COMMONS
TDHDT	g.commons.o.f90	/^     &        MULTPAHAT, TDHDT,/;"	v	module:COMMONS
TDT	g.commons.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT,/;"	v	module:COMMONS
TDT	g.commons.o.f90	/^      LOGICAL :: FIELDT, OHT, IHT, TDT,/;"	v	module:COMMONS
TDT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT,/;"	v	module:KEY
TEIPS	g.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,/;"	v	module:MODAMBER9
TEIPS	optim.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,/;"	v	module:modamber9
TEMP	commons.f90	/^DOUBLE PRECISION :: TEMP=/;"	v	module:COMMONS
TEMP	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP,/;"	v	module:COMMONS
TEMP	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: TEMP,/;"	v	module:COMMONS
TEMPCOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,TEMPCOORDS,/;"	v
TEMPPARAM	g.modamber9.f90	/^      DOUBLE PRECISION, PARAMETER :: TEMPPARAM /;"	v	module:MODAMBER9
TEMPPARAM	optim.modamber9.f90	/^      DOUBLE PRECISION, PARAMETER :: TEMPPARAM /;"	v	module:modamber9
TEMPS	g.commons.f90	/^     &                 TFAC(3), RMS, TEMPS,/;"	v	module:COMMONS
TEMPS	g.commons.o.f90	/^     &                 TFAC(3), RMS, TEMPS,/;"	v	module:COMMONS
TEMPSTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=120) :: TEMPSTRING$/;"	v	module:NODES
TENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,/;"	v	module:MODAMBER
TEST	g.input.f	913;"	c	subroutine:REPORT
TEST	optim.input.f	773;"	c	subroutine:REPORT
TEST	pathsample.input.f	804;"	c	subroutine:REPORT
TESTSYMOP	g.ptgrp.f	/^      SUBROUTINE TESTSYMOP(/;"	s
TETHER	g.commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT, & $/;"	v	module:COMMONS
TETHER	g.commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT, CHECKDT, CHECKMARKOVT, & $/;"	v	module:COMMONS
TETRAHEDRA	g.tetrahedra.f90	/^      SUBROUTINE TETRAHEDRA /;"	s
TFAC	commons.f90	/^DOUBLE PRECISION :: TFAC=/;"	v	module:COMMONS
TFAC	g.commons.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA, &$/;"	v	module:COMMONS
TFAC	g.commons.o.f90	/^     &                 BOXLX, BOXLY, BOXLZ, PCUTOFF, SUPSTEP, SQUEEZER, SQUEEZED, COOPCUT, STOCKMU, STOCKLAMBDA, &$/;"	v	module:COMMONS
TFGRAD	optim.tosifumi.f	/^      SUBROUTINE TFGRAD(/;"	s
TFIND	optim.tosifumi.f	/^      SUBROUTINE TFIND(/;"	s
TFOLD	pathsample.Pfold.f90	/^SUBROUTINE TFOLD$/;"	s
TFSEC	optim.tosifumi.f	/^      SUBROUTINE TFSEC(/;"	s
TGT	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(:), GRAD(:), TGT(/;"	k	type:IMGNODE
THETA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  THETA$/;"	v	module:MODAMBER
THETA	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,/;"	v	module:MODUNRES
THETAEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: THETAEQ /;"	v	module:msevb_common
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA, THETA_0$/;"	v
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 /;"	v
THOMSON	g.thomson.f	/^      SUBROUTINE THOMSON(/;"	s
THOMSON	optim.thomson.f	/^      SUBROUTINE THOMSON(/;"	s
THOMSONANGTOC	g.thomson.f	/^      SUBROUTINE THOMSONANGTOC(/;"	s
THOMSONCTOANG	g.thomson.f	/^      SUBROUTINE THOMSONCTOANG(/;"	s
THOMSONT	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT,/;"	v	module:COMMONS
THOMSONT	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT, THOMSONT,/;"	v	module:COMMONS
THOMSONT	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT,/;"	v	module:KEY
THRESHOLDT	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT,/;"	v	module:COMMONS
THRESHOLDT	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL, THRESHOLDT,/;"	v	module:COMMONS
TIGHTE	optim.tight.f	/^      SUBROUTINE TIGHTE(/;"	s
TIGHTG	optim.tight.f	/^      SUBROUTINE TIGHTG(/;"	s
TIM	optim.gsdata.f90	/^  INTEGER :: TIM /;"	k	type:IMGNODE
TIME	mc.vars.inc.f90	/^      DOUBLE PRECISION :: EBEST,EPREV,TIME,/;"	v
TIMELIMIT	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS, TIMELIMIT,/;"	v	module:KEY
TINY	g.modamb.f90	/^      DOUBLE PRECISION TINY$/;"	v	module:MODAMBER
TINY	optim.gsdata.f90	/^  DOUBLE PRECISION, PARAMETER :: TINY=/;"	k	type:IMGNODE
TINY	optim.modamber.f90	/^      DOUBLE PRECISION TINY$/;"	v	module:MODAMBER
TIP	g.commons.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP,/;"	v	module:COMMONS
TIP	g.commons.o.f90	/^     &        MSORIGT, SQUEEZET, PERIODIC, SCT, RESIZET, TIP,/;"	v	module:COMMONS
TIP4P	g.tip.f	/^      SUBROUTINE TIP4P(/;"	s
TIPID	g.commons.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID,/;"	v	module:COMMONS
TIPID	g.commons.o.f90	/^      INTEGER :: NATOMS, NACCEPT, MAXIT, NTARGETS, NN, MM, NPAR, TIPID,/;"	v	module:COMMONS
TIPID	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS, ACKLANDID, RBATOMSMAX, &$/;"	v	module:KEY
TIPIO	g.finalio.f	/^      SUBROUTINE TIPIO(/;"	s
TIPIO	optim.tip.f	/^      SUBROUTINE TIPIO(/;"	s
TIPnP	optim.tip.f	/^      SUBROUTINE TIPnP(/;"	s
TKSTDCELPSD	g.gbcalamitic.f90	/^      SUBROUTINE TKSTDCELPSD /;"	s
TLANGV	g.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,/;"	v	module:MODAMBER9
TLANGV	optim.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,/;"	v	module:modamber9
TMOVE	g.commons.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE,/;"	v	module:COMMONS
TMOVE	g.commons.o.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FIXBOTH, FIXTEMP, FIXSTEP, JUMPMOVE, JDUMP, TMOVE,/;"	v	module:COMMONS
TMPCOORDS	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TMPCOORDS(/;"	v	program:GMIN
TN	g.tn.f	/^      SUBROUTINE TN /;"	s
TNORM	optim.gsdata.f90	/^     DOUBLE PRECISION :: TNORM,/;"	k	type:IMGNODE
TNT	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT,/;"	v	module:COMMONS
TNT	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT,/;"	v	module:COMMONS
TO	optim.modamber.f90	/^      DOUBLE PRECISION KT(42,42,42),TO(/;"	v	module:MODAMBER
TOLB	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB,/;"	v	module:COMMONS
TOLB	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB,/;"	v	module:COMMONS
TOLD	g.commons.f90	/^     &                 ECONV, TOLD,/;"	v	module:COMMONS
TOLD	g.commons.o.f90	/^     &                 ECONV, TOLD,/;"	v	module:COMMONS
TOLD	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD,/;"	v	module:KEY
TOLE	g.commons.f90	/^     &                 ECONV, TOLD, TOLE,/;"	v	module:COMMONS
TOLE	g.commons.o.f90	/^     &                 ECONV, TOLD, TOLE,/;"	v	module:COMMONS
TOLE	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE,/;"	v	module:KEY
TOMEGAC	g.modcharmm.f90	/^      LOGICAL :: TOMEGAC,/;"	v	module:MODCHARMM
TOMEGAC	optim.modcharmm.f90	/^      LOGICAL :: TOMEGAC,/;"	v	module:modcharmm
TOP	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,/;"	v	module:MODAMBER
TOPPOINTERSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: TOPPOINTERSAVE(/;"	v	module:SAVESTATE
TORSHELL	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,ANGLEHELL,TORSHELL,/;"	v	module:MODAMBER
TOSI	g.commons.f90	/^     &        PROJ, RGCL2, TOSI,/;"	v	module:COMMONS
TOSI	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI,/;"	v	module:COMMONS
TOSI	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI,/;"	v	module:KEY
TOSIC6	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T, BISECTT, BISECTDEBUG, &$/;"	v	module:KEY
TOSIFUMI	g.tosifumi.f	/^      SUBROUTINE TOSIFUMI(/;"	s
TOSIFUMI	optim.tosifumi.f	/^      SUBROUTINE TOSIFUMI(/;"	s
TOSIFUMIC6	optim.tosifumi.f	/^      SUBROUTINE TOSIFUMIC6(/;"	s
TOSIFUMIPOL	optim.tosifumi.f	/^      SUBROUTINE TOSIFUMIPOL(/;"	s
TOSIPOL	optim.key.f90	/^     &        TOSIC6, TOSIPOL,/;"	v	module:KEY
TOT	g.io1.f	38;"	c	subroutine:IO1
TOT	g.mc.F	1472;"	c	subroutine:REST
TOT	g.mc.F	1619;"	c	subroutine:REN
TOT	g.mc.F	39;"	c	subroutine:MC
TOT	g.potential.f	56;"	c	subroutine:POTENTIAL
TOT	g.saveit.f	104;"	c	subroutine:A9INTESAVEIT
TOT	g.saveit.f	28;"	c	subroutine:GSAVEIT
TOT	g.symmetry.f90	57;"	c	subroutine:SYMMETRY
TOT	g.symmetry2.f90	50;"	c	subroutine:SYMMETRY2
TOT	g.symmetrycsm.f90	40;"	c	subroutine:SYMMETRYCSM
TOTALJOBSTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=1000) :: TOTALJOBSTRING$/;"	v	module:NODES
TOTANG	optim.intcommons.f90	/^  INTEGER :: TOTBOND, TOTANG,/;"	v	module:INTCOMMONS
TOTBOND	optim.intcommons.f90	/^  INTEGER :: TOTBOND,/;"	v	module:INTCOMMONS
TOTDIH	optim.intcommons.f90	/^  INTEGER :: TOTBOND, TOTANG, TOTDIH,/;"	v	module:INTCOMMONS
TOTENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,/;"	v	module:MODAMBER
TOTRES	optim.intcommons.f90	/^  INTEGER :: TOTBOND, TOTANG, TOTDIH, TOTRES!/;"	v	module:INTCOMMONS
TOTSTEPS	optim.gsdata.f90	/^  INTEGER :: MAXTOTSTEPS,/;"	k	type:IMGNODE
TPAHA	g.commons.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA,/;"	v	module:COMMONS
TPAHA	g.commons.o.f90	/^     &        HBINS, NRBSITES, NRBSITES1, NPS, GATOM, NMSBSAVE, MAXSAVE, NSYMQMAX, EQUIL, TPAHA,/;"	v	module:COMMONS
TRACKDATAT	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT,/;"	v	module:COMMONS
TRACKDATAT	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS, GROUND, DIPOLE, DFTBT, SW, SUPERSTEP, EAMLJT, PBGLUET, TRACKDATAT,/;"	v	module:COMMONS
TRAD	optim.key.f90	/^      DOUBLE PRECISION :: TRAD,/;"	v	module:KEY
TRANS	g.trans.f	/^      DOUBLE PRECISION FUNCTION TRANS(/;"	f
TRANSBACK	optim.chdummy.f	/^      SUBROUTINE TRANSBACK(/;"	s
TRANSBACKDELTA	optim.chdummy.f	/^      SUBROUTINE TRANSBACKDELTA(/;"	s
TRANSFORM	optim.chdummy.f	/^      SUBROUTINE TRANSFORM(/;"	s
TRANSFORMS	g.transforms.f90	/^MODULE TRANSFORMS$/;"	m
TRANSITION	g.mc.F	/^      SUBROUTINE TRANSITION(/;"	s
TRANSITION	mc.f90	/^      SUBROUTINE TRANSITION(/;"	s
TRANSLATE	g.transforms.f90	/^    FUNCTION TRANSLATE(/;"	f	module:TRANSFORMS
TRANSMAX	g.modcharmm.f90	/^      DOUBLE PRECISION :: PTRANS,PROT,TRANSMAX,/;"	v	module:MODCHARMM
TRANSMAX	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,TRANSMAX,/;"	v	module:modcharmm
TRANSXYT	g.modcharmm.f90	/^      LOGICAL :: MAKEOLIGOT, MAKEOLIGOSTART, INITROT, TRANSXYT,/;"	v	module:MODCHARMM
TRAPK	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS, IMSEPMIN, IMSEPMAX, TRAPK$/;"	v	module:KEY
TRENORM	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,& $/;"	v	module:COMMONS
TRENORM	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR, COMP, DGUESS, GUIDECUT, EFAC,& $/;"	v	module:COMMONS
TRIGUNITY	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: TRIGUNITY /;"	v	module:msevb_common
TRYAGAIN	optim.connect.f	/^      SUBROUTINE TRYAGAIN(/;"	s
TRYAGAINRESET	optim.connect.f	/^      SUBROUTINE TRYAGAINRESET(/;"	s
TRYNEB	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB,/;"	v	module:modcharmm
TSALLIST	g.commons.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST,/;"	v	module:COMMONS
TSALLIST	g.commons.o.f90	/^      LOGICAL DEBUG, TARGET, MORSET, CUTT, SEEDT, CENT, TSALLIST,/;"	v	module:COMMONS
TSDOUBLE	pathsample.tsdouble.f90	/^SUBROUTINE TSDOUBLE$/;"	s
TSEGUESS	pathsample.setup.f	/^      DOUBLE PRECISION FUNCTION TSEGUESS(/;"	f
TSEGUESS	ps.setup.f90	/^      DOUBLE PRECISION FUNCTION TSEGUESS(/;"	f
TSFOUNDTYPE	optim.intlbfgs.f90	/^TYPE TSFOUNDTYPE$/;"	t	subroutine:INTLBFGS
TSFOUNDTYPE	optim.intlbfgslj.f90	/^TYPE TSFOUNDTYPE$/;"	t	subroutine:INTLBFGSLJ
TSFVIBGUESS	pathsample.setup.f	/^      DOUBLE PRECISION FUNCTION TSFVIBGUESS(/;"	f
TSFVIBGUESS	ps.setup.f90	/^      DOUBLE PRECISION FUNCTION TSFVIBGUESS(/;"	f
TSGLD	g.modamber9.f90	/^      LOGICAL TSGLD,/;"	v	module:MODAMBER9
TSGLD	optim.modamber9.f90	/^      LOGICAL TSGLD,/;"	v	module:modamber9
TSIDECHAIN	g.modcharmm.f90	/^      LOGICAL :: TOMEGAC,TSIDECHAIN /;"	v	module:MODCHARMM
TSIDECHAIN	optim.modcharmm.f90	/^      LOGICAL :: TOMEGAC,TSIDECHAIN /;"	v	module:modcharmm
TSSEARCH	optim.connect.f	/^      SUBROUTINE TSSEARCH(/;"	s
TSSEARCH	pathsample.tssearch.f	/^      SUBROUTINE TSSEARCH(/;"	s
TSTAR	g.commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR,/;"	v	module:COMMONS
TSTAR	g.commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint, COREFRAC, TSTAR,/;"	v	module:COMMONS
TSTART	g.commons.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART,/;"	v	module:COMMONS
TSTART	g.commons.o.f90	/^     &                 HISTFACMUL, HPERCENT, AVOIDDIST, MAXERISE, MAXEFALL, TSTART,/;"	v	module:COMMONS
TSTART	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS, TIMELIMIT, TSTART,/;"	v	module:KEY
TSTRING	optim.main.f90	/^      CHARACTER FNAME*80, TSTRING*/;"	v	program:OPTIM4
TSUMMARY	optim.OPTIM.F	/^      SUBROUTINE TSUMMARY$/;"	s
TSUMMARY	optim.func.f90	/^      SUBROUTINE TSUMMARY$/;"	s
TTDONE	optim.modtwoend.f90	/^      LOGICAL :: TTDONE$/;"	v	module:MODTWOEND
TUNNELT	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT,/;"	v	module:COMMONS
TUNNELT	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT,/;"	v	module:COMMONS
TVIPS	g.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,TVIPS$/;"	v	module:MODAMBER9
TVIPS	optim.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,TVIPS$/;"	v	module:modamber9
TWISTCH	optim.chdummy.f	/^      SUBROUTINE TWISTCH(/;"	s
TWISTDIHE	optim.chdummy.f	/^      SUBROUTINE TWISTDIHE(/;"	s
TWISTDIHET	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,/;"	v	module:modcharmm
TWISTTYPE	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE,/;"	v	module:modcharmm
TWOD	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD,/;"	v	module:COMMONS
TWOD	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH, AXTELL, AMBER, FIXIMAGE, BINARY, SHIFTCUT, ARNO, TUNNELT, TWOD,/;"	v	module:COMMONS
TWOD	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE, NORESET, TWOD,/;"	v	module:KEY
TWODFUNC	optim.2Dfunc.f	/^      SUBROUTINE TWODFUNC(/;"	s
TWOEND	optim.twoend.f	/^      SUBROUTINE TWOEND(/;"	s
TWOENDS	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS,/;"	v	module:KEY
TWOEVAL	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL,/;"	v	module:KEY
TWOPI	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: TWOPI=/;"	v
TWOPI	optim.intcommons.f90	/^  DOUBLE PRECISION, PARAMETER :: PI=3.141592653589793D0, TWOPI /;"	v	module:INTCOMMONS
TWOPLUS	g.commons.f90	/^     &        STAR, PLUS, TWOPLUS,/;"	v	module:COMMONS
TWOPLUS	g.commons.o.f90	/^     &        STAR, PLUS, TWOPLUS,/;"	v	module:COMMONS
TW_DIFFP	g.modamber9.f90	/^double precision, dimension(:), allocatable :: TW_DIFFP$/;"	v	module:MODAMBER9
TW_DIFFP	optim.modamber9.f90	/^double precision, dimension(:), allocatable :: TW_DIFFP$/;"	v	module:modamber9
TW_SIDECHAIN	g.modamber9.f90	/^integer, dimension(:), allocatable :: TW_SIDECHAIN$/;"	v	module:MODAMBER9
TW_SIDECHAIN	optim.modamber9.f90	/^integer, dimension(:), allocatable :: TW_SIDECHAIN$/;"	v	module:modamber9
T_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg,/;"	v	module:amhglobals
TargetWL	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL,/;"	v	module:COMMONS
TargetWL	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL,/;"	v	module:COMMONS
TetheredWL	g.tether.f90	/^      subroutine TetheredWL$/;"	s
U	g.vgw.f90	/^     DOUB/;"	v	module:VGW
UACHIRAL	g.modamber9.f90	/^      LOGICAL NOCISTRANSDNA, UACHIRAL,/;"	v	module:MODAMBER9
UACHIRAL	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST, UACHIRAL,/;"	v	module:modamber9
UBONDS	optim.intcommons.f90	/^  INTEGER :: NUBONDS=/;"	v	module:INTCOMMONS
UEDITRGYR	optim.unrescalcdihe.f	/^      SUBROUTINE UEDITRGYR(/;"	s
UENERGY	optim.unresoptim.f	/^      SUBROUTINE UENERGY(/;"	s
UNEWREAD	optim.unresdump.f	/^      SUBROUTINE UNEWREAD(/;"	s
UNFREEZERES	g.commons.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES,/;"	v	module:COMMONS
UNFREEZERES	g.commons.o.f90	/^     &        PARAMONOVPBCX, PARAMONOVPBCY, PARAMONOVPBCZ, PARAMONOVCUTOFF, GAYBERNEDCT, UNFREEZERES,/;"	v	module:COMMONS
UNGUESSPATH	optim.unguesspath.f90	/^SUBROUTINE UNGUESSPATH(/;"	s
UNIAXGETPATHLENGTH	optim.rigidb.f90	/^SUBROUTINE UNIAXGETPATHLENGTH(/;"	s
UNIAXT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT, UNIAXT,/;"	v	module:KEY
UNMAKEGRADMEC	optim.unmeccano.f90	/^SUBROUTINE UNMAKEGRADMEC(/;"	s
UNMAXRES	optim.modunres.f90	/^      INTEGER :: UNMAXRES,/;"	v	module:MODUNRES
UNMAXRES2	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2,/;"	v	module:MODUNRES
UNMECBFGS	optim.unmeccano.f90	/^SUBROUTINE UNMECBFGS(/;"	s
UNMECCANO	optim.unmeccano.f90	/^SUBROUTINE UNMECCANO(/;"	s
UNREADREF	optim.unrescalcdihe.f	/^      SUBROUTINE UNREADREF(/;"	s
UNRESCALCDIHE	optim.unrescalcdihe.f	/^      SUBROUTINE UNRESCALCDIHE(/;"	s
UNRESCALCDIHEREF	optim.unrescalcdihe.f	/^      SUBROUTINE UNRESCALCDIHEREF(/;"	s
UNRESCALCDIHESEC	optim.unresconnectsections.f	/^      SUBROUTINE UNRESCALCDIHESEC(/;"	s
UNRESCALCRGYR	optim.unrescalcdihe.f	/^      SUBROUTINE UNRESCALCRGYR(/;"	s
UNRESDIHENEB	optim.unresnebguessts.f	/^      SUBROUTINE UNRESDIHENEB(/;"	s
UNRESDUMP2	optim.unresdump.f	/^      SUBROUTINE UNRESDUMP2(/;"	s
UNRESDUMP2	pathsample.unresdump.f	/^      SUBROUTINE UNRESDUMP2(/;"	s
UNRESDUMP3	optim.unresdump.f	/^      SUBROUTINE UNRESDUMP3(/;"	s
UNRESGETDIHEDIST	optim.unresnebguessts.f	/^      SUBROUTINE UNRESGETDIHEDIST(/;"	s
UNRESGUESSMIN	optim.unresguessts.f	/^      SUBROUTINE UNRESGUESSMIN(/;"	s
UNRESGUESSMINSEC	optim.unresconnectsections.f	/^      SUBROUTINE UNRESGUESSMINSEC(/;"	s
UNRESGUESSTS	optim.unresguessts.f	/^      SUBROUTINE UNRESGUESSTS(/;"	s
UNRESGUESSTSSEC	optim.unresconnectsections.f	/^      SUBROUTINE UNRESGUESSTSSEC(/;"	s
UNRESMASS	optim.modunres.f90	87;"	c	module:MODUNRES
UNRESREAD	pathsample.unresdump.f	/^      SUBROUTINE UNRESREAD(/;"	s
UNRSETDIHE	optim.unressetdihe.f	/^      SUBROUTINE UNRSETDIHE$/;"	s
UNRSETZSYMATMASS	optim.unresoptim.f	/^      SUBROUTINE UNRSETZSYMATMASS$/;"	s
UNRSGETBEE	optim.unrestransform.f	/^      SUBROUTINE UNRSGETBEE(/;"	s
UNRSPERTDIHE	optim.unrestwist.f	/^      SUBROUTINE UNRSPERTDIHE(/;"	s
UNRST	optim.key.f90	/^     &        REPEL,UNRST,/;"	v	module:KEY
UNRSTWISTALL	optim.unrestwist.f	/^      SUBROUTINE UNRSTWISTALL(/;"	s
UNRSTWISTDIHE	optim.unrestwist.f	/^      SUBROUTINE UNRSTWISTDIHE(/;"	s
UPCASE	pathsample.input.f	/^      SUBROUTINE UPCASE(/;"	s
UPDATEC12	pathsample.rigidbody.f90	/^  SUBROUTINE UPDATEC12(/;"	s	module:RIGIDBODY
UPDATEC12	pathsample.rigidbodymod.f90	/^  SUBROUTINE UPDATEC12(/;"	s	module:RIGIDBODYMOD
UPDATEC6	pathsample.rigidbody.f90	/^  SUBROUTINE UPDATEC6(/;"	s	module:RIGIDBODY
UPDATEC6	pathsample.rigidbodymod.f90	/^  SUBROUTINE UPDATEC6(/;"	s	module:RIGIDBODYMOD
UPDATEDC	optim.unresoptim.f	/^      SUBROUTINE UPDATEDC$/;"	s
UPDATENBONDS	optim.chdummy.f	/^      SUBROUTINE UPDATENBONDS(/;"	s
UPPERCASE	func.f90	/^      SUBROUTINE UPPERCASE(/;"	s
UPPERCASE	optim.input.f	/^      SUBROUTINE UPPERCASE(/;"	s
UREFCOORD	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: UREFCOORD,/;"	v	module:MODUNRES
UREFPPSANGLE	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: UREFCOORD,UREFPPSANGLE /;"	v	module:MODUNRES
URINGS	optim.intcommons.f90	/^  INTEGER :: NURINGS=/;"	v	module:INTCOMMONS
USECART	optim.intcommons.f90	/^  LOGICAL, ALLOCATABLE :: BACKBONE(:), USECART(/;"	v	module:INTCOMMONS
USEPARFILE	optim.intcommons.f90	/^  LOGICAL :: USEPARFILE /;"	v	module:INTCOMMONS
USERNAME	pathsample.nodes.f90	/^     CHARACTER(LEN=80) :: USERNAME$/;"	v	module:NODES
UTILS	pathsample.utils.f90	/^MODULE UTILS$/;"	m
UTN	g.fedor.f	/^                 DOUBLE PRECISION FUNCTION UTN(/;"	f
V	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD/;"	v
VADD	g.ptgrp.f	/^      SUBROUTINE VADD(/;"	s
VADD	optim.utils.f	/^      SUBROUTINE VADD(/;"	s
VALUEST	optim.key.f90	/^     &        PGRAD, VALUEST,/;"	v	module:KEY
VAR	optim.modunres.f90	54;"	c	module:MODUNRES
VARIABLE	optim.gsdata.f90	/^    LOGICAL :: VARIABLE /;"	k	type:IMGNODE
VARIABLES	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC, FREEZERES, DF1T, &$/;"	v	module:KEY
VARIABLES	optim.main.f90	/^      LOGICAL VARIABLES,/;"	v	program:OPTIM4
VARS	optim.vars.f90	/^MODULE VARS$/;"	m
VAT	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO, VAT,/;"	v	module:COMMONS
VAT	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,/;"	v	module:COMMONS
VAT	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,/;"	v	module:COMMONS
VATO	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO, VAT, VATO$/;"	v	module:COMMONS
VATO	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,  VATO /;"	v	module:COMMONS
VATO	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) ::  VAT,  VATO /;"	v	module:COMMONS
VBL	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,/;"	v	module:MODUNRES
VBL0	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,VBLINV2,VBL_CIS,VBL0$/;"	v	module:MODUNRES
VBLINV	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,/;"	v	module:MODUNRES
VBLINV2	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,VBLINV2,/;"	v	module:MODUNRES
VBL_CIS	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,VBLINV2,VBL_CIS,/;"	v	module:MODUNRES
VD	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD(/;"	v
VDUMP	optim.vdump.f	/^      SUBROUTINE VDUMP(/;"	s
VDWA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:,:) ::  R,VDWA,/;"	v	module:MODAMBER
VDWB	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:,:) ::  R,VDWA,VDWB$/;"	v	module:MODAMBER
VDWE	optim.modamber.f90	/^      DOUBLE PRECISION VDWR(42),VDWE(/;"	v	module:MODAMBER
VDWENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,IMPENERGY,QENERGY,VDWENERGY$/;"	v	module:MODAMBER
VDWR	optim.modamber.f90	/^      DOUBLE PRECISION VDWR(/;"	v	module:MODAMBER
VEC	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VEC(/;"	v	module:COMMONS
VEC	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VEC(/;"	v	module:COMMONS
VECCHK	optim.vecck.f90	/^       DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: VECCHK$/;"	v	module:VECCK
VECCK	optim.vecck.f90	/^MODULE VECCK$/;"	m
VECNORM	optim.utils.f	/^      SUBROUTINE VECNORM(/;"	s
VECS	optim.intlbfgs.f90	/^     DOUBLE PRECISION,POINTER :: VECS(/;"	k	type:TSFOUNDTYPE
VECS	optim.intlbfgslj.f90	/^     DOUBLE PRECISION,POINTER :: VECS(/;"	k	type:TSFOUNDTYPE
VECT	g.modconsts_trans_97.f90	/^     &                 ALPHA,VECT(/;"	v	module:consts_trans_97
VECTORST	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST,/;"	v	module:KEY
VGW	g.commons.f90	/^     &        LJSITECOORDST, VGW,/;"	v	module:COMMONS
VGW	g.commons.o.f90	/^     &        LJSITECOORDST, VGW,/;"	v	module:COMMONS
VGW	g.vgw.f90	/^MODULE VGW$/;"	m
VGWQUENCH	g.vgw.f90	/^SUBROUTINE VGWQUENCH(/;"	s
VGWQUENCHSP	g.vgw.f90	/^SUBROUTINE VGWQUENCHSP(/;"	s
VGWSP	g.vgw.f90	/^MODULE VGWSP$/;"	m
VGWTOL	g.commons.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL,/;"	v	module:COMMONS
VGWTOL	g.commons.o.f90	/^     &                 TAUMAXFULL, CPFACTORSG, CPFACTORFG, VGWTOL,/;"	v	module:COMMONS
VIEW	optim.pahagh.f90	/^      SUBROUTINE VIEW(/;"	s
VIEWDMBL	g.dmblmorse.f90	/^      SUBROUTINE VIEWDMBL(/;"	s
VIEWDMBLTD	g.dbptd.f90	/^      SUBROUTINE VIEWDMBLTD(/;"	s
VIEWMULTPAHA	g.multpaha.f90	/^      SUBROUTINE VIEWMULTPAHA(/;"	s
VIEWNEWTIP	g.newtip.f90	/^      SUBROUTINE VIEWNEWTIP(/;"	s
VIEWPATCHY	g.patchy.f90	/^SUBROUTINE VIEWPATCHY(/;"	s
VIEWPATCHYCURR	g.patchy.f90	/^SUBROUTINE VIEWPATCHYCURR(/;"	s
VIEWTDHD	g.tetrahedra.f90	/^      SUBROUTINE VIEWTDHD(/;"	s
VIJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: VIJ /;"	v	module:msevb_common
VIJEXCH	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: VIJEXCH$/;"	v	module:msevb_common
VISITPROP	g.commons.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP,/;"	v	module:COMMONS
VISITPROP	g.commons.o.f90	/^     &        TETHER, HISTSMOOTH, VISITPROP,/;"	v	module:COMMONS
VMIN	tr.f90	/^      DOUBLE PRECISION VMIN$/;"	v
VPOT	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION VPOT(/;"	f
VPOT_D	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION VPOT_D(/;"	f
VPOT_DD	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION VPOT_DD(/;"	f
VSTAT	optim.utils.f	/^      SUBROUTINE VSTAT(/;"	s
VT	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: VT$/;"	v	module:COMMONS
VT	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: VT$/;"	v	module:COMMONS
VT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VT(/;"	v	module:KEY
VXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD,/;"	v
Vpot	g.Ackland_metals.f90	/^        double precision function Vpot(/;"	f
Vpot_d	g.Ackland_metals.f90	/^        double precision function Vpot_d(/;"	f
Vpot_dd	g.Ackland_metals.f90	/^        double precision function Vpot_dd(/;"	f
Vpppi	g.modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,Vpppi,/;"	v	module:consts
Vppsig	g.modconsts.f90	/^     &                 Vsssig,Vspsig,Vppsig,/;"	v	module:consts
Vspsig	g.modconsts.f90	/^     &                 Vsssig,Vspsig,/;"	v	module:consts
Vsssig	g.modconsts.f90	/^      DOUBLE PRECISION CHI,BETA,D,A,B,RC,DELTA,&$/;"	v	module:consts
W	optim.double.f	/^     1                 V(3*N), R, G(2,2), H, W,/;"	v
WALESAMH_INITIAL	g.amhdummy.f	/^      SUBROUTINE WALESAMH_INITIAL(/;"	s
WALESAMH_INITIAL	optim.amhdummy.f	/^      SUBROUTINE WALESAMH_INITIAL(/;"	s
WALESAMH_INTERFACE	g.amhdummy.f	/^      SUBROUTINE WALESAMH_INTERFACE(/;"	s
WALESAMH_INTERFACE	optim.amhdummy.f	/^      SUBROUTINE WALESAMH_INTERFACE(/;"	s
WATERDCT	g.commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT,/;"	v	module:COMMONS
WATERDCT	g.commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT,/;"	v	module:COMMONS
WATERKZT	g.commons.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT,/;"	v	module:COMMONS
WATERKZT	g.commons.o.f90	/^     &        MULTPAHAT, TDHDT, WATERDCT, WATERKZT,/;"	v	module:COMMONS
WATERPDC	g.waterpdc.f90	/^      SUBROUTINE WATERPDC /;"	s
WATERPKZ	g.waterpkz.f90	/^      SUBROUTINE WATERPKZ /;"	s
WATERSTEP	g.modamb.f90	/^      LOGICAL WATERSTEP$/;"	v	module:MODAMBER
WATER_INTER_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: WATER_INTER_COULOMB$/;"	v	module:msevb_common
WC	optim.wc.f90	/^MODULE WC$/;"	m
WCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: WLIGAND(:), WCOMPLEX(/;"	v	module:DOCKMODULE
WEIGHT	g.molinfo.f90	/^        DOUBLE PRECISION   :: WEIGHT /;"	k	type:ATOM
WEL	g.welch.f	/^      SUBROUTINE WEL(/;"	s
WEL	optim.welch.f	/^      SUBROUTINE WEL(/;"	s
WELCH	g.commons.f90	/^     &        PROJ, RGCL2, TOSI, WELCH,/;"	v	module:COMMONS
WELCH	g.commons.o.f90	/^     &        PROJ, RGCL2, TOSI, WELCH,/;"	v	module:COMMONS
WELCH	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH,/;"	v	module:KEY
WEN	g.wenzel.f	/^      SUBROUTINE WEN(/;"	s
WENERGY	g.welch.f	/^      SUBROUTINE WENERGY(/;"	s
WENERGY	optim.welch.f	/^      SUBROUTINE WENERGY(/;"	s
WENZEL	g.commons.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL,/;"	v	module:COMMONS
WENZEL	g.commons.o.f90	/^     &        FRAUSIT, ANGST, SELFT, STEPOUT, WENZEL,/;"	v	module:COMMONS
WGRAD	g.welch.f	/^      SUBROUTINE WGRAD(/;"	s
WGRAD	optim.welch.f	/^      SUBROUTINE WGRAD(/;"	s
WHICHORDER	optim.key.f90	/^      CHARACTER(LEN=4), ALLOCATABLE :: WHICHORDER(/;"	v	module:KEY
WLIGAND	pathsample.dock.f90	/^double precision, allocatable :: WLIGAND(/;"	v	module:DOCKMODULE
WORD	optim.main.f90	/^      CHARACTER WORD*/;"	v	program:OPTIM4
WORKINGDIRECTORY	pathsample.nodes.f90	/^     CHARACTER(LEN=100) :: WORKINGDIRECTORY$/;"	v	module:NODES
WPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: WLIGAND(:), WCOMPLEX(:), WPROTEIN(/;"	v	module:DOCKMODULE
WRITECRD	g.io_sanity.f90	/^FUNCTION WRITECRD(/;"	f
WRITEPDB	g.io_sanity.f90	/^FUNCTION WRITEPDB(/;"	f
WRITEPROFILE	optim.intlbfgs.f90	/^SUBROUTINE WRITEPROFILE(/;"	s
WRITERST	g.io_sanity.f90	/^FUNCTION WRITERST(/;"	f
WRITETOCARTESIANSTREAM	pathsample.rigidbody.f90	/^  SUBROUTINE WRITETOCARTESIANSTREAM /;"	s	module:RIGIDBODY
WRITETOCARTESIANSTREAM	pathsample.rigidbodymod.f90	/^  SUBROUTINE WRITETOCARTESIANSTREAM /;"	s	module:RIGIDBODYMOD
Warranty	optim.wc.f90	/^          subroutine Warranty$/;"	s	module:WC
WriteOutFile	optim.binaryio.f90	/^     subroutine WriteOutFile(/;"	s	module:BinaryIO
X	optim.double.f	/^      DOUBLE PRECISION X(/;"	v
X	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,/;"	v	module:MODAMBER
XDGUESS	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS,/;"	v	module:KEY
XERBLA	g.dgetrf.f	/^      SUBROUTINE XERBLA(/;"	s
XERCNT	optim.dqag.f	/^      SUBROUTINE XERCNT /;"	s
XERCNT	pathsample.dsort.f	/^      SUBROUTINE XERCNT /;"	s
XERHLT	optim.dqag.f	/^      SUBROUTINE XERHLT /;"	s
XERHLT	pathsample.dsort.f	/^      SUBROUTINE XERHLT /;"	s
XERMSG	optim.dqag.f	/^      SUBROUTINE XERMSG /;"	s
XERMSG	pathsample.dsort.f	/^      SUBROUTINE XERMSG /;"	s
XERPRN	optim.dqag.f	/^      SUBROUTINE XERPRN /;"	s
XERPRN	pathsample.dsort.f	/^      SUBROUTINE XERPRN /;"	s
XERRWD	g.dlsode.f	/^      SUBROUTINE XERRWD /;"	s
XERSVE	optim.dqag.f	/^      SUBROUTINE XERSVE /;"	s
XERSVE	pathsample.dsort.f	/^      SUBROUTINE XERSVE /;"	s
XGETUA	optim.dqag.f	/^      SUBROUTINE XGETUA /;"	s
XGETUA	pathsample.dsort.f	/^      SUBROUTINE XGETUA /;"	s
XINSAVE	g.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: XINSAVE(/;"	v	module:COMMONS
XINSAVE	g.commons.o.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: XINSAVE(/;"	v	module:COMMONS
XINT	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(:), GRAD(:), TGT(:), XINT(/;"	k	type:IMGNODE
XLB3	optim.changep.f	38;"	c	subroutine:CHANGEP
XLOC	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,/;"	v	module:MODUNRES
XMAXERISE	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE,/;"	v	module:KEY
XMINA	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RPMASSES(:), XMINA(/;"	v	module:KEY
XMINB	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RPMASSES(:), XMINA(:), XMINB(/;"	v	module:KEY
XMOVERENORM	g.commons.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM,/;"	v	module:COMMONS
XMOVERENORM	g.commons.o.f90	/^     DOUBLE PRECISION RHO, GAMMA, SIG, SCEPS, SCC, TOLB, T12FAC, XMOVERENORM,/;"	v	module:COMMONS
XMUL	g.commons.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,/;"	v	module:COMMONS
XMUL	g.commons.o.f90	/^     &        MCSTEPS(3), NRUNS, NVAR, MYPOWER, XMUL,/;"	v	module:COMMONS
XMUL	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL,/;"	v	module:KEY
XMUPDATE	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS, MUPDATE, XMUPDATE,/;"	v	module:KEY
XMYLBFGS	optim.xmylbfgs.f	/^      SUBROUTINE XMYLBFGS(/;"	s
XPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_/;"	v
XPD_2	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_2,/;"	v
XQM	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM,/;"	v	module:COMMONS
XQM	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM,/;"	v	module:COMMONS
XQM	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM,/;"	v	module:KEY
XQP	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP,/;"	v	module:COMMONS
XQP	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP,/;"	v	module:COMMONS
XQP	optim.key.f90	/^     &        APP, AMM, APM, XQP,/;"	v	module:KEY
XROT	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,XROT,/;"	v	module:MODUNRES
XSETF	g.dlsode.f	/^      SUBROUTINE XSETF /;"	s
XSETUN	g.dlsode.f	/^      SUBROUTINE XSETUN /;"	s
XVEC	g.ptgrp.f	/^      SUBROUTINE XVEC(/;"	s
XX	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: XX,/;"	v	module:msevb_common
XYZ	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(/;"	k	type:IMGNODE
XYZCART	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZCART(/;"	k	type:IMGNODE
Y	g.qorderparam_blj.f90	/^	COMPLEX function Y(/;"	f
Y	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,Y,/;"	v	module:MODAMBER
Y2	g.qorderparam_lj.f90	/^	COMPLEX function Y2(/;"	f
YESNO	pathsample.nodes.f90	/^     LOGICAL :: SSHPARALLEL=.FALSE., YESNO$/;"	v	module:NODES
YY	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: XX, YY,/;"	v	module:msevb_common
Z	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,Y,Z,/;"	v	module:MODAMBER
Z1	g.Zetterling.f	/^      SUBROUTINE Z1(/;"	s
Z1	optim.Zetterling.f	/^      SUBROUTINE Z1(/;"	s
Z2	g.Zetterling.f	/^      SUBROUTINE Z2(/;"	s
Z2	optim.Zetterling.f	/^      SUBROUTINE Z2(/;"	s
ZALIGNTEST	optim.stock.f	/^      LOGICAL FUNCTION ZALIGNTEST(/;"	f
ZDUM	optim.main.f90	/^      CHARACTER ZDUM*/;"	v	program:OPTIM4
ZERO	g.ptgrp.f	/^      SUBROUTINE ZERO(/;"	s
ZETT1	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1,/;"	v	module:COMMONS
ZETT1	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1,/;"	v	module:COMMONS
ZETT2	g.commons.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1, &$/;"	v	module:COMMONS
ZETT2	g.commons.o.f90	/^     &        BLJCLUSTER, COMPRESST, FIX, FIXT, BFGS, LBFGST, DBRENTT, DZTEST, FNI, FAL, CPMD, TNT, ZETT1, &$/;"	v	module:COMMONS
ZSTAR	g.commons.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR,/;"	v	module:COMMONS
ZSTAR	g.commons.o.f90	/^     &                 COULTEMP, APP, AMM, APM, XQP, XQM, ALPHAP, ALPHAM, ZSTAR,/;"	v	module:COMMONS
ZSTAR	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR,/;"	v	module:COMMONS
ZSYM	g.commons.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: ZSYM /;"	v	module:COMMONS
ZSYM	g.commons.o.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: ZSYM /;"	v	module:COMMONS
ZSYM	optim.commons.f90	/^      CHARACTER(LEN=5), ALLOCATABLE, DIMENSION(:) :: ZSYM /;"	v	module:COMMONS
ZSYMCOMPLEX	pathsample.dock.f90	/^character(len=4), allocatable :: ZSYMLIGAND(:),ZSYMCOMPLEX(/;"	v	module:DOCKMODULE
ZSYMLIGAND	pathsample.dock.f90	/^character(len=4), allocatable :: ZSYMLIGAND(/;"	v	module:DOCKMODULE
ZSYMPROTEIN	pathsample.dock.f90	/^character(len=4), allocatable :: ZSYMLIGAND(:),ZSYMCOMPLEX(:),ZSYMPROTEIN(/;"	v	module:DOCKMODULE
ZTIME	g.tn.f	/^      SUBROUTINE ZTIME(/;"	s
ZUNDEL_F	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ZUNDEL_F$/;"	v	module:msevb_common
ZUNDEL_G	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ZUNDEL_G$/;"	v	module:msevb_common
ZWISCHEN	g.zwischen.f	/^      SUBROUTINE ZWISCHEN(/;"	s
ZWK	optim.zwk.f90	/^MODULE ZWK$/;"	m
ZWORK	optim.zwk.f90	/^       DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ZWORK$/;"	v	module:ZWK
ZZ	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: XX, YY, ZZ$/;"	v	module:msevb_common
a	g.modamb.f90	/^      INTEGER  a,/;"	v	module:MODAMBER
a	optim.modamber.f90	/^      INTEGER  a,/;"	v	module:MODAMBER
a	optim.ttm3f.f90	/^double precision :: a,/;"	v	module:mnasa_mod
aCCaCD	optim.ttm3f.f90	/^double precision, parameter :: aDD=0.175d0, aCCaCD=/;"	v	module:ttm3f_mod
aDD	optim.ttm3f.f90	/^double precision, parameter :: aDD=/;"	v	module:ttm3f_mod
aa1	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  aa1,/;"	v	module:MODAMBER
aa1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: aa1,/;"	v	module:MODAMBER
aa2	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  aa1, aa2,/;"	v	module:MODAMBER
aa2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: aa1,aa2,/;"	v	module:MODAMBER
aa3	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  aa1, aa2, aa3 /;"	v	module:MODAMBER
aa3	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: aa1,aa2,aa3$/;"	v	module:MODAMBER
ab_c_of_n_new	optim.amhglobals.f	/^      logical alpha_c_of_n,ab_c_of_n_old,ab_c_of_n_new,/;"	v	module:amhglobals
ab_c_of_n_old	optim.amhglobals.f	/^      logical alpha_c_of_n,ab_c_of_n_old,/;"	v	module:amhglobals
aconnectdump	optim.amber.f	/^      SUBROUTINE aconnectdump$/;"	s
actualomega	g.modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(50), actualphi(50), actualpsi(50), actualomega(/;"	v	module:MODAMBER
actualphi	g.modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(50), actualphi(/;"	v	module:MODAMBER
actualpsi	g.modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(50), actualphi(50), actualpsi(/;"	v	module:MODAMBER
add_candidate	pathsample.kshortestpaths.f90	/^SUBROUTINE add_candidate(/;"	s
add_pred	pathsample.kshortestpaths.f90	/^SUBROUTINE add_pred(/;"	s
add_succ	pathsample.kshortestpaths.f90	/^SUBROUTINE add_succ(/;"	s
ag	g.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,/;"	v	module:MODAMBER9
ag	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,/;"	v	module:modamber9
allow_neg	optim.amhglobals.f	/^      logical ran_force,ran_file,allow_neg$/;"	v	module:amhglobals
alpb	g.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,/;"	v	module:MODAMBER9
alpb	optim.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,/;"	v	module:modamber9
alpha	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: alpha /;"	v	module:MODAMBER
alpha	optim.SD.f90	/^real*8 :: alpha /;"	v	module:SDwater
alpha_c_of_n	optim.amhglobals.f	/^      logical alpha_c_of_n,/;"	v	module:amhglobals
alphaoh	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,/;"	v	module:mnasa_mod
alrh	g.Alglue.f	/^      SUBROUTINE alrh(/;"	s
alt_prox_cut	optim.amhglobals.f	/^      double precision alt_prox_cut$/;"	v	module:amhglobals
aluu	g.Alglue.f	/^      SUBROUTINE aluu(/;"	s
alv2	g.Alglue.f	/^      SUBROUTINE alv2(/;"	s
amber_deallocate_stacks	g.amber9dummy.f90	/^subroutine amber_deallocate_stacks(/;"	s
amber_deallocate_stacks	optim.amber9dummy.f90	/^subroutine amber_deallocate_stacks(/;"	s
amber_readcoords	g.amber9dummy.f90	/^subroutine amber_readcoords(/;"	s
amber_readcoords	optim.amber9dummy.f90	/^subroutine amber_readcoords(/;"	s
ambercount	g.modamb.f90	/^      INTEGER ambercount,/;"	v	module:MODAMBER
amberdump	g.finalio.f	/^      SUBROUTINE amberdump(/;"	s
amberdump	optim.amber.f	/^      SUBROUTINE amberdump(/;"	s
amberenergy	optim.amber.f	/^      SUBROUTINE amberenergy$/;"	s
ambergcount	g.modamb.f90	/^      INTEGER ambercount, ambergcount$/;"	v	module:MODAMBER
ambermass	optim.amber.f	/^      SUBROUTINE ambermass$/;"	s
amberstr	g.modamber9.f90	/^      CHARACTER(len=20) :: amberstr$/;"	v	module:MODAMBER9
amberstr	optim.modamber9.f90	/^      CHARACTER(len=20) :: amberstr$/;"	v	module:modamber9
amberstr1	g.modamber9.f90	/^      CHARACTER(len=8)  :: amberstr1$/;"	v	module:MODAMBER9
amberstr1	optim.modamber9.f90	/^      CHARACTER(len=8)  :: amberstr1$/;"	v	module:modamber9
ambfinalio_node	g.modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,ambxyz_unit,ambrst_unit,ambfinalio_node$/;"	v	module:MODAMBER9
ambpdb_unit	g.modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,/;"	v	module:MODAMBER9
ambrst_unit	g.modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,ambxyz_unit,ambrst_unit,/;"	v	module:MODAMBER9
ambxyz_unit	g.modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,ambpdb_unit,ambxyz_unit,/;"	v	module:MODAMBER9
amh_gse	optim.amhglobals.f	/^      double precision vpotnt(0:maxr+1,maxcnt,maxtab),amh_gse,/;"	v	module:amhglobals
amhglobals	optim.amhglobals.f	/^      Module amhglobals$/;"	m
aminoa	optim.amhglobals.f	/^      character aminoa(/;"	v	module:amhglobals
amoviedump	optim.amber.f	/^      SUBROUTINE amoviedump(/;"	s
ang	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,ang,/;"	v	module:MODAMBER
angle	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,/;"	v	module:LJCAPSIDMODULE
angle	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,/;"	v	module:PYMODULE
angle	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,/;"	v	module:LJCAPSIDMODULE
angle	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,/;"	v	module:PYMODULE
angle2	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,/;"	v	module:LJCAPSIDMODULE
angle2	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,/;"	v	module:PYMODULE
angle2	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,/;"	v	module:LJCAPSIDMODULE
angle2	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,/;"	v	module:PYMODULE
anglesecderivs	optim.amber.f	/^      SUBROUTINE anglesecderivs$/;"	s
angmag	optim.utils.f	/^        function angmag(/;"	f
ans	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,/;"	v	module:MODAMBER
ans	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,fish,ans,/;"	v	module:MODAMBER
answer	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,/;"	v	module:MODAMBER
anti_HB	optim.amhglobals.f	/^        double precision :: anti_NHB(20,20,2),$/;"	v	module:amhglobals
anti_NHB	optim.amhglobals.f	/^        double precision :: anti_NHB(/;"	v	module:amhglobals
anti_one	optim.amhglobals.f	/^     *  para_HB(20,20,2),para_one(20),$/;"	v	module:amhglobals
aparams	optim.amber.f	/^      SUBROUTINE aparams$/;"	s
aps	optim.amhglobals.f	/^      double precision aps(/;"	v	module:amhglobals
ar2UT0	g.fedor.f	/^          DOUBLE PRECISION  FUNCTION ar2UT0(/;"	f
aread	optim.amber.f	/^      SUBROUTINE aread$/;"	s
arms	g.modamb.f90	/^      DOUBLE PRECISION arms$/;"	v	module:MODAMBER
arnoenergy	g.fedor.f	/^      subroutine arnoenergy(/;"	s
assignPivotVBstate	optim.msevb.f90	/^     subroutine assignPivotVBstate(/;"	s
assignZundelSpecies	optim.msevb.f90	/^     subroutine assignZundelSpecies(/;"	s
assignvb3	optim.msevb.f90	/^        subroutine assignvb3$/;"	s
atmass1	g.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1, coords, atmass1$/;"	v	module:MODAMBER9
atmass1	optim.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1, coords, atmass1$/;"	v	module:modamber9
atmpl	optim.msevb_common.f90	/^  INTEGER, ALLOCATABLE, DIMENSION(:,:) :: atmpl /;"	v	module:msevb_common
atnum	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  atnum,/;"	v	module:MODAMBER
atnum	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: atnum,/;"	v	module:MODAMBER
atoms	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,/;"	v	module:MODAMBER
attr	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(/;"	v	module:PYMODULE
attr	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(/;"	v	module:PYMODULE
ave_seq	optim.amhglobals.f	/^      logical ave_seq,/;"	v	module:amhglobals
ave_seq_amc	optim.amhglobals.f	/^      logical ssweight,ave_seq_amw, ave_seq_amc$/;"	v	module:amhglobals
ave_seq_amw	optim.amhglobals.f	/^      logical ssweight,ave_seq_amw,/;"	v	module:amhglobals
ave_seq_hb	optim.amhglobals.f	/^      logical ave_seq,targ_cons, mem_cons,ave_seq_hb$/;"	v	module:amhglobals
avep	optim.amhglobals.f	/^     *     zrcord(AMHmaxsiz,3,maxpro,maxcrd),$/;"	v	module:amhglobals
avepp	optim.amhglobals.f	/^      double precision avepp(/;"	v	module:amhglobals
ax	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,/;"	v	module:MODAMBER
ay	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,/;"	v	module:MODAMBER
az	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,/;"	v	module:MODAMBER
b	g.modamb.f90	/^      INTEGER  a,b,/;"	v	module:MODAMBER
b	optim.modamber.f90	/^      INTEGER  a,b,/;"	v	module:MODAMBER
b	optim.ttm3f.f90	/^doubl/;"	v	module:mnasa_mod
b	pathsample.GT2data.f90	/^          type(IntegerList),pointer :: f,b$/;"	k	type:IntegerList
b	pathsample.GT2data.f90	/^          type(NodeList),pointer :: f,b$/;"	k	type:NodeList
b	pathsample.GT2data.f90	/^          type(RealList),pointer :: f,b$/;"	k	type:RealList
b1	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,/;"	v	module:mnasa_mod
b1D	optim.ttm3f.f90	/^double precision :: a,b,c0,c1,c2,b1D$/;"	v	module:mnasa_mod
bHH	optim.VRTMCY5f.f90	/^							AHH = 0.98642d0,&$/;"	v	module:MCY
bOH	optim.VRTMCY5f.f90	/^							AOH = 2.91318d0,&$/;"	v	module:MCY
bOO	optim.VRTMCY5f.f90	/^							AOO = 2376.94d0,&$/;"	v	module:MCY
bVH	optim.VRTMCY5f.f90	/^							AVH = 0.475543d0,&$/;"	v	module:MCY
bc_lesi	g.modamber9.f90	/^integer bc_lesr,bc_lesi$/;"	v	module:MODAMBER9
bc_lesi	optim.modamber9.f90	/^integer bc_lesr,bc_lesi$/;"	v	module:modamber9
bc_lesr	g.modamber9.f90	/^integer bc_lesr,/;"	v	module:MODAMBER9
bc_lesr	optim.modamber9.f90	/^integer bc_lesr,/;"	v	module:modamber9
bean	g.modamb.f90	/^      INTEGER  match,bean,/;"	v	module:MODAMBER
bean	optim.modamber.f90	/^      INTEGER  match,bean,/;"	v	module:MODAMBER
belly	g.modamber9.f90	/^logical belly,/;"	v	module:MODAMBER9
belly	optim.modamber9.f90	/^logical belly,/;"	v	module:modamber9
bellymask	g.modamber9.f90	/^character(len=256) restraintmask,bellymask,/;"	v	module:MODAMBER9
bellymask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,/;"	v	module:modamber9
benergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,/;"	v	module:MODAMBER
beta_c_of_n	optim.amhglobals.f	/^      logical beta_c_of_n,/;"	v	module:amhglobals
bg	g.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,/;"	v	module:MODAMBER9
bg	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,/;"	v	module:modamber9
bias_av	optim.amhglobals.f	/^      double precision bias_weight,bias_av,/;"	v	module:amhglobals
bias_prefactor	optim.amhglobals.f	/^      double precision bias_weight,bias_av,bias_var,bias_prefactor,/;"	v	module:amhglobals
bias_var	optim.amhglobals.f	/^      double precision bias_weight,bias_av,bias_var,/;"	v	module:amhglobals
bias_weight	optim.amhglobals.f	/^      double precision bias_weight,/;"	v	module:amhglobals
biaspoly	optim.amhglobals.f	/^      double precision bias_weight,bias_av,bias_var,bias_prefactor,$/;"	v	module:amhglobals
bildham	optim.msevb.f90	/^     subroutine bildham$/;"	s
bondarray	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) ::  bondarray /;"	v	module:MODAMBER
bondarray	optim.modamber.f90	/^      INTEGER,ALLOCATABLE, DIMENSION (:,:) :: bondarray$/;"	v	module:MODAMBER
bondedto	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  atnum, bondedto,/;"	v	module:MODAMBER
bondedto	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: atnum,bondedto,/;"	v	module:MODAMBER
bondln	optim.amhglobals.f	/^      double precision temtur(mxtemp),temtur_quench(maxmov,maxmov),temgrd(5),$/;"	v	module:amhglobals
bondnumber	g.modamb.f90	/^      INTEGER  match,bean,bondnumber,/;"	v	module:MODAMBER
bondnumber	optim.modamber.f90	/^      INTEGER  match,bean,bondnumber$/;"	v	module:MODAMBER
bonds	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: bonds /;"	v	module:MODAMBER
bonds	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:,:) :: bonds$/;"	v	module:MODAMBER
bottom	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,/;"	v	module:MODAMBER
box	g.modamber9.f90	/^double precision box,/;"	v	module:MODAMBER9
box	optim.modamber9.f90	/^double precision box,/;"	v	module:modamber9
boxi	g.modamber9.f90	128;"	c	module:MODAMBER9
boxi	optim.modamber9.f90	144;"	c	module:modamber9
boxr	g.modamber9.f90	121;"	c	module:MODAMBER9
boxr	optim.modamber9.f90	137;"	c	module:modamber9
bs	optim.dimer.f	28;"	c	subroutine:fdimer
bsstep	g.odesd.f	/^      SUBROUTINE bsstep(/;"	s
build_boxes	optim.Z2faster.f	/^      subroutine build_boxes(/;"	s
bx	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,/;"	v	module:MODAMBER
by	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,/;"	v	module:MODAMBER
bz	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,/;"	v	module:MODAMBER
c	g.modamb.f90	/^      INTEGER  a,b,c,/;"	v	module:MODAMBER
c	optim.modamber2.f90	/^      INTEGER  c$/;"	v	module:MODAMBER2
c0	optim.ttm3f.f90	/^double precision :: a,b,c0,/;"	v	module:mnasa_mod
c1	optim.ttm3f.f90	/^double precision :: a,b,c0,c1,/;"	v	module:mnasa_mod
c10	optim.c10.f	/^        subroutine c10(/;"	s
c10calc_dyn	optim.c10.f	/^        subroutine c10calc_dyn(/;"	s
c10calc_energy	optim.c10.f	/^        subroutine c10calc_energy(/;"	s
c10calc_gradient	optim.c10.f	/^        subroutine c10calc_gradient(/;"	s
c10calc_int_coords	optim.c10.f	/^        subroutine c10calc_int_coords(/;"	s
c10param_array	optim.c10.f	/^        subroutine c10param_array(/;"	s
c2	optim.ttm3f.f90	/^double precision :: a,b,c0,c1,c2,/;"	v	module:mnasa_mod
c5zA	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA,/;"	v	module:mnasa_mod
c_of_m_dist	optim.amhglobals.f	/^      double precision c_of_m_dist(/;"	v	module:amhglobals
calcAtomicInteractions	optim.msevb.f90	/^     subroutine calcAtomicInteractions /;"	s
calcInterAtomicDistances	optim.msevb.f90	/^     subroutine calcInterAtomicDistances(/;"	s
calc_dyn	g.p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_dyn	optim.p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_dyn	p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_dynBLN	optim.BLN.f	/^      subroutine calc_dynBLN(/;"	s
calc_energy	g.p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_energy	optim.p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_energy	p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_energyBLN	g.BLN.f	/^      subroutine calc_energyBLN(/;"	s
calc_energyBLN	optim.BLN.f	/^      subroutine calc_energyBLN(/;"	s
calc_energy_Go	optim.GoOptim.f	/^      subroutine calc_energy_Go(/;"	s
calc_gradient	g.p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_gradient	optim.p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_gradient	p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_int_coords	g.p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
calc_int_coords	optim.p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
calc_int_coords	p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
calc_int_coordsBLN	optim.BLN.f	/^      subroutine calc_int_coordsBLN(/;"	s
calculateH2OinterForces	optim.fmsevb.f90	/^	subroutine calculateH2OinterForces /;"	s
cand	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: cand /;"	k	type:node
candidate_paths	pathsample.kshortestpaths.f90	/^TYPE(path), TARGET, ALLOCATABLE :: shortest_paths(:,:), candidate_paths(/;"	v	module:GRAPH
carrms	g.modamber9.f90	/^   double precision carrms$/;"	v	module:MODAMBER9
carrms	optim.modamber9.f90	/^   double precision carrms$/;"	v	module:modamber9
cbasis	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA, cbasis,/;"	v	module:mnasa_mod
ccev_dist	optim.amhglobals.f	/^      double precision ccev_dist(/;"	v	module:amhglobals
ccore	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA, cbasis, ccore,/;"	v	module:mnasa_mod
cfarkas	g.Farkas.f	157;"	c	subroutine:NIINIT
cfarkas	g.Farkas.f	248;"	c	subroutine:ALINIT
cfarkas	g.Farkas.f	39;"	c	subroutine:FARKAS
cg	g.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,cg$/;"	v	module:MODAMBER9
cg	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,cg$/;"	v	module:modamber9
charge	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: charge$/;"	v	module:ttm3f_mod
check	g.modamb.f90	/^      CHARACTER(LEN=10)  check$/;"	v	module:MODAMBER
check	optim.main.f90	/^      CHARACTER(LEN=10)  check$/;"	v	program:OPTIM4
check	optim.modamber.f90	/^      CHARACTER(LEN=10)  check$/;"	v	module:MODAMBER
check_chirality	g.amber9dummy.f90	/^subroutine check_chirality(/;"	s
check_chirality	optim.amber9dummy.f90	/^subroutine check_chirality(/;"	s
check_cistrans_dna	g.amber9dummy.f90	/^subroutine check_cistrans_dna(/;"	s
check_cistrans_dna	optim.amber9dummy.f90	/^subroutine check_cistrans_dna(/;"	s
check_cistrans_rna	g.amber9dummy.f90	/^subroutine check_cistrans_rna(/;"	s
check_cistrans_rna	optim.amber9dummy.f90	/^subroutine check_cistrans_rna(/;"	s
check_valleu_chirality	optim.amber9dummy.f90	/^subroutine check_valleu_chirality(/;"	s
checked_acos	optim.checkedtrig.f90	/^      function checked_acos(/;"	f
chiarray1	g.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1,/;"	v	module:MODAMBER9
chiarray1	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1,/;"	v	module:modamber9
chiarray2	g.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1, chiarray2$/;"	v	module:MODAMBER9
chiarray2	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1, chiarray2$/;"	v	module:modamber9
child	pathsample.GT2data.f90	/^          type(Node),pointer :: left,right,parent,child$/;"	k	type:Node
chiral	g.modamb.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: chiral$/;"	v	module:MODAMBER
chiral	optim.modamber.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: chiral$/;"	v	module:MODAMBER
chiralarray	g.modamb.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:,:) :: chiralarray$/;"	v	module:MODAMBER
chiralarray	optim.modamber.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:,:) :: chiralarray$/;"	v	module:MODAMBER
chiraltest	optim.amber.f	/^      SUBROUTINE chiraltest(/;"	s
chngmask	g.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask,/;"	v	module:MODAMBER9
chngmask	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask,/;"	v	module:modamber9
chrlscl	optim.amhglobals.f	/^      double precision chrlscl$/;"	v	module:amhglobals
cisarray1	g.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1,/;"	v	module:MODAMBER9
cisarray1	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1,/;"	v	module:modamber9
cisarray2	g.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2,/;"	v	module:MODAMBER9
cisarray2	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2,/;"	v	module:modamber9
clambda	g.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,/;"	v	module:MODAMBER9
clambda	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,/;"	v	module:modamber9
class_2	optim.amhglobals.f	/^      integer class_of_res_2(AMHmaxsiz),sort_non_add(2,2,2,2,2),$/;"	v	module:amhglobals
class_of_res_2	optim.amhglobals.f	/^      integer class_of_res_2(/;"	v	module:amhglobals
cleanMemory	optim.cleanmemory.f90	/^SUBROUTINE cleanMemory /;"	s
cmass	optim.ttm3f.f90	/^double precision, dimension(9) :: cmass /;"	v	module:mnasa_mod
coef	g.qorderparam_blj.f90	/^	DOUBLE PRECISION function coef(/;"	f
coef2	g.qorderparam_lj.f90	/^	DOUBLE PRECISION function coef2(/;"	f
coefD	optim.ttm3f.f90	/^double precision, dimension(84) :: coefD$/;"	v	module:mnasa_mod
colin	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,/;"	v	module:MODAMBER
colin	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,/;"	v	module:MODAMBER
comp	g.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,/;"	v	module:MODAMBER9
comp	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,/;"	v	module:modamber9
con_local_a	optim.amhglobals.f	/^      logical con_local_a,/;"	v	module:amhglobals
con_local_a_cut	optim.amhglobals.f	/^      integer con_local_a_cut,/;"	v	module:amhglobals
con_local_b	optim.amhglobals.f	/^      logical con_local_a, con_local_b$/;"	v	module:amhglobals
con_local_b_cut	optim.amhglobals.f	/^      integer con_local_a_cut, con_local_b_cut$/;"	v	module:amhglobals
const_mode	optim.amhglobals.f	/^       integer num_foldon_a,num_foldon_b,const_mode,/;"	v	module:amhglobals
consts	g.modconsts.f90	/^MODULE consts$/;"	m
consts_trans_97	g.modconsts_trans_97.f90	/^MODULE consts_trans_97 /;"	m
coords	g.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1/;"	v	module:MODAMBER9
coords	optim.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1/;"	v	module:modamber9
coords1	g.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1,/;"	v	module:MODAMBER9
coords1	optim.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1,/;"	v	module:modamber9
count	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,ang,imp,count$/;"	v	module:MODAMBER
cpin	g.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes, &$/;"	v	module:MODAMBER9
cpin	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes, &$/;"	v	module:modamber9
cpout	g.modamber9.f90	/^      cpin, cpout,/;"	v	module:MODAMBER9
cpout	optim.modamber9.f90	/^      cpin, cpout,/;"	v	module:modamber9
cprestrt	g.modamber9.f90	/^      cpin, cpout, cprestrt,/;"	v	module:MODAMBER9
cprestrt	optim.modamber9.f90	/^      cpin, cpout, cprestrt,/;"	v	module:modamber9
crdixn	optim.amhglobals.f	/^     *        mempre(maxres,maxtab),jres(maxres),crdixn(/;"	v	module:amhglobals
crest	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA, cbasis, ccore, crest$/;"	v	module:mnasa_mod
ctemp	optim.amhglobals.f	/^      double precision ctemp$/;"	v	module:amhglobals
cubspl	optim.cubspl.f	/^      subroutine cubspl /;"	s
cut	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,/;"	v	module:LJCAPSIDMODULE
cut	g.modamber9.f90	/^double precision box,cut,/;"	v	module:MODAMBER9
cut	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,/;"	v	module:PYMODULE
cut	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,/;"	v	module:LJCAPSIDMODULE
cut	optim.modamber9.f90	/^double precision box,cut,/;"	v	module:modamber9
cut	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,/;"	v	module:PYMODULE
cut_inner	g.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,/;"	v	module:MODAMBER9
cut_inner	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,/;"	v	module:modamber9
cutcap	g.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb, &$/;"	v	module:MODAMBER9
cutcap	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb, &$/;"	v	module:modamber9
cx	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,/;"	v	module:MODAMBER
cy	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,/;"	v	module:MODAMBER
cyclic	optim.amhglobals.f	/^      logical cyclic,/;"	v	module:amhglobals
cz	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,/;"	v	module:MODAMBER
d	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,/;"	v	module:MODAMBER
d	g.mododesd.f90	/^    do/;"	v	module:odesdsavear
d	optim.modamber.f90	/^      INTEGER  a,b,ios,d,/;"	v	module:MODAMBER
d	pathsample.GT2data.f90	/^          integer :: de/;"	k	type:Node
d2RijdXrb1dXrb2	optim.rigidfuncs.f	/^      function d2RijdXrb1dXrb2(/;"	f
d2fermi	optim.PachecoC60.f	/^      function d2fermi(/;"	f
d2morse	optim.PachecoC60.f	/^      function d2morse(/;"	f
d2vdw	optim.PachecoC60.f	/^      function d2vdw(/;"	f
d2zdXrb1dXrb2	optim.rigidfuncs.f	/^      function d2zdXrb1dXrb2(/;"	f
d2zdpx2	optim.rigidfuncs.f	/^      function d2zdpx2 /;"	f
d2zdpxdpy	optim.rigidfuncs.f	/^      function d2zdpxdpy /;"	f
d2zdpxdpz	optim.rigidfuncs.f	/^      function d2zdpxdpz /;"	f
d2zdpy2	optim.rigidfuncs.f	/^      function d2zdpy2 /;"	f
d2zdpydpz	optim.rigidfuncs.f	/^      function d2zdpydpz /;"	f
d2zdpz2	optim.rigidfuncs.f	/^      function d2zdpz2 /;"	f
dEbydx	g.modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx, dvdwEbydy, dvdwEbydz,&$/;"	v	module:MODAMBER
dEbydx	optim.modamber.f90	/^     &                 dvdwEbydy,dvdwEbydz, &$/;"	v	module:MODAMBER
dEbydy	g.modamb.f90	/^                                                   & dEbydx, dEbydy,/;"	v	module:MODAMBER
dEbydy	optim.modamber.f90	/^     &                 dEbydx,dEbydy,/;"	v	module:MODAMBER
dEbydz	g.modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz,/;"	v	module:MODAMBER
dEbydz	optim.modamber.f90	/^     &                 dEbydx,dEbydy,dEbydz,/;"	v	module:MODAMBER
dQ_dr_ij_a	optim.amhglobals.f	/^     *           Q_ij_a(0:n_divs_max,AMHmaxsiz),$/;"	v	module:amhglobals
dQ_dr_ij_b	optim.amhglobals.f	/^     *           Q_ij_b(0:n_divs_max,AMHmaxsiz),$/;"	v	module:amhglobals
dRM	optim.ttm3f.f90	/^double precision, dimension(:,:), allocatable :: dRM$/;"	v	module:ttm3f_mod
dRijdXrb	optim.rigidfuncs.f	/^      function dRijdXrb(/;"	f
dTdx	optim.SD.f90	/^function dTdx(/;"	f	module:SDwater
dVC	optim.VRTMCY5f.f90	/^							bVH = 1.18216d0,&$/;"	v	module:MCY
dVS	optim.VRTMCY5f.f90	/^							dVC = 0.517424d0,&$/;"	v	module:MCY
da1	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1,/;"	v	module:MODAMBER
da1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,/;"	v	module:MODAMBER
da2	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1, da2,/;"	v	module:MODAMBER
da2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,da2,/;"	v	module:MODAMBER
da3	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1, da2, da3,/;"	v	module:MODAMBER
da3	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,da2,da3,/;"	v	module:MODAMBER
da4	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  da1, da2, da3, da4 /;"	v	module:MODAMBER
da4	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,da2,da3,da4$/;"	v	module:MODAMBER
dangEbydx	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,/;"	v	module:MODAMBER
dangEbydy	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,dangEbydy,/;"	v	module:MODAMBER
dangEbydy	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,DBONDEBYDZ,DANGEBYDX, &$/;"	v	module:MODAMBER
dangEbydz	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,dangEbydy, dangEbydz,/;"	v	module:MODAMBER
dangEbydz	optim.modamber.f90	/^     &                 dangEbydy,dangEbydz,/;"	v	module:MODAMBER
daxpy	lbfgs.f	/^      subroutine daxpy(/;"	s
dbdx	optim.SD.f90	/^function dbdx(/;"	f	module:SDwater
dbondEbydx	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx,/;"	v	module:MODAMBER
dbondEbydy	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy,/;"	v	module:MODAMBER
dbondEbydz	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz,/;"	v	module:MODAMBER
dcoomm	g.myblas.f	/^      subroutine dcoomm(/;"	s
dcoomm	optim.myblas.f	/^      subroutine dcoomm(/;"	s
ddelta	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3, ddelta,/;"	v	module:MODAMBER
ddelta2	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3, ddelta, ddelta2,/;"	v	module:MODAMBER
ddelta3	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3, ddelta, ddelta2, ddelta3 /;"	v	module:MODAMBER
ddot	lbfgs.f	/^      double precision function ddot(/;"	f
degree	pathsample.GT2data.f90	/^          integer :: degree,/;"	k	type:Node
degreesToRadians	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: degreesToRadians /;"	v	module:mathsConstants
degto	g.modamb.f90	/^      DOUBLE PRECISION kt(42,42,42),to(42,42,42),degto(/;"	v	module:MODAMBER
delR_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg, delR_rg,/;"	v	module:amhglobals
del_r_a	optim.amhglobals.f	/^       double precision del_r_a(/;"	v	module:amhglobals
del_r_b	optim.amhglobals.f	/^       double precision del_r_b(/;"	v	module:amhglobals
delall	stringmod.f90	/^subroutine delall(/;"	s	module:strings
delete_candidate	pathsample.kshortestpaths.f90	/^SUBROUTINE delete_candidate(/;"	s
delsubstr	stringmod.f90	/^subroutine delsubstr(/;"	s	module:strings
delta	optim.amhglobals.f	/^      double precision delta,/;"	v	module:amhglobals
delta_dirac	g.Ackland_metals.f90	/^        double precision function delta_dirac(/;"	f
delta_dirac	optim.Ackland_metals.f90	/^        double precision function delta_dirac(/;"	f
delte	optim.amhglobals.f	/^      double precision delta,delte$/;"	v	module:amhglobals
deltz	optim.amhglobals.f	/^     *     forse(0:maxr+1,maxcnt,maxtab),$/;"	v	module:amhglobals
denom	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,/;"	v	module:MODAMBER
deohA	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,deohA,/;"	v	module:mnasa_mod
derphi	g.dzugutov.f	/^      subroutine derphi(/;"	s
derphi	optim.dzugutov.f	/^      subroutine derphi(/;"	s
derphiz1	g.Zetterling.f	/^      subroutine derphiz1(/;"	s
derphiz1	optim.Zetterling.f	/^      subroutine derphiz1(/;"	s
derphiz2	g.Zetterling.f	/^      subroutine derphiz2(/;"	s
derphiz2	optim.Zetterling.f	/^      subroutine derphiz2(/;"	s
destruct	optim.SD.f90	/^subroutine destruct(/;"	s	module:SDwater
devang	g.modamber9.f90	/^   double precision f,enmr,devdis,devang,/;"	v	module:MODAMBER9
devang	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,/;"	v	module:modamber9
devdis	g.modamber9.f90	/^   double precision f,enmr,devdis,/;"	v	module:MODAMBER9
devdis	optim.modamber9.f90	/^   double precision f,enmr,devdis,/;"	v	module:modamber9
devtor	g.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,/;"	v	module:MODAMBER9
devtor	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,/;"	v	module:modamber9
dfermi	optim.PachecoC60.f	/^      function dfermi(/;"	f
dgeco	g.welch.f	/^      subroutine dgeco(/;"	s
dgeco	optim.projh.f	/^      subroutine dgeco(/;"	s
dgedi	g.welch.f	/^      subroutine dgedi(/;"	s
dgedi	optim.projh.f	/^      subroutine dgedi(/;"	s
dgefa	g.welch.f	/^      subroutine dgefa(/;"	s
dgefa	optim.projh.f	/^      subroutine dgefa(/;"	s
did	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi, did,/;"	v	module:MODAMBER
dielc	g.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,/;"	v	module:MODAMBER9
dielc	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,/;"	v	module:modamber9
dielec	g.modamb.f90	/^      DOUBLE PRECISION dielec$/;"	v	module:MODAMBER
diff	optim.SD.f90	/^pure function diff(/;"	f	module:SDwater
dimer	optim.dimer.f	/^       subroutine dimer /;"	s
dimpEbydx	g.modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx,/;"	v	module:MODAMBER
dimpEbydx	optim.modamber.f90	/^     &                 dEbydx,dEbydy,dEbydz,dimpEbydx,/;"	v	module:MODAMBER
dimpEbydy	g.modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx, dimpEbydy,/;"	v	module:MODAMBER
dimpEbydy	optim.modamber.f90	/^     &                 dEbydx,dEbydy,dEbydz,dimpEbydx, &$/;"	v	module:MODAMBER
dimpEbydz	g.modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx, dimpEbydy, dimpEbydz,/;"	v	module:MODAMBER
dimpEbydz	optim.modamber.f90	/^     &                 dimpEbydy,dimpEbydz,/;"	v	module:MODAMBER
dip	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: dip$/;"	v	module:ttm3f_mod
dipoles	g.fedor.f	/^        subroutine dipoles(/;"	s
diptol	optim.ttm3f.f90	/^double precision, parameter :: diptol /;"	v	module:ttm3f_mod
display_version	g.display_version.f90	/^subroutine display_version(/;"	s
display_version	g.dv.f90	/^subroutine display_version(/;"	s	module:dv
dist	optim.utils.f	/^      function dist(/;"	f
dist_cut	optim.amhglobals.f	/^      logical beta_c_of_n,dist_cut$/;"	v	module:amhglobals
dist_d	optim.SD.f90	/^pure real*8 function dist_d(/;"	f	module:SDwater
dist_x	optim.SD.f90	/^pure real*8 function dist_x(/;"	f	module:SDwater
distance	g.dist.f90	/^MODULE distance /;"	m
distfunc	optim.mindist.f	/^      function distfunc(/;"	f
distfunc	pathsample.mindist.f	/^      function distfunc(/;"	f
dmix	optim.ttm3f.f90	/^double precision, parameter :: dmix /;"	v	module:ttm3f_mod
dmorse	optim.PachecoC60.f	/^      function dmorse(/;"	f
dms_nasa	optim.ttm3f.f90	/^subroutine dms_nasa(/;"	s
dms_param1	optim.ttm3f.f90	/^double precision, parameter :: dms_param1 /;"	v	module:ttm3f_mod
dms_param2	optim.ttm3f.f90	/^double precision, parameter :: dms_param1 =0.5d0,dms_param2 /;"	v	module:ttm3f_mod
dms_param3	optim.ttm3f.f90	/^double precision, parameter :: dms_param1 =0.5d0,dms_param2 = 0.9578d0, dms_param3=/;"	v	module:ttm3f_mod
dn	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dn,/;"	v	module:MODAMBER
dn2	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dn, dn2,/;"	v	module:MODAMBER
dn3	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dn, dn2, dn3 /;"	v	module:MODAMBER
doligmove	g.modamber9.f90	/^      LOGICAL :: doligmove=/;"	v	module:MODAMBER9
doligmove	optim.modamber9.f90	/^      LOGICAL :: doligmove$/;"	v	module:modamber9
domKr3dr	optim.SD.f90	/^pure real*8 function domKr3dr(/;"	f	module:SDwater
domLr3dr	optim.SD.f90	/^pure real*8 function domLr3dr(/;"	f	module:SDwater
dotopt	optim.utils.f	/^      function dotopt(/;"	f
dparam	g.modamb.f90	/^      DOUBLE PRECISION rstar,epsilon,dparam$/;"	v	module:MODAMBER
dphi	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi,/;"	v	module:MODAMBER
dphiHHdror	optim.SD.f90	/^pure real*8 function dphiHHdror(/;"	f	module:SDwater
dphiOHdror	optim.SD.f90	/^pure real*8 function dphiOHdror(/;"	f	module:SDwater
dphiOOdror	optim.SD.f90	/^pure real*8 function dphiOOdror(/;"	f	module:SDwater
dqEbydx	g.modamb.f90	/^                                                   & dEbydx, dEbydy, dEbydz, dimpEbydx, dimpEbydy, dimpEbydz,&$/;"	v	module:MODAMBER
dqEbydx	optim.modamber.f90	/^     &                 dimpEbydy,dimpEbydz, &$/;"	v	module:MODAMBER
dqEbydy	g.modamb.f90	/^                                                   & dqEbydx, dqEbydy,/;"	v	module:MODAMBER
dqEbydy	optim.modamber.f90	/^     &                 dqEbydx,dqEbydy,/;"	v	module:MODAMBER
dqEbydz	g.modamb.f90	/^                                                   & dqEbydx, dqEbydy, dqEbydz /;"	v	module:MODAMBER
dqEbydz	optim.modamber.f90	/^     &                 dqEbydx,dqEbydy,dqEbydz$/;"	v	module:MODAMBER
drh	g.Pbglue.f	/^      SUBROUTINE drh /;"	s
drjar	g.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,drjar$/;"	v	module:MODAMBER9
drjar	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,drjar$/;"	v	module:modamber9
drms	g.modamber9.f90	/^      tol,taur,dx0,drms,/;"	v	module:MODAMBER9
drms	optim.modamber9.f90	/^      tol,taur,dx0,drms,/;"	v	module:modamber9
drvmsevb	optim.drvmsevb.f90	/^subroutine drvmsevb(/;"	s
dsplint	g.Farkas.f	/^      SUBROUTINE dsplint(/;"	s
dt	g.modamber9.f90	/^double precision t,dt,/;"	v	module:MODAMBER9
dt	optim.modamber9.f90	/^double precision t,dt,/;"	v	module:modamber9
dtorsEbydx	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: dbondEbydx, dbondEbydy, dbondEbydz, dangEbydx,dangEbydy, dangEbydz,& $/;"	v	module:MODAMBER
dtorsEbydx	optim.modamber.f90	/^     &                 dangEbydy,dangEbydz, &$/;"	v	module:MODAMBER
dtorsEbydy	g.modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy,/;"	v	module:MODAMBER
dtorsEbydy	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,/;"	v	module:MODAMBER
dtorsEbydz	g.modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz,/;"	v	module:MODAMBER
dtorsEbydz	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,dtorsEbydz,/;"	v	module:MODAMBER
dv	g.dv.f90	/^module dv$/;"	m
dvalue	optim.dimer.f	/^       function dvalue /;"	f
dvdw	optim.PachecoC60.f	/^      function dvdw(/;"	f
dvdwEbydx	g.modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx,/;"	v	module:MODAMBER
dvdwEbydx	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,dtorsEbydz,dvdwEbydx,/;"	v	module:MODAMBER
dvdwEbydy	g.modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx, dvdwEbydy,/;"	v	module:MODAMBER
dvdwEbydy	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,dtorsEbydz,dvdwEbydx, &$/;"	v	module:MODAMBER
dvdwEbydz	g.modamb.f90	/^                                                   & dtorsEbydx, dtorsEbydy, dtorsEbydz, dvdwEbydx, dvdwEbydy, dvdwEbydz,/;"	v	module:MODAMBER
dvdwEbydz	optim.modamber.f90	/^     &                 dvdwEbydy,dvdwEbydz,/;"	v	module:MODAMBER
dvn	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi, did, dvn,/;"	v	module:MODAMBER
dvn2	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dphi, did, dvn, dvn2 /;"	v	module:MODAMBER
dvn3	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  dvn3,/;"	v	module:MODAMBER
dx	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,dx,/;"	v	module:MODAMBER
dx0	g.modamber9.f90	/^      tol,taur,dx0,/;"	v	module:MODAMBER9
dx0	optim.modamber9.f90	/^      tol,taur,dx0,/;"	v	module:modamber9
dxdpx	optim.rigidfuncs.f	/^      function dxdpx /;"	f
dxdpy	optim.rigidfuncs.f	/^      function dxdpy /;"	f
dxdpz	optim.rigidfuncs.f	/^      function dxdpz /;"	f
dy	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,dx,dy,/;"	v	module:MODAMBER
dydpx	optim.rigidfuncs.f	/^      function dydpx /;"	f
dydpy	optim.rigidfuncs.f	/^      function dydpy /;"	f
dydpz	optim.rigidfuncs.f	/^      function dydpz /;"	f
dz	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,denom,dx,dy,dz$/;"	v	module:MODAMBER
dzdXrb	optim.rigidfuncs.f	/^      function dzdXrb /;"	f
dzdpx	optim.rigidfuncs.f	/^      function dzdpx /;"	f
dzdpy	optim.rigidfuncs.f	/^      function dzdpy /;"	f
dzdpz	optim.rigidfuncs.f	/^      function dzdpz /;"	f
e	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,/;"	v	module:MODAMBER
e	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,/;"	v	module:MODAMBER
eadev	g.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,/;"	v	module:MODAMBER9
eadev	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,/;"	v	module:modamber9
ebdev	g.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,/;"	v	module:MODAMBER9
ebdev	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,/;"	v	module:modamber9
edge	pathsample.kshortestpaths.f90	/^TYPE edge$/;"	t	module:GRAPH
ehecl2	g.fedor.f	/^      subroutine ehecl2(/;"	s
eigensort_val_asc	optim.eigensort.f90	/^subroutine eigensort_val_asc(/;"	s
eigensort_val_asc	pathsample.quaternionmatch.f90	/^subroutine eigensort_val_asc(/;"	s
ekeles	g.modamber9.f90	/^double precision scaltles,tempsules,ekeles,/;"	v	module:MODAMBER9
ekeles	optim.modamber9.f90	/^double precision scaltles,tempsules,ekeles,/;"	v	module:modamber9
ekinles0	g.modamber9.f90	/^double precision ekinles0,/;"	v	module:MODAMBER9
ekinles0	optim.modamber9.f90	/^double precision ekinles0,/;"	v	module:modamber9
ekmhles	g.modamber9.f90	/^double precision ekmhles,/;"	v	module:MODAMBER9
ekmhles	optim.modamber9.f90	/^double precision ekmhles,/;"	v	module:modamber9
ekphles	g.modamber9.f90	/^double precision ekmhles,ekphles$/;"	v	module:MODAMBER9
ekphles	optim.modamber9.f90	/^double precision ekmhles,ekphles$/;"	v	module:modamber9
ene	g.modamber9.f90	/^   double precision ene(/;"	v	module:MODAMBER9
ene	optim.modamber9.f90	/^   double precision ene(/;"	v	module:modamber9
energyar	g.fedor.f	/^      subroutine energyar(/;"	s
enmr	g.modamber9.f90	/^   double precision f,enmr,/;"	v	module:MODAMBER9
enmr	optim.modamber9.f90	/^   double precision f,enmr,/;"	v	module:modamber9
ensave	g.modamber9.f90	/^double precision scalm,pencut,ensave,/;"	v	module:MODAMBER9
ensave	optim.modamber9.f90	/^double precision scalm,pencut,ensave,/;"	v	module:modamber9
entots	g.Natb.f	/^        SUBROUTINE entots(/;"	s
entots	optim.Natb.f	/^        SUBROUTINE entots(/;"	s
epair	optim.Z2faster.f	/^      real*8 function epair(/;"	f
epsilon	g.modamb.f90	/^      DOUBLE PRECISION rstar,epsilon,/;"	v	module:MODAMBER
epsilon1	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:LJCAPSIDMODULE
epsilon1	g.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:PYMODULE
epsilon1	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:LJCAPSIDMODULE
epsilon1	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:PYMODULE
eqdist	optim.amhglobals.f	/^      double precision hydscl(0:21,2),hrdrad(0:21,2),eqdist(/;"	v	module:amhglobals
eres	optim.amhglobals.f	/^      double precision eres$/;"	v	module:amhglobals
erstop	g.modamber9.f90	/^logical belly, erstop,/;"	v	module:MODAMBER9
erstop	optim.modamber9.f90	/^logical belly, erstop,/;"	v	module:modamber9
ev	g.mc.F	1287;"	c	subroutine:TRANSITION
ev	g.mc.F	1517;"	c	subroutine:ACCREJ
ev	g.tether.f90	63;"	c	subroutine:TetheredWL
evbin	g.modamber9.f90	/^      cpin, cpout, cprestrt, evbin,/;"	v	module:MODAMBER9
evbin	optim.modamber9.f90	/^      cpin, cpout, cprestrt, evbin,/;"	v	module:modamber9
evbout	g.modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout,/;"	v	module:MODAMBER9
evbout	optim.modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout,/;"	v	module:modamber9
evbt	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,/;"	v	module:MODAMBER9
evbt	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,/;"	v	module:modamber9
ew_type	g.modamber9.f90	/^integer verbose,netfrc,     ew_type,/;"	v	module:MODAMBER9
ew_type	optim.modamber9.f90	/^integer verbose,netfrc,     ew_type,/;"	v	module:modamber9
ewcntrl	g.modamber9.f90	245;"	c	module:MODAMBER9
ewcntrl	optim.modamber9.f90	261;"	c	module:modamber9
exchange2	optim.msevb.f90	/^        subroutine exchange2$/;"	s
extdiel	g.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,/;"	v	module:MODAMBER9
extdiel	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,/;"	v	module:modamber9
extra_logical	g.modamber9.f90	65;"	c	module:MODAMBER9
extra_logical	optim.modamber9.f90	81;"	c	module:modamber9
extraboxdim	g.modamber9.f90	/^double precision extraboxdim$/;"	v	module:MODAMBER9
extraboxdim	optim.modamber9.f90	/^double precision extraboxdim$/;"	v	module:modamber9
extrasamberdp	g.modamber9.f90	315;"	c	module:MODAMBER9
extrasamberdp	optim.modamber9.f90	331;"	c	module:modamber9
extrasamberint	g.modamber9.f90	314;"	c	module:MODAMBER9
extrasamberint	optim.modamber9.f90	330;"	c	module:modamber9
exvmin	optim.amhglobals.f	/^      double precision exvmin,/;"	v	module:amhglobals
exvminS	optim.amhglobals.f	/^      double precision exvmin,exvminS,/;"	v	module:amhglobals
exvminS_beta	optim.amhglobals.f	/^      double precision exvmin,exvminS,exvminS_beta(/;"	v	module:amhglobals
exvmin_gamma	optim.amhglobals.f	/^      double precision exvmin_gamma(/;"	v	module:amhglobals
f	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,/;"	v	module:MODAMBER
f	g.modamber9.f90	/^   double precision f,/;"	v	module:MODAMBER9
f	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,/;"	v	module:MODAMBER
f	optim.modamber9.f90	/^   double precision f,/;"	v	module:modamber9
f	pathsample.GT2data.f90	/^          type(IntegerList),pointer :: f,/;"	k	type:IntegerList
f	pathsample.GT2data.f90	/^          type(NodeList),pointer :: f,/;"	k	type:NodeList
f	pathsample.GT2data.f90	/^          type(RealList),pointer :: f,/;"	k	type:RealList
f5z	optim.ttm3f.f90	/^double precision :: f5z,/;"	v	module:mnasa_mod
fH	optim.ttm3f.f90	/^integer :: fO, lO, fH,/;"	v	module:ttm3f_mod
fH3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3,/;"	v	module:ttm3f_mod
fM	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM,/;"	v	module:ttm3f_mod
fM3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3, lH3, fM3,/;"	v	module:ttm3f_mod
fO	optim.ttm3f.f90	/^integer :: fO,/;"	v	module:ttm3f_mod
fO3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3,/;"	v	module:ttm3f_mod
facc	g.modamber9.f90	/^character owrite, facc$/;"	v	module:MODAMBER9
facc	optim.modamber9.f90	/^character owrite, facc$/;"	v	module:modamber9
factlocal	optim.dimer.f	/^       function factlocal(/;"	f
factorize	optim.SD.f90	/^subroutine factorize(/;"	s	module:SDwater
fbasis	optim.ttm3f.f90	/^double precision :: f5z,fbasis,/;"	v	module:mnasa_mod
fcap	g.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,/;"	v	module:MODAMBER9
fcap	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,/;"	v	module:modamber9
fcore	optim.ttm3f.f90	/^double precision :: f5z,fbasis,fcore,/;"	v	module:mnasa_mod
fcut	g.Ackland_metals.f90	/^	double precision  function fcut(/;"	f
fcut	optim.Ackland_metals.f90	/^	double precision  function fcut(/;"	f
fcut_d	g.Ackland_metals.f90	/^	double precision  function fcut_d(/;"	f
fcut_d	optim.Ackland_metals.f90	/^	double precision  function fcut_d(/;"	f
fcut_dd	g.Ackland_metals.f90	/^	double precision function fcut_dd(/;"	f
fcut_dd	optim.Ackland_metals.f90	/^	double precision function fcut_dd(/;"	f
fdiag	optim.fmsevb.f90	/^	subroutine fdiag(/;"	s
fdimer	optim.dimer.f	/^       subroutine fdimer /;"	s
fenergy	g.fedor.f	/^      subroutine fenergy(/;"	s
fermi	optim.PachecoC60.f	/^      function fermi(/;"	f
fgcalc	optim.Z2faster.f	/^      subroutine fgcalc(/;"	s
fh2ointer	optim.fmsevb.f90	/^	subroutine fh2ointer(/;"	s
fh2ointra	optim.fmsevb.f90	/^	subroutine fh2ointra(/;"	s
fh3ointra	optim.fmsevb.f90	/^        subroutine fh3ointra(/;"	s
field1	optim.SD.f90	/^function field1(/;"	f	module:SDwater
field2	optim.SD.f90	/^function field2(/;"	f	module:SDwater
filename	g.modamb.f90	/^      CHARACTER(LEN=20)  filename$/;"	v	module:MODAMBER
filename	optim.modamber.f90	/^      CHARACTER(LEN=20)  filename$/;"	v	module:MODAMBER
files	g.modamber9.f90	189;"	c	module:MODAMBER9
files	optim.modamber9.f90	205;"	c	module:modamber9
fin	g.modperm.f90	/^    double precision, allocatable :: fin(/;"	v	module:PERMU
finalio	main.pl	/^sub finalio {$/;"	s
finalio	main.pl~	/^sub finalio {$/;"	s
finalq	main.pl	/^sub finalq {$/;"	s
finalq	main.pl~	/^sub finalq {$/;"	s
finite_differences	optim.finite_differences.f90	/^module finite_differences$/;"	m
finter	optim.fmsevb.f90	/^	subroutine finter(/;"	s
fish	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,/;"	v	module:MODAMBER
fish	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,fish,/;"	v	module:MODAMBER
fix_dip	g.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip,/;"	v	module:MODAMBER9
fix_dip	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip,/;"	v	module:modamber9
fix_quad	g.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip, &$/;"	v	module:MODAMBER9
fix_quad	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip, &$/;"	v	module:modamber9
flush	g.porfuncs.f90	/^subroutine flush(/;"	s	module:PORFUNCS
fmsevb	optim.fmsevb.f90	/^	subroutine fmsevb(/;"	s
foldstrt_max_a	optim.amhglobals.f	/^        integer foldstrt_min_a(maxres),foldstrt_max_a(/;"	v	module:amhglobals
foldstrt_max_b	optim.amhglobals.f	/^        integer foldstrt_min_b(maxres),foldstrt_max_b(/;"	v	module:amhglobals
foldstrt_min_a	optim.amhglobals.f	/^        integer foldstrt_min_a(/;"	v	module:amhglobals
foldstrt_min_b	optim.amhglobals.f	/^        integer foldstrt_min_b(/;"	v	module:amhglobals
fork_subr	g.porfuncs.f90	/^          subroutine fork_subr(/;"	s	module:PORFUNCS
forse	optim.amhglobals.f	/^     *     rincsq(maxcnt,maxtab),$/;"	v	module:amhglobals
four_plus	optim.amhglobals.f	/^        logical four_plus$/;"	v	module:amhglobals
fphi	g.Ackland_metals.f90	/^       double precision function fphi(/;"	f
fphi	optim.Ackland_metals.f90	/^       double precision function fphi(/;"	f
fphi_d	g.Ackland_metals.f90	/^       double precision function fphi_d(/;"	f
fphi_d	optim.Ackland_metals.f90	/^       double precision function fphi_d(/;"	f
fphi_dd	g.Ackland_metals.f90	/^       double precision function fphi_dd(/;"	f
fphi_dd	optim.Ackland_metals.f90	/^       double precision function fphi_dd(/;"	f
fpsi	g.Ackland_metals.f90	/^       double precision function fpsi(/;"	f
fpsi_d	g.Ackland_metals.f90	/^       double precision function fpsi_d(/;"	f
fpsi_dd	g.Ackland_metals.f90	/^       double precision function fpsi_dd(/;"	f
frameon	g.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon,/;"	v	module:MODAMBER9
frameon	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon,/;"	v	module:modamber9
freqe	g.modamber9.f90	/^      vecs, radii, freqe,/;"	v	module:MODAMBER9
freqe	optim.modamber9.f90	/^      vecs, radii, freqe,/;"	v	module:modamber9
frest	optim.ttm3f.f90	/^double precision :: f5z,fbasis,fcore,frest$/;"	v	module:mnasa_mod
from	pathsample.kshortestpaths.f90	/^   TYPE(node), POINTER :: from /;"	k	type:edge
frss	g.Natb.f	/^        subroutine frss(/;"	s
frss	optim.Natb.f	/^        subroutine frss(/;"	s
fsmax	g.modamber9.f90	/^          solvph,rgbmax,fsmax,/;"	v	module:MODAMBER9
fsmax	optim.modamber9.f90	/^          solvph,rgbmax,fsmax,/;"	v	module:modamber9
fswitchbeta	g.modamber9.f90	/^double precision fswitchbeta$/;"	v	module:MODAMBER9
fswitchbeta	optim.modamber9.f90	/^double precision fswitchbeta$/;"	v	module:modamber9
ftss	g.Natb.f	/^        subroutine ftss(/;"	s
ftss	optim.Natb.f	/^        subroutine ftss(/;"	s
ftsz	g.Natb.f	/^        subroutine ftsz(/;"	s
ftsz	optim.Natb.f	/^        subroutine ftsz(/;"	s
func	g.EAMLJ_sub.f	/^      funct/;"	f
fvarphi	g.Ackland_metals.f90	/^       double precision function fvarphi /;"	f
fvarphi_d	g.Ackland_metals.f90	/^       double precision function fvarphi_d /;"	f
fvarphi_dd	g.Ackland_metals.f90	/^       double precision function fvarphi_dd /;"	f
g	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,/;"	v	module:MODAMBER
g	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,/;"	v	module:MODAMBER
g46merdiff	g.g46merdiff.f	/^        subroutine g46merdiff(/;"	s
g46merdiff	optim.g46merdiff.f	/^        subroutine g46merdiff(/;"	s
gamma1	optim.ttm3f.f90	/^function gamma1(/;"	f
gamma2	optim.ttm3f.f90	/^subroutine gamma2(/;"	s
gamma3	optim.ttm3f.f90	/^subroutine gamma3(/;"	s
gamma4	optim.ttm3f.f90	/^function gamma4(/;"	f
gammaM	optim.ttm3f.f90	/^double precision, parameter :: gammaM=/;"	v	module:ttm3f_mod
gamma_contact_order	optim.amhglobals.f	/^      double precision gamma_contact_order(/;"	v	module:amhglobals
gamma_ln	g.modamber9.f90	/^          kappa,offset,surften,gamma_ln,/;"	v	module:MODAMBER9
gamma_ln	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,/;"	v	module:modamber9
gamma_non_add	optim.amhglobals.f	/^      double precision :: gamma_non_add(/;"	v	module:amhglobals
gasdev	g.gauss.f	/^      FUNCTION gasdev(/;"	f
gbalpha	g.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,  & !32$/;"	v	module:MODAMBER9
gbalpha	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,  & !32$/;"	v	module:modamber9
gbbeta	g.modamber9.f90	/^          gbalpha,gbbeta,/;"	v	module:MODAMBER9
gbbeta	optim.modamber9.f90	/^          gbalpha,gbbeta,/;"	v	module:modamber9
gbgamma	g.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,/;"	v	module:MODAMBER9
gbgamma	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,/;"	v	module:modamber9
gbneckscale	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,/;"	v	module:MODAMBER9
gbneckscale	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,/;"	v	module:modamber9
gbsa	g.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,           &!41$/;"	v	module:MODAMBER9
gbsa	optim.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,           &!41$/;"	v	module:modamber9
genimpparams	g.modamb.f90	/^      DOUBLE PRECISION midimpparams(4,6),genimpparams(/;"	v	module:MODAMBER
gentorsparams	g.modamb.f90	/^      DOUBLE PRECISION gentorsparams(/;"	v	module:MODAMBER
geom	optim.mindist.f	337;"	c	function:distfunc
geom	optim.mindist.f	417;"	c	subroutine:DDISTFUNC
geom	optim.mindist.f	443;"	c	subroutine:DDDISTFUNC
geom	pathsample.mindist.f	337;"	c	function:distfunc
geom	pathsample.mindist.f	417;"	c	subroutine:DDISTFUNC
geom	pathsample.mindist.f	443;"	c	subroutine:DDDISTFUNC
getarg_subr	g.porfuncs.f90	/^          subroutine getarg_subr(/;"	s	module:PORFUNCS
getpid_subr	g.porfuncs.f90	/^          subroutine getpid_subr(/;"	s	module:PORFUNCS
gfunc	g.Ackland_metals.f90	/^	double precision function gfunc(/;"	f
gfunc	optim.Ackland_metals.f90	/^	double precision function gfunc(/;"	f
gfunc_d	g.Ackland_metals.f90	/^	double precision function gfunc_d(/;"	f
gfunc_d	optim.Ackland_metals.f90	/^	double precision function gfunc_d(/;"	f
gfunc_dd	g.Ackland_metals.f90	/^	double precision function gfunc_dd(/;"	f
gfunc_dd	optim.Ackland_metals.f90	/^	double precision function gfunc_dd(/;"	f
gly_con	optim.amhglobals.f	/^      logical i_alt_prox,i_3rd_is_contact,gly_con$/;"	v	module:amhglobals
gminbinding	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,/;"	v	module:DOCKMODULE
gmincomplex	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,/;"	v	module:DOCKMODULE
gminligand	pathsample.dock.f90	/^double precision :: gminligand,/;"	v	module:DOCKMODULE
gminprotein	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,/;"	v	module:DOCKMODULE
go_con	optim.amhglobals.f	/^      logical go_con$/;"	v	module:amhglobals
go_con_dist	optim.amhglobals.f	/^      double precision    go_con_dist$/;"	v	module:amhglobals
gparam_array	g.g46merdiff.f	/^        subroutine gparam_array(/;"	s
gparam_array	optim.g46merdiff.f	/^        subroutine gparam_array(/;"	s
gpes	g.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes,/;"	v	module:MODAMBER9
gpes	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes,/;"	v	module:modamber9
grad2d	optim.dimer.f	/^       function grad2d /;"	f
gradd	optim.dimer.f	/^       function gradd /;"	f
grdq	optim.ttm3f.f90	/^double precision, dimension(:,:,:,:), allocatable :: grdq$/;"	v	module:ttm3f_mod
grnd	g.fedor.f	/^      subroutine grnd(/;"	s
ground_state	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,ground_state,/;"	v	module:msevb_common
groupbuffer	g.modamber9.f90	/^character(len=4096) groupbuffer$/;"	v	module:MODAMBER9
groupbuffer	optim.modamber9.f90	/^character(len=4096) groupbuffer$/;"	v	module:modamber9
groups	g.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,/;"	v	module:MODAMBER9
groups	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,/;"	v	module:modamber9
h	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,/;"	v	module:MODAMBER
h	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,/;"	v	module:MODAMBER
hairy	optim.amber.f	/^      SUBROUTINE hairy(/;"	s
hairyhell	optim.amber.f	/^      SUBROUTINE hairyhell(/;"	s
hairyimp	optim.amber.f	/^      SUBROUTINE hairyimp(/;"	s
hairyimphell	optim.amber.f	/^      SUBROUTINE hairyimphell(/;"	s
hbond	optim.amhglobals.f	/^        logical hbond,/;"	v	module:amhglobals
hbscl	optim.amhglobals.f	/^        double precision hbscl(/;"	v	module:amhglobals
hdistconstraint	g.commons.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint,/;"	v	module:COMMONS
hdistconstraint	g.commons.o.f90	/^     &                 MinimalTemperature, MaximalTemperature, SwapProb, hdistconstraint,/;"	v	module:COMMONS
hecl2ut0	g.fedor.f	/^      DOUBLE PRECISION function hecl2ut0(/;"	f
hell	optim.modamber.f90	/^     &                 imphell,/;"	v	module:MODAMBER
hellcount	optim.modamber.f90	/^      INTEGER hellcount$/;"	v	module:MODAMBER
hmat	g.fedor.f	/^      subroutine hmat(/;"	s
hmatd	g.fedor.f	/^      subroutine hmatd(/;"	s
ho_zero	optim.amhglobals.f	/^        double precision sigma_h,sigma_NO,ho_zero,/;"	v	module:amhglobals
homlfl	optim.amhglobals.f	/^       character homlfl(/;"	v	module:amhglobals
hrdrad	optim.amhglobals.f	/^      double precision hydscl(0:21,2),hrdrad(/;"	v	module:amhglobals
hulp	g.modamber9.f90	77;"	c	module:MODAMBER9
hulp	optim.modamber9.f90	93;"	c	module:modamber9
hydscl	optim.amhglobals.f	/^      double precision hydscl(/;"	v	module:amhglobals
hydseq	optim.amhglobals.f	/^     *     ywork(maxres,3,maxcrd),$/;"	v	module:amhglobals
i	g.modamb.f90	/^      INTEGER  a,b,c,io/;"	v	module:MODAMBER
i	optim.modamber.f90	/^      INTEGER  a,b,io/;"	v	module:MODAMBER
i	pathsample.kshortestpaths.f90	/^   INTEGER :: i /;"	k	type:path
i01	g.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01,/;"	v	module:MODAMBER9
i01	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01,/;"	v	module:modamber9
i02	g.modamber9.f90	/^      mxsub,natyp,npdec,i02,/;"	v	module:MODAMBER9
i02	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,/;"	v	module:modamber9
i04	g.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,/;"	v	module:MODAMBER9
i04	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,/;"	v	module:modamber9
i06	g.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,/;"	v	module:MODAMBER9
i06	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,/;"	v	module:modamber9
i08	g.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,/;"	v	module:MODAMBER9
i08	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,/;"	v	module:modamber9
i1	optim.amhglobals.f	/^      integer i1,/;"	v	module:amhglobals
i10	g.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10,/;"	v	module:MODAMBER9
i10	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10,/;"	v	module:modamber9
i2	optim.amhglobals.f	/^      integer i1,i2$/;"	v	module:amhglobals
i24	g.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba, &$/;"	v	module:MODAMBER9
i24	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba, &$/;"	v	module:modamber9
i26	g.modamber9.f90	/^      i24,i26,/;"	v	module:MODAMBER9
i26	optim.modamber9.f90	/^      i24,i26,/;"	v	module:modamber9
i28	g.modamber9.f90	/^      i24,i26,i28,/;"	v	module:MODAMBER9
i28	optim.modamber9.f90	/^      i24,i26,i28,/;"	v	module:modamber9
i30	g.modamber9.f90	/^      i24,i26,i28,i30,/;"	v	module:MODAMBER9
i30	optim.modamber9.f90	/^      i24,i26,i28,i30,/;"	v	module:modamber9
i32	g.modamber9.f90	/^      i24,i26,i28,i30,i32,/;"	v	module:MODAMBER9
i32	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,/;"	v	module:modamber9
i34	g.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,/;"	v	module:MODAMBER9
i34	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,/;"	v	module:modamber9
i36	g.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,/;"	v	module:MODAMBER9
i36	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,/;"	v	module:modamber9
i38	g.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,/;"	v	module:MODAMBER9
i38	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,/;"	v	module:modamber9
i40	g.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40,/;"	v	module:MODAMBER9
i40	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40,/;"	v	module:modamber9
i42	g.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40, &$/;"	v	module:MODAMBER9
i42	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40, &$/;"	v	module:modamber9
i44	g.modamber9.f90	/^      i42,i44,/;"	v	module:MODAMBER9
i44	optim.modamber9.f90	/^      i42,i44,/;"	v	module:modamber9
i46	g.modamber9.f90	/^      i42,i44,i46,/;"	v	module:MODAMBER9
i46	optim.modamber9.f90	/^      i42,i44,i46,/;"	v	module:modamber9
i48	g.modamber9.f90	/^      i42,i44,i46,i48,/;"	v	module:MODAMBER9
i48	optim.modamber9.f90	/^      i42,i44,i46,i48,/;"	v	module:modamber9
i50	g.modamber9.f90	/^      i42,i44,i46,i48,i50,/;"	v	module:MODAMBER9
i50	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,/;"	v	module:modamber9
i502	optim.amhglobals.f	/^      integer i502,/;"	v	module:amhglobals
i503	optim.amhglobals.f	/^      integer i502,i503,/;"	v	module:amhglobals
i505	optim.amhglobals.f	/^      integer i502,i503,i505,/;"	v	module:amhglobals
i507	optim.amhglobals.f	/^      integer i502,i503,i505,i507,/;"	v	module:amhglobals
i508	optim.amhglobals.f	/^      integer i502,i503,i505,i507,$/;"	v	module:amhglobals
i509	optim.amhglobals.f	/^     *        i508,i509,/;"	v	module:amhglobals
i511	optim.amhglobals.f	/^     *        i508,i509,i511,/;"	v	module:amhglobals
i512	optim.amhglobals.f	/^     *        i508,i509,i511,i512,/;"	v	module:amhglobals
i513	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,/;"	v	module:amhglobals
i514	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,i514,/;"	v	module:amhglobals
i515	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,i514,i515,/;"	v	module:amhglobals
i516	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,i514,i515,$/;"	v	module:amhglobals
i518	optim.amhglobals.f	/^     *        i516,i518,/;"	v	module:amhglobals
i52	g.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,/;"	v	module:MODAMBER9
i52	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,/;"	v	module:modamber9
i521	optim.amhglobals.f	/^     *        i516,i518,i521,/;"	v	module:amhglobals
i523	optim.amhglobals.f	/^     *        i516,i518,i521,i523,/;"	v	module:amhglobals
i525	optim.amhglobals.f	/^     *        i516,i518,i521,i523,$/;"	v	module:amhglobals
i526	optim.amhglobals.f	/^     *        i525,i526,/;"	v	module:amhglobals
i527	optim.amhglobals.f	/^     *        i525,i526,i527,/;"	v	module:amhglobals
i528	optim.amhglobals.f	/^     *        i525,i526,i527,i528,/;"	v	module:amhglobals
i54	g.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,/;"	v	module:MODAMBER9
i54	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,/;"	v	module:modamber9
i540	optim.amhglobals.f	/^     *        i525,i526,i527,i528,$/;"	v	module:amhglobals
i56	g.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,/;"	v	module:MODAMBER9
i56	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,/;"	v	module:modamber9
i58	g.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,/;"	v	module:MODAMBER9
i58	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,/;"	v	module:modamber9
i64	g.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,/;"	v	module:MODAMBER9
i64	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,/;"	v	module:modamber9
i65	g.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,/;"	v	module:MODAMBER9
i65	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,/;"	v	module:modamber9
i68	g.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68,/;"	v	module:MODAMBER9
i68	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68,/;"	v	module:modamber9
i70	g.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68, &$/;"	v	module:MODAMBER9
i70	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68, &$/;"	v	module:modamber9
i72	g.modamber9.f90	/^      i70,i72,/;"	v	module:MODAMBER9
i72	optim.modamber9.f90	/^      i70,i72,/;"	v	module:modamber9
i74	g.modamber9.f90	/^      i70,i72,i74,/;"	v	module:MODAMBER9
i74	optim.modamber9.f90	/^      i70,i72,i74,/;"	v	module:modamber9
i76	g.modamber9.f90	/^      i70,i72,i74,i76,/;"	v	module:MODAMBER9
i76	optim.modamber9.f90	/^      i70,i72,i74,i76,/;"	v	module:modamber9
i78	g.modamber9.f90	/^      i70,i72,i74,i76,i78,/;"	v	module:MODAMBER9
i78	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,/;"	v	module:modamber9
i79	g.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,/;"	v	module:MODAMBER9
i79	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,/;"	v	module:modamber9
i80	g.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,/;"	v	module:MODAMBER9
i80	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,/;"	v	module:modamber9
i82	g.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,/;"	v	module:MODAMBER9
i82	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,/;"	v	module:modamber9
i84	g.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,/;"	v	module:MODAMBER9
i84	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,/;"	v	module:modamber9
i86	g.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86,/;"	v	module:MODAMBER9
i86	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86,/;"	v	module:modamber9
i_3rd_is_contact	optim.amhglobals.f	/^      logical i_alt_prox,i_3rd_is_contact,/;"	v	module:amhglobals
i_Etim	optim.amhglobals.f	/^      logical i_Etim$/;"	v	module:amhglobals
i_Etim_step	optim.amhglobals.f	/^      integer i_Etim_step$/;"	v	module:amhglobals
i_Q_format_a	optim.amhglobals.f	/^      integer nbiaspoly,n_Qbias_a,i_Q_format_a$/;"	v	module:amhglobals
i_Q_format_b	optim.amhglobals.f	/^      integer n_Qbias_b,i_Q_format_b$/;"	v	module:amhglobals
i_Qbias_a	optim.amhglobals.f	/^      logical ibiasgauss,ibiaspoly,i_Qbias_a,/;"	v	module:amhglobals
i_Qbias_b	optim.amhglobals.f	/^      logical i_Qbias_b,/;"	v	module:amhglobals
i_Rg_bias	optim.amhglobals.f	/^      logical i_Rg_bias$/;"	v	module:amhglobals
i_V_test	optim.amhglobals.f	/^      logical i_V_test$/;"	v	module:amhglobals
i_alt_prox	optim.amhglobals.f	/^      logical i_alt_prox,/;"	v	module:amhglobals
i_atom_P_AP	optim.amhglobals.f	/^      integer:: i_diff_P_AP,i_atom_P_AP$/;"	v	module:amhglobals
i_bias_native_a	optim.amhglobals.f	/^      logical ibiasgauss,ibiaspoly,i_Qbias_a,i_bias_native_a$/;"	v	module:amhglobals
i_bias_native_b	optim.amhglobals.f	/^      logical i_Qbias_b,i_bias_native_b$/;"	v	module:amhglobals
i_con_P_AP	optim.amhglobals.f	/^      logical:: i_con_P_AP$/;"	v	module:amhglobals
i_contact_order	optim.amhglobals.f	/^      logical i_contact_order$/;"	v	module:amhglobals
i_contact_order_max	optim.amhglobals.f	/^      integer i_contact_order_min(max_contact_order_terms),$/;"	v	module:amhglobals
i_contact_order_min	optim.amhglobals.f	/^      integer i_contact_order_min(/;"	v	module:amhglobals
i_diff_P_AP	optim.amhglobals.f	/^      integer:: i_diff_P_AP,/;"	v	module:amhglobals
i_hbond_czong	optim.amhglobals.f	/^        logical hbond,i_hbond_eastwood,i_hbond_czong$/;"	v	module:amhglobals
i_hbond_eastwood	optim.amhglobals.f	/^        logical hbond,i_hbond_eastwood,/;"	v	module:amhglobals
i_ignore_chain_dirn	optim.amhglobals.f	/^        logical i_ignore_chain_dirn,/;"	v	module:amhglobals
i_ixn_Qbias_a	optim.amhglobals.f	/^     *        numconst_b,i_ixn_Qbias_a(/;"	v	module:amhglobals
i_ixn_Qbias_b	optim.amhglobals.f	/^     *        numconst_a,i_ixn_Qbias_b(/;"	v	module:amhglobals
i_non_add_contact	optim.amhglobals.f	/^      logical :: i_non_add_contact$/;"	v	module:amhglobals
i_rama	optim.amhglobals.f	/^       integer i_rama$/;"	v	module:amhglobals
i_rep	optim.amhglobals.f	/^      logical i_rep,/;"	v	module:amhglobals
i_rep_lambda_uniform	optim.amhglobals.f	/^      logical i_rep,i_rep_lambda_uniform$/;"	v	module:amhglobals
i_rg_corey	optim.amhglobals.f	/^      logical i_rg_corey$/;"	v	module:amhglobals
i_rg_first	optim.amhglobals.f	/^      logical i_rg_garyk, i_rg_first$/;"	v	module:amhglobals
i_rg_garyk	optim.amhglobals.f	/^      logical i_rg_garyk,/;"	v	module:amhglobals
i_type_ev_gamma	optim.amhglobals.f	/^      integer i_type_ev_gamma$/;"	v	module:amhglobals
ia1	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1,/;"	v	module:MODAMBER
ia1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,/;"	v	module:MODAMBER
ia2	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1, ia2,/;"	v	module:MODAMBER
ia2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,ia2,/;"	v	module:MODAMBER
ia3	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1, ia2, ia3,/;"	v	module:MODAMBER
ia3	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,ia2,ia3,/;"	v	module:MODAMBER
ia4	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  ia1, ia2, ia3, ia4 /;"	v	module:MODAMBER
ia4	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,ia2,ia3,ia4$/;"	v	module:MODAMBER
iargc_subr	g.porfuncs.f90	/^subroutine iargc_subr(/;"	s	module:PORFUNCS
iargc_subr	pathsample.nag.f90	/^          subroutine iargc_subr(/;"	s	module:NAG
ibelly	g.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,/;"	v	module:MODAMBER9
ibelly	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,/;"	v	module:modamber9
ibellygp	g.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp,/;"	v	module:MODAMBER9
ibellygp	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp,/;"	v	module:modamber9
ibgwat	g.modamber9.f90	/^      ntmin,irest,jfastw,                &!33$/;"	v	module:MODAMBER9
ibgwat	optim.modamber9.f90	/^      ntmin,irest,jfastw,                &!33$/;"	v	module:modamber9
ibiasfile	optim.amhglobals.f	/^     *        obias_Rg,oKE,ibiasfile,/;"	v	module:amhglobals
ibiasgauss	optim.amhglobals.f	/^      logical ibiasgauss,/;"	v	module:amhglobals
ibiaspoly	optim.amhglobals.f	/^      logical ibiasgauss,ibiaspoly,/;"	v	module:amhglobals
icfe	g.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,/;"	v	module:MODAMBER9
icfe	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,/;"	v	module:modamber9
iclassweight	optim.amhglobals.f	/^      logical iclassweight$/;"	v	module:amhglobals
icnstph	g.modamber9.f90	/^      idecomp,icnstph,/;"	v	module:MODAMBER9
icnstph	optim.modamber9.f90	/^      idecomp,icnstph,/;"	v	module:modamber9
icnstrgp	g.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp, &$/;"	v	module:MODAMBER9
icnstrgp	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp, &$/;"	v	module:modamber9
icon	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,icon,/;"	v	module:amhglobals
iconstreff	g.modamber9.f90	/^      rbornstat,ivcap,iconstreff,/;"	v	module:MODAMBER9
iconstreff	optim.modamber9.f90	/^      rbornstat,ivcap,iconstreff,/;"	v	module:modamber9
icontacts	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,iphi,icontacts,/;"	v	module:amhglobals
icphidx	g.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,/;"	v	module:MODAMBER9
icphidx	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,/;"	v	module:modamber9
icpptcnt	g.modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt,/;"	v	module:MODAMBER9
icpptcnt	optim.modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt,/;"	v	module:modamber9
icpresst	g.modamber9.f90	/^      icpstinf,icpresst,/;"	v	module:MODAMBER9
icpresst	optim.modamber9.f90	/^      icpstinf,icpresst,/;"	v	module:modamber9
icpstinf	g.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86, &$/;"	v	module:MODAMBER9
icpstinf	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86, &$/;"	v	module:modamber9
icptpair	g.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,/;"	v	module:MODAMBER9
icptpair	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,/;"	v	module:modamber9
icptrsct	g.modamber9.f90	/^      icpstinf,icpresst,icptrsct,/;"	v	module:MODAMBER9
icptrsct	optim.modamber9.f90	/^      icpstinf,icpresst,icptrsct,/;"	v	module:modamber9
ictemp	optim.amhglobals.f	/^      logical ictemp$/;"	v	module:amhglobals
idecomp	g.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,    &!59$/;"	v	module:MODAMBER9
idecomp	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,    &!59$/;"	v	module:modamber9
idelta	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi, ivn, idelta,/;"	v	module:MODAMBER
idigns	optim.amhglobals.f	/^      logical idigns$/;"	v	module:amhglobals
idx	optim.ttm3f.f90	/^integer, dimension(245,3) :: idx$/;"	v	module:mnasa_mod
idxD	optim.ttm3f.f90	/^integer, dimension(84 ,3) :: idxD$/;"	v	module:mnasa_mod
idxm	optim.ttm3f.f90	/^integer, dimension(9,3) :: idxm$/;"	v	module:mnasa_mod
ienwat	g.modamber9.f90	/^      ibgwat,ienwat,/;"	v	module:MODAMBER9
ienwat	optim.modamber9.f90	/^      ibgwat,ienwat,/;"	v	module:modamber9
ier	g.modamber9.f90	/^integer ier$/;"	v	module:MODAMBER9
ier	optim.modamber9.f90	/^integer ier$/;"	v	module:modamber9
iesp	g.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,/;"	v	module:MODAMBER9
iesp	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,/;"	v	module:modamber9
ievb	g.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,/;"	v	module:MODAMBER9
ievb	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,/;"	v	module:modamber9
ievbeta	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,/;"	v	module:amhglobals
ievgamma	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,/;"	v	module:amhglobals
iexcld	optim.amhglobals.f	/^      logical iexcld$/;"	v	module:amhglobals
iexcld_beta	optim.amhglobals.f	/^      logical iexcld_gamma,iexcld_beta$/;"	v	module:amhglobals
iexcld_gamma	optim.amhglobals.f	/^      logical iexcld_gamma,/;"	v	module:amhglobals
ifbox	g.modamber9.f90	/^integer ntb,ifbox,/;"	v	module:MODAMBER9
ifbox	optim.modamber9.f90	/^integer ntb,ifbox,/;"	v	module:modamber9
ifcap	g.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,/;"	v	module:MODAMBER9
ifcap	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,/;"	v	module:modamber9
ifpert	g.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,/;"	v	module:MODAMBER9
ifpert	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,/;"	v	module:modamber9
ifswitch	g.modamber9.f90	/^integer ifswitch,/;"	v	module:MODAMBER9
ifswitch	optim.modamber9.f90	/^integer ifswitch,/;"	v	module:modamber9
ig	g.modamber9.f90	/^integer nrp,nspm,ig,/;"	v	module:MODAMBER9
ig	optim.modamber9.f90	/^integer nrp,nspm,ig,/;"	v	module:modamber9
igamma	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,/;"	v	module:amhglobals
igb	g.modamber9.f90	/^      iwatpr,nsolw,igb,/;"	v	module:MODAMBER9
igb	optim.modamber9.f90	/^      iwatpr,nsolw,igb,/;"	v	module:modamber9
igomb	optim.amhglobals.f	/^      logical igomb$/;"	v	module:amhglobals
ih	g.modamber9.f90	/^   character(len=4), dimension(:), allocatable :: ih$/;"	v	module:MODAMBER9
ih	optim.modamber9.f90	/^   character(len=4), dimension(:), allocatable :: ih$/;"	v	module:modamber9
ihbond	optim.amhglobals.f	/^     *        iss_bias,ihbond,/;"	v	module:amhglobals
ihomol	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,itargseqs,ihomol,/;"	v	module:amhglobals
ihwtnm	g.modamber9.f90	/^character(len=4) iwtnm,iowtnm,ihwtnm$/;"	v	module:MODAMBER9
ihwtnm	optim.modamber9.f90	/^character(len=4) iwtnm,iowtnm,ihwtnm$/;"	v	module:modamber9
iiba	g.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,/;"	v	module:MODAMBER9
iiba	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,/;"	v	module:modamber9
iibh	g.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10, &$/;"	v	module:MODAMBER9
iibh	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10, &$/;"	v	module:modamber9
iicba	g.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba,/;"	v	module:MODAMBER9
iicba	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba,/;"	v	module:modamber9
iicbh	g.modamber9.f90	/^      iibh,ijbh,iicbh,/;"	v	module:MODAMBER9
iicbh	optim.modamber9.f90	/^      iibh,ijbh,iicbh,/;"	v	module:modamber9
iifstwr	g.modamber9.f90	/^      iifstwt,iifstwr,/;"	v	module:MODAMBER9
iifstwr	optim.modamber9.f90	/^      iifstwt,iifstwr,/;"	v	module:modamber9
iifstwt	g.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01, &$/;"	v	module:MODAMBER9
iifstwt	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01, &$/;"	v	module:modamber9
ijba	g.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,/;"	v	module:MODAMBER9
ijba	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,/;"	v	module:modamber9
ijbh	g.modamber9.f90	/^      iibh,ijbh,/;"	v	module:MODAMBER9
ijbh	optim.modamber9.f90	/^      iibh,ijbh,/;"	v	module:modamber9
ilong	optim.amhglobals.f	/^      integer ilong(/;"	v	module:amhglobals
imask1	g.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy, &$/;"	v	module:MODAMBER9
imask1	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy, &$/;"	v	module:modamber9
imask2	g.modamber9.f90	/^      imask1,imask2,/;"	v	module:MODAMBER9
imask2	optim.modamber9.f90	/^      imask1,imask2,/;"	v	module:modamber9
imat	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,oecorr,imat,/;"	v	module:amhglobals
imem_cons	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,icon,imem_cons,/;"	v	module:amhglobals
imemri	optim.amhglobals.f	/^      integer imemri,/;"	v	module:amhglobals
imin	g.modamber9.f90	/^      ntrx,npscal,imin,/;"	v	module:MODAMBER9
imin	optim.modamber9.f90	/^      ntrx,npscal,imin,/;"	v	module:modamber9
imoviein	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,/;"	v	module:amhglobals
imp	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,ang,imp,/;"	v	module:MODAMBER
impderivs	optim.amber.f	/^      SUBROUTINE impderivs$/;"	s
impenergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,impenergy,/;"	v	module:MODAMBER
imphell	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,ANGLEHELL,TORSHELL,  &$/;"	v	module:MODAMBER
in1	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi, ivn, idelta, in1 /;"	v	module:MODAMBER
incmov	optim.amhglobals.f	/^      integer incmov$/;"	v	module:amhglobals
index	pathsample.GT2data.f90	/^          integer :: degree,d,index,/;"	k	type:Node
index	pathsample.kshortestpaths.f90	/^   INTEGER :: index /;"	k	type:edge
index	pathsample.kshortestpaths.f90	/^   INTEGER :: index /;"	k	type:node
index_next	pathsample.kshortestpaths.f90	/^INTEGER, ALLOCATABLE :: index_next(/;"	v	module:GRAPH
index_start	pathsample.kshortestpaths.f90	/^INTEGER, ALLOCATABLE :: index_next(:), index_start(/;"	v	module:GRAPH
indexarrayc	pathsample.dock.f90	/^integer, allocatable :: indexarrayl(:),indexarrayc(/;"	v	module:DOCKMODULE
indexarrayl	pathsample.dock.f90	/^integer, allocatable :: indexarrayl(/;"	v	module:DOCKMODULE
indexarrayp	pathsample.dock.f90	/^integer, allocatable :: indexarrayl(:),indexarrayc(:),indexarrayp(/;"	v	module:DOCKMODULE
indexorig	pathsample.GT2data.f90	/^          integer :: degree,d,index,indexorig /;"	k	type:Node
induced	g.modamber9.f90	/^      fix_quad,  mpoltype,   induced,/;"	v	module:MODAMBER9
induced	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,/;"	v	module:modamber9
inertiaWrapper	pathsample.inertia.f	/^      subroutine inertiaWrapper(/;"	s
init	g.fedor.f	2722;"	c	subroutine:ehecl2
init	g.modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,/;"	v	module:MODAMBER9
init	optim.modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,/;"	v	module:modamber9
init_ttm3f	optim.ttm3f.f90	/^subroutine init_ttm3f(/;"	s
inmr02	g.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,/;"	v	module:MODAMBER9
inmr02	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,/;"	v	module:modamber9
inpcrd	g.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd,/;"	v	module:MODAMBER9
inpcrd	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd,/;"	v	module:modamber9
inpdip	g.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,/;"	v	module:MODAMBER9
inpdip	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,/;"	v	module:modamber9
input_amh	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,/;"	v	module:amhglobals
insertstr	stringmod.f90	/^subroutine insertstr(/;"	s	module:strings
intdiel	g.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,/;"	v	module:MODAMBER9
intdiel	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,/;"	v	module:modamber9
inter	optim.VRTMCY5f.f90	/^real*8 function inter(/;"	f	module:MCY
intreq	g.modamber9.f90	/^integer       intreq,/;"	v	module:MODAMBER9
intreq	optim.modamber9.f90	/^integer       intreq,/;"	v	module:modamber9
inverse	optim.mindist.f	/^        subroutine inverse(/;"	s
inverse	pathsample.mindist.f	/^        subroutine inverse(/;"	s
iorwat	g.modamber9.f90	/^      ibgwat,ienwat,iorwat,/;"	v	module:MODAMBER9
iorwat	optim.modamber9.f90	/^      ibgwat,ienwat,iorwat,/;"	v	module:modamber9
ios	g.modamb.f90	/^      INTEGER  a,b,c,ios,/;"	v	module:MODAMBER
ios	optim.modamber.f90	/^      INTEGER  a,b,ios,/;"	v	module:MODAMBER
ioutfm	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,/;"	v	module:MODAMBER9
ioutfm	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,/;"	v	module:modamber9
iowtnm	g.modamber9.f90	/^character(len=4) iwtnm,iowtnm,/;"	v	module:MODAMBER9
iowtnm	optim.modamber9.f90	/^character(len=4) iwtnm,iowtnm,/;"	v	module:modamber9
ipairs	g.modamber9.f90	/^   integer, dimension(:), allocatable :: ix, ipairs$/;"	v	module:MODAMBER9
ipairs	optim.modamber9.f90	/^   integer, dimension(:), allocatable :: ipairs$/;"	v	module:modamber9
iphi	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi,/;"	v	module:MODAMBER
iphi	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,iphi,/;"	v	module:amhglobals
ipnlty	g.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,/;"	v	module:MODAMBER9
ipnlty	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,/;"	v	module:modamber9
ipol	g.modamber9.f90	/^      neb,vv,tmode,ipol,/;"	v	module:MODAMBER9
ipol	optim.modamber9.f90	/^      neb,vv,tmode,ipol,/;"	v	module:modamber9
iprint	g.modamber9.f90	/^integer nmropt,iprint,/;"	v	module:MODAMBER9
iprint	optim.modamber9.f90	/^integer nmropt,iprint,/;"	v	module:modamber9
iprolst	optim.amhglobals.f	/^      integer imemri,iprolst,/;"	v	module:amhglobals
iprolstscl	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,/;"	v	module:amhglobals
iprr	g.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,/;"	v	module:MODAMBER9
iprr	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,/;"	v	module:modamber9
iprw	g.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,iprw$/;"	v	module:MODAMBER9
iprw	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,iprw$/;"	v	module:modamber9
iran	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,/;"	v	module:amhglobals
iredir	g.modamber9.f90	/^integer iredir(/;"	v	module:MODAMBER9
iredir	optim.modamber9.f90	/^integer iredir(/;"	v	module:modamber9
ires	optim.amhglobals.f	/^      integer ilong(maxcnt,2,maxtab),numlng(0:AMHmaxsiz,maxtab),ires(/;"	v	module:amhglobals
irespa	g.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,/;"	v	module:MODAMBER9
irespa	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,/;"	v	module:modamber9
irespa2	g.modamber9.f90	/^integer ifswitch, irespa2,/;"	v	module:MODAMBER9
irespa2	optim.modamber9.f90	/^integer ifswitch, irespa2,/;"	v	module:modamber9
iresrt	optim.amhglobals.f	/^      logical iresrt$/;"	v	module:amhglobals
irest	g.modamber9.f90	/^      ntmin,irest,/;"	v	module:MODAMBER9
irest	optim.modamber9.f90	/^      ntmin,irest,/;"	v	module:modamber9
irlreq	g.modamber9.f90	/^integer       intreq,irlreq,/;"	v	module:MODAMBER9
irlreq	optim.modamber9.f90	/^integer       intreq,irlreq,/;"	v	module:modamber9
iscale	g.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,/;"	v	module:MODAMBER9
iscale	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,/;"	v	module:modamber9
ischrgd	g.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd,/;"	v	module:MODAMBER9
ischrgd	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd,/;"	v	module:modamber9
iscltab	optim.amhglobals.f	/^      logical iscltab$/;"	v	module:amhglobals
iseed_amh	optim.amhglobals.f	/^      integer iseed_amh(/;"	v	module:amhglobals
isftrp	g.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,isftrp$/;"	v	module:MODAMBER9
isftrp	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,isftrp$/;"	v	module:modamber9
ishake	g.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,/;"	v	module:MODAMBER9
ishake	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,/;"	v	module:modamber9
isolvp	g.modamber9.f90	/^      ntcm,nscm,isolvp,/;"	v	module:MODAMBER9
isolvp	optim.modamber9.f90	/^      ntcm,nscm,isolvp,/;"	v	module:modamber9
iss_bias	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,oecorr,imat,$/;"	v	module:amhglobals
iss_struct	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,iphi,icontacts,$/;"	v	module:amhglobals
it1	optim.amhglobals.f	/^      integer it1,/;"	v	module:amhglobals
it2	optim.amhglobals.f	/^      integer it1,it2,/;"	v	module:amhglobals
it3	optim.amhglobals.f	/^      integer it1,it2,it3,/;"	v	module:amhglobals
it4	optim.amhglobals.f	/^      integer it1,it2,it3,it4,/;"	v	module:amhglobals
it5	optim.amhglobals.f	/^      integer it1,it2,it3,it4,it5$/;"	v	module:amhglobals
itarg_seq	optim.amhglobals.f	/^     *        iss_struct,itarg_seq$/;"	v	module:amhglobals
itargseqs	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,itargseqs,/;"	v	module:amhglobals
itgrd	optim.amhglobals.f	/^      integer itgrd(/;"	v	module:amhglobals
itgtfitgp	g.modamber9.f90	/^      icnstrgp,itgtfitgp,/;"	v	module:MODAMBER9
itgtfitgp	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,/;"	v	module:modamber9
itgtrmsgp	g.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,/;"	v	module:MODAMBER9
itgtrmsgp	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,/;"	v	module:modamber9
iuse	g.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,/;"	v	module:MODAMBER9
iuse	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,/;"	v	module:modamber9
ivcap	g.modamber9.f90	/^      rbornstat,ivcap,/;"	v	module:MODAMBER9
ivcap	optim.modamber9.f90	/^      rbornstat,ivcap,/;"	v	module:modamber9
ivn	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  iphi, ivn,/;"	v	module:MODAMBER
iwatpr	g.modamber9.f90	/^      ibgwat,ienwat,iorwat,              &!36$/;"	v	module:MODAMBER9
iwatpr	optim.modamber9.f90	/^      ibgwat,ienwat,iorwat,              &!36$/;"	v	module:modamber9
iwork	optim.amhglobals.f	/^      integer iwork(/;"	v	module:amhglobals
iwrap	g.modamber9.f90	/^      gbsa,vrand,iwrap,/;"	v	module:MODAMBER9
iwrap	optim.modamber9.f90	/^      gbsa,vrand,iwrap,/;"	v	module:modamber9
iwtnm	g.modamber9.f90	/^character(len=4) iwtnm,/;"	v	module:MODAMBER9
iwtnm	optim.modamber9.f90	/^character(len=4) iwtnm,/;"	v	module:modamber9
ix	g.modamber9.f90	/^   integer, dimension(:), allocatable :: ix,/;"	v	module:MODAMBER9
ix	optim.modamber9.f90	/^   integer, dimension(:), allocatable, target :: ix$/;"	v	module:modamber9
ixn_from_site	optim.amhglobals.f	/^      integer ixn_from_site(/;"	v	module:amhglobals
iyammp	g.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,/;"	v	module:MODAMBER9
iyammp	optim.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,/;"	v	module:modamber9
j	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,/;"	v	module:MODAMBER
j	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,/;"	v	module:MODAMBER
jacobi	optim.msevb.f90	/^      SUBROUTINE jacobi(/;"	s
jar	g.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,jar$/;"	v	module:MODAMBER9
jar	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,jar$/;"	v	module:modamber9
jfastw	g.modamber9.f90	/^      ntmin,irest,jfastw,/;"	v	module:MODAMBER9
jfastw	optim.modamber9.f90	/^      ntmin,irest,jfastw,/;"	v	module:modamber9
jres	optim.amhglobals.f	/^     *        mempre(maxres,maxtab),jres(/;"	v	module:amhglobals
k	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,/;"	v	module:MODAMBER
k	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,/;"	v	module:MODAMBER
k	pathsample.kshortestpaths.f90	/^   INTEGER :: k /;"	k	type:path
kappa	g.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,  & !25$/;"	v	module:MODAMBER9
kappa	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,  & !25$/;"	v	module:modamber9
kappa_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg, delR_rg, M_rg, kappa_rg$/;"	v	module:amhglobals
kc4	precmod.f90	/^integer, parameter :: kc4 /;"	v
kc8	precmod.f90	/^integer, parameter :: kc8 /;"	v
kevb	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,/;"	v	module:MODAMBER9
kevb	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,/;"	v	module:modamber9
keyword	main.pl	/^sub keyword {$/;"	s
keyword	main.pl~	/^sub keyword {$/;"	s
ki4	precmod.f90	/^integer, parameter :: ki4 /;"	v
ki8	precmod.f90	/^integer, parameter :: ki8 /;"	v
klambda	g.modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,klambda,/;"	v	module:MODAMBER9
klambda	optim.modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,klambda,/;"	v	module:modamber9
known	optim.amhglobals.f	/^      logical known$/;"	v	module:amhglobals
kr	g.modamb.f90	/^      DOUBLE PRECISION kr(/;"	v	module:MODAMBER
kr4	precmod.f90	/^integer, parameter :: kr4 /;"	v
kr8	precmod.f90	/^integer, parameter :: kr8 /;"	v
kt	g.modamb.f90	/^      DOUBLE PRECISION kt(/;"	v	module:MODAMBER
l	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,/;"	v	module:MODAMBER
l	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,/;"	v	module:MODAMBER
l	pathsample.kshortestpaths.f90	/^   DOUBLE PRECISION :: l /;"	k	type:edge
l	pathsample.kshortestpaths.f90	/^   DOUBLE PRECISION :: l /;"	k	type:path
l105	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp, &$/;"	v	module:MODAMBER9
l105	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp, &$/;"	v	module:modamber9
l110	g.modamber9.f90	/^      l105,l110,/;"	v	module:MODAMBER9
l110	optim.modamber9.f90	/^      l105,l110,/;"	v	module:modamber9
l115	g.modamber9.f90	/^      l105,l110,l115,/;"	v	module:MODAMBER9
l115	optim.modamber9.f90	/^      l105,l110,l115,/;"	v	module:modamber9
l120	g.modamber9.f90	/^      l105,l110,l115,l120,/;"	v	module:MODAMBER9
l120	optim.modamber9.f90	/^      l105,l110,l115,l120,/;"	v	module:modamber9
l125	g.modamber9.f90	/^      l105,l110,l115,l120,l125,/;"	v	module:MODAMBER9
l125	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,/;"	v	module:modamber9
l130	g.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,/;"	v	module:MODAMBER9
l130	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,/;"	v	module:modamber9
l135	g.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,/;"	v	module:MODAMBER9
l135	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,/;"	v	module:modamber9
l140	g.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,/;"	v	module:MODAMBER9
l140	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,/;"	v	module:modamber9
l145	g.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,/;"	v	module:MODAMBER9
l145	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,/;"	v	module:modamber9
l15	g.modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt, &$/;"	v	module:MODAMBER9
l15	optim.modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt, &$/;"	v	module:modamber9
l150	g.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150,/;"	v	module:MODAMBER9
l150	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150,/;"	v	module:modamber9
l165	g.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150, &$/;"	v	module:MODAMBER9
l165	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150, &$/;"	v	module:modamber9
l170	g.modamber9.f90	/^      l165,l170,/;"	v	module:MODAMBER9
l170	optim.modamber9.f90	/^      l165,l170,/;"	v	module:modamber9
l175	g.modamber9.f90	/^      l165,l170,l175,/;"	v	module:MODAMBER9
l175	optim.modamber9.f90	/^      l165,l170,l175,/;"	v	module:modamber9
l180	g.modamber9.f90	/^      l165,l170,l175,l180,/;"	v	module:MODAMBER9
l180	optim.modamber9.f90	/^      l165,l170,l175,l180,/;"	v	module:modamber9
l185	g.modamber9.f90	/^      l165,l170,l175,l180,l185,/;"	v	module:MODAMBER9
l185	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,/;"	v	module:modamber9
l186	g.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,/;"	v	module:MODAMBER9
l186	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,/;"	v	module:modamber9
l187	g.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,/;"	v	module:MODAMBER9
l187	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,/;"	v	module:modamber9
l188	g.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,/;"	v	module:MODAMBER9
l188	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,/;"	v	module:modamber9
l189	g.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,/;"	v	module:MODAMBER9
l189	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,/;"	v	module:modamber9
l190	g.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190,/;"	v	module:MODAMBER9
l190	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190,/;"	v	module:modamber9
l36	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,/;"	v	module:MODAMBER9
l36	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,/;"	v	module:modamber9
l45	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,/;"	v	module:MODAMBER9
l45	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,/;"	v	module:modamber9
l50	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50,/;"	v	module:MODAMBER9
l50	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50,/;"	v	module:modamber9
l60	g.modamber9.f90	/^      lcrdr,l60,/;"	v	module:MODAMBER9
l60	optim.modamber9.f90	/^      lcrdr,l60,/;"	v	module:modamber9
l65	g.modamber9.f90	/^      lcrdr,l60,l65,/;"	v	module:MODAMBER9
l65	optim.modamber9.f90	/^      lcrdr,l60,l65,/;"	v	module:modamber9
l75	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,/;"	v	module:MODAMBER9
l75	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,/;"	v	module:modamber9
l80	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,/;"	v	module:MODAMBER9
l80	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,/;"	v	module:modamber9
l85	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,/;"	v	module:MODAMBER9
l85	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,/;"	v	module:modamber9
l90	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,/;"	v	module:MODAMBER9
l90	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,/;"	v	module:modamber9
l95	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,/;"	v	module:MODAMBER9
l95	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,/;"	v	module:modamber9
l96	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,/;"	v	module:MODAMBER9
l96	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,/;"	v	module:modamber9
l97	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,/;"	v	module:MODAMBER9
l97	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,/;"	v	module:modamber9
l98	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,/;"	v	module:MODAMBER9
l98	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,/;"	v	module:modamber9
l99	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,/;"	v	module:MODAMBER9
l99	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,/;"	v	module:modamber9
lH	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH,/;"	v	module:ttm3f_mod
lH3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3, lH3,/;"	v	module:ttm3f_mod
lM	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM,/;"	v	module:ttm3f_mod
lM3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3, lH3, fM3, lM3$/;"	v	module:ttm3f_mod
lO	optim.ttm3f.f90	/^integer :: fO, lO,/;"	v	module:ttm3f_mod
lO3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3,/;"	v	module:ttm3f_mod
label	g.modamb.f90	/^      CHARACTER, ALLOCATABLE, DIMENSION(:) ::  label$/;"	v	module:MODAMBER
label	optim.modamber.f90	/^      CHARACTER, ALLOCATABLE, DIMENSION(:) ::  label$/;"	v	module:MODAMBER
lambda	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,/;"	v	module:MODAMBER
lambdaR	optim.amhglobals.f	/^        double precision lambdaR$/;"	v	module:amhglobals
lasth	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth,/;"	v	module:MODAMBER9
lasth	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth,/;"	v	module:modamber9
lasti	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,/;"	v	module:MODAMBER9
lasti	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,/;"	v	module:modamber9
lastpr	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth, &$/;"	v	module:MODAMBER9
lastpr	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth, &$/;"	v	module:modamber9
lastr	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,/;"	v	module:MODAMBER9
lastr	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,/;"	v	module:modamber9
lcpcrg	g.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190, &$/;"	v	module:MODAMBER9
lcpcrg	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190, &$/;"	v	module:modamber9
lcpene	g.modamber9.f90	/^      lcpcrg,lcpene,/;"	v	module:MODAMBER9
lcpene	optim.modamber9.f90	/^      lcpcrg,lcpene,/;"	v	module:modamber9
lcrd	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,/;"	v	module:MODAMBER9
lcrd	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,/;"	v	module:modamber9
lcrdr	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50, &$/;"	v	module:MODAMBER9
lcrdr	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50, &$/;"	v	module:modamber9
left	pathsample.GT2data.f90	/^          type(Node),pointer :: left,/;"	k	type:Node
lenfun	optim.amhglobals.f	/^      integer lenfun$/;"	v	module:amhglobals
lenic	g.modamber9.f90	/^integer:: lenic$/;"	v	module:MODAMBER9
lenic	optim.modamber9.f90	/^integer:: lenic$/;"	v	module:modamber9
lesfac	g.modamber9.f90	/^double precision lesfac(/;"	v	module:MODAMBER9
lesfac	optim.modamber9.f90	/^double precision lesfac(/;"	v	module:modamber9
lesr	g.modamber9.f90	98;"	c	module:MODAMBER9
lesr	optim.modamber9.f90	114;"	c	module:modamber9
lfac	g.modamber9.f90	/^double precision lesfac(maxlestyp*maxlestyp),lfac$/;"	v	module:MODAMBER9
lfac	optim.modamber9.f90	/^double precision lesfac(maxlestyp*maxlestyp),lfac$/;"	v	module:modamber9
lforce	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,/;"	v	module:MODAMBER9
lforce	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,/;"	v	module:modamber9
lfrctmp	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp,/;"	v	module:MODAMBER9
lfrctmp	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp,/;"	v	module:modamber9
lfsg	g.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,/;"	v	module:MODAMBER9
lfsg	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,/;"	v	module:modamber9
lhbins	g.commons.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows, & $/;"	v	module:COMMONS
lhbins	g.commons.o.f90	/^     &        MCCycles, MCCyclesEquilibration, TargetWL, NTempPoints, SaveNth, DumpEveryNthQuench, NSpline, Hwindows, & $/;"	v	module:COMMONS
ligcartstep	g.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep,/;"	v	module:MODAMBER9
ligcartstep	optim.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep,/;"	v	module:modamber9
ligmovefreq	g.modamber9.f90	/^      INTEGER :: ligmovefreq$/;"	v	module:MODAMBER9
ligmovefreq	optim.modamber9.f90	/^      INTEGER :: ligmovefreq$/;"	v	module:modamber9
ligrotscale	g.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale,/;"	v	module:MODAMBER9
ligrotscale	optim.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale,/;"	v	module:modamber9
ligtransstep	g.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep, ligtransstep$/;"	v	module:MODAMBER9
ligtransstep	optim.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep, ligtransstep$/;"	v	module:modamber9
listupdate	g.modamb.f90	/^      INTEGER qlistcount, rlistcount, listupdate$/;"	v	module:MODAMBER
lmass	g.modamber9.f90	/^      lcrdr,l60,l65,lmass,/;"	v	module:MODAMBER9
lmass	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,/;"	v	module:modamber9
lnHarmFreq	g.commons.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq,/;"	v	module:COMMONS
lnHarmFreq	g.commons.o.f90	/^     &                 RK_R, RK_THETA,ARMA,ARMB, ExtrapolationPercent, lnHarmFreq,/;"	v	module:COMMONS
lnmr01	g.modamber9.f90	/^integer       intreq,irlreq,lnmr01,/;"	v	module:MODAMBER9
lnmr01	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,/;"	v	module:modamber9
lnsrch	g.dlnsrch.f	/^      SUBROUTINE lnsrch(/;"	s
loopatom	g.modamb.f90	/^      INTEGER loopatom(/;"	v	module:MODAMBER
loopatom	optim.modamber.f90	/^      INTEGER loopatom(/;"	v	module:MODAMBER
lowercase	stringmod.f90	/^function lowercase(/;"	f	module:strings
lpol	g.modamber9.f90	/^      l15,lwinv,lpol,/;"	v	module:MODAMBER9
lpol	optim.modamber9.f90	/^      l15,lwinv,lpol,/;"	v	module:modamber9
lpolp	g.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp,/;"	v	module:MODAMBER9
lpolp	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp,/;"	v	module:modamber9
lvel	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,/;"	v	module:MODAMBER9
lvel	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,/;"	v	module:modamber9
lvel2	g.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,/;"	v	module:MODAMBER9
lvel2	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,/;"	v	module:modamber9
lvsg	g.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,/;"	v	module:MODAMBER9
lvsg	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,/;"	v	module:modamber9
lwinv	g.modamber9.f90	/^      l15,lwinv,/;"	v	module:MODAMBER9
lwinv	optim.modamber9.f90	/^      l15,lwinv,/;"	v	module:modamber9
lwork	optim.SD.f90	/^integer :: lwork$/;"	v	module:SDwater
m02	g.modamber9.f90	/^      lcpcrg,lcpene, &$/;"	v	module:MODAMBER9
m02	optim.modamber9.f90	/^      lcpcrg,lcpene, &$/;"	v	module:modamber9
m04	g.modamber9.f90	/^      m02,m04,/;"	v	module:MODAMBER9
m04	optim.modamber9.f90	/^      m02,m04,/;"	v	module:modamber9
m06	g.modamber9.f90	/^      m02,m04,m06,/;"	v	module:MODAMBER9
m06	optim.modamber9.f90	/^      m02,m04,m06,/;"	v	module:modamber9
m08	g.modamber9.f90	/^      m02,m04,m06,m08,/;"	v	module:MODAMBER9
m08	optim.modamber9.f90	/^      m02,m04,m06,m08,/;"	v	module:modamber9
m10	g.modamber9.f90	/^      m02,m04,m06,m08,m10,/;"	v	module:MODAMBER9
m10	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,/;"	v	module:modamber9
m12	g.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,/;"	v	module:MODAMBER9
m12	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,/;"	v	module:modamber9
m14	g.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,/;"	v	module:MODAMBER9
m14	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,/;"	v	module:modamber9
m16	g.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,/;"	v	module:MODAMBER9
m16	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,/;"	v	module:modamber9
m18	g.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,/;"	v	module:MODAMBER9
m18	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,/;"	v	module:modamber9
mark	pathsample.GT2data.f90	/^          logical :: FH,mark$/;"	k	type:Node
mass	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: mass /;"	v	module:MODAMBER
master	g.modamber9.f90	/^logical master$/;"	v	module:MODAMBER9
master	optim.modamber9.f90	/^logical master$/;"	v	module:modamber9
match	g.modamb.f90	/^      INTEGER  match,/;"	v	module:MODAMBER
match	optim.modamber.f90	/^      INTEGER  match,/;"	v	module:MODAMBER
match	stringmod.f90	/^subroutine match(/;"	s	module:strings
mathsConstants	pathsample.mathsconstants.f90	/^MODULE mathsConstants$/;"	m
maxNumVBstates	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,ground_state,reduced_num_eig,maxNumVBstates$/;"	v	module:msevb_common
max_contact_order_terms	optim.amhglobals.f	/^      integer, parameter:: max_contact_order_terms=/;"	v	module:amhglobals
max_letters	optim.amhglobals.f	/^      integer max_letters$/;"	v	module:amhglobals
max_well	optim.amhglobals.f	/^        integer max_well$/;"	v	module:amhglobals
maxcnt	optim.amhglobals.f	/^        integer maxcnt$/;"	v	module:amhglobals
maxcrd	optim.amhglobals.f	/^      integer maxcrd$/;"	v	module:amhglobals
maxcyc	g.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,/;"	v	module:MODAMBER9
maxcyc	optim.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,/;"	v	module:modamber9
maxdup	g.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,/;"	v	module:MODAMBER9
maxdup	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,/;"	v	module:modamber9
maxles	g.modamber9.f90	/^integer maxles,/;"	v	module:MODAMBER9
maxles	optim.modamber9.f90	/^integer maxles,/;"	v	module:modamber9
maxlesadj	g.modamber9.f90	/^integer maxles,maxlestyp,maxlesadj$/;"	v	module:MODAMBER9
maxlesadj	optim.modamber9.f90	/^integer maxles,maxlestyp,maxlesadj$/;"	v	module:modamber9
maxlestyp	g.modamber9.f90	/^integer maxles,maxlestyp,/;"	v	module:MODAMBER9
maxlestyp	optim.modamber9.f90	/^integer maxles,maxlestyp,/;"	v	module:modamber9
maxmem	g.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,/;"	v	module:MODAMBER9
maxmem	optim.amhglobals.f	/^      integer maxmem$/;"	v	module:amhglobals
maxmem	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,/;"	v	module:modamber9
maxmov	optim.amhglobals.f	/^      integer maxmov$/;"	v	module:amhglobals
maxmr	optim.amhglobals.f	/^      integer minmr,maxmr$/;"	v	module:amhglobals
maxpro	optim.amhglobals.f	/^      integer maxpro$/;"	v	module:amhglobals
maxr	optim.amhglobals.f	/^      integer maxr,/;"	v	module:amhglobals
maxres	optim.amhglobals.f	/^      integer maxres$/;"	v	module:amhglobals
maxs	optim.amhglobals.f	/^      integer maxr,maxs$/;"	v	module:amhglobals
maxsec	optim.amhglobals.f	/^      integer maxsec$/;"	v	module:amhglobals
maxseq	optim.amhglobals.f	/^      integer maxseq,/;"	v	module:amhglobals
maxsub	g.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,/;"	v	module:MODAMBER9
maxsub	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,/;"	v	module:modamber9
maxtab	optim.amhglobals.f	/^      integer maxtab$/;"	v	module:amhglobals
mc	main.pl	/^sub mc {$/;"	s
mc	main.pl~	/^sub mc {$/;"	s
mdcrd	g.modamber9.f90	/^      refc, mdvel, mden, mdcrd,/;"	v	module:MODAMBER9
mdcrd	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd,/;"	v	module:modamber9
mdcrd_unit	g.modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,/;"	v	module:MODAMBER9
mddip	g.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,/;"	v	module:MODAMBER9
mddip	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,/;"	v	module:modamber9
mden	g.modamber9.f90	/^      refc, mdvel, mden,/;"	v	module:MODAMBER9
mden	optim.modamber9.f90	/^      refc, mdvel, mden,/;"	v	module:modamber9
mdiamber	g.modamber9.f90	171;"	c	module:MODAMBER9
mdiamber	optim.modamber9.f90	187;"	c	module:modamber9
mdin	g.modamber9.f90	/^character(len=256) mdin,/;"	v	module:MODAMBER9
mdin	optim.modamber9.f90	/^character(len=256) mdin,/;"	v	module:modamber9
mdinfo	g.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo,/;"	v	module:MODAMBER9
mdinfo	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo,/;"	v	module:modamber9
mdinfo_unit	g.modamber9.f90	/^   integer :: myunitnew,myunit2,mdcrd_unit,mdinfo_unit,/;"	v	module:MODAMBER9
mdout	g.modamber9.f90	/^character(len=256) mdin, mdout,/;"	v	module:MODAMBER9
mdout	optim.modamber9.f90	/^character(len=256) mdin, mdout,/;"	v	module:modamber9
mdr	g.modamber9.f90	142;"	c	module:MODAMBER9
mdr	optim.modamber9.f90	158;"	c	module:modamber9
mds	g.modamber9.f90	153;"	c	module:MODAMBER9
mds	optim.modamber9.f90	169;"	c	module:modamber9
mdvel	g.modamber9.f90	/^      refc, mdvel,/;"	v	module:MODAMBER9
mdvel	optim.modamber9.f90	/^      refc, mdvel,/;"	v	module:modamber9
meane	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,meane(/;"	v	module:DOCKMODULE
mem_cons	optim.amhglobals.f	/^      logical ave_seq,targ_cons, mem_cons,/;"	v	module:amhglobals
memory	g.modamber9.f90	216;"	c	module:MODAMBER9
memory	optim.modamber9.f90	232;"	c	module:modamber9
mempre	optim.amhglobals.f	/^     *        sa(maxres),tarpre(maxres,maxtab),$/;"	v	module:amhglobals
mgrh	g.Mgglue.f	/^      SUBROUTINE mgrh(/;"	s
mguu	g.Mgglue.f	/^      SUBROUTINE mguu(/;"	s
mgv2	g.Mgglue.f	/^      SUBROUTINE mgv2(/;"	s
midimpparams	g.modamb.f90	/^      DOUBLE PRECISION midimpparams(/;"	v	module:MODAMBER
min_seq_sep	optim.amhglobals.f	/^      integer n_letters,min_seq_sep,/;"	v	module:amhglobals
mincor	g.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor,/;"	v	module:MODAMBER9
mincor	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor,/;"	v	module:modamber9
minmr	optim.amhglobals.f	/^      integer minmr,/;"	v	module:amhglobals
minnode	pathsample.kshortestpaths.f90	/^TYPE(node), TARGET, ALLOCATABLE :: minnode(/;"	v	module:GRAPH
minperm	g.minperm.f	/^      subroutine minperm(/;"	s
minperm	optim.minperm.f	/^      subroutine minperm(/;"	s
minperm	pathsample.minperm.f	/^      subroutine minperm(/;"	s
mismatch	optim.amhglobals.f	/^        logical i_ignore_chain_dirn,mismatch$/;"	v	module:amhglobals
mmid	g.odesd.f	/^      SUBROUTINE mmid(/;"	s
mmtsb_setup_file	g.modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout, mmtsb_setup_file$/;"	v	module:MODAMBER9
mmtsb_setup_file	optim.modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout, mmtsb_setup_file$/;"	v	module:modamber9
mnasa_mod	optim.ttm3f.f90	/^module mnasa_mod$/;"	m
modamber9	optim.modamber9.f90	/^      MODULE modamber9 /;"	m
modcharmm	optim.modcharmm.f90	/^MODULE modcharmm$/;"	m
movanal	optim.amhglobals.f	/^      logical movanal$/;"	v	module:amhglobals
mpoltype	g.modamber9.f90	/^      fix_quad,  mpoltype,/;"	v	module:MODAMBER9
mpoltype	optim.modamber9.f90	/^      fix_quad,  mpoltype,/;"	v	module:modamber9
msevb	optim.msevb.f90	/^     subroutine msevb(/;"	s
msevb_common	optim.msevb_common.f90	/^MODULE msevb_common$/;"	m
msevb_interfaces	optim.msevb_interfaces.f90	/^MODULE msevb_interfaces$/;"	m
mu	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,/;"	v	module:MODAMBER
mxadjmsk	g.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,/;"	v	module:MODAMBER9
mxadjmsk	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,/;"	v	module:modamber9
mxlevl	optim.amhglobals.f	/^      integer mxlevl,/;"	v	module:amhglobals
mxsct	optim.amhglobals.f	/^      integer mxlevl,mxsct$/;"	v	module:amhglobals
mxsub	g.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs, &$/;"	v	module:MODAMBER9
mxsub	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs, &$/;"	v	module:modamber9
mxtemp	optim.amhglobals.f	/^      integer mxtemp,/;"	v	module:amhglobals
my_dijkstra	pathsample.kshortestpaths.f90	/^SUBROUTINE my_dijkstra(/;"	s
mypot	g.tether.f90	61;"	c	subroutine:TetheredWL
myunit2	g.modamber9.f90	/^   integer :: myunitnew,myunit2,/;"	v	module:MODAMBER9
myunitnew	g.modamber9.f90	/^   integer :: myunitnew,/;"	v	module:MODAMBER9
n	pathsample.GT2FibonacciHeap.f90	/^     int/;"	v	module:FibonacciHeapModule
n_Q_anneal_a	optim.amhglobals.f	/^      integer n_Q_anneal_a,/;"	v	module:amhglobals
n_Q_anneal_b	optim.amhglobals.f	/^      integer n_Q_anneal_a,n_Q_anneal_b$/;"	v	module:amhglobals
n_Qbias_a	optim.amhglobals.f	/^      integer nbiaspoly,n_Qbias_a,/;"	v	module:amhglobals
n_Qbias_b	optim.amhglobals.f	/^      integer n_Qbias_b,/;"	v	module:amhglobals
n_Rg_bias	optim.amhglobals.f	/^      integer n_Rg_bias$/;"	v	module:amhglobals
n_amb_calls	g.modamber9.f90	/^      INTEGER :: n_amb_calls=/;"	v	module:MODAMBER9
n_amb_calls	optim.modamber9.f90	/^      INTEGER :: n_amb_calls=/;"	v	module:modamber9
n_contact_order_terms	optim.amhglobals.f	/^      integer n_contact_order_terms$/;"	v	module:amhglobals
n_divs_max	optim.amhglobals.f	/^      integer n_divs_max$/;"	v	module:amhglobals
n_letters	optim.amhglobals.f	/^      integer n_letters,/;"	v	module:amhglobals
n_letters_con	optim.amhglobals.f	/^      integer n_letters,min_seq_sep,num_well,n_letters_con$/;"	v	module:amhglobals
n_rep_con	optim.amhglobals.f	/^      integer n_rep_con(/;"	v	module:amhglobals
natbel	g.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,/;"	v	module:MODAMBER9
natbel	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,/;"	v	module:modamber9
natc	g.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm, &$/;"	v	module:MODAMBER9
natc	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm, &$/;"	v	module:modamber9
natcap	g.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,/;"	v	module:MODAMBER9
natcap	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,/;"	v	module:modamber9
native	g.modamber9.f90	/^   integer native,/;"	v	module:MODAMBER9
native	optim.modamber9.f90	/^   integer native,/;"	v	module:modamber9
natom	g.modamber9.f90	/^integer       natom,/;"	v	module:MODAMBER9
natom	optim.modamber9.f90	/^integer       natom,/;"	v	module:modamber9
natomscomplex	pathsample.dock.f90	/^integer :: natomsligand, natomscomplex,/;"	v	module:DOCKMODULE
natomsligand	pathsample.dock.f90	/^integer :: natomsligand,/;"	v	module:DOCKMODULE
natomsprotein	pathsample.dock.f90	/^integer :: natomsligand, natomscomplex, natomsprotein,/;"	v	module:DOCKMODULE
nattgtfit	g.modamber9.f90	/^      natc,nattgtfit,/;"	v	module:MODAMBER9
nattgtfit	optim.modamber9.f90	/^      natc,nattgtfit,/;"	v	module:modamber9
nattgtrms	g.modamber9.f90	/^      natc,nattgtfit,nattgtrms,/;"	v	module:MODAMBER9
nattgtrms	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,/;"	v	module:modamber9
natyp	g.modamber9.f90	/^      mxsub,natyp,/;"	v	module:MODAMBER9
natyp	optim.modamber9.f90	/^      mxsub,natyp,/;"	v	module:modamber9
nbiaspoly	optim.amhglobals.f	/^      integer nbiaspoly,/;"	v	module:amhglobals
nbin1	g.modamb.f90	/^      INTEGER nbin1,/;"	v	module:MODAMBER
nbin2	g.modamb.f90	/^      INTEGER nbin1, nbin2,/;"	v	module:MODAMBER
nbin3	g.modamb.f90	/^      INTEGER nbin1, nbin2, nbin3,/;"	v	module:MODAMBER
nbin4	g.modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4,/;"	v	module:MODAMBER
nbin5	g.modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4, nbin5,/;"	v	module:MODAMBER
nbin6	g.modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4, nbin5, nbin6,/;"	v	module:MODAMBER
nbin7	g.modamb.f90	/^      INTEGER nbin1, nbin2, nbin3, nbin4, nbin5, nbin6, nbin7$/;"	v	module:MODAMBER
nbit	g.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,/;"	v	module:MODAMBER9
nbit	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,/;"	v	module:modamber9
nbona	g.modamber9.f90	/^integer       natom,nres,nbonh,nbona,/;"	v	module:MODAMBER9
nbona	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,/;"	v	module:modamber9
nbonh	g.modamber9.f90	/^integer       natom,nres,nbonh,/;"	v	module:MODAMBER9
nbonh	optim.modamber9.f90	/^integer       natom,nres,nbonh,/;"	v	module:modamber9
nbper	g.modamber9.f90	/^      lastpr,nbper,/;"	v	module:MODAMBER9
nbper	optim.modamber9.f90	/^      lastpr,nbper,/;"	v	module:modamber9
nconp	g.modamber9.f90	/^      nphia,nnb,ntypes,nconp,/;"	v	module:MODAMBER9
nconp	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,/;"	v	module:modamber9
ncopy	g.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy,/;"	v	module:MODAMBER9
ncopy	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy,/;"	v	module:modamber9
ncyc	g.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,/;"	v	module:MODAMBER9
ncyc	optim.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,/;"	v	module:modamber9
ndfmin	g.modamber9.f90	/^      ntnb,nsnb,ndfmin,/;"	v	module:MODAMBER9
ndfmin	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,/;"	v	module:modamber9
ndper	g.modamber9.f90	/^      lastpr,nbper,ngper,ndper,/;"	v	module:MODAMBER9
ndper	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,/;"	v	module:modamber9
neb	g.modamber9.f90	/^      rbornstat,ivcap,iconstreff,        &!51$/;"	v	module:MODAMBER9
neb	optim.modamber9.f90	/^      rbornstat,ivcap,iconstreff,        &!51$/;"	v	module:modamber9
neighbour	g.SiSW.f	/^      subroutine neighbour(/;"	s
netfrc	g.modamber9.f90	/^integer verbose,netfrc,/;"	v	module:MODAMBER9
netfrc	optim.modamber9.f90	/^integer verbose,netfrc,/;"	v	module:modamber9
newstyle	g.modamber9.f90	/^logical newstyle,/;"	v	module:MODAMBER9
newstyle	optim.modamber9.f90	/^logical newstyle,/;"	v	module:modamber9
next	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: next /;"	k	type:path
next_path	pathsample.kshortestpaths.f90	/^RECURSIVE SUBROUTINE next_path(/;"	s
nextpred	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: nextpred /;"	k	type:edge
nextsucc	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: nextsucc /;"	k	type:edge
ngamma_non_add	optim.amhglobals.f	/^      integer, parameter:: ngamma_non_add=/;"	v	module:amhglobals
ngomb	optim.amhglobals.f	/^      double precision ngomb$/;"	v	module:amhglobals
ngper	g.modamber9.f90	/^      lastpr,nbper,ngper,/;"	v	module:MODAMBER9
ngper	optim.modamber9.f90	/^      lastpr,nbper,ngper,/;"	v	module:modamber9
nhb	g.modamber9.f90	/^   integer numphi,nttyp,nhb$/;"	v	module:MODAMBER9
nhb	optim.modamber9.f90	/^   integer numphi,nttyp,nhb$/;"	v	module:modamber9
nholb	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,/;"	v	module:MODAMBER9
nholb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,/;"	v	module:modamber9
nintb	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,/;"	v	module:MODAMBER9
nintb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,/;"	v	module:modamber9
nmdif	optim.amhglobals.f	/^      integer nmdif$/;"	v	module:amhglobals
nmr1amber	g.modamber9.f90	73;"	c	module:MODAMBER9
nmr1amber	optim.modamber9.f90	89;"	c	module:modamber9
nmrf	g.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf,/;"	v	module:MODAMBER9
nmrf	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf,/;"	v	module:modamber9
nmropt	g.modamber9.f90	/^integer nmropt,/;"	v	module:MODAMBER9
nmropt	optim.modamber9.f90	/^integer nmropt,/;"	v	module:modamber9
nmrrdr	g.modamber9.f90	69;"	c	module:MODAMBER9
nmrrdr	optim.modamber9.f90	85;"	c	module:modamber9
nmrstf	g.modamber9.f90	299;"	c	module:MODAMBER9
nmrstf	optim.modamber9.f90	315;"	c	module:modamber9
nmstep	optim.amhglobals.f	/^      integer nmstep$/;"	v	module:amhglobals
nmtemp	optim.amhglobals.f	/^      integer mxtemp,nmtemp$/;"	v	module:amhglobals
nmxrs	g.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs,/;"	v	module:MODAMBER9
nmxrs	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs,/;"	v	module:modamber9
nnb	g.modamber9.f90	/^      nphia,nnb,/;"	v	module:MODAMBER9
nnb	optim.modamber9.f90	/^      nphia,nnb,/;"	v	module:modamber9
node	pathsample.kshortestpaths.f90	/^   TYPE(node)/;"	k	type:path
node	pathsample.kshortestpaths.f90	/^TYPE node$/;"	t	module:GRAPH
nodeid	g.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,/;"	v	module:MODAMBER9
nodeid	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,/;"	v	module:modamber9
noeskp	g.modamber9.f90	/^integer nmropt,iprint,noeskp,/;"	v	module:MODAMBER9
noeskp	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,/;"	v	module:modamber9
noshake	g.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,noshake$/;"	v	module:MODAMBER9
noshake	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,noshake$/;"	v	module:modamber9
noshakemask	g.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,noshakemask$/;"	v	module:MODAMBER9
noshakemask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,noshakemask$/;"	v	module:modamber9
npairb	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,/;"	v	module:MODAMBER9
npairb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,/;"	v	module:modamber9
nparm	g.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm,/;"	v	module:MODAMBER9
nparm	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm,/;"	v	module:modamber9
npdec	g.modamber9.f90	/^      mxsub,natyp,npdec,/;"	v	module:MODAMBER9
npdec	optim.modamber9.f90	/^      mxsub,natyp,npdec,/;"	v	module:modamber9
nphia	g.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih, &$/;"	v	module:MODAMBER9
nphia	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih, &$/;"	v	module:modamber9
nphih	g.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih,/;"	v	module:MODAMBER9
nphih	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih,/;"	v	module:modamber9
npscal	g.modamber9.f90	/^      ntrx,npscal,/;"	v	module:MODAMBER9
npscal	optim.modamber9.f90	/^      ntrx,npscal,/;"	v	module:modamber9
nquench	optim.amhglobals.f	/^      integer nquench$/;"	v	module:amhglobals
nr	g.modamber9.f90	/^   integer native,nr3/;"	v	module:MODAMBER9
nr	optim.modamber9.f90	/^   integer native,nr3/;"	v	module:modamber9
nr3	g.modamber9.f90	/^   integer native,nr3,/;"	v	module:MODAMBER9
nr3	optim.modamber9.f90	/^   integer native,nr3,/;"	v	module:modamber9
nrc	g.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,/;"	v	module:MODAMBER9
nrc	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,/;"	v	module:modamber9
nrealb	g.modamber9.f90	/^      iifstwt,iifstwr,nrealb,/;"	v	module:MODAMBER9
nrealb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,/;"	v	module:modamber9
nres	g.modamber9.f90	/^integer       natom,nres,/;"	v	module:MODAMBER9
nres	optim.modamber9.f90	/^integer       natom,nres,/;"	v	module:modamber9
nrespa	g.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,/;"	v	module:MODAMBER9
nrespa	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,/;"	v	module:modamber9
nrespa2	g.modamber9.f90	/^integer ifswitch, irespa2, nrespa2$/;"	v	module:MODAMBER9
nrespa2	optim.modamber9.f90	/^integer ifswitch, irespa2, nrespa2$/;"	v	module:modamber9
nrespai	g.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,/;"	v	module:MODAMBER9
nrespai	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,/;"	v	module:modamber9
nrp	g.modamber9.f90	/^integer nrp,/;"	v	module:MODAMBER9
nrp	optim.modamber9.f90	/^integer nrp,/;"	v	module:modamber9
nscm	g.modamber9.f90	/^      ntcm,nscm,/;"	v	module:MODAMBER9
nscm	optim.modamber9.f90	/^      ntcm,nscm,/;"	v	module:modamber9
nseg	g.modamber9.f90	/^integer:: nseg$/;"	v	module:MODAMBER9
nseg	optim.modamber9.f90	/^integer:: nseg$/;"	v	module:modamber9
nsnb	g.modamber9.f90	/^      ntnb,nsnb,/;"	v	module:MODAMBER9
nsnb	optim.modamber9.f90	/^      ntnb,nsnb,/;"	v	module:modamber9
nsolut	g.modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,/;"	v	module:MODAMBER9
nsolut	optim.modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,/;"	v	module:modamber9
nsolw	g.modamber9.f90	/^      iwatpr,nsolw,/;"	v	module:MODAMBER9
nsolw	optim.modamber9.f90	/^      iwatpr,nsolw,/;"	v	module:modamber9
nspm	g.modamber9.f90	/^integer nrp,nspm,/;"	v	module:MODAMBER9
nspm	optim.modamber9.f90	/^integer nrp,nspm,/;"	v	module:modamber9
nstlim	g.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,/;"	v	module:MODAMBER9
nstlim	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,/;"	v	module:modamber9
ntave	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,ntave$/;"	v	module:MODAMBER9
ntave	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,ntave$/;"	v	module:modamber9
ntb	g.modamber9.f90	/^integer ntb,/;"	v	module:MODAMBER9
ntb	optim.modamber9.f90	/^integer ntb,/;"	v	module:modamber9
ntc	g.modamber9.f90	/^      ntcm/;"	v	module:MODAMBER9
ntc	optim.modamber9.f90	/^      ntcm/;"	v	module:modamber9
ntcc	g.modamber9.f90	/^      ntc,ntcc,/;"	v	module:MODAMBER9
ntcc	optim.modamber9.f90	/^      ntc,ntcc,/;"	v	module:modamber9
ntcm	g.modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,             &!10$/;"	v	module:MODAMBER9
ntcm	optim.modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,             &!10$/;"	v	module:modamber9
ntcnstph	g.modamber9.f90	/^      idecomp,icnstph,ntcnstph,/;"	v	module:MODAMBER9
ntcnstph	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,/;"	v	module:modamber9
ntcx	g.modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,/;"	v	module:MODAMBER9
ntcx	optim.modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,/;"	v	module:modamber9
ntf	g.modamber9.f90	/^      ntc,ntcc,ntf,/;"	v	module:MODAMBER9
ntf	optim.modamber9.f90	/^      ntc,ntcc,ntf,/;"	v	module:modamber9
ntheta	g.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,/;"	v	module:MODAMBER9
ntheta	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,/;"	v	module:modamber9
ntheth	g.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,/;"	v	module:MODAMBER9
ntheth	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,/;"	v	module:modamber9
ntid	g.modamber9.f90	/^      ntc,ntcc,ntf,ntid,/;"	v	module:MODAMBER9
ntid	optim.modamber9.f90	/^      ntc,ntcc,ntf,ntid,/;"	v	module:modamber9
ntmin	g.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,      &!30$/;"	v	module:MODAMBER9
ntmin	optim.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,      &!30$/;"	v	module:modamber9
ntn	g.modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,/;"	v	module:MODAMBER9
ntn	optim.modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,/;"	v	module:modamber9
ntnb	g.modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,             &!20$/;"	v	module:MODAMBER9
ntnb	optim.modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,             &!20$/;"	v	module:modamber9
ntp	g.modamber9.f90	/^      ntxo,ntt,ntp,/;"	v	module:MODAMBER9
ntp	optim.modamber9.f90	/^      ntxo,ntt,ntp,/;"	v	module:modamber9
ntpp	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,/;"	v	module:MODAMBER9
ntpp	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,/;"	v	module:modamber9
ntpr	g.modamber9.f90	/^integer     ntpr,/;"	v	module:MODAMBER9
ntpr	optim.modamber9.f90	/^integer     ntpr,/;"	v	module:modamber9
ntr	g.modamber9.f90	/^      ntxo,ntt,ntp,ntr,/;"	v	module:MODAMBER9
ntr	optim.modamber9.f90	/^      ntxo,ntt,ntp,ntr,/;"	v	module:modamber9
ntrx	g.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,       &!25$/;"	v	module:MODAMBER9
ntrx	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,       &!25$/;"	v	module:modamber9
ntt	g.modamber9.f90	/^      ntxo,ntt,/;"	v	module:MODAMBER9
ntt	optim.modamber9.f90	/^      ntxo,ntt,/;"	v	module:modamber9
nttyp	g.modamber9.f90	/^   integer numphi,nttyp,/;"	v	module:MODAMBER9
nttyp	optim.modamber9.f90	/^   integer numphi,nttyp,/;"	v	module:modamber9
ntwe	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,/;"	v	module:MODAMBER9
ntwe	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,/;"	v	module:modamber9
ntwprt	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,/;"	v	module:MODAMBER9
ntwprt	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,/;"	v	module:modamber9
ntwr	g.modamber9.f90	/^integer     ntpr,ntwr,/;"	v	module:MODAMBER9
ntwr	optim.modamber9.f90	/^integer     ntpr,ntwr,/;"	v	module:modamber9
ntwv	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,/;"	v	module:MODAMBER9
ntwv	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,/;"	v	module:modamber9
ntwx	g.modamber9.f90	/^integer     ntpr,ntwr,ntwx,/;"	v	module:MODAMBER9
ntwx	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,/;"	v	module:modamber9
ntx	g.modamber9.f90	/^integer nrp,nspm,ig,ntx,/;"	v	module:MODAMBER9
ntx	optim.modamber9.f90	/^integer nrp,nspm,ig,ntx,/;"	v	module:modamber9
ntxo	g.modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,           &!5$/;"	v	module:MODAMBER9
ntxo	optim.modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,           &!5$/;"	v	module:modamber9
ntypes	g.modamber9.f90	/^      nphia,nnb,ntypes,/;"	v	module:MODAMBER9
ntypes	optim.modamber9.f90	/^      nphia,nnb,ntypes,/;"	v	module:modamber9
num_eig	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,/;"	v	module:msevb_common
num_foldon_a	optim.amhglobals.f	/^       integer num_foldon_a,/;"	v	module:amhglobals
num_foldon_b	optim.amhglobals.f	/^       integer num_foldon_a,num_foldon_b,/;"	v	module:amhglobals
num_hyd	optim.msevb_common.f90	/^  INTEGER :: num_hyd,/;"	v	module:msevb_common
num_noshake	g.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,/;"	v	module:MODAMBER9
num_noshake	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,/;"	v	module:modamber9
num_well	optim.amhglobals.f	/^      integer n_letters,min_seq_sep,num_well,/;"	v	module:amhglobals
numadjst	g.modamber9.f90	/^      imask1,imask2,numadjst,/;"	v	module:MODAMBER9
numadjst	optim.modamber9.f90	/^      imask1,imask2,numadjst,/;"	v	module:modamber9
numconst_a	optim.amhglobals.f	/^      integer seglist_a(maxres), seglist_b(maxres),$/;"	v	module:amhglobals
numconst_b	optim.amhglobals.f	/^     *        numconst_a,i_ixn_Qbias_b(maxres,maxres),$/;"	v	module:amhglobals
numcrd	optim.amhglobals.f	/^      integer numcrd,/;"	v	module:amhglobals
numer	g.modamb.f90	/^      DOUBLE PRECISION  top,bottom,ax,bx,cx,ay,by,cy,az,bz,cz,mu,lambda,numer,/;"	v	module:MODAMBER
numergrad	optim.amber.f	/^      SUBROUTINE numergrad$/;"	s
numexchg	g.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,/;"	v	module:MODAMBER9
numexchg	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,/;"	v	module:modamber9
numlng	optim.amhglobals.f	/^      integer ilong(maxcnt,2,maxtab),numlng(/;"	v	module:amhglobals
nummem	optim.amhglobals.f	/^      integer nummem$/;"	v	module:amhglobals
numphi	g.modamber9.f90	/^   integer numphi,/;"	v	module:MODAMBER9
numphi	optim.modamber9.f90	/^   integer numphi,/;"	v	module:modamber9
numpk	g.modamber9.f90	/^integer ntb,ifbox,numpk,/;"	v	module:MODAMBER9
numpk	optim.modamber9.f90	/^integer ntb,ifbox,numpk,/;"	v	module:modamber9
numpro	optim.amhglobals.f	/^      integer numpro$/;"	v	module:amhglobals
numseq	optim.amhglobals.f	/^      integer maxseq,numseq,/;"	v	module:amhglobals
numseq_amc	optim.amhglobals.f	/^      integer numseq_amc$/;"	v	module:amhglobals
numseq_amw	optim.amhglobals.f	/^      integer maxseq,numseq,numseq_hb,numseq_amw$/;"	v	module:amhglobals
numseq_hb	optim.amhglobals.f	/^      integer maxseq,numseq,numseq_hb,/;"	v	module:amhglobals
numtab	optim.amhglobals.f	/^      integer numcrd,numtab$/;"	v	module:amhglobals
numwatkeep	g.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,numwatkeep /;"	v	module:MODAMBER9
numwatkeep	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,numwatkeep /;"	v	module:modamber9
nwdvar	g.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,/;"	v	module:MODAMBER9
nwdvar	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,/;"	v	module:modamber9
oKE	optim.amhglobals.f	/^     *        obias_Rg,oKE,/;"	v	module:amhglobals
oPE_backbone	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,oPE_backbone,/;"	v	module:amhglobals
oPE_backbone_norama	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,oPE_backbone,oPE_backbone_norama,/;"	v	module:amhglobals
oPE_no_bias	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,/;"	v	module:amhglobals
oPE_plus_KE	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,ocon_P_AP,pdb,$/;"	v	module:amhglobals
oPE_with_bias	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,/;"	v	module:amhglobals
o_exvmin	optim.amhglobals.f	/^        double precision o_exvmin,/;"	v	module:amhglobals
o_exvminS	optim.amhglobals.f	/^        double precision o_exvmin,o_exvminS(/;"	v	module:amhglobals
oamh	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,oamh,/;"	v	module:amhglobals
oamhlr	optim.amhglobals.f	/^     *        oamhsr,oamhlr,/;"	v	module:amhglobals
oamhmr	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,ooev,oamhmr,/;"	v	module:amhglobals
oamhsr	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,oamh,orep,$/;"	v	module:amhglobals
oarchv	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,/;"	v	module:amhglobals
obias_Rg	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,ooev,oamhmr,$/;"	v	module:amhglobals
occev	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,/;"	v	module:amhglobals
ochiral	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,/;"	v	module:amhglobals
ocon_P_AP	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,ocon_P_AP,/;"	v	module:amhglobals
oconv	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,/;"	v	module:amhglobals
odesdsavear	g.mododesd.f90	/^MODULE odesdsavear$/;"	m
oecorr	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,oecorr,/;"	v	module:amhglobals
oexcldscl	optim.amhglobals.f	/^      double precision oexcldscl$/;"	v	module:amhglobals
offd_atom1	optim.fmsevb.f90	/^	subroutine offd_atom1(/;"	s
offd_atom3	optim.fmsevb.f90	/^	subroutine offd_atom3(/;"	s
offd_atom4	optim.fmsevb.f90	/^	subroutine offd_atom4(/;"	s
offset	g.modamber9.f90	/^          kappa,offset,/;"	v	module:MODAMBER9
offset	optim.modamber9.f90	/^          kappa,offset,/;"	v	module:modamber9
oharmspring	optim.amhglobals.f	/^     *        oobiassega,oobiassegb,oharmspring,/;"	v	module:amhglobals
ohdrgn	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,icon,imem_cons,$/;"	v	module:amhglobals
ohdrgn_l	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,/;"	v	module:amhglobals
ohdrgn_m	optim.amhglobals.f	/^     *        obias_Rg,oKE,ibiasfile,ohdrgn_s,$/;"	v	module:amhglobals
ohdrgn_s	optim.amhglobals.f	/^     *        obias_Rg,oKE,ibiasfile,ohdrgn_s,/;"	v	module:amhglobals
ohdrgn_seq	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,/;"	v	module:amhglobals
ok	g.modamber9.f90	/^logical newstyle,ok$/;"	v	module:MODAMBER9
ok	optim.modamber9.f90	/^logical newstyle,ok$/;"	v	module:modamber9
omKr3	optim.SD.f90	/^pure real*8 function omKr3(/;"	f	module:SDwater
omLr3	optim.SD.f90	/^pure real*8 function omLr3(/;"	f	module:SDwater
omovi	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,itargseqs,ihomol,$/;"	v	module:amhglobals
omoviseg	optim.amhglobals.f	/^     *        omovi,omoviseg,/;"	v	module:amhglobals
one3	optim.amber.f	/^      SUBROUTINE one3$/;"	s
one4	optim.amber.f	/^      SUBROUTINE one4$/;"	s
one_four	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: one_four,/;"	v	module:MODAMBER
one_four	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:,:) :: one_four,/;"	v	module:MODAMBER
one_three	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) :: one_four, one_three /;"	v	module:MODAMBER
one_three	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:,:) :: one_four,one_three$/;"	v	module:MODAMBER
ononadd	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,/;"	v	module:amhglobals
oobiassega	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,oPE_backbone,oPE_backbone_norama,$/;"	v	module:amhglobals
oobiassegb	optim.amhglobals.f	/^     *        oobiassega,oobiassegb,/;"	v	module:amhglobals
ooev	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,ooev,/;"	v	module:amhglobals
ooev_dist	optim.amhglobals.f	/^      double precision ccev_dist(1:maxcnt,1:maxtab),ooev_dist(/;"	v	module:amhglobals
ooxy	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,/;"	v	module:amhglobals
opt_infl	g.modamber9.f90	/^      periodic,  use_pme,    opt_infl,/;"	v	module:MODAMBER9
opt_infl	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,/;"	v	module:modamber9
orama	optim.amhglobals.f	/^     *        ohdrgn,orama,/;"	v	module:amhglobals
oran	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,/;"	v	module:amhglobals
orep	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,oamh,orep,/;"	v	module:amhglobals
ovgaspot	optim.amhglobals.f	/^     *        oobiassega,oobiassegb,oharmspring,$/;"	v	module:amhglobals
ovscltab	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,/;"	v	module:amhglobals
owrite	g.modamber9.f90	/^character owrite,/;"	v	module:MODAMBER9
owrite	optim.modamber9.f90	/^character owrite,/;"	v	module:modamber9
oxexcldv	optim.amhglobals.f	/^        logical oxexcldv$/;"	v	module:amhglobals
oxscl	optim.amhglobals.f	/^      double precision oxscl$/;"	v	module:amhglobals
p	pathsample.GT2data.f90	/^          type/;"	k	type:NodeArray
p46merdiff	optim.p46merdiff.f	/^        subroutine p46merdiff(/;"	s
para_HB	optim.amhglobals.f	/^     *  anti_HB(20,20,2),$/;"	v	module:amhglobals
para_one	optim.amhglobals.f	/^     *  para_HB(20,20,2),para_one(/;"	v	module:amhglobals
param_array	g.p46merdiff.f	/^        subroutine param_array(/;"	s
param_array	optim.p46merdiff.f	/^        subroutine param_array(/;"	s
param_array	p46merdiff.f	/^        subroutine param_array(/;"	s
param_arrayBLN	g.BLN.f	/^      subroutine param_arrayBLN(/;"	s
param_arrayBLN	optim.BLN.f	/^      subroutine param_arrayBLN(/;"	s
param_cut_off	g.Ackland_metals.f90	108;"	c	function:rho_pot_dd
param_cut_off	g.Ackland_metals.f90	156;"	c	function:Vpot
param_cut_off	g.Ackland_metals.f90	23;"	c	function:rho_pot
param_cut_off	g.Ackland_metals.f90	243;"	c	function:Vpot_d
param_cut_off	g.Ackland_metals.f90	338;"	c	function:Vpot_dd
param_cut_off	g.Ackland_metals.f90	485;"	c	function:Fembed
param_cut_off	g.Ackland_metals.f90	539;"	c	function:Fembed_d
param_cut_off	g.Ackland_metals.f90	606;"	c	function:Fembed_dd
param_cut_off	g.Ackland_metals.f90	62;"	c	function:rho_pot_d
param_cut_off	g.Ackland_wrapper.f	32;"	c	subroutine:ACK
param_cut_off	optim.Ackland_wrapper.f	32;"	c	subroutine:ACK
parent	pathsample.GT2data.f90	/^          type(Node),pointer :: left,right,parent,/;"	k	type:Node
parm	g.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm,/;"	v	module:MODAMBER9
parm	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm,/;"	v	module:modamber9
path	pathsample.kshortestpaths.f90	/^TYPE path$/;"	t	module:GRAPH
pcom	g.modf1com.f90	/^      double precision, allocatable :: xicom(:),pcom(/;"	v	module:F1COM
pdb	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,ocon_P_AP,pdb,/;"	v	module:amhglobals
pderivs	optim.amber.f	/^      SUBROUTINE pderivs$/;"	s
pencut	g.modamber9.f90	/^double precision scalm,pencut,/;"	v	module:MODAMBER9
pencut	optim.modamber9.f90	/^double precision scalm,pencut,/;"	v	module:modamber9
penergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,/;"	v	module:MODAMBER
periodic	g.modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth, &$/;"	v	module:MODAMBER9
periodic	optim.modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth, &$/;"	v	module:modamber9
permanent	pathsample.kshortestpaths.f90	/^   LOGICAL :: permanent /;"	k	type:node
permdist	g.minperm.f	/^      double precision function permdist(/;"	f
permdist	optim.minperm.f	/^      double precision function permdist(/;"	f
permdist	pathsample.minperm.f	/^      double precision function permdist(/;"	f
pexcld	optim.amhglobals.f	/^      double precision pexcld$/;"	v	module:amhglobals
pexcld_gamma	optim.amhglobals.f	/^      double precision pexcld_gamma$/;"	v	module:amhglobals
phh1A	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,deohA,phh1A,/;"	v	module:mnasa_mod
phh2	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,deohA,phh1A,phh2$/;"	v	module:mnasa_mod
phi	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: phi$/;"	v	module:ttm3f_mod
phiHH	optim.SD.f90	/^pure real*8 function phiHH(/;"	f	module:SDwater
phiOH	optim.SD.f90	/^pure real*8 function phiOH(/;"	f	module:SDwater
phiOO	optim.SD.f90	/^pure real*8 function phiOO(/;"	f	module:SDwater
phiatom1	g.modamb.f90	/^      INTEGER phiatom1(/;"	v	module:MODAMBER
phiatom2	g.modamb.f90	/^      INTEGER phiatom1(50), phiatom2(/;"	v	module:MODAMBER
pi	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,/;"	v	module:LJCAPSIDMODULE
pi	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,/;"	v	module:PYMODULE
pi	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,/;"	v	module:LJCAPSIDMODULE
pi	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,/;"	v	module:PYMODULE
pi	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: pi /;"	v	module:mathsConstants
plgndr	g.qorderparam_blj.f90	/^	DOUBLE PRECISION FUNCTION plgndr(/;"	f
plgndr2	g.qorderparam_lj.f90	/^	DOUBLE PRECISION FUNCTION plgndr2(/;"	f
points	g.fedor.f	1697;"	c	function:ut
polarM	optim.ttm3f.f90	/^double precision, parameter :: polarM=/;"	v	module:ttm3f_mod
polegn	g.fedor.f	/^      subroutine polegn(/;"	s
polfacH	optim.ttm3f.f90	/^double precision, parameter :: polfacO=0.837d0, polfacH /;"	v	module:ttm3f_mod
polfacM	optim.ttm3f.f90	/^double precision, parameter :: polfacO=0.837d0, polfacH = 0.496d0, polfacM=/;"	v	module:ttm3f_mod
polfacO	optim.ttm3f.f90	/^double precision, parameter :: polfacO=/;"	v	module:ttm3f_mod
pot_nasa	optim.ttm3f.f90	/^subroutine pot_nasa(/;"	s
potential	optim.VRTMCY5f.f90	/^real*8 function potential(/;"	f	module:MCY
pp	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD, pp$/;"	v
pr_dip	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: pr_dip$/;"	v	module:ttm3f_mod
prcord	optim.amhglobals.f	/^     *     bondln(AMHmaxsiz,maxcrd),target(AMHmaxsiz,3,maxcrd),$/;"	v	module:amhglobals
pred	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: pred /;"	k	type:node
pred	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: pred /;"	k	type:path
pres0	g.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,/;"	v	module:MODAMBER9
pres0	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,/;"	v	module:modamber9
printCoefficients	optim.msevb_common.f90	/^  logical :: printCoefficients$/;"	v	module:msevb_common
print_nodes_in_path	pathsample.kshortestpaths.f90	/^RECURSIVE SUBROUTINE print_nodes_in_path(/;"	s
print_path	pathsample.kshortestpaths.f90	/^RECURSIVE SUBROUTINE print_path(/;"	s
prmtop	g.modamber9.f90	/^      CHARACTER(len=81) :: prmtop$/;"	v	module:MODAMBER9
prmtop	optim.modamber9.f90	/^      CHARACTER(len=81) :: prmtop$/;"	v	module:modamber9
prob	pathsample.GT2data.f90	/^          double precision :: tau,prob$/;"	k	type:Node
prod	pathsample.mind.f	/^      subroutine prod(/;"	s
protnm	optim.amhglobals.f	/^      character protnm(/;"	v	module:amhglobals
psiatom1	g.modamb.f90	/^      INTEGER phiatom1(50), phiatom2(50), psiatom1(/;"	v	module:MODAMBER
psiatom2	g.modamb.f90	/^      INTEGER phiatom1(50), phiatom2(50), psiatom1(50), psiatom2(/;"	v	module:MODAMBER
pya1bin	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VT(:), pya1bin(/;"	v	module:KEY
pya2bin	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VT(:), pya1bin(:,:),pya2bin(/;"	v	module:KEY
pzextr	g.odesd.f	/^      SUBROUTINE pzextr(/;"	s
q	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x, y, z, q /;"	v	module:MODAMBER
q	optim.SD.f90	/^real*8, dimension(:), allocatable :: work, q$/;"	v	module:SDwater
qchrg	optim.amhglobals.f	/^     *     hydseq(maxres,2,maxtab),$/;"	v	module:amhglobals
qchrg2	optim.amhglobals.f	/^     *     qchrg(21,21,20,20,max_well+2),$/;"	v	module:amhglobals
qcol	g.mododesd.f90	/^    double precision, allocatable :: qcol(/;"	v	module:odesdsavear
qenergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,impenergy,qenergy,/;"	v	module:MODAMBER
qhell	optim.modamber.f90	/^     &                 imphell,qhell,/;"	v	module:MODAMBER
qlist	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) ::  qlist,/;"	v	module:MODAMBER
qlistcount	g.modamb.f90	/^      INTEGER qlistcount,/;"	v	module:MODAMBER
qpsander	g.modamber9.f90	/^logical belly, erstop, qsetup, qpsander$/;"	v	module:MODAMBER9
qpsander	optim.modamber9.f90	/^logical belly, erstop, qsetup, qpsander$/;"	v	module:modamber9
qsetup	g.modamber9.f90	/^logical belly, erstop, qsetup,/;"	v	module:MODAMBER9
qsetup	optim.modamber9.f90	/^logical belly, erstop, qsetup,/;"	v	module:modamber9
qspcfw	optim.qspcfw.f	/^      SUBROUTINE qspcfw /;"	s
qtip4pf	optim.qtip4pf.f	/^      SUBROUTINE qtip4pf(/;"	s
quaternionMatch	pathsample.quaternionmatch.f90	/^subroutine quaternionMatch /;"	s
quaternionToAngleAxis	pathsample.quaternionmatch.f90	/^subroutine quaternionToAngleAxis /;"	s
quench	optim.amhglobals.f	/^      logical alpha_c_of_n,ab_c_of_n_old,ab_c_of_n_new,quench$/;"	v	module:amhglobals
quench_crd	optim.amhglobals.f	/^     *     avep(maxpro,2,50),$/;"	v	module:amhglobals
qx	g.modamb.f90	/^      DOUBLE PRECISION  qx(/;"	v	module:MODAMBER
qy	g.modamb.f90	/^      DOUBLE PRECISION  qx(3),qy(/;"	v	module:MODAMBER
qz	g.modamb.f90	/^      DOUBLE PRECISION  qx(3),qy(3),qz(/;"	v	module:MODAMBER
r	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: r,/;"	v	module:MODAMBER
r_cut_P_AP	optim.amhglobals.f	/^       double precision :: weight_P_AP(3),r_cut_P_AP$/;"	v	module:amhglobals
r_max	optim.amhglobals.f	/^      double precision r_min(1:max_well),r_max(/;"	v	module:amhglobals
r_max_contact_order	optim.amhglobals.f	/^      double precision r_min_contact_order(max_contact_order_terms),$/;"	v	module:amhglobals
r_min	optim.amhglobals.f	/^      double precision r_min(/;"	v	module:amhglobals
r_min_contact_order	optim.amhglobals.f	/^      double precision r_min_contact_order(/;"	v	module:amhglobals
r_ran	optim.amhglobals.f	/^      double precision  r_ran,/;"	v	module:amhglobals
rad	g.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,/;"	v	module:MODAMBER9
rad	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,/;"	v	module:modamber9
radhb	g.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,/;"	v	module:MODAMBER9
radhb	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,/;"	v	module:modamber9
radiansToDegrees	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: radiansToDegrees /;"	v	module:mathsConstants
radii	g.modamber9.f90	/^      vecs, radii,/;"	v	module:MODAMBER9
radii	optim.modamber9.f90	/^      vecs, radii,/;"	v	module:modamber9
ramascl	optim.amhglobals.f	/^      double precision ramascl$/;"	v	module:amhglobals
ran_file	optim.amhglobals.f	/^      logical ran_force,ran_file,/;"	v	module:amhglobals
ran_force	optim.amhglobals.f	/^      logical ran_force,/;"	v	module:amhglobals
ran_min_seq_dist	optim.amhglobals.f	/^      integer ran_min_seq_dist$/;"	v	module:amhglobals
range2inv3	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,range2inv3$/;"	v	module:LJCAPSIDMODULE
range2inv3	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,/;"	v	module:PYMODULE
range2inv3	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,range2inv3$/;"	v	module:LJCAPSIDMODULE
range2inv3	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,/;"	v	module:PYMODULE
rbornstat	g.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,  &!48$/;"	v	module:MODAMBER9
rbornstat	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,  &!48$/;"	v	module:modamber9
rbtarg	g.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(/;"	v	module:MODAMBER9
rbtarg	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(/;"	v	module:modamber9
rcut	optim.amhglobals.f	/^      double precision rcut,/;"	v	module:amhglobals
rcutAMH	optim.amhglobals.f	/^      double precision rcut,rcutAMH,/;"	v	module:amhglobals
rdt	g.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,/;"	v	module:MODAMBER9
rdt	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,/;"	v	module:modamber9
re	optim.SD.f90	/^rea/;"	v	module:SDwater
readcoords	g.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords,/;"	v	module:MODAMBER9
readcoords	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords,/;"	v	module:modamber9
readline	stringmod.f90	/^subroutine readline(/;"	s	module:strings
redir	g.modamber9.f90	/^      vecs, radii, freqe,redir(/;"	v	module:MODAMBER9
redir	optim.modamber9.f90	/^      vecs, radii, freqe,redir(/;"	v	module:modamber9
reduced_num_eig	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,ground_state,reduced_num_eig,/;"	v	module:msevb_common
refc	g.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt, &$/;"	v	module:MODAMBER9
refc	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt, &$/;"	v	module:modamber9
removesp	stringmod.f90	/^subroutine removesp(/;"	s	module:strings
reoh	optim.ttm3f.f90	/^double precision :: reoh,/;"	v	module:mnasa_mod
rep_con_2_res	optim.amhglobals.f	/^      integer n_rep_con(AMHmaxsiz),rep_con_2_res(/;"	v	module:amhglobals
rep_cut_off	optim.amhglobals.f	/^      double precision rep_phi_exp(AMHmaxsiz),rep_lambda(AMHmaxsiz),$/;"	v	module:amhglobals
rep_lambda	optim.amhglobals.f	/^      double precision rep_phi_exp(AMHmaxsiz),rep_lambda(/;"	v	module:amhglobals
rep_phi_exp	optim.amhglobals.f	/^      double precision rep_phi_exp(/;"	v	module:amhglobals
rep_tol	optim.amhglobals.f	/^     *   rep_cut_off,rep_tol$/;"	v	module:amhglobals
repcrd	g.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,/;"	v	module:MODAMBER9
repcrd	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,/;"	v	module:modamber9
res	g.modamb.f90	/^      INTEGER phiatom1(50), phiatom2(50), psiatom1(50), psiatom2(50), res$/;"	v	module:MODAMBER
restraint_wt	g.modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt,/;"	v	module:MODAMBER9
restraint_wt	optim.modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt,/;"	v	module:modamber9
restraintmask	g.modamber9.f90	/^character(len=256) restraintmask,/;"	v	module:MODAMBER9
restraintmask	optim.modamber9.f90	/^character(len=256) restraintmask,/;"	v	module:modamber9
restrt	g.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt,/;"	v	module:MODAMBER9
restrt	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt,/;"	v	module:modamber9
rg_bounds	optim.amhglobals.f	/^      double precision rg_bounds(/;"	v	module:amhglobals
rg_scl	optim.amhglobals.f	/^      double precision rg_scl$/;"	v	module:amhglobals
rg_shift	optim.amhglobals.f	/^      double precision rg_shift$/;"	v	module:amhglobals
rgbmax	g.modamber9.f90	/^          solvph,rgbmax,/;"	v	module:MODAMBER9
rgbmax	optim.modamber9.f90	/^          solvph,rgbmax,/;"	v	module:modamber9
rgni	g.fedor.f	/^      subroutine rgni(/;"	s
rgnii	g.fedor.f	/^      subroutine rgnii(/;"	s
rgnx2	g.fedor.f	/^        subroutine rgnx2(/;"	s
rgnxy	g.fedor.f	/^        subroutine rgnxy(/;"	s
rh	g.Pbglue.f	/^      SUBROUTINE rh /;"	s
rh1	g.EAMal.f	/^      SUBROUTINE rh1(/;"	s
rho_pot	g.Ackland_metals.f90	/^        double precision function rho_pot(/;"	f
rho_pot_d	g.Ackland_metals.f90	/^       double precision function rho_pot_d(/;"	f
rho_pot_dd	g.Ackland_metals.f90	/^        double precision  function rho_pot_dd(/;"	f
right	pathsample.GT2data.f90	/^          type(Node),pointer :: left,right,/;"	k	type:Node
rinc	optim.amhglobals.f	/^      double precision vpotnt(0:maxr+1,maxcnt,maxtab),amh_gse,$/;"	v	module:amhglobals
rincinv	optim.amhglobals.f	/^     *     rinc(maxcnt,maxtab),$/;"	v	module:amhglobals
rincsq	optim.amhglobals.f	/^     *     rincinv(maxcnt,maxtab),$/;"	v	module:amhglobals
rings	g.modamb.f90	/^      INTEGER  a,b,c,ios,atoms,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings,/;"	v	module:MODAMBER
rings	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings$/;"	v	module:MODAMBER
rkck	g.odesd.f	/^      SUBROUTINE rkck(/;"	s
rkqs	g.odesd.f	/^      SUBROUTINE rkqs(/;"	s
rlist	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:,:) ::  qlist, rlist /;"	v	module:MODAMBER
rlistcount	g.modamb.f90	/^      INTEGER qlistcount, rlistcount,/;"	v	module:MODAMBER
rmat	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,meane(3),totalw(3),rmat(/;"	v	module:DOCKMODULE
rndfles	g.modamber9.f90	/^double precision ekinles0,temp0les,rndfles,/;"	v	module:MODAMBER9
rndfles	optim.modamber9.f90	/^double precision ekinles0,temp0les,rndfles,/;"	v	module:modamber9
ro	g.modamb.f90	/^      DOUBLE PRECISION kr(42,42),ro(/;"	v	module:MODAMBER
roh	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,/;"	v	module:mnasa_mod
ron	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,/;"	v	module:LJCAPSIDMODULE
ron	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,/;"	v	module:PYMODULE
ron	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,/;"	v	module:LJCAPSIDMODULE
ron	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,/;"	v	module:PYMODULE
ron2	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,/;"	v	module:LJCAPSIDMODULE
ron2	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,/;"	v	module:PYMODULE
ron2	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,/;"	v	module:LJCAPSIDMODULE
ron2	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,/;"	v	module:PYMODULE
rotateAngleAxis	pathsample.quaternionmatch.f90	/^ subroutine rotateAngleAxis(/;"	s
rsdles	g.modamber9.f90	/^double precision scaltles,tempsules,ekeles,rsdles$/;"	v	module:MODAMBER9
rsdles	optim.modamber9.f90	/^double precision scaltles,tempsules,ekeles,rsdles$/;"	v	module:modamber9
rstar	g.modamb.f90	/^      DOUBLE PRECISION rstar,/;"	v	module:MODAMBER
rstdip	g.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,/;"	v	module:MODAMBER9
rstdip	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,/;"	v	module:modamber9
rwell	g.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,/;"	v	module:MODAMBER9
rwell	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,/;"	v	module:modamber9
rzextr	g.odesd.f	/^      SUBROUTINE rzextr(/;"	s
s1	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile="GTkeywords",InputFile="GTinput",s1,/;"	v	module:DataModule
s2	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile="GTkeywords",InputFile="GTinput",s1,s2$/;"	v	module:DataModule
s_ran	optim.amhglobals.f	/^      double precision  r_ran,s_ran$/;"	v	module:amhglobals
sa	optim.amhglobals.f	/^      integer ilong(maxcnt,2,maxtab),numlng(0:AMHmaxsiz,maxtab),ires(maxres),$/;"	v	module:amhglobals
saltcon	g.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,/;"	v	module:MODAMBER9
saltcon	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,/;"	v	module:modamber9
sampledbins	g.commons.f90	/^     &        lhbins, sampledbins,/;"	v	module:COMMONS
sampledbins	g.commons.o.f90	/^     &        lhbins, sampledbins,/;"	v	module:COMMONS
scaldip	g.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask, &$/;"	v	module:MODAMBER9
scaldip	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask, &$/;"	v	module:modamber9
scalm	g.modamber9.f90	/^double precision scalm,/;"	v	module:MODAMBER9
scalm	optim.modamber9.f90	/^double precision scalm,/;"	v	module:modamber9
scaltles	g.modamber9.f90	/^double precision scaltles,/;"	v	module:MODAMBER9
scaltles	optim.modamber9.f90	/^double precision scaltles,/;"	v	module:modamber9
scee	g.modamber9.f90	/^double precision box,cut,scnb,scee,/;"	v	module:MODAMBER9
scee	optim.modamber9.f90	/^double precision box,cut,scnb,scee,/;"	v	module:modamber9
scnb	g.modamber9.f90	/^double precision box,cut,scnb,/;"	v	module:MODAMBER9
scnb	optim.modamber9.f90	/^double precision box,cut,scnb,/;"	v	module:modamber9
sdfacles	g.modamber9.f90	/^double precision ekinles0,temp0les,rndfles,sdfacles$/;"	v	module:MODAMBER9
sdfacles	optim.modamber9.f90	/^double precision ekinles0,temp0les,rndfles,sdfacles$/;"	v	module:modamber9
sdgrad	optim.SD.f90	/^function sdgrad(/;"	f	module:SDwater
sdhess	optim.SD.f90	/^function sdhess(/;"	f	module:SDwater
sdinit	optim.SD.f90	/^subroutine sdinit(/;"	s	module:SDwater
sdpotential	optim.SD.f90	/^real*8 function sdpotential(/;"	f	module:SDwater
secondderivs	optim.amber.f	/^      SUBROUTINE secondderivs$/;"	s
seedphi	g.modamb.f90	/^      DOUBLE PRECISION  seedphi(/;"	v	module:MODAMBER
seedpsi	g.modamb.f90	/^      DOUBLE PRECISION  seedphi(50), seedpsi(/;"	v	module:MODAMBER
seglist_a	optim.amhglobals.f	/^      integer seglist_a(/;"	v	module:amhglobals
seglist_b	optim.amhglobals.f	/^      integer seglist_a(maxres), seglist_b(/;"	v	module:amhglobals
seval	g.Alglue.f	/^      subroutine seval(/;"	s
seval1	g.EAMal.f	/^      subroutine seval1(/;"	s
shellsToCount	optim.msevb_common.f90	/^  INTEGER :: shellsToCount$/;"	v	module:msevb_common
shiftstr	stringmod.f90	/^subroutine shiftstr(/;"	s	module:strings
shortest	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: shortest /;"	k	type:node
shortest_paths	pathsample.kshortestpaths.f90	/^TYPE(path), TARGET, ALLOCATABLE :: shortest_paths(/;"	v	module:GRAPH
shydro	optim.amhglobals.f	/^     *     deltz(maxcnt,maxtab),shydro(/;"	v	module:amhglobals
sigma1	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,/;"	v	module:LJCAPSIDMODULE
sigma1	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(/;"	v	module:PYMODULE
sigma1	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,/;"	v	module:LJCAPSIDMODULE
sigma1	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(/;"	v	module:PYMODULE
sigma_NO	optim.amhglobals.f	/^        double precision sigma_h,sigma_NO,/;"	v	module:amhglobals
sigma_h	optim.amhglobals.f	/^        double precision sigma_h,/;"	v	module:amhglobals
skmax	g.modamber9.f90	/^          skmin,skmax,/;"	v	module:MODAMBER9
skmax	optim.modamber9.f90	/^          skmin,skmax,/;"	v	module:modamber9
skmin	g.modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt, &  !42$/;"	v	module:MODAMBER9
skmin	optim.modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt, &  !42$/;"	v	module:modamber9
smear01	optim.ttm3f.f90	/^subroutine smear01(/;"	s
smear1	optim.ttm3f.f90	/^subroutine smear1(/;"	s
smear2	optim.ttm3f.f90	/^subroutine smear2(/;"	s
smear3	optim.ttm3f.f90	/^subroutine smear3(/;"	s
solve	optim.SD.f90	/^subroutine solve(/;"	s	module:SDwater
solvph	g.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,  & !38$/;"	v	module:MODAMBER9
solvph	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,  & !38$/;"	v	module:modamber9
sort_non_add	optim.amhglobals.f	/^      integer class_of_res_2(AMHmaxsiz),sort_non_add(/;"	v	module:amhglobals
sortv	g.fedor.f	/^              subroutine sortv(/;"	s
specimpparams	g.modamb.f90	/^      DOUBLE PRECISION gentorsparams(100,6),spectorsparams(100,14),specimpparams(/;"	v	module:MODAMBER
spectorsparams	g.modamb.f90	/^      DOUBLE PRECISION gentorsparams(100,6),spectorsparams(/;"	v	module:MODAMBER
splinegmin	g.Farkas.f	/^      SUBROUTINE splinegmin(/;"	s
splint	g.Farkas.f	/^      SUBROUTINE splint(/;"	s
srcut	optim.amhglobals.f	/^      double precision rcut,rcutAMH,srcut$/;"	v	module:amhglobals
srplr	optim.amhglobals.f	/^      double precision srplr(/;"	v	module:amhglobals
ss_a	optim.amhglobals.f	/^      logical cyclic,ss_a,/;"	v	module:amhglobals
ss_b	optim.amhglobals.f	/^      logical cyclic,ss_a,ss_b$/;"	v	module:amhglobals
ss_dist	optim.amhglobals.f	/^      double precision ss_dist(/;"	v	module:amhglobals
ss_pattern_a	optim.amhglobals.f	/^        integer ss_pattern_a(/;"	v	module:amhglobals
ss_pattern_b	optim.amhglobals.f	/^        integer ss_pattern_a(maxres), ss_pattern_b(/;"	v	module:amhglobals
ssweight	optim.amhglobals.f	/^      logical ssweight,/;"	v	module:amhglobals
start_shift_factor	pathsample.kshortestpaths.f90	/^DOUBLE PRECISION :: start_shift_factor$/;"	v	module:GRAPH
statesInteract	optim.msevb_common.f90	/^  LOGICAL, ALLOCATABLE, DIMENSION(:,:) :: statesInteract /;"	v	module:msevb_common
strings	stringmod.f90	/^module strings$/;"	m
succ	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: succ /;"	k	type:node
surften	g.modamber9.f90	/^          kappa,offset,surften,/;"	v	module:MODAMBER9
surften	optim.modamber9.f90	/^          kappa,offset,surften,/;"	v	module:modamber9
symmetrize	optim.finite_differences.f90	/^subroutine symmetrize(/;"	s	module:finite_differences
system_subr	g.porfuncs.f90	/^          subroutine system_subr(/;"	s	module:PORFUNCS
t	g.modamb.f90	/^      INTEGER  matc/;"	v	module:MODAMBER
t	g.modamber9.f90	/^double precision t,/;"	v	module:MODAMBER9
t	optim.modamber9.f90	/^double precision t,/;"	v	module:modamber9
t	pathsample.GT2data.f90	/^          characte/;"	k	type:Node
t1	optim.amhglobals.f	/^      double precision t1,/;"	v	module:amhglobals
t2	optim.amhglobals.f	/^      double precision t1,t2,/;"	v	module:amhglobals
t3	optim.amhglobals.f	/^      double precision t1,t2,t3,/;"	v	module:amhglobals
t4	optim.amhglobals.f	/^      double precision t1,t2,t3,t4,/;"	v	module:amhglobals
t5	optim.amhglobals.f	/^      double precision t1,t2,t3,t4,t5$/;"	v	module:amhglobals
takestepamber	g.amber9dummy.f90	/^subroutine takestepamber(/;"	s
takestepamber	optim.amber9dummy.f90	/^subroutine takestepamber(/;"	s
takestepamm	g.amber9dummy.f90	/^subroutine takestepamm(/;"	s
targ_cons	optim.amhglobals.f	/^      logical ave_seq,targ_cons,/;"	v	module:amhglobals
targ_dist	optim.amhglobals.f	/^      double precision targ_dist(/;"	v	module:amhglobals
target	optim.amhglobals.f	/^     *     bondln(AMHmaxsiz,maxcrd),target(/;"	v	module:amhglobals
tarpre	optim.amhglobals.f	/^     *        sa(maxres),tarpre(/;"	v	module:amhglobals
tau	pathsample.GT2data.f90	/^          double precision :: tau,/;"	k	type:Node
tau	pathsample.GT2data.f90	/^     double precision,dimension(:),allocatable :: tau$/;"	v	module:DataModule
taup	g.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,/;"	v	module:MODAMBER9
taup	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,/;"	v	module:modamber9
taur	g.modamber9.f90	/^      tol,taur,/;"	v	module:MODAMBER9
taur	optim.modamber9.f90	/^      tol,taur,/;"	v	module:modamber9
tausw	g.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,/;"	v	module:MODAMBER9
tausw	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,/;"	v	module:modamber9
tautp	g.modamber9.f90	/^double precision t,dt,temp0,tautp,/;"	v	module:MODAMBER9
tautp	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,/;"	v	module:modamber9
temgrd	optim.amhglobals.f	/^      double precision temtur(mxtemp),temtur_quench(maxmov,maxmov),temgrd(/;"	v	module:amhglobals
temp	g.modamber9.f90	/^double precision t,dt,temp0/;"	v	module:MODAMBER9
temp	optim.modamber9.f90	/^double precision t,dt,temp0/;"	v	module:modamber9
temp0	g.modamber9.f90	/^double precision t,dt,temp0,/;"	v	module:MODAMBER9
temp0	optim.modamber9.f90	/^double precision t,dt,temp0,/;"	v	module:modamber9
temp0les	g.modamber9.f90	/^double precision ekinles0,temp0les,/;"	v	module:MODAMBER9
temp0les	optim.modamber9.f90	/^double precision ekinles0,temp0les,/;"	v	module:modamber9
tempi	g.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi,/;"	v	module:MODAMBER9
tempi	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi,/;"	v	module:modamber9
tempsules	g.modamber9.f90	/^double precision scaltles,tempsules,/;"	v	module:MODAMBER9
tempsules	optim.modamber9.f90	/^double precision scaltles,tempsules,/;"	v	module:modamber9
temtur	optim.amhglobals.f	/^      double precision temtur(/;"	v	module:amhglobals
temtur_quench	optim.amhglobals.f	/^      double precision temtur(mxtemp),temtur_quench(/;"	v	module:amhglobals
tenergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,/;"	v	module:MODAMBER
test_site	optim.amhglobals.f	/^      integer test_site(/;"	v	module:amhglobals
tetherfunc	g.tetherfunc.f90	/^      module tetherfunc /;"	m
tgsequences	optim.amhglobals.f	/^      integer tgsequences(/;"	v	module:amhglobals
tgsequences_amc	optim.amhglobals.f	/^      integer tgsequences_amc(/;"	v	module:amhglobals
tgsequences_amw	optim.amhglobals.f	/^      integer tgsequences_amw(/;"	v	module:amhglobals
tgsequences_hb	optim.amhglobals.f	/^      integer tgsequences_hb(/;"	v	module:amhglobals
tgtfitmask	g.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,/;"	v	module:MODAMBER9
tgtfitmask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,/;"	v	module:modamber9
tgtmdfrc	g.modamber9.f90	/^double precision tgtrmsd,tgtmdfrc$/;"	v	module:MODAMBER9
tgtmdfrc	optim.modamber9.f90	/^double precision tgtrmsd,tgtmdfrc$/;"	v	module:modamber9
tgtrmsd	g.modamber9.f90	/^double precision tgtrmsd,/;"	v	module:MODAMBER9
tgtrmsd	optim.modamber9.f90	/^double precision tgtrmsd,/;"	v	module:modamber9
tgtrmsmask	g.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,/;"	v	module:MODAMBER9
tgtrmsmask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,/;"	v	module:modamber9
theta	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) ::  theta /;"	v	module:MODAMBER
thetae	optim.ttm3f.f90	/^double precision :: reoh,thetae,/;"	v	module:mnasa_mod
timstp	optim.amhglobals.f	/^      double precision timstp$/;"	v	module:amhglobals
tmass	g.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,/;"	v	module:MODAMBER9
tmass	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,/;"	v	module:modamber9
tmassinv	g.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,/;"	v	module:MODAMBER9
tmassinv	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,/;"	v	module:modamber9
tmd_real	g.modamber9.f90	303;"	c	module:MODAMBER9
tmd_real	optim.modamber9.f90	319;"	c	module:modamber9
tmode	g.modamber9.f90	/^      neb,vv,tmode,/;"	v	module:MODAMBER9
tmode	optim.modamber9.f90	/^      neb,vv,tmode,/;"	v	module:modamber9
to	g.modamb.f90	/^      DOUBLE PRECISION kt(42,42,42),to(/;"	v	module:MODAMBER
to	pathsample.kshortestpaths.f90	/^   TYPE(node), POINTER :: to$/;"	k	type:edge
tol	g.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi, & !9$/;"	v	module:MODAMBER9
tol	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi, & !9$/;"	v	module:modamber9
tolshk	optim.amhglobals.f	/^      double precision tolshk$/;"	v	module:amhglobals
tomegac	g.modamber9.f90	/^logical:: tomegac$/;"	v	module:MODAMBER9
tomegac	optim.modamber9.f90	/^logical:: tomegac$/;"	v	module:modamber9
top	g.modamb.f90	/^      DOUBLE PRECISION  top,/;"	v	module:MODAMBER
totalmin	pathsample.dock.f90	/^integer :: natomsligand, natomscomplex, natomsprotein,totalmin(/;"	v	module:DOCKMODULE
totalssnorm	optim.amhglobals.f	/^       integer num_foldon_a,num_foldon_b,const_mode, totalssnorm$/;"	v	module:amhglobals
totalw	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,meane(3),totalw(/;"	v	module:DOCKMODULE
totenergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,/;"	v	module:MODAMBER
trimzero	stringmod.f90	/^subroutine trimzero(/;"	s	module:strings
trySimpleVBAssignment	optim.msevb.f90	/^     subroutine trySimpleVBAssignment(/;"	s
tsedge	pathsample.kshortestpaths.f90	/^TYPE(edge), TARGET, ALLOCATABLE :: tsedge(/;"	v	module:GRAPH
ttm3f	optim.ttm3f.f90	/^subroutine ttm3f(/;"	s
ttm3f_mod	optim.ttm3f.f90	/^module ttm3f_mod$/;"	m
ttm3fcall	optim.ttm3f.f90	/^subroutine ttm3fcall(/;"	s
twopi	g.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,/;"	v	module:LJCAPSIDMODULE
twopi	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,/;"	v	module:PYMODULE
twopi	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,/;"	v	module:LJCAPSIDMODULE
twopi	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,/;"	v	module:PYMODULE
twopi	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: twopi /;"	v	module:mathsConstants
type	g.modamb.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) ::  atnum, bondedto, type /;"	v	module:MODAMBER
type	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: atnum,bondedto,type$/;"	v	module:MODAMBER
typech	g.modamb.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: typech$/;"	v	module:MODAMBER
typech	optim.modamber.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: typech$/;"	v	module:MODAMBER
typechb	g.modamb.f90	/^      CHARACTER(LEN=2)  typechb,/;"	v	module:MODAMBER
typechb	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,/;"	v	module:MODAMBER
typechc	g.modamb.f90	/^      CHARACTER(LEN=2)  typechb,typechc,/;"	v	module:MODAMBER
typechc	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,typechc,/;"	v	module:MODAMBER
typechd	g.modamb.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,/;"	v	module:MODAMBER
typechd	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,/;"	v	module:MODAMBER
typeche	g.modamb.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,typeche$/;"	v	module:MODAMBER
typeche	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,typeche$/;"	v	module:MODAMBER
typenumber	optim.amber.f	/^      SUBROUTINE typenumber(/;"	s
uppercase	stringmod.f90	/^function uppercase(/;"	f	module:strings
use_pme	g.modamber9.f90	/^      periodic,  use_pme,/;"	v	module:MODAMBER9
use_pme	optim.modamber9.f90	/^      periodic,  use_pme,/;"	v	module:modamber9
ut	g.fedor.f	/^      DOUBLE PRECISION function ut(/;"	f
ut0	g.fedor.f	/^      DOUBLE PRECISION function ut0(/;"	f
ut01	g.fedor.f	/^      DOUBLE PRECISION function ut01(/;"	f
uu	g.Pbglue.f	/^      SUBROUTINE uu /;"	s
uu1	g.EAMal.f	/^      SUBROUTINE uu1(/;"	s
v11	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,/;"	v	module:MODAMBER9
v11	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,/;"	v	module:modamber9
v12	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,/;"	v	module:MODAMBER9
v12	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,/;"	v	module:modamber9
v21	g.EAMal.f	/^      SUBROUTINE v21(/;"	s
v22	g.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,/;"	v	module:MODAMBER9
v22	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,/;"	v	module:modamber9
valleu_swap	optim.amber9dummy.f90	/^SUBROUTINE valleu_swap(/;"	s
value	pathsample.GT2data.f90	/^          double precision :: value$/;"	k	type:RealList
value	pathsample.GT2data.f90	/^          integer :: value$/;"	k	type:IntegerList
value	pathsample.GT2data.f90	/^          type(Node),pointer :: value$/;"	k	type:NodeList
value_di	stringmod.f90	/^subroutine value_di(/;"	s	module:strings
value_dr	stringmod.f90	/^subroutine value_dr(/;"	s	module:strings
value_si	stringmod.f90	/^subroutine value_si(/;"	s	module:strings
value_sr	stringmod.f90	/^subroutine value_sr(/;"	s	module:strings
vdw	optim.PachecoC60.f	/^      function vdw(/;"	f
vdwC	optim.ttm3f.f90	/^double precision, parameter ::   &$/;"	v	module:ttm3f_mod
vdwD	optim.ttm3f.f90	/^                                 vdwC=-0.72298855D+03,vdwD=/;"	v	module:ttm3f_mod
vdwE	optim.ttm3f.f90	/^                                 vdwC=-0.72298855D+03,vdwD=0.10211829D+06, vdwE=/;"	v	module:ttm3f_mod
vdwa	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: r, vdwa,/;"	v	module:MODAMBER
vdwb	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: r, vdwa, vdwb /;"	v	module:MODAMBER
vdwe	g.modamb.f90	/^      DOUBLE PRECISION vdwr(42),vdwe(/;"	v	module:MODAMBER
vdwenergy	g.modamb.f90	/^      DOUBLE PRECISION  totenergy,benergy,tenergy,penergy,answer,impenergy,qenergy,vdwenergy$/;"	v	module:MODAMBER
vdwhell	optim.modamber.f90	/^     &                 imphell,qhell,vdwhell,/;"	v	module:MODAMBER
vdwmeth	g.modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth,/;"	v	module:MODAMBER9
vdwmeth	optim.modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth,/;"	v	module:modamber9
vdwr	g.modamb.f90	/^      DOUBLE PRECISION vdwr(/;"	v	module:MODAMBER
vecs	g.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor, &$/;"	v	module:MODAMBER9
vecs	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor, &$/;"	v	module:modamber9
vecsbf	g.pymodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(4),vecsbf(/;"	v	module:PYMODULE
vecsbf	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(4),vecsbf(/;"	v	module:PYMODULE
vectorModulus	pathsample.quaternionmatch.f90	/^ function vectorModulus(/;"	f
verbose	g.modamber9.f90	/^integer verbose,/;"	v	module:MODAMBER9
verbose	optim.modamber9.f90	/^integer verbose,/;"	v	module:modamber9
vfac	g.modamber9.f90	/^          skmin,skmax,vfac,/;"	v	module:MODAMBER9
vfac	optim.modamber9.f90	/^          skmin,skmax,vfac,/;"	v	module:modamber9
vh2ointer	optim.msevb.f90	/^     subroutine vh2ointer(/;"	s
vh2ointra	optim.msevb.f90	/^     subroutine vh2ointra(/;"	s
vh3ointra	optim.msevb.f90	/^     subroutine vh3ointra(/;"	s
vinter	optim.msevb.f90	/^     subroutine vinter(/;"	s
vlimit	g.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,/;"	v	module:MODAMBER9
vlimit	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,/;"	v	module:modamber9
voffdiag2	optim.msevb.f90	/^     subroutine voffdiag2$/;"	s
vpotnt	optim.amhglobals.f	/^      double precision vpotnt(/;"	v	module:amhglobals
vrand	g.modamber9.f90	/^      gbsa,vrand,/;"	v	module:MODAMBER9
vrand	optim.modamber9.f90	/^      gbsa,vrand,/;"	v	module:modamber9
vv	g.modamber9.f90	/^      neb,vv,/;"	v	module:MODAMBER9
vv	optim.modamber9.f90	/^      neb,vv,/;"	v	module:modamber9
wait_subr	g.porfuncs.f90	/^          subroutine wait_subr(/;"	s	module:PORFUNCS
wales_nmres	optim.amhglobals.f	/^      integer wales_nmres$/;"	v	module:amhglobals
weight_P_AP	optim.amhglobals.f	/^       double precision :: weight_P_AP(/;"	v	module:amhglobals
wel	g.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,/;"	v	module:MODAMBER9
wel	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,/;"	v	module:modamber9
welhb	g.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb,/;"	v	module:MODAMBER9
welhb	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb,/;"	v	module:modamber9
welscl	optim.amhglobals.f	/^      logical welscl$/;"	v	module:amhglobals
width_Qexp_a	optim.amhglobals.f	/^     *           biaspoly(1:100),Qbiaspoly_a(1:100),$/;"	v	module:amhglobals
width_Qexp_b	optim.amhglobals.f	/^      double precision        width_Qexp_b,/;"	v	module:amhglobals
work	optim.SD.f90	/^real*8, dimension(:), allocatable :: work,/;"	v	module:SDwater
work1	optim.amhglobals.f	/^      double precision work1(/;"	v	module:amhglobals
work2	optim.amhglobals.f	/^      double precision work1(maxcnt),work2(/;"	v	module:amhglobals
work3	optim.amhglobals.f	/^      double precision work1(maxcnt),work2(maxcnt),work3(/;"	v	module:amhglobals
work4	optim.amhglobals.f	/^      double precision work1(maxcnt),work2(maxcnt),work3(maxcnt),$/;"	v	module:amhglobals
work6	optim.amhglobals.f	/^     *     work4(maxcnt),work6(/;"	v	module:amhglobals
work8	optim.amhglobals.f	/^     *     work4(maxcnt),work6(maxcnt),$/;"	v	module:amhglobals
write_di	stringmod.f90	/^subroutine write_di(/;"	s	module:strings
write_dr	stringmod.f90	/^subroutine write_dr(/;"	s	module:strings
write_si	stringmod.f90	/^subroutine write_si(/;"	s	module:strings
write_sr	stringmod.f90	/^subroutine write_sr(/;"	s	module:strings
writeq_di	stringmod.f90	/^subroutine writeq_di(/;"	s	module:strings
writeq_dr	stringmod.f90	/^subroutine writeq_dr(/;"	s	module:strings
writeq_si	stringmod.f90	/^subroutine writeq_si(/;"	s	module:strings
writeq_sr	stringmod.f90	/^subroutine writeq_sr(/;"	s	module:strings
x	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x,/;"	v	module:MODAMBER
x	g.modamber9.f90	/^   double precision,  dimension(:), allocatable :: x$/;"	v	module:MODAMBER9
x	optim.modamber9.f90	/^   double precision,  dimension(:), allocatable :: x$/;"	v	module:modamber9
x2n	optim.dimer.f	/^       function x2n(/;"	f
x_int	optim.amhglobals.f	/^      DOUBLE PRECISION x_int(/;"	v	module:amhglobals
x_mcp	optim.amhglobals.f	/^      DOUBLE PRECISION x_mcp(/;"	v	module:amhglobals
xbar	g.modamb.f90	/^      DOUBLE PRECISION xbar,/;"	v	module:MODAMBER
xbox0	g.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,/;"	v	module:MODAMBER9
xbox0	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,/;"	v	module:modamber9
xcap	g.modamber9.f90	/^      cutcap,xcap,/;"	v	module:MODAMBER9
xcap	optim.modamber9.f90	/^      cutcap,xcap,/;"	v	module:modamber9
xicom	g.modf1com.f90	/^      double precision, allocatable :: xicom(/;"	v	module:F1COM
xmorse	optim.PachecoC60.f	/^      function xmorse(/;"	f
xvEX	g.commons.f90	/^      REAL, ALLOCATABLE :: xvEX(/;"	v	module:COMMONS
xvEX	g.commons.o.f90	/^      REAL, ALLOCATABLE :: xvEX(/;"	v	module:COMMONS
y	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x, y,/;"	v	module:MODAMBER
ybar	g.modamb.f90	/^      DOUBLE PRECISION xbar, ybar,/;"	v	module:MODAMBER
ybox0	g.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,/;"	v	module:MODAMBER9
ybox0	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,/;"	v	module:modamber9
ycap	g.modamber9.f90	/^      cutcap,xcap,ycap,/;"	v	module:MODAMBER9
ycap	optim.modamber9.f90	/^      cutcap,xcap,ycap,/;"	v	module:modamber9
ywork	optim.amhglobals.f	/^     *     deltz(maxcnt,maxtab),shydro(maxres,2,maxtab),$/;"	v	module:amhglobals
z	g.modamb.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: x, y, z,/;"	v	module:MODAMBER
z2dist	optim.Z2faster.f	/^      subroutine z2dist(/;"	s
z2faster	optim.Z2faster.f	/^      subroutine z2faster(/;"	s
zbar	g.modamb.f90	/^      DOUBLE PRECISION xbar, ybar, zbar$/;"	v	module:MODAMBER
zbox0	g.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,zbox0$/;"	v	module:MODAMBER9
zbox0	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,zbox0$/;"	v	module:modamber9
zcap	g.modamber9.f90	/^      cutcap,xcap,ycap,zcap,/;"	v	module:MODAMBER9
zcap	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,/;"	v	module:modamber9
zrcord	optim.amhglobals.f	/^     *     prcord(AMHmaxsiz,3,maxpro,maxcrd),$/;"	v	module:amhglobals
zundel_species	optim.msevb_common.f90	/^  INTEGER, ALLOCATABLE, DIMENSION(:,:,:) :: zundel_species$/;"	v	module:msevb_common
