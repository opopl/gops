!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RAD	file:
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RADR	file:
1	gmin.func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RAD	file:
1	gmin.func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RADR	file:
1	mylbfgs.f90	/^     1                   ' INVERSE HESSIAN APPROXIMATION IS NOT POSITIVE')$/;"	l	subroutine:MYLBFGS	file:
1	optim.GoOptim.f	/^1         continue$/;"	l	subroutine:GoBonds	file:
1	optim.bfgsts.f	/^1     VDOT=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
1	optim.bhinterp.f90	/^1 CONTINUE$/;"	l	subroutine:BHINTERP	file:
1	optim.greatcirc.f	/^1     FIXIMAGE=.FALSE.$/;"	l	subroutine:GCLBFGS	file:
1	optim.hessout.f	/^ 1    ITOP=MIN(JX+4,IR)$/;"	l	subroutine:HESSOUT	file:
1	optim.miel.f	/^1     IF(ABS(X3-X0).GT.TOL*(ABS(X1)+ABS(X2)))THEN$/;"	l	subroutine:MIEL	file:
1	optim.mylbfgs.f	/^1     FIXIMAGE=.FALSE.$/;"	l	subroutine:MYLBFGS	file:
1	optim.odesd.f	/^1       KMAX=KOPT$/;"	l	subroutine:BSSTEP	file:
1	optim.odesd.f	/^1     CALL RKCK(Y,DYDX,N,X,H,YTEMP,YERR)$/;"	l	subroutine:RKQS	file:
1	optim.pyg.f90	/^1        IF (X >= XM) THEN$/;"	l	subroutine:BRENTMIN	file:
1	optim.scl.f	/^1     IF(ABS(X3-X0).GT.TOL*(ABS(X1)+ABS(X2)))THEN$/;"	l	subroutine:SCL	file:
1	optim.ttm3f.f90	/^1 gammcf=dexp(-x+a*dlog(x)-gln)*h$/;"	l	subroutine:gamma3	file:
1	optim.ttm3f.f90	/^1 gamser = ssum*dexp(-x+a*dlog(x)-gln)$/;"	l	subroutine:gamma2	file:
10	finalio.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	gmin.func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	lbfgs.f	/^   10    CONTINUE$/;"	l	subroutine:MCSRCH	file:
10	lbfgs.f	/^   10 continue$/;"	l	function:ddot	file:
10	lbfgs.f	/^   10 continue$/;"	l	subroutine:daxpy	file:
10	lbfgs.f	/^  10  ITER= 0$/;"	l	subroutine:LBFGS	file:
10	lbfgs.f	/^ 10   FORMAT('*************************************************')$/;"	l	subroutine:LB1	file:
10	mylbfgs.f90	/^10    CALL FLUSH(LFH)$/;"	l	subroutine:MYLBFGS	file:
10	mylbfgs.old.f90	/^10    CALL FLUSH(MYUNIT)$/;"	l	subroutine:MYLBFGS	file:
10	optim.Clatmin.f	/^10    TEMP1=AMAT(1,1)$/;"	l	subroutine:CLATMIN	file:
10	optim.EYtrap.f	/^10       CONTINUE$/;"	l	subroutine:EYETRAP	file:
10	optim.EYtrap.f	/^10    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
10	optim.JM.f	/^10       CONTINUE $/;"	l	subroutine:JM3	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2C	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JM2P	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JME	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMEC	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMECC	file:
10	optim.JM.f	/^10       CONTINUE$/;"	l	subroutine:JMEP	file:
10	optim.PV.f	/^10    PVAGAIN=.FALSE.$/;"	l	subroutine:PVOPT	file:
10	optim.SW.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:SWLATMIN	file:
10	optim.SiO2.f	/^   10 CONTINUE$/;"	l	subroutine:SIO2NDHESS	file:
10	optim.SiO2.f	/^   10 CONTINUE$/;"	l	subroutine:SIO2NSHESS	file:
10	optim.adm.f	/^10     CONTINUE$/;"	l	subroutine:ADM	file:
10	optim.amb_natinterns.f90	/^   10  CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
10	optim.amber.f	/^10    CONTINUE$/;"	l	subroutine:aparams	file:
10	optim.amber.f	/^10    CONTINUE$/;"	l	subroutine:aread	file:
10	optim.amber.f	/^10    CONTINUE$/;"	l	subroutine:impderivs	file:
10	optim.axdiff.f	/^10       CONTINUE $/;"	l	subroutine:AXDIFF	file:
10	optim.axpairs.f	/^10       CONTINUE$/;"	l	subroutine:AXPAIRS	file:
10	optim.aziz.f	/^10       CONTINUE$/;"	l	subroutine:AZIZ	file:
10	optim.bfgsts.f	/^10          CLOSE(45)$/;"	l	subroutine:BFGSTS	file:
10	optim.bfgsts.f	/^10    DUMMY1=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
10	optim.bfgsts.f	/^10    IF (ITER.GT.1) THEN$/;"	l	subroutine:ITEIG	file:
10	optim.bhinterp.f90	/^10 CONTINUE$/;"	l	subroutine:BHINTERP	file:
10	optim.c60diff.f	/^10    CONTINUE$/;"	l	subroutine:C60DIFF	file:
10	optim.c60diff.f	/^10    CONTINUE$/;"	l	subroutine:RESCALEC6	file:
10	optim.c60p.f	/^10       CONTINUE$/;"	l	subroutine:C60P	file:
10	optim.connect.f	/^10       CONTINUE$/;"	l	subroutine:ISNEWTS	file:
10	optim.connect.f	/^10    CLOSE(83)$/;"	l	subroutine:RATES	file:
10	optim.connect.f	/^10    CONTINUE$/;"	l	subroutine:REMMIN2	file:
10	optim.connect.f	/^10    CONTINUE$/;"	l	subroutine:STD_ORIENT	file:
10	optim.connect.f	/^10    NCDONE=NCDONE+1$/;"	l	subroutine:CONNECT	file:
10	optim.connect.f	/^10    READ(IUNIT,'(A100)',END=20) LSTRING(1)$/;"	l	subroutine:REVERSEBLOCK	file:
10	optim.cpmdlatmin.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:CPMDLATMIN	file:
10	optim.cubspl.f	/^   10    c(4,m) = (c(1,m) - c(1,m-1))\/c(3,m)$/;"	l	subroutine:cubspl	file:
10	optim.dctrap.f	/^10    CONTINUE$/;"	l	subroutine:DCTRAP	file:
10	optim.dprand.f	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:dprand	file:
10	optim.dprand.f	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	optim.dqag.f	/^   10       CONTINUE$/;"	l	subroutine:XERSVE	file:
10	optim.dqag.f	/^   10    CONTINUE$/;"	l	subroutine:XERMSG	file:
10	optim.dqag.f	/^   10   ALIST(MAXERR) = A2$/;"	l	subroutine:DQAGE	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	function:I1MACH	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK15	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK21	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK31	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK41	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK51	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:DQK61	file:
10	optim.dqag.f	/^   10 CONTINUE$/;"	l	subroutine:XERPRN	file:
10	optim.dqag.f	/^   10 ERRMAX = ELIST(MAXERR)$/;"	l	subroutine:DQPSRT	file:
10	optim.dsygvx.f	/^   10       CONTINUE$/;"	l	subroutine:DLACPY	file:
10	optim.dsygvx.f	/^   10       CONTINUE$/;"	l	subroutine:DSYEVX	file:
10	optim.dtrap.f	/^10    CONTINUE$/;"	l	subroutine:DTRAP	file:
10	optim.efol.f90	/^10    FORMAT(' Updating structure with eigenvector-following steps.')$/;"	l	subroutine:EFOL	file:
10	optim.eig.f	/^10       CONTINUE$/;"	l	subroutine:EIG	file:
10	optim.emie.f	/^10       CONTINUE$/;"	l	subroutine:EMIE	file:
10	optim.escp.f	/^10       CONTINUE$/;"	l	subroutine:DSCP	file:
10	optim.escp.f	/^10       CONTINUE$/;"	l	subroutine:OESCP	file:
10	optim.etrap.f	/^10       CONTINUE$/;"	l	subroutine:ETRAP	file:
10	optim.fetchz.f	/^10       CLOSE(77)$/;"	l	subroutine:FETCHZ	file:
10	optim.g2special.f	/^10       NCOUNT=NCOUNT+1$/;"	l	subroutine:G2SPECIAL	file:
10	optim.greatcirc.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:GCLBFGS	file:
10	optim.hessout.f	/^ 10   CONTINUE$/;"	l	subroutine:HESSOUT	file:
10	optim.hybridmin.f	/^10          CLOSE(45)$/;"	l	subroutine:HYBRIDMIN	file:
10	optim.input.f	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	optim.input.f	/^10    CONTINUE$/;"	l	subroutine:UPPERCASE	file:
10	optim.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	optim.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	optim.input.f	/^10    M=1$/;"	l	file:
10	optim.input.f	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	optim.input.f	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	optim.intbfgsts.f	/^10          CLOSE(45)$/;"	l	subroutine:INTBFGSTS	file:
10	optim.intxmylbfgs.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:INTXMYLBFGS	file:
10	optim.ions.f	/^10       CONTINUE$/;"	l	subroutine:IONS	file:
10	optim.keyword.f	/^10       IF (NITEMS.GT.2) THEN$/;"	l	subroutine:KEYWORD	file:
10	optim.latmin.f	/^10       CONTINUE$/;"	l	subroutine:C60PE	file:
10	optim.latmin.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:LATMIN	file:
10	optim.ljpshift.f	/^10    SBOX(1)=0.0D0$/;"	l	subroutine:LJPSHIFTSBIN	file:
10	optim.ljpshift.f	/^10    TEMP1=BOXLX$/;"	l	subroutine:LJPSLATMIN	file:
10	optim.ljpshift.f	/^10    VBOX(1)=0.0D0$/;"	l	subroutine:LJPSHIFTGBIN	file:
10	optim.mdiff.f	/^10       CONTINUE$/;"	l	subroutine:MDIFF	file:
10	optim.meccano.f90	/^10 CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MECBFGS	file:
10	optim.mied.f	/^10       CONTINUE$/;"	l	subroutine:MIED	file:
10	optim.miel.f	/^10       CONTINUE$/;"	l	subroutine:MIEL	file:
10	optim.mindist.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MMYLBFGS	file:
10	optim.mindist.f	/^10    DIST0=DISTFUNC(P,R,R0,R1)$/;"	l	subroutine:MINDIST	file:
10	optim.minperm.f	/^   10 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
10	optim.minperm.f	/^10            if(l .le. 1) goto 11$/;"	l	subroutine:minperm	file:
10	optim.minpermdist.f90	/^10 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
10	optim.minpermdistrbcom.f90	/^10    CONTINUE$/;"	l	subroutine:MINPERMDISTRBCOM	file:
10	optim.mlatmin.f	/^10       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
10	optim.mlatmin.f	/^10    DO 25 J1=1,3*N$/;"	l	subroutine:MLATMIN	file:
10	optim.mpdiff.f	/^10       CONTINUE$/;"	l	subroutine:MPDIFF	file:
10	optim.mpdiff.f	/^10       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
10	optim.msdiff.f	/^10       CONTINUE$/;"	l	subroutine:MSDIFF	file:
10	optim.mslatmin.f	/^10       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
10	optim.mslatmin.f	/^10    DO 25 J1=1,3*N$/;"	l	subroutine:MSLATMIN	file:
10	optim.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMGK	file:
10	optim.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMKK	file:
10	optim.myblas.f	/^ 10      continue$/;"	l	subroutine:DCOOMMSK	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBMV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STBSV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPMV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STPSV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRMV	file:
10	optim.mylapack.f	/^   10                    CONTINUE$/;"	l	subroutine:STRSV	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSPR2	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR	file:
10	optim.mylapack.f	/^   10                CONTINUE $/;"	l	subroutine:SSYR2	file:
10	optim.mylapack.f	/^   10                CONTINUE$/;"	l	subroutine:DTBSV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:DSYR	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGBMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SGEMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSBMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSPMV	file:
10	optim.mylapack.f	/^   10             CONTINUE$/;"	l	subroutine:SSYMV	file:
10	optim.mylapack.f	/^   10            CONTINUE$/;"	l	subroutine:SGER	file:
10	optim.mylapack.f	/^   10          CONTINUE$/;"	l	subroutine:DPBTRF	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	function:LCE	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	function:LDE	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	function:LSE	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTF2	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:DPBTRS	file:
10	optim.mylapack.f	/^   10    CONTINUE$/;"	l	subroutine:SMAKE	file:
10	optim.mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SMESSG	file:
10	optim.mylapack.f	/^   10 CONTINUE$/;"	l	subroutine:SOPEN	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK1	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK2	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK3	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK4	file:
10	optim.mylapack.f	/^   10 IX = IX + 1$/;"	l	subroutine:SCHCK5	file:
10	optim.mylapack.f	/^   10 MI = 891$/;"	l	function:SBEG	file:
10	optim.mylbfgs.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MYLBFGS	file:
10	optim.myorient.f	/^10    CONTINUE$/;"	l	subroutine:MYORIENT	file:
10	optim.odesd.f	/^10    IF (PV.AND.(.NOT.BFGSSTEP)) THEN$/;"	l	subroutine:ODESD	file:
10	optim.oldneb.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:NEBBFGS	file:
10	optim.oldneb.f	/^10    IF (NMAGNIFY.EQ.0) THEN$/;"	l	subroutine:OLDNEB	file:
10	optim.pertable.f	/^ 10   CONTINUE$/;"	l	subroutine:PERTABLE	file:
10	optim.potential.f	/^10       FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:POTENTIAL	file:
10	optim.projh.f	/^   10       continue$/;"	l	subroutine:dgefa	file:
10	optim.projh.f	/^   10       if (dabs(det(1)) .ge. 1.0d0) go to 20$/;"	l	subroutine:dgedi	file:
10	optim.projh.f	/^   10 continue$/;"	l	subroutine:dgeco	file:
10	optim.pyg.f90	/^10    CONTINUE$/;"	l	subroutine:BRENTMIN	file:
10	optim.rbperm.f90	/^10    CONTINUE$/;"	l	subroutine:RBMINPERMDIST	file:
10	optim.rigidb.f90	/^10     CONTINUE$/;"	l	subroutine:CHECKDRVTS	file:
10	optim.rotd.f	/^10       CONTINUE$/;"	l	subroutine:EPANIC	file:
10	optim.rotd.f	/^10    CONTINUE$/;"	l	subroutine:ROTENERGY	file:
10	optim.scdiff.f	/^10       CONTINUE$/;"	l	subroutine:SCDIFF	file:
10	optim.specialfuncts.f90	/^10       Z0=Z$/;"	l	subroutine:LEGZO	file:
10	optim.symmetry.f	/^10    CONTINUE$/;"	l	subroutine:SYMMETRY	file:
10	optim.tosifumi.f	/^   10 CONTINUE$/;"	l	subroutine:NDHESS	file:
10	optim.tosifumi.f	/^   10 CONTINUE$/;"	l	subroutine:NSHESS	file:
10	optim.twoend.f	/^10    SWITCH=.FALSE.$/;"	l	subroutine:TWOEND	file:
10	optim.unmeccano.f90	/^10 CALL FLUSH(6,ISTAT)$/;"	l	subroutine:UNMECBFGS	file:
10	optim.unrescalcdihe.f	/^ 10   CONTINUE$/;"	l	subroutine:UEDITRGYR	file:
10	optim.unresconnectsections.f	/^10      CONTINUE$/;"	l	subroutine:UNRESGUESSTSSEC	file:
10	optim.unresguessts.f	/^10      CONTINUE$/;"	l	subroutine:UNRESGUESSTS	file:
10	optim.unrestransform.f	/^   10 CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
10	optim.unrestransform.f	/^10       CONTINUE$/;"	l	subroutine:INTSECDET	file:
10	optim.utils.f	/^   10   ARR(I+1)=A$/;"	l	subroutine:PIKSR2	file:
10	optim.utils.f	/^ 10   CONTINUE$/;"	l	function:ITOA	file:
10	optim.xmylbfgs.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:XMYLBFGS	file:
10	pathsample.Dijkstra.f90	/^10       CONTINUE$/;"	l	subroutine:SORT3	file:
10	pathsample.KMC.a2b.f	/^10    NKMC=NKMC+1$/;"	l	subroutine:KMCA2B	file:
10	pathsample.KMC.f	/^10       XSTEPS=XSTEPS+1.0D0 ! KMC runs for minmum LJ1$/;"	l	subroutine:KMC	file:
10	pathsample.KMCcommit.f	/^10       XSTEPS=XSTEPS+1.0D0 ! KMC runs for minmum LJ1$/;"	l	subroutine:KMCCOMMIT	file:
10	pathsample.addperm.f	/^10       CONTINUE$/;"	l	subroutine:ADDPERM	file:
10	pathsample.cycle.f90	/^10    RANDOM=DPRAND()$/;"	l	subroutine:CYCLE	file:
10	pathsample.cycle2.f90	/^10 WRITE(*,'(3(A,I8))') 'cycle2> forked connect run ',NCYCLES,' on CPU ',NEWJOB,' completed or killed process id ',PID(NEWJOB)$/;"	l	subroutine:CYCLE2	file:
10	pathsample.dock.f90	/^10 WRITE(*,'(3(A,I8))') 'dockcycle2> forked OPTIM run ',NCYCLES,' on CPU ',NEWJOB,' completed or killed process id ',PID(NEWJOB)$/;"	l	subroutine:DOCKCYCLE2	file:
10	pathsample.dock.f90	/^10 WRITE(*,'(3(A,I8))') 'dockcycle> forked GMIN run ',NCYCLES,' on CPU ',NEWJOB,' completed or killed process id ',PID(NEWJOB)$/;"	l	subroutine:DOCKCYCLE	file:
10	pathsample.dprand.f	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	pathsample.dsort.f	/^   10       CONTINUE$/;"	l	subroutine:XERSVE	file:
10	pathsample.dsort.f	/^   10    CONTINUE$/;"	l	subroutine:DSORT	file:
10	pathsample.dsort.f	/^   10    CONTINUE$/;"	l	subroutine:XERMSG	file:
10	pathsample.dsort.f	/^   10 CONTINUE$/;"	l	function:I1MACH	file:
10	pathsample.dsort.f	/^   10 CONTINUE$/;"	l	subroutine:XERPRN	file:
10	pathsample.eig.f	/^10    B(J,I)=ZER$/;"	l	subroutine:EIG	file:
10	pathsample.getdpair.f90	/^10 CONTINUE$/;"	l	subroutine:GETDPAIR	file:
10	pathsample.getfreepair.f90	/^10 CONTINUE$/;"	l	subroutine:GETFREEPAIR	file:
10	pathsample.getpair.f90	/^10 CONTINUE$/;"	l	subroutine:GETPAIR	file:
10	pathsample.getppair.f90	/^10 CONTINUE$/;"	l	subroutine:GETPPAIR	file:
10	pathsample.getrpair.f90	/^10 CONTINUE$/;"	l	subroutine:GETRPAIR	file:
10	pathsample.getspair.f90	/^10 CONTINUE$/;"	l	subroutine:GETSPAIR	file:
10	pathsample.getupair.f90	/^10 CONTINUE$/;"	l	subroutine:GETUPAIR	file:
10	pathsample.getusepair.f90	/^10 CONTINUE$/;"	l	subroutine:GETUSEPAIR	file:
10	pathsample.input.f	/^10    CONTINUE$/;"	l	subroutine:READA	file:
10	pathsample.input.f	/^10    CONTINUE$/;"	l	subroutine:UPCASE	file:
10	pathsample.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETA	file:
10	pathsample.input.f	/^10    IF (ITEM .LT. NITEM) THEN$/;"	l	subroutine:GETF	file:
10	pathsample.input.f	/^10    M=1$/;"	l	file:
10	pathsample.input.f	/^10    P=P+1$/;"	l	subroutine:READF	file:
10	pathsample.input.f	/^10    P=P+1$/;"	l	subroutine:READK	file:
10	pathsample.mind.f	/^10    CALL DISTFUNC(P,R,R0,R1,NSIZE,DIST0,NATOMS)$/;"	l	subroutine:MIND	file:
10	pathsample.mind.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MMYLBFGS	file:
10	pathsample.mindist.f	/^10    CALL FLUSH(6,ISTAT)$/;"	l	subroutine:MMYLBFGS	file:
10	pathsample.mindist.f	/^10    DIST0=DISTFUNC(P,R,R0,R1)$/;"	l	subroutine:MINDIST	file:
10	pathsample.minperm.f	/^   10 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
10	pathsample.minperm.f	/^10            if(l .le. 1) goto 11$/;"	l	subroutine:minperm	file:
10	pathsample.minpermdist.f90	/^10 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
10	pathsample.minpermdistrbcom.f90	/^10    CONTINUE$/;"	l	subroutine:MINPERMDISTRBCOM	file:
10	pathsample.myorient.f	/^10    CONTINUE$/;"	l	subroutine:MYORIENT	file:
10	pathsample.orient.f	/^10    CONTINUE$/;"	l	subroutine:ORIENT	file:
10	pathsample.rbperm.f90	/^10    CONTINUE$/;"	l	subroutine:RBMINPERMDIST	file:
10	pathsample.reweight.f	/^   10             CONTINUE$/;"	l	function:DLANTR	file:
10	pathsample.reweight.f	/^   10             CONTINUE$/;"	l	subroutine:DLASWP	file:
10	pathsample.reweight.f	/^   10          CONTINUE$/;"	l	subroutine:DLAQGE	file:
10	pathsample.reweight.f	/^   10       CONTINUE$/;"	l	subroutine:DGESVX	file:
10	pathsample.reweight.f	/^   10       CONTINUE$/;"	l	subroutine:DGETRF	file:
10	pathsample.reweight.f	/^   10       CONTINUE$/;"	l	subroutine:DLATRS	file:
10	pathsample.reweight.f	/^   10    CONTINUE$/;"	l	subroutine:DGERFS	file:
10	pathsample.reweight.f	/^   10    CONTINUE$/;"	l	subroutine:DLACN2	file:
10	pathsample.reweight.f	/^   10    CONTINUE$/;"	l	subroutine:DLACON	file:
10	pathsample.reweight.f	/^   10   ARR(I+1)=A$/;"	l	subroutine:ASORT	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DGECON	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DGEEQU	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DGETF2	file:
10	pathsample.reweight.f	/^   10 CONTINUE$/;"	l	subroutine:DRSCL	file:
10	pathsample.sdprnd.f	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	pathsample.sort.f	/^10       CONTINUE$/;"	l	subroutine:SORT	file:
10	pathsample.sort.f	/^10       CONTINUE$/;"	l	subroutine:SORT2	file:
10	pathsample.sort.f	/^10       CONTINUE$/;"	l	subroutine:SORT4	file:
100	lbfgs.f	/^ 100  CONTINUE$/;"	l	subroutine:LBFGS	file:
100	lbfgs.f	/^ 100  FORMAT(\/' THE MINIMIZATION TERMINATED WITHOUT DETECTING ERRORS.',$/;"	l	subroutine:LB1	file:
100	optim.EYtrap.f	/^100      CONTINUE$/;"	l	subroutine:EYDTRAP	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2C	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2CC	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM2P	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3C	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3CC	file:
100	optim.JM.f	/^100         CONTINUE$/;"	l	subroutine:JM3P	file:
100	optim.amb_natinterns.f90	/^ 100          CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
100	optim.axdiff.f	/^100         CONTINUE$/;"	l	subroutine:AXDIFF	file:
100	optim.aziz.f	/^100         CONTINUE$/;"	l	subroutine:AZIZ	file:
100	optim.c60diff.f	/^100         CONTINUE$/;"	l	subroutine:C60DIFF	file:
100	optim.c60p.f	/^100         CONTINUE$/;"	l	subroutine:C60P	file:
100	optim.dtrap.f	/^100      CONTINUE$/;"	l	subroutine:DTRAP	file:
100	optim.efol.f90	/^100      FORMAT(' Largest overlap=',F8.5,' for vector ',I4,' eigenvalue=',F14.7,' Smallest eigenvalue=',F14.7)$/;"	l	subroutine:EFOL	file:
100	optim.eig.f	/^100   IF(DIFF.GT.ZER) GO TO 110$/;"	l	subroutine:EIG	file:
100	optim.escp.f	/^100         CONTINUE$/;"	l	subroutine:DSCP	file:
100	optim.fetchz.f	/^100      CALL INPUT(END)$/;"	l	subroutine:FETCHZ	file:
100	optim.input.f	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	optim.input.f	/^100   L=L+1$/;"	l	file:
100	optim.ions.f	/^100         CONTINUE$/;"	l	subroutine:IONS	file:
100	optim.mdiff.f	/^100         CONTINUE$/;"	l	subroutine:MDIFF	file:
100	optim.mied.f	/^100         CONTINUE$/;"	l	subroutine:MIED	file:
100	optim.minperm.f	/^  100 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
100	optim.minpermdistrbcom.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:ORIENTA	file:
100	optim.mpdiff.f	/^100         CONTINUE$/;"	l	subroutine:MPDIFF	file:
100	optim.mpdiff.f	/^100         CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
100	optim.msdiff.f	/^100         CONTINUE$/;"	l	subroutine:MSDIFF	file:
100	optim.mylapack.f	/^  100                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBMV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STBSV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPMV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STPSV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRMV	file:
100	optim.mylapack.f	/^  100             CONTINUE$/;"	l	subroutine:STRSV	file:
100	optim.mylapack.f	/^  100          CONTINUE$/;"	l	subroutine:DTBSV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGBMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SGEMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSBMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSPMV	file:
100	optim.mylapack.f	/^  100         CONTINUE$/;"	l	subroutine:SSYMV	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK2	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK3	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK4	file:
100	optim.mylapack.f	/^  100     CONTINUE$/;"	l	subroutine:SCHCK5	file:
100	optim.mylapack.f	/^  100 CONTINUE$/;"	l	subroutine:SCHCK1	file:
100	optim.projh.f	/^  100    continue$/;"	l	subroutine:dgedi	file:
100	optim.projh.f	/^  100 continue$/;"	l	subroutine:dgeco	file:
100	optim.rbperm.f90	/^100   CONTINUE$/;"	l	subroutine:RBMINPERMDIST	file:
100	optim.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBORIENT	file:
100	optim.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBSITESORIENT	file:
100	optim.rotcon.f	/^ 100   FORMAT(' ***PROGRAM ERROR***, Inertia tensor not diagonal in ROTCON.')$/;"	l	subroutine:ROTCON	file:
100	optim.scdiff.f	/^100         CONTINUE$/;"	l	subroutine:SCDIFF	file:
100	optim.symmetry.f	/^100      FORMAT(' The molecule belongs to an Abelian group.')$/;"	l	subroutine:SYMMETRY	file:
100	optim.ttm3f.f90	/^100 Continue$/;"	l	subroutine:ttm3f	file:
100	optim.unresconnectsections.f	/^100   CONTINUE $/;"	l	subroutine:UNRESGUESSTSSEC	file:
100	optim.unresguessts.f	/^100   CONTINUE $/;"	l	subroutine:UNRESGUESSTS	file:
100	optim.unrestwist.f	/^100   CONTINUE$/;"	l	subroutine:UNRSPERTDIHE	file:
100	optim.utils.f	/^  100  CONTINUE$/;"	l	function:LNBLNK	file:
100	optim.utils.f	/^ 100   IF (C .EQ. ' ') THEN$/;"	l	function:ATOI	file:
100	optim.utils.f	/^ 100  CONTINUE$/;"	l	function:ITOA	file:
100	pathsample.dsort.f	/^  100 M = 1$/;"	l	subroutine:DSORT	file:
100	pathsample.eig.f	/^100   IF(DIFF.GT.ZER) GO TO 110$/;"	l	subroutine:EIG	file:
100	pathsample.input.f	/^100   IF (NULL .OR. XNULL) GO TO 99$/;"	l	subroutine:READF	file:
100	pathsample.input.f	/^100   L=L+1$/;"	l	file:
100	pathsample.minperm.f	/^  100 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
100	pathsample.minpermdistrbcom.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:ORIENTA	file:
100	pathsample.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBORIENT	file:
100	pathsample.rbperm.f90	/^100   DMAX = -1.0D0$/;"	l	subroutine:RBSITESORIENT	file:
100	pathsample.reweight.f	/^  100             CONTINUE$/;"	l	function:DLANTR	file:
100	pathsample.reweight.f	/^  100          CONTINUE$/;"	l	subroutine:DLATRS	file:
100	pathsample.reweight.f	/^  100       CONTINUE$/;"	l	subroutine:DGESVX	file:
100	pathsample.reweight.f	/^  100    CONTINUE$/;"	l	subroutine:DGERFS	file:
100	pathsample.reweight.f	/^  100 CONTINUE$/;"	l	subroutine:DGEEQU	file:
100	pathsample.reweight.f	/^  100 CONTINUE$/;"	l	subroutine:DLACN2	file:
100	pathsample.reweight.f	/^  100 CONTINUE$/;"	l	subroutine:DLACON	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3C	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3CC	file:
1000	optim.JM.f	/^1000  CONTINUE$/;"	l	subroutine:JM3P	file:
1000	optim.axdiff.f	/^1000  CONTINUE$/;"	l	subroutine:AXDIFF	file:
1000	optim.minperm.f	/^ 1000 END$/;"	l	subroutine:JOVOSAP	file:
1000	optim.read.odata.inc.f90	/^1000     FORMAT(A5)$/;"	l	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHDUMP	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHQ	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHQCONT	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHRELQ	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMHRMSD	file:
1000	pathsample.amhdump.f90	/^1000          FORMAT(A5)$/;"	l	subroutine:AMH_RELCO	file:
1000	pathsample.main.F	/^1000          FORMAT(A5)$/;"	l	program:PATHSAMPLE	file:
1000	pathsample.main.f90	/^1000          FORMAT(A5)$/;"	l	program:PATHSAMPLE	file:
1000	pathsample.minperm.f	/^ 1000 END$/;"	l	subroutine:JOVOSAP	file:
1001	optim.input.f	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	optim.input.f	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	optim.input.f	/^1001  FORMAT (132A1)$/;"	l	file:
1001	pathsample.input.f	/^1001    FORMAT ('0End of file while attempting to read a number')$/;"	l	subroutine:GETF	file:
1001	pathsample.input.f	/^1001    FORMAT$/;"	l	subroutine:GETA	file:
1001	pathsample.input.f	/^1001  FORMAT (80A1)$/;"	l	file:
101	mylbfgs.f90	/^101   FORMAT(A,F20.10,G20.10,A,I6,A)$/;"	l	subroutine:MYLBFGS	file:
101	optim.minperm.f	/^  101    T=T+1$/;"	l	subroutine:JOVOSAP	file:
101	pathsample.minperm.f	/^  101    T=T+1$/;"	l	subroutine:JOVOSAP	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3C	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3CC	file:
1010	optim.JM.f	/^1010     CONTINUE$/;"	l	subroutine:JM3P	file:
1010	optim.axdiff.f	/^1010     CONTINUE$/;"	l	subroutine:AXDIFF	file:
102	mylbfgs.f90	/^102   FORMAT(A,I10,A,I10,A)$/;"	l	subroutine:MYLBFGS	file:
1023	pathsample.amhdump.f90	/^1023        FORMAT(8(F8.3,1X))$/;"	l	subroutine:AMHQ	file:
1023	pathsample.amhdump.f90	/^1023        FORMAT(8(F8.3,1X))$/;"	l	subroutine:AMHQCONT	file:
1023	pathsample.amhdump.f90	/^1023        FORMAT(8(F8.3,1X))$/;"	l	subroutine:AMHRMSD	file:
103	mylbfgs.f90	/^103   FORMAT(A,F20.10,G20.10,A,I6,A,A,F13.10)$/;"	l	subroutine:MYLBFGS	file:
104	mylbfgs.f90	/^104 FORMAT(A,F20.10,A,F20.10,A,F20.10) $/;"	l	subroutine:MYLBFGS	file:
105	mylbfgs.f90	/^105 FORMAT(A,F19.10,A,F16.10,A,F15.8) $/;"	l	subroutine:MYLBFGS	file:
1092	optim.adm.f	/^1092   FORMAT(' Interatomic distance matrix ')$/;"	l	subroutine:ADM	file:
11	mylbfgs.old.f90	/^11          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in mylbfgs')$/;"	l	subroutine:MYLBFGS	file:
11	optim.Ackland_wrapper.f	/^11    CONTINUE$/;"	l	subroutine:ACK	file:
11	optim.aziz.f	/^11    DO J1=1,3*N$/;"	l	subroutine:AZIZ	file:
11	optim.bfgsts.f	/^11          FORMAT (' BFGSTS> Beginning of optimization cycle ', I4,'.',\/$/;"	l	subroutine:BFGSTS	file:
11	optim.bisect.f90	/^11 CONTINUE ! jump here to try new endpoints$/;"	l	subroutine:BISECT_OPT	file:
11	optim.connect.f	/^11       CONTINUE$/;"	l	subroutine:CONNECT	file:
11	optim.cubspl.f	/^   11 if (n .gt. 2)                     go to 12$/;"	l	subroutine:cubspl	file:
11	optim.escp.f	/^11    CONTINUE$/;"	l	subroutine:OESCP	file:
11	optim.fetchz.f	/^11       READ(7,'(A)') FNAME$/;"	l	subroutine:FETCHZ	file:
11	optim.geopt.f	/^11    CONTINUE$/;"	l	subroutine:GEOPT	file:
11	optim.get.natoms.inc.f90	/^11       READ(7,'(A)') FNAME$/;"	l	file:
11	optim.hybridmin.f	/^11          FORMAT (' hybridmin> Beginning of optimization cycle ', I4,'.',\/$/;"	l	subroutine:HYBRIDMIN	file:
11	optim.input.f	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	optim.intbfgsts.f	/^11          FORMAT (' intBFGSTS> Beginning of optimization cycle ', I4,'.',\/$/;"	l	subroutine:INTBFGSTS	file:
11	optim.latmin.f	/^11       CONTINUE$/;"	l	subroutine:C60PE	file:
11	optim.meccano.f90	/^11 NPASS=NPASS+1$/;"	l	subroutine:MECCANO	file:
11	optim.minperm.f	/^11         enddo$/;"	l	subroutine:minperm	file:
11	optim.minpermdist.f90	/^11 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
11	optim.msevb.f90	/^11      continue$/;"	l	subroutine:jacobi	file:
11	optim.odesd.f	/^11      CONTINUE$/;"	l	subroutine:BSSTEP	file:
11	optim.odesd.f	/^11      CONTINUE$/;"	l	subroutine:RZEXTR	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:MMID	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:PZEXTR	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:RKCK	file:
11	optim.odesd.f	/^11    CONTINUE$/;"	l	subroutine:RKQS	file:
11	optim.potential.f	/^11          READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
11	optim.scdiff.f	/^11    CONTINUE$/;"	l	subroutine:SCDIFF	file:
11	optim.scl.f	/^11    CONTINUE$/;"	l	subroutine:SCL	file:
11	optim.utils.f	/^   11   CONTINUE$/;"	l	subroutine:PIKSR2	file:
11	pathsample.KMC.f	/^11             IF ((.NOT.DEADTS(J1)).AND.(M2.NE.M1)) THEN$/;"	l	subroutine:MAKEDMAT3	file:
11	pathsample.KMCcommit.f	/^11       CONTINUE$/;"	l	subroutine:MAKED	file:
11	pathsample.Pfold.f90	/^11    CONTINUE$/;"	l	subroutine:MAKED2	file:
11	pathsample.Pfold.f90	/^11 DO J1=1,NMIN$/;"	l	subroutine:PFOLD	file:
11	pathsample.addperm.f	/^11       CONTINUE$/;"	l	subroutine:ADDPERM	file:
11	pathsample.connectd.f90	/^11    IF (PLUS(J3).EQ.J2) THEN$/;"	l	subroutine:CONNECTD	file:
11	pathsample.connectdist.f90	/^11    IF (PLUS(J3).EQ.J2) THEN$/;"	l	subroutine:CONNECTDIST	file:
11	pathsample.cycle2.f90	/^11 CONTINUE$/;"	l	subroutine:CYCLE2	file:
11	pathsample.dock.f90	/^11 CONTINUE$/;"	l	subroutine:DOCKCYCLE	file:
11	pathsample.dock.f90	/^11 CONTINUE$/;"	l	subroutine:DOCKCYCLE2	file:
11	pathsample.input.f	/^11    IF (L+K .GT. LAST) GO TO 50$/;"	l	subroutine:READA	file:
11	pathsample.kshortestpaths.f90	/^11       CONTINUE$/;"	l	subroutine:MAKED4	file:
11	pathsample.main.F	/^11    DO J1=1,NMIN$/;"	l	subroutine:GETNCONN	file:
11	pathsample.main.f90	/^11    DO J1=1,NMIN$/;"	l	subroutine:GETNCONN	file:
11	pathsample.mind.f	/^11    CONTINUE$/;"	l	subroutine:MIND	file:
11	pathsample.minperm.f	/^11         enddo$/;"	l	subroutine:minperm	file:
11	pathsample.minpermdist.f90	/^11 CONTINUE$/;"	l	subroutine:MINPERMDIST	file:
11	pathsample.mywait.f90	/^11 CONTINUE$/;"	l	subroutine:MYWAIT	file:
11	pathsample.reweight.f	/^   11   CONTINUE$/;"	l	subroutine:ASORT	file:
11	pathsample.tssearch.f	/^11             CONTINUE$/;"	l	subroutine:TSSEARCH	file:
110	lbfgs.f	/^ 110    IF (DIAG(I).LE.ZERO) GO TO 195$/;"	l	subroutine:LBFGS	file:
110	optim.EYtrap.f	/^110         CONTINUE$/;"	l	subroutine:EYDTRAP	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2C	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2CC	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM2P	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3C	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3CC	file:
110	optim.JM.f	/^110      CONTINUE$/;"	l	subroutine:JM3P	file:
110	optim.amb_natinterns.f90	/^ 110       CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
110	optim.axdiff.f	/^110      CONTINUE$/;"	l	subroutine:AXDIFF	file:
110	optim.aziz.f	/^110      CONTINUE$/;"	l	subroutine:AZIZ	file:
110	optim.c60diff.f	/^110      CONTINUE$/;"	l	subroutine:C60DIFF	file:
110	optim.c60p.f	/^110      CONTINUE$/;"	l	subroutine:C60P	file:
110	optim.dimer.f	/^110         read (40,'(a10,5e25.17)',end=210) index(np),$/;"	l	subroutine:fdimer	file:
110	optim.dtrap.f	/^110         CONTINUE$/;"	l	subroutine:DTRAP	file:
110	optim.eig.f	/^110   T=Q\/(DIFF+S)$/;"	l	subroutine:EIG	file:
110	optim.escp.f	/^110      CONTINUE$/;"	l	subroutine:DSCP	file:
110	optim.get.natoms.inc.f90	/^110      CALL INPUT(END)$/;"	l	file:
110	optim.input.f	/^110   RETURN$/;"	l	subroutine:READF	file:
110	optim.ions.f	/^110      CONTINUE$/;"	l	subroutine:IONS	file:
110	optim.mdiff.f	/^110      CONTINUE$/;"	l	subroutine:MDIFF	file:
110	optim.mied.f	/^110      CONTINUE$/;"	l	subroutine:MIED	file:
110	optim.mpdiff.f	/^110      CONTINUE$/;"	l	subroutine:MPDIFF	file:
110	optim.mpdiff.f	/^110      CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
110	optim.msdiff.f	/^110      CONTINUE$/;"	l	subroutine:MSDIFF	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBMV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STBSV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPMV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STPSV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRMV	file:
110	optim.mylapack.f	/^  110                CONTINUE $/;"	l	subroutine:STRSV	file:
110	optim.mylapack.f	/^  110                CONTINUE$/;"	l	subroutine:DPBTRF	file:
110	optim.mylapack.f	/^  110             CONTINUE$/;"	l	subroutine:DTBSV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGBMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SGEMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSBMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSPMV	file:
110	optim.mylapack.f	/^  110            CONTINUE$/;"	l	subroutine:SSYMV	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK1	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK2	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK3	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK4	file:
110	optim.mylapack.f	/^  110     CONTINUE$/;"	l	subroutine:SCHCK5	file:
110	optim.projh.f	/^  110       continue$/;"	l	subroutine:dgedi	file:
110	optim.projh.f	/^  110    continue$/;"	l	subroutine:dgeco	file:
110	optim.scdiff.f	/^110      CONTINUE$/;"	l	subroutine:SCDIFF	file:
110	optim.symmetry.f	/^110      FORMAT(' The molecule belongs to a point group with doubly degenerate representations.')$/;"	l	subroutine:SYMMETRY	file:
110	pathsample.dsort.f	/^  110 IF (I .EQ. J) GO TO 150$/;"	l	subroutine:DSORT	file:
110	pathsample.eig.f	/^110   T=Q\/(DIFF+S)$/;"	l	subroutine:EIG	file:
110	pathsample.getallmin.f	/^110   CLOSE(1)$/;"	l	subroutine:GETALLMIN	file:
110	pathsample.getallpaths.f	/^110   CLOSE(1)$/;"	l	subroutine:GETALLPATHS	file:
110	pathsample.getnewpath.f	/^110   CLOSE(1)$/;"	l	subroutine:GETNEWPATH	file:
110	pathsample.input.f	/^110   RETURN$/;"	l	subroutine:READF	file:
110	pathsample.reweight.f	/^  110          CONTINUE$/;"	l	subroutine:DGERFS	file:
110	pathsample.reweight.f	/^  110       CONTINUE$/;"	l	function:DLANTR	file:
110	pathsample.reweight.f	/^  110       CONTINUE$/;"	l	subroutine:DLATRS	file:
110	pathsample.reweight.f	/^  110    CONTINUE$/;"	l	subroutine:DGEEQU	file:
110	pathsample.reweight.f	/^  110    CONTINUE$/;"	l	subroutine:DGESVX	file:
110	pathsample.reweight.f	/^  110 CONTINUE$/;"	l	subroutine:DLACN2	file:
110	pathsample.reweight.f	/^  110 CONTINUE$/;"	l	subroutine:DLACON	file:
110	pathsample.setup.f	/^110         CLOSE(1)$/;"	l	subroutine:SETUP	file:
110	pathsample.setup_sis.f	/^110         CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
111	fmt.inc.f90	/^111 format(A,I10,A,F20.10,A,I5,A,G12.5,A,G20.10,A,F11.1)$/;"	l	file:
111	optim.amber.f	/^111     CONTINUE$/;"	l	subroutine:AMBERS	file:
111	optim.bfgsts.f	/^111         CONTINUE$/;"	l	subroutine:BFGSTS	file:
111	optim.connect.f	/^111   CONTINUE$/;"	l	subroutine:CONNECT	file:
111	optim.get.natoms.inc.f90	/^111      CALL INPUT(END)$/;"	l	file:
111	optim.hybridmin.f	/^111         CONTINUE$/;"	l	subroutine:HYBRIDMIN	file:
111	optim.intbfgsts.f	/^111         CONTINUE$/;"	l	subroutine:INTBFGSTS	file:
111	optim.keyword.f	/^111       IF (NITEMS.GT.2) THEN$/;"	l	subroutine:KEYWORD	file:
111	optim.minpermrb.f90	/^111 CONTINUE$/;"	l	subroutine:MINPERMRB	file:
111	optim.potential.f	/^111            READ(7,'(A)',ERR=561) STRING$/;"	l	subroutine:POTENTIAL	file:
111	pathsample.setup.f	/^111      REWIND(1)$/;"	l	subroutine:SETUP	file:
111	pathsample.tssearch.f	/^111         CONTINUE$/;"	l	subroutine:TSSEARCH	file:
1111	optim.efol.f90	/^1111  INR=INRSAVE$/;"	l	subroutine:EFOL	file:
112	lbfgs.f	/^ 112  W(I)= -G(I)$/;"	l	subroutine:LBFGS	file:
112	optim.amber.f	/^112   CONTINUE$/;"	l	subroutine:AMBERS	file:
112	optim.h2o.f	/^112      CONTINUE $/;"	l	subroutine:H2O	file:
112	optim.keyword.f	/^112       IF (NITEMS.GT.2) THEN$/;"	l	subroutine:KEYWORD	file:
112	optim.read.odata.inc.f90	/^112      CONTINUE$/;"	l	file:
112	optim.unrestransform.f	/^112   CONTINUE$/;"	l	subroutine:INTSECDET	file:
113	optim.amber.f	/^113                  CONTINUE$/;"	l	subroutine:AMBERS	file:
113	optim.h2o.f	/^113   CONTINUE$/;"	l	subroutine:H2O	file:
12	keyword.f90	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
12	optim.adm.f	/^12              CONTINUE$/;"	l	subroutine:ADM	file:
12	optim.bisect.f90	/^12 CONTINUE ! jump here for same endpoints, different SFRAC$/;"	l	subroutine:BISECT_OPT	file:
12	optim.cubspl.f	/^   12 c(4,1) = c(3,3)$/;"	l	subroutine:cubspl	file:
12	optim.fetchz.f	/^12          READ(7,'(A)') TSTRING$/;"	l	subroutine:FETCHZ	file:
12	optim.get.natoms.inc.f90	/^12          READ(7,'(A)') TSTRING$/;"	l	file:
12	optim.input.f	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	optim.keyword.f	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
12	optim.latmin.f	/^12    CONTINUE$/;"	l	subroutine:C60PE	file:
12	optim.msevb.f90	/^12    continue$/;"	l	subroutine:jacobi	file:
12	optim.odesd.f	/^12        CONTINUE$/;"	l	subroutine:BSSTEP	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:MMID	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:PZEXTR	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:RKQS	file:
12	optim.odesd.f	/^12      CONTINUE$/;"	l	subroutine:RZEXTR	file:
12	optim.odesd.f	/^12    CONTINUE$/;"	l	subroutine:RKCK	file:
12	optim.potential.f	/^12          READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
12	optim.utils.f	/^   12   CONTINUE$/;"	l	subroutine:PIKSR2	file:
12	pathsample.addperm.f	/^12       CONTINUE$/;"	l	subroutine:ADDPERM	file:
12	pathsample.input.f	/^12    C=CHAR(P)$/;"	l	subroutine:READF	file:
12	pathsample.reweight.f	/^   12   CONTINUE$/;"	l	subroutine:ASORT	file:
120	optim.EYtrap.f	/^120            CONTINUE$/;"	l	subroutine:EYDTRAP	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2C	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2CC	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM2P	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3C	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3CC	file:
120	optim.JM.f	/^120   CONTINUE$/;"	l	subroutine:JM3P	file:
120	optim.axdiff.f	/^120   CONTINUE$/;"	l	subroutine:AXDIFF	file:
120	optim.aziz.f	/^120   CONTINUE$/;"	l	subroutine:AZIZ	file:
120	optim.c60diff.f	/^120   CONTINUE$/;"	l	subroutine:C60DIFF	file:
120	optim.c60p.f	/^120   CONTINUE$/;"	l	subroutine:C60P	file:
120	optim.dctrap.f	/^ 120     CONTINUE$/;"	l	subroutine:DCTRAP	file:
120	optim.dtrap.f	/^120            CONTINUE$/;"	l	subroutine:DTRAP	file:
120	optim.eig.f	/^120   C=1.0\/SQRT(1.0+T**2)$/;"	l	subroutine:EIG	file:
120	optim.escp.f	/^120   CONTINUE$/;"	l	subroutine:DSCP	file:
120	optim.ions.f	/^120   CONTINUE$/;"	l	subroutine:IONS	file:
120	optim.mdiff.f	/^120   CONTINUE$/;"	l	subroutine:MDIFF	file:
120	optim.mied.f	/^120   CONTINUE$/;"	l	subroutine:MIED	file:
120	optim.mpdiff.f	/^120   CONTINUE$/;"	l	subroutine:MPDIFF	file:
120	optim.mpdiff.f	/^120   CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
120	optim.msdiff.f	/^120   CONTINUE$/;"	l	subroutine:MSDIFF	file:
120	optim.mylapack.f	/^  120                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBMV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STBSV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPMV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STPSV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRMV	file:
120	optim.mylapack.f	/^  120             CONTINUE$/;"	l	subroutine:STRSV	file:
120	optim.mylapack.f	/^  120          CONTINUE$/;"	l	subroutine:DTBSV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGBMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SGEMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSBMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSPMV	file:
120	optim.mylapack.f	/^  120         CONTINUE$/;"	l	subroutine:SSYMV	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK1	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK2	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK3	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK4	file:
120	optim.mylapack.f	/^  120     CONTINUE$/;"	l	subroutine:SCHCK5	file:
120	optim.projh.f	/^  120       continue$/;"	l	subroutine:dgedi	file:
120	optim.projh.f	/^  120 continue$/;"	l	subroutine:dgeco	file:
120	optim.scdiff.f	/^120   CONTINUE$/;"	l	subroutine:SCDIFF	file:
120	optim.symmetry.f	/^120      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
120	pathsample.dsort.f	/^  120 K = I$/;"	l	subroutine:DSORT	file:
120	pathsample.eig.f	/^120   C=1.0\/SQRT(1.0+T**2)$/;"	l	subroutine:EIG	file:
120	pathsample.getallpaths.f	/^120      CONTINUE$/;"	l	subroutine:GETALLPATHS	file:
120	pathsample.getnewpath.f	/^120      CONTINUE$/;"	l	subroutine:GETNEWPATH	file:
120	pathsample.reweight.f	/^  120                CONTINUE$/;"	l	subroutine:DLATRS	file:
120	pathsample.reweight.f	/^  120             CONTINUE$/;"	l	function:DLANTR	file:
120	pathsample.reweight.f	/^  120          CONTINUE$/;"	l	subroutine:DGERFS	file:
120	pathsample.reweight.f	/^  120    CONTINUE$/;"	l	subroutine:DGEEQU	file:
120	pathsample.reweight.f	/^  120    CONTINUE$/;"	l	subroutine:DGESVX	file:
120	pathsample.reweight.f	/^  120 CONTINUE$/;"	l	subroutine:DLACN2	file:
120	pathsample.reweight.f	/^  120 CONTINUE$/;"	l	subroutine:DLACON	file:
120	pathsample.setup.f	/^120      CLOSE(1)$/;"	l	subroutine:SETUP	file:
120	pathsample.setup_sis.f	/^120      CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
121	optim.potential.f	/^121         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
121	pathsample.setup.f	/^121      CLOSE(1)$/;"	l	subroutine:SETUP	file:
121	pathsample.setup_sis.f	/^121      CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
122	optim.Ackland_wrapper.f	/^122      CONTINUE$/;"	l	subroutine:ACK	file:
122	optim.escp.f	/^122      CONTINUE$/;"	l	subroutine:OESCP	file:
122	optim.potential.f	/^122         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
122	optim.scdiff.f	/^122      CONTINUE$/;"	l	subroutine:SCDIFF	file:
122	optim.scl.f	/^122      CONTINUE$/;"	l	subroutine:SCL	file:
123	optim.ljcapsidmodule.f90	/^123 CONTINUE $/;"	l	subroutine:PYGPERIODIC	file:
123	optim.potential.f	/^123            READ(15,'(5X,5E15.8)',ERR=666) (HESS(J1,J3),J3=1+5*(JSTART-1),MIN(5+5*(JSTART-1),3*NATOMS))$/;"	l	subroutine:POTENTIAL	file:
123	pathsample.getallpaths.f	/^123   REWIND(1)$/;"	l	subroutine:GETALLPATHS	file:
124	optim.ljcapsidmodule.f90	/^124 CONTINUE$/;"	l	subroutine:PYGPERIODIC	file:
124	optim.potential.f	/^124            READ(15,'(5X,5E15.8)',ERR=666) (HESS(J1,J3),J3=1+5*(JSTART-1),MIN(5+5*(JSTART-1),3*NATOMS))$/;"	l	subroutine:POTENTIAL	file:
125	lbfgs.f	/^ 125  CONTINUE$/;"	l	subroutine:LBFGS	file:
125	optim.escp.f	/^125            CONTINUE$/;"	l	subroutine:DSCP	file:
125	optim.scdiff.f	/^125            CONTINUE$/;"	l	subroutine:SCDIFF	file:
13	optim.Ackland_wrapper.f	/^13    CONTINUE$/;"	l	subroutine:ACK	file:
13	optim.bisect.f90	/^13 CONTINUE$/;"	l	subroutine:BISECT_OPT	file:
13	optim.c60diff.f	/^13    CONTINUE$/;"	l	subroutine:C60DIFF	file:
13	optim.c60p.f	/^13    CONTINUE$/;"	l	subroutine:C60P	file:
13	optim.escp.f	/^13    CONTINUE$/;"	l	subroutine:OESCP	file:
13	optim.fetchz.f	/^13       CONTINUE$/;"	l	subroutine:FETCHZ	file:
13	optim.get.natoms.inc.f90	/^13       CONTINUE$/;"	l	file:
13	optim.msevb.f90	/^13    continue$/;"	l	subroutine:jacobi	file:
13	optim.odesd.f	/^13        CONTINUE$/;"	l	subroutine:RZEXTR	file:
13	optim.odesd.f	/^13      CONTINUE$/;"	l	subroutine:BSSTEP	file:
13	optim.odesd.f	/^13      CONTINUE$/;"	l	subroutine:PZEXTR	file:
13	optim.odesd.f	/^13    CONTINUE$/;"	l	subroutine:MMID	file:
13	optim.odesd.f	/^13    CONTINUE$/;"	l	subroutine:RKCK	file:
13	optim.potential.f	/^13          READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
13	optim.scdiff.f	/^13    CONTINUE$/;"	l	subroutine:SCDIFF	file:
13	optim.scl.f	/^13    CONTINUE$/;"	l	subroutine:SCL	file:
130	lbfgs.f	/^ 130  W(I)=DIAG(I)*W(I)$/;"	l	subroutine:LBFGS	file:
130	optim.EYtrap.f	/^130   CONTINUE$/;"	l	subroutine:EYDTRAP	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3C	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3CC	file:
130	optim.JM.f	/^130            CONTINUE$/;"	l	subroutine:JM3P	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2C	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2CC	file:
130	optim.JM.f	/^130         CONTINUE$/;"	l	subroutine:JM2P	file:
130	optim.axdiff.f	/^130            CONTINUE$/;"	l	subroutine:AXDIFF	file:
130	optim.aziz.f	/^130         CONTINUE$/;"	l	subroutine:AZIZ	file:
130	optim.c60diff.f	/^130         CONTINUE$/;"	l	subroutine:C60DIFF	file:
130	optim.c60p.f	/^130         CONTINUE$/;"	l	subroutine:C60P	file:
130	optim.dctrap.f	/^130   CONTINUE$/;"	l	subroutine:DCTRAP	file:
130	optim.dtrap.f	/^130   CONTINUE$/;"	l	subroutine:DTRAP	file:
130	optim.eig.f	/^130   CONTINUE$/;"	l	subroutine:EIG	file:
130	optim.escp.f	/^130         CONTINUE$/;"	l	subroutine:DSCP	file:
130	optim.gmetry.f	/^130   CONTINUE$/;"	l	subroutine:GMETRY	file:
130	optim.ions.f	/^130         CONTINUE$/;"	l	subroutine:IONS	file:
130	optim.mdiff.f	/^130         CONTINUE$/;"	l	subroutine:MDIFF	file:
130	optim.mied.f	/^130         CONTINUE$/;"	l	subroutine:MIED	file:
130	optim.mlatmin.f	/^130      CONTINUE$/;"	l	subroutine:MLATMIN	file:
130	optim.mpdiff.f	/^130         CONTINUE$/;"	l	subroutine:MPDIFF	file:
130	optim.mpdiff.f	/^130         CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
130	optim.msdiff.f	/^130         CONTINUE$/;"	l	subroutine:MSDIFF	file:
130	optim.mslatmin.f	/^130      CONTINUE$/;"	l	subroutine:MSLATMIN	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBMV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STBSV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPMV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STPSV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRMV	file:
130	optim.mylapack.f	/^  130                CONTINUE $/;"	l	subroutine:STRSV	file:
130	optim.mylapack.f	/^  130                CONTINUE$/;"	l	subroutine:DPBTRF	file:
130	optim.mylapack.f	/^  130             CONTINUE$/;"	l	subroutine:DTBSV	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK1	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK2	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK3	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK4	file:
130	optim.mylapack.f	/^  130     CONTINUE$/;"	l	subroutine:SCHCK5	file:
130	optim.projh.f	/^  130    continue$/;"	l	subroutine:dgeco	file:
130	optim.projh.f	/^  130    continue$/;"	l	subroutine:dgedi	file:
130	optim.scdiff.f	/^130         CONTINUE$/;"	l	subroutine:SCDIFF	file:
130	optim.symmetry.f	/^130         FORMAT(' The molecule is linear.')$/;"	l	subroutine:SYMMETRY	file:
130	pathsample.amhdump.f90	/^130       CONTINUE$/;"	l	subroutine:AMHQ	file:
130	pathsample.amhdump.f90	/^130       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
130	pathsample.amhdump.f90	/^130       CONTINUE$/;"	l	subroutine:AMHRMSD	file:
130	pathsample.dsort.f	/^  130 L = L-1$/;"	l	subroutine:DSORT	file:
130	pathsample.eig.f	/^130   CONTINUE$/;"	l	subroutine:EIG	file:
130	pathsample.getallmin.f	/^130      CONTINUE$/;"	l	subroutine:GETALLMIN	file:
130	pathsample.getallpaths.f	/^130      CONTINUE$/;"	l	subroutine:GETALLPATHS	file:
130	pathsample.getnewpath.f	/^130      CONTINUE$/;"	l	subroutine:GETNEWPATH	file:
130	pathsample.mergedb.f90	/^130 CONTINUE$/;"	l	subroutine:MERGEDB	file:
130	pathsample.reweight.f	/^  130                CONTINUE$/;"	l	subroutine:DLATRS	file:
130	pathsample.reweight.f	/^  130             CONTINUE$/;"	l	function:DLANTR	file:
130	pathsample.reweight.f	/^  130    CONTINUE$/;"	l	subroutine:DGERFS	file:
130	pathsample.reweight.f	/^  130 CONTINUE$/;"	l	subroutine:DLACN2	file:
130	pathsample.reweight.f	/^  130 CONTINUE$/;"	l	subroutine:DLACON	file:
130	pathsample.setup.f	/^130         CLOSE(1)$/;"	l	subroutine:SETUP	file:
133	optim.potential.f	/^133         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
1346	optim.Natb.f	/^ 1346              vect(ij)=val$/;"	l	subroutine:entots	file:
14	optim.c60diff.f	/^14       CONTINUE$/;"	l	subroutine:C60DIFF	file:
14	optim.c60p.f	/^14       CONTINUE$/;"	l	subroutine:C60P	file:
14	optim.escp.f	/^14       CONTINUE$/;"	l	subroutine:OESCP	file:
14	optim.msevb.f90	/^14        continue$/;"	l	subroutine:jacobi	file:
14	optim.odesd.f	/^14        CONTINUE$/;"	l	subroutine:PZEXTR	file:
14	optim.odesd.f	/^14      CONTINUE$/;"	l	subroutine:BSSTEP	file:
14	optim.odesd.f	/^14      CONTINUE$/;"	l	subroutine:RZEXTR	file:
14	optim.odesd.f	/^14    CONTINUE$/;"	l	subroutine:MMID	file:
14	optim.odesd.f	/^14    CONTINUE$/;"	l	subroutine:RKCK	file:
14	optim.potential.f	/^14       READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
14	optim.scdiff.f	/^14       CONTINUE$/;"	l	subroutine:SCDIFF	file:
14	optim.scl.f	/^14       CONTINUE$/;"	l	subroutine:SCL	file:
140	optim.EYtrap.f	/^140      CONTINUE$/;"	l	subroutine:EYDTRAP	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3C	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3CC	file:
140	optim.JM.f	/^140         CONTINUE$/;"	l	subroutine:JM3P	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2C	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2CC	file:
140	optim.JM.f	/^140      CONTINUE$/;"	l	subroutine:JM2P	file:
140	optim.axdiff.f	/^140         CONTINUE$/;"	l	subroutine:AXDIFF	file:
140	optim.aziz.f	/^140      CONTINUE$/;"	l	subroutine:AZIZ	file:
140	optim.c60diff.f	/^140      CONTINUE$/;"	l	subroutine:C60DIFF	file:
140	optim.c60p.f	/^140      CONTINUE$/;"	l	subroutine:C60P	file:
140	optim.dctrap.f	/^140      CONTINUE$/;"	l	subroutine:DCTRAP	file:
140	optim.dtrap.f	/^140      CONTINUE$/;"	l	subroutine:DTRAP	file:
140	optim.eig.f	/^140   IF(N1.EQ.1) RETURN$/;"	l	subroutine:EIG	file:
140	optim.escp.f	/^140      CONTINUE$/;"	l	subroutine:DSCP	file:
140	optim.gmetry.f	/^140         CONTINUE$/;"	l	subroutine:GMETRY	file:
140	optim.ions.f	/^140      CONTINUE$/;"	l	subroutine:IONS	file:
140	optim.mdiff.f	/^140      CONTINUE$/;"	l	subroutine:MDIFF	file:
140	optim.mied.f	/^140      CONTINUE$/;"	l	subroutine:MIED	file:
140	optim.mlatmin.f	/^140   CONTINUE$/;"	l	subroutine:MLATMIN	file:
140	optim.mpdiff.f	/^140      CONTINUE$/;"	l	subroutine:MPDIFF	file:
140	optim.mpdiff.f	/^140      CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
140	optim.msdiff.f	/^140      CONTINUE$/;"	l	subroutine:MSDIFF	file:
140	optim.mslatmin.f	/^140   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBMV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STBSV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPMV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STPSV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRMV	file:
140	optim.mylapack.f	/^  140             CONTINUE$/;"	l	subroutine:STRSV	file:
140	optim.mylapack.f	/^  140          CONTINUE$/;"	l	subroutine:DTBSV	file:
140	optim.mylapack.f	/^  140       CONTINUE$/;"	l	subroutine:DPBTRF	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK1	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK2	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK4	file:
140	optim.mylapack.f	/^  140     CONTINUE$/;"	l	subroutine:SCHCK5	file:
140	optim.mylapack.f	/^  140 CONTINUE$/;"	l	subroutine:SCHCK3	file:
140	optim.projh.f	/^  140    continue$/;"	l	subroutine:dgedi	file:
140	optim.projh.f	/^  140 continue$/;"	l	subroutine:dgeco	file:
140	optim.scdiff.f	/^140      CONTINUE$/;"	l	subroutine:SCDIFF	file:
140	optim.symmetry.f	/^140               CONTINUE$/;"	l	subroutine:SYMMETRY	file:
140	pathsample.amhdump.f90	/^140       CONTINUE$/;"	l	subroutine:AMHQ	file:
140	pathsample.amhdump.f90	/^140       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
140	pathsample.amhdump.f90	/^140       CONTINUE$/;"	l	subroutine:AMHRMSD	file:
140	pathsample.dock.f90	/^140 CONTINUE$/;"	l	subroutine:ANALYSERESULTS	file:
140	pathsample.dsort.f	/^  140 K = K+1$/;"	l	subroutine:DSORT	file:
140	pathsample.eig.f	/^140   IF(N1.EQ.1) RETURN$/;"	l	subroutine:EIG	file:
140	pathsample.getallmin.f	/^140   CONTINUE$/;"	l	subroutine:GETALLMIN	file:
140	pathsample.getallpaths.f	/^140      CONTINUE$/;"	l	subroutine:GETALLPATHS	file:
140	pathsample.mergedb.f90	/^140 CONTINUE$/;"	l	subroutine:MERGEDB	file:
140	pathsample.reweight.f	/^  140                CONTINUE$/;"	l	subroutine:DLATRS	file:
140	pathsample.reweight.f	/^  140       CONTINUE$/;"	l	function:DLANTR	file:
140	pathsample.reweight.f	/^  140 CONTINUE$/;"	l	subroutine:DGERFS	file:
140	pathsample.reweight.f	/^  140 CONTINUE$/;"	l	subroutine:DLACN2	file:
140	pathsample.reweight.f	/^  140 CONTINUE$/;"	l	subroutine:DLACON	file:
140	pathsample.setup.f	/^140            CONTINUE$/;"	l	subroutine:SETUP	file:
142	optim.adm.f	/^142       FORMAT(18X,A3,4(10X,A3))$/;"	l	subroutine:ADM	file:
143	optim.adm.f	/^143          FORMAT(T3,A3,'[',I3,']',5(3X,F10.5))$/;"	l	subroutine:ADM	file:
144	optim.adm.f	/^144       FORMAT(16X,:'[',I3,']',4(8X,:'[',I3,']'))$/;"	l	subroutine:ADM	file:
145	lbfgs.f	/^ 145  CONTINUE$/;"	l	subroutine:LBFGS	file:
148	optim.TIPmodes.f	/^  148 CONTINUE $/;"	l	subroutine:H2OMODES	file:
15	lbfgs.f	/^   15    FORMAT(\/'  THE SEARCH DIRECTION IS NOT A DESCENT DIRECTION')$/;"	l	subroutine:MCSRCH	file:
15	optim.Ackland_wrapper.f	/^15       CONTINUE$/;"	l	subroutine:ACK	file:
15	optim.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMEC	file:
15	optim.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMECC	file:
15	optim.JM.f	/^15       CONTINUE$/;"	l	subroutine:JMEP	file:
15	optim.c60diff.f	/^15          CONTINUE$/;"	l	subroutine:C60DIFF	file:
15	optim.c60p.f	/^15       CONTINUE$/;"	l	subroutine:C60P	file:
15	optim.cubspl.f	/^   15 c(4,1) = 1.$/;"	l	subroutine:cubspl	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK15	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK21	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK31	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK41	file:
15	optim.dqag.f	/^   15 CONTINUE$/;"	l	subroutine:DQK51	file:
15	optim.dqag.f	/^  15    CONTINUE$/;"	l	subroutine:DQK61	file:
15	optim.emie.f	/^15       CONTINUE$/;"	l	subroutine:EMIE	file:
15	optim.escp.f	/^15       CONTINUE$/;"	l	subroutine:OESCP	file:
15	optim.latmin.f	/^15       CONTINUE$/;"	l	subroutine:C60PE	file:
15	optim.minperm.f	/^   15    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
15	optim.mlatmin.f	/^15       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
15	optim.mpdiff.f	/^15       CONTINUE$/;"	l	subroutine:MPDIFF	file:
15	optim.mpdiff.f	/^15       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
15	optim.msdiff.f	/^15       CONTINUE$/;"	l	subroutine:MSDIFF	file:
15	optim.msevb.f90	/^15      continue$/;"	l	subroutine:jacobi	file:
15	optim.mslatmin.f	/^15       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
15	optim.odesd.f	/^15      CONTINUE$/;"	l	subroutine:PZEXTR	file:
15	optim.odesd.f	/^15    CONTINUE$/;"	l	subroutine:BSSTEP	file:
15	optim.odesd.f	/^15    CONTINUE$/;"	l	subroutine:RKCK	file:
15	optim.rigidb.f90	/^15    CONTINUE    $/;"	l	subroutine:CHECKDRVTS	file:
15	optim.specialfuncts.f90	/^15          P=P*(Z-X(I))$/;"	l	subroutine:LEGZO	file:
15	pathsample.minperm.f	/^   15    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
150	optim.EYtrap.f	/^150         CONTINUE$/;"	l	subroutine:EYDTRAP	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3C	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3CC	file:
150	optim.JM.f	/^150      CONTINUE$/;"	l	subroutine:JM3P	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2C	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2CC	file:
150	optim.JM.f	/^150   CONTINUE$/;"	l	subroutine:JM2P	file:
150	optim.axdiff.f	/^150      CONTINUE$/;"	l	subroutine:AXDIFF	file:
150	optim.aziz.f	/^150   CONTINUE$/;"	l	subroutine:AZIZ	file:
150	optim.c60diff.f	/^150   CONTINUE$/;"	l	subroutine:C60DIFF	file:
150	optim.c60p.f	/^150   CONTINUE$/;"	l	subroutine:C60P	file:
150	optim.dctrap.f	/^150         CONTINUE$/;"	l	subroutine:DCTRAP	file:
150	optim.dtrap.f	/^150         CONTINUE$/;"	l	subroutine:DTRAP	file:
150	optim.efol.f90	/^150            K1=K1+1$/;"	l	subroutine:EFOL	file:
150	optim.eig.f	/^150   W1=A(I,I)$/;"	l	subroutine:EIG	file:
150	optim.escp.f	/^150   CONTINUE$/;"	l	subroutine:DSCP	file:
150	optim.gmetry.f	/^150   CONTINUE$/;"	l	subroutine:GMETRY	file:
150	optim.ions.f	/^150   CONTINUE$/;"	l	subroutine:IONS	file:
150	optim.mdiff.f	/^150   CONTINUE$/;"	l	subroutine:MDIFF	file:
150	optim.mied.f	/^150   CONTINUE$/;"	l	subroutine:MIED	file:
150	optim.mpdiff.f	/^150   CONTINUE$/;"	l	subroutine:MPDIFF	file:
150	optim.mpdiff.f	/^150   CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
150	optim.msdiff.f	/^150   CONTINUE$/;"	l	subroutine:MSDIFF	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBMV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STBSV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPMV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STPSV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRMV	file:
150	optim.mylapack.f	/^  150                CONTINUE $/;"	l	subroutine:STRSV	file:
150	optim.mylapack.f	/^  150             CONTINUE$/;"	l	subroutine:DTBSV	file:
150	optim.mylapack.f	/^  150     CONTINUE$/;"	l	subroutine:SCHCK1	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:DPBTRF	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK2	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK3	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK4	file:
150	optim.mylapack.f	/^  150 CONTINUE$/;"	l	subroutine:SCHCK5	file:
150	optim.projh.f	/^  150    continue$/;"	l	subroutine:dgeco	file:
150	optim.projh.f	/^  150 continue$/;"	l	subroutine:dgedi	file:
150	optim.scdiff.f	/^150   CONTINUE$/;"	l	subroutine:SCDIFF	file:
150	pathsample.amhdump.f90	/^150       CONTINUE$/;"	l	subroutine:AMHQ	file:
150	pathsample.amhdump.f90	/^150       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
150	pathsample.amhdump.f90	/^150       CONTINUE$/;"	l	subroutine:AMHRMSD	file:
150	pathsample.dock.f90	/^150 CONTINUE$/;"	l	subroutine:ANALYSERESULTS	file:
150	pathsample.dsort.f	/^  150 M = M-1$/;"	l	subroutine:DSORT	file:
150	pathsample.eig.f	/^150   W1=A(I,I)$/;"	l	subroutine:EIG	file:
150	pathsample.reweight.f	/^  150             CONTINUE$/;"	l	subroutine:DLATRS	file:
150	pathsample.reweight.f	/^  150          CONTINUE$/;"	l	function:DLANTR	file:
150	pathsample.reweight.f	/^  150 CONTINUE$/;"	l	subroutine:DLACN2	file:
150	pathsample.reweight.f	/^  150 CONTINUE$/;"	l	subroutine:DLACON	file:
151	optim.escp.f	/^151               CONTINUE$/;"	l	subroutine:DSCP	file:
151	optim.scdiff.f	/^151               CONTINUE$/;"	l	subroutine:SCDIFF	file:
152	optim.escp.f	/^152               CONTINUE$/;"	l	subroutine:DSCP	file:
152	optim.scdiff.f	/^152               CONTINUE$/;"	l	subroutine:SCDIFF	file:
155	optim.EYtrap.f	/^155            CONTINUE$/;"	l	subroutine:EYDTRAP	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2C	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2CC	file:
155	optim.JM.f	/^155            CONTINUE$/;"	l	subroutine:JM2P	file:
155	optim.aziz.f	/^155            CONTINUE$/;"	l	subroutine:AZIZ	file:
155	optim.c60diff.f	/^155            CONTINUE$/;"	l	subroutine:C60DIFF	file:
155	optim.c60p.f	/^155            CONTINUE$/;"	l	subroutine:C60P	file:
155	optim.dtrap.f	/^155            CONTINUE$/;"	l	subroutine:DTRAP	file:
155	optim.escp.f	/^155            CONTINUE$/;"	l	subroutine:DSCP	file:
155	optim.ions.f	/^155            CONTINUE$/;"	l	subroutine:IONS	file:
155	optim.mdiff.f	/^155            CONTINUE$/;"	l	subroutine:MDIFF	file:
155	optim.mied.f	/^155            CONTINUE$/;"	l	subroutine:MIED	file:
155	optim.mpdiff.f	/^155            CONTINUE$/;"	l	subroutine:MPDIFF	file:
155	optim.mpdiff.f	/^155            CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
155	optim.msdiff.f	/^155            CONTINUE$/;"	l	subroutine:MSDIFF	file:
155	optim.scdiff.f	/^155            CONTINUE$/;"	l	subroutine:SCDIFF	file:
156	optim.escp.f	/^156            CONTINUE$/;"	l	subroutine:DSCP	file:
156	optim.mdiff.f	/^156            CONTINUE$/;"	l	subroutine:MDIFF	file:
156	optim.mied.f	/^156            CONTINUE$/;"	l	subroutine:MIED	file:
156	optim.mpdiff.f	/^156            CONTINUE$/;"	l	subroutine:MPDIFF	file:
156	optim.mpdiff.f	/^156            CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
156	optim.msdiff.f	/^156            CONTINUE$/;"	l	subroutine:MSDIFF	file:
156	optim.scdiff.f	/^156            CONTINUE$/;"	l	subroutine:SCDIFF	file:
16	optim.bbrsdm.f90	/^16       FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:BBRSDM	file:
16	optim.cubspl.f	/^   16 c(4,1) = 2.$/;"	l	subroutine:cubspl	file:
16	optim.meccano.f90	/^16 FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:MECBFGS	file:
16	optim.msevb.f90	/^16            continue$/;"	l	subroutine:jacobi	file:
16	optim.mylbfgs.f	/^16    FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:MYLBFGS	file:
16	optim.odesd.f	/^16        CONTINUE$/;"	l	subroutine:BSSTEP	file:
16	optim.odesd.f	/^16      CONTINUE$/;"	l	subroutine:PZEXTR	file:
16	optim.odesd.f	/^16    CONTINUE$/;"	l	subroutine:RKCK	file:
16	optim.unmeccano.f90	/^16 FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:UNMECBFGS	file:
16	pathsample.mind.f	/^16    FORMAT(A,27X,F20.10,A)$/;"	l	subroutine:MMYLBFGS	file:
160	lbfgs.f	/^ 160   W(ISPT+POINT*N+I)= W(I)$/;"	l	subroutine:LBFGS	file:
160	optim.EYtrap.f	/^160         CONTINUE$/;"	l	subroutine:EYDTRAP	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2C	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2CC	file:
160	optim.JM.f	/^160         CONTINUE$/;"	l	subroutine:JM2P	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3C	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3CC	file:
160	optim.JM.f	/^160   CONTINUE$/;"	l	subroutine:JM3P	file:
160	optim.axdiff.f	/^160   CONTINUE$/;"	l	subroutine:AXDIFF	file:
160	optim.aziz.f	/^160         CONTINUE$/;"	l	subroutine:AZIZ	file:
160	optim.c60diff.f	/^160         CONTINUE$/;"	l	subroutine:C60DIFF	file:
160	optim.c60p.f	/^160         CONTINUE$/;"	l	subroutine:C60P	file:
160	optim.dctrap.f	/^ 160     CONTINUE$/;"	l	subroutine:DCTRAP	file:
160	optim.dtrap.f	/^160         CONTINUE$/;"	l	subroutine:DTRAP	file:
160	optim.efol.f90	/^160      FORMAT(' Gradients along Hessian eigenvectors: ')$/;"	l	subroutine:EFOL	file:
160	optim.escp.f	/^160         CONTINUE$/;"	l	subroutine:DSCP	file:
160	optim.fetchz.f	/^160      CALL INPUT(END)$/;"	l	subroutine:FETCHZ	file:
160	optim.gmetry.f	/^160   IF (NATOMS.EQ.NUMAT) RETURN$/;"	l	subroutine:GMETRY	file:
160	optim.ions.f	/^160         CONTINUE$/;"	l	subroutine:IONS	file:
160	optim.mdiff.f	/^160         CONTINUE$/;"	l	subroutine:MDIFF	file:
160	optim.mied.f	/^160         CONTINUE$/;"	l	subroutine:MIED	file:
160	optim.mpdiff.f	/^160         CONTINUE$/;"	l	subroutine:MPDIFF	file:
160	optim.mpdiff.f	/^160         CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
160	optim.msdiff.f	/^160         CONTINUE$/;"	l	subroutine:MSDIFF	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBMV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STBSV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPMV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STPSV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRMV	file:
160	optim.mylapack.f	/^  160             CONTINUE$/;"	l	subroutine:STRSV	file:
160	optim.mylapack.f	/^  160          CONTINUE$/;"	l	subroutine:DTBSV	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK1	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK2	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK3	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK4	file:
160	optim.mylapack.f	/^  160 CONTINUE$/;"	l	subroutine:SCHCK5	file:
160	optim.projh.f	/^  160 continue$/;"	l	subroutine:dgeco	file:
160	optim.scdiff.f	/^160         CONTINUE$/;"	l	subroutine:SCDIFF	file:
160	optim.symmetry.f	/^160         FORMAT(' symmetry> The highest order rotational axis is C',I2,' about ',I2)$/;"	l	subroutine:SYMMETRY	file:
160	pathsample.dock.f90	/^160 CONTINUE$/;"	l	subroutine:ANALYSERESULTS	file:
160	pathsample.dsort.f	/^  160 IF (J-I .GE. 1) GO TO 120$/;"	l	subroutine:DSORT	file:
160	pathsample.eig.f	/^160   B(MU,J)=W2$/;"	l	subroutine:EIG	file:
160	pathsample.reweight.f	/^  160             CONTINUE$/;"	l	function:DLANTR	file:
160	pathsample.reweight.f	/^  160       CONTINUE$/;"	l	subroutine:DLATRS	file:
161	optim.potential.f	/^161         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
162	optim.potential.f	/^162         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
163	optim.potential.f	/^163         READ(15,'(A80)') GSTRING$/;"	l	subroutine:POTENTIAL	file:
165	lbfgs.f	/^ 165  NFEV=0$/;"	l	subroutine:LBFGS	file:
17	optim.amber.f	/^17    CONTINUE$/;"	l	subroutine:chiraltest	file:
17	optim.c60p.f	/^17          CONTINUE$/;"	l	subroutine:C60P	file:
17	optim.msevb.f90	/^17            continue$/;"	l	subroutine:jacobi	file:
17	optim.odesd.f	/^17    CONTINUE$/;"	l	subroutine:BSSTEP	file:
17	optim.odesd.f	/^17    CONTINUE$/;"	l	subroutine:RKCK	file:
17	optim.siaz.f	/^17      CONTINUE$/;"	l	subroutine:SIAZ	file:
170	lbfgs.f	/^ 170  W(I)=G(I)$/;"	l	subroutine:LBFGS	file:
170	optim.EYtrap.f	/^170      CONTINUE$/;"	l	subroutine:EYDTRAP	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3C	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3CC	file:
170	optim.JM.f	/^170            CONTINUE$/;"	l	subroutine:JM3P	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2C	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2CC	file:
170	optim.JM.f	/^170      CONTINUE$/;"	l	subroutine:JM2P	file:
170	optim.axdiff.f	/^170            CONTINUE$/;"	l	subroutine:AXDIFF	file:
170	optim.aziz.f	/^170      CONTINUE$/;"	l	subroutine:AZIZ	file:
170	optim.c60diff.f	/^170      CONTINUE$/;"	l	subroutine:C60DIFF	file:
170	optim.c60p.f	/^170      CONTINUE$/;"	l	subroutine:C60P	file:
170	optim.dtrap.f	/^170      CONTINUE$/;"	l	subroutine:DTRAP	file:
170	optim.efol.f90	/^170   FORMAT(' Number of negative eigenvalues=',I3)$/;"	l	subroutine:EFOL	file:
170	optim.eig.f	/^170   CONTINUE$/;"	l	subroutine:EIG	file:
170	optim.escp.f	/^170      CONTINUE$/;"	l	subroutine:DSCP	file:
170	optim.gmetry.f	/^170   CONTINUE$/;"	l	subroutine:GMETRY	file:
170	optim.ions.f	/^170      CONTINUE$/;"	l	subroutine:IONS	file:
170	optim.mdiff.f	/^170      CONTINUE$/;"	l	subroutine:MDIFF	file:
170	optim.mied.f	/^170      CONTINUE$/;"	l	subroutine:MIED	file:
170	optim.mpdiff.f	/^170      CONTINUE$/;"	l	subroutine:MPDIFF	file:
170	optim.mpdiff.f	/^170      CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
170	optim.msdiff.f	/^170      CONTINUE$/;"	l	subroutine:MSDIFF	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK1	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK2	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK3	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK4	file:
170	optim.mylapack.f	/^  170 CONTINUE$/;"	l	subroutine:SCHCK5	file:
170	optim.scdiff.f	/^170      CONTINUE$/;"	l	subroutine:SCDIFF	file:
170	optim.symmetry.f	/^170                  CONTINUE$/;"	l	subroutine:SYMMETRY	file:
170	pathsample.dsort.f	/^  170 I = I+1$/;"	l	subroutine:DSORT	file:
170	pathsample.eig.f	/^170   CONTINUE$/;"	l	subroutine:EIG	file:
170	pathsample.reweight.f	/^  170          CONTINUE$/;"	l	function:DLANTR	file:
172	lbfgs.f	/^ 172  CONTINUE$/;"	l	subroutine:LBFGS	file:
175	lbfgs.f	/^ 175  W(IYPT+NPT+I)= G(I)-W(I)$/;"	l	subroutine:LBFGS	file:
18	optim.cubspl.f	/^   18 if(n .eq. 2)                      go to 25$/;"	l	subroutine:cubspl	file:
18	optim.mlatmin.f	/^18           CONTINUE$/;"	l	subroutine:MLATDIFF	file:
18	optim.msevb.f90	/^18            continue$/;"	l	subroutine:jacobi	file:
18	optim.odesd.f	/^18    CONTINUE$/;"	l	subroutine:BSSTEP	file:
18	optim.siaz.f	/^18         CONTINUE$/;"	l	subroutine:SIAZ	file:
180	optim.EYtrap.f	/^180   CONTINUE$/;"	l	subroutine:EYDTRAP	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3C	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3CC	file:
180	optim.JM.f	/^180         CONTINUE$/;"	l	subroutine:JM3P	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2C	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2CC	file:
180	optim.JM.f	/^180   CONTINUE$/;"	l	subroutine:JM2P	file:
180	optim.axdiff.f	/^180         CONTINUE$/;"	l	subroutine:AXDIFF	file:
180	optim.aziz.f	/^180   CONTINUE$/;"	l	subroutine:AZIZ	file:
180	optim.c60diff.f	/^180   CONTINUE$/;"	l	subroutine:C60DIFF	file:
180	optim.c60p.f	/^180   CONTINUE$/;"	l	subroutine:C60P	file:
180	optim.dctrap.f	/^ 180  CONTINUE$/;"	l	subroutine:DCTRAP	file:
180	optim.dtrap.f	/^180   CONTINUE$/;"	l	subroutine:DTRAP	file:
180	optim.escp.f	/^180   CONTINUE$/;"	l	subroutine:DSCP	file:
180	optim.ions.f	/^180   CONTINUE$/;"	l	subroutine:IONS	file:
180	optim.mdiff.f	/^180   CONTINUE$/;"	l	subroutine:MDIFF	file:
180	optim.mied.f	/^180   CONTINUE$/;"	l	subroutine:MIED	file:
180	optim.mpdiff.f	/^180   CONTINUE$/;"	l	subroutine:MPDIFF	file:
180	optim.mpdiff.f	/^180   CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
180	optim.msdiff.f	/^180   CONTINUE$/;"	l	subroutine:MSDIFF	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK1	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK2	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK3	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK4	file:
180	optim.mylapack.f	/^  180 CONTINUE$/;"	l	subroutine:SCHCK5	file:
180	optim.scdiff.f	/^180   CONTINUE$/;"	l	subroutine:SCDIFF	file:
180	optim.symmetry.f	/^180            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
180	pathsample.dsort.f	/^  180 DX(K+1) = DX(K)$/;"	l	subroutine:DSORT	file:
180	pathsample.reweight.f	/^  180          CONTINUE$/;"	l	function:DLANTR	file:
19	optim.cubspl.f	/^   19 do 20 m=2,l$/;"	l	subroutine:cubspl	file:
19	optim.msevb.f90	/^19            continue$/;"	l	subroutine:jacobi	file:
19	optim.mylbfgs.f	/^ 19   CONTINUE$/;"	l	subroutine:MYLBFGS	file:
190	keyword.f90	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	lbfgs.f	/^ 190  IFLAG=-1$/;"	l	subroutine:LBFGS	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2C	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2CC	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM2P	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3C	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3CC	file:
190	optim.JM.f	/^190      CONTINUE$/;"	l	subroutine:JM3P	file:
190	optim.axdiff.f	/^190      CONTINUE$/;"	l	subroutine:AXDIFF	file:
190	optim.aziz.f	/^190      CONTINUE$/;"	l	subroutine:AZIZ	file:
190	optim.c60diff.f	/^190      CONTINUE$/;"	l	subroutine:C60DIFF	file:
190	optim.c60p.f	/^190      CONTINUE$/;"	l	subroutine:C60P	file:
190	optim.changep.f	/^190   CALL INPUT(END)$/;"	l	subroutine:CHANGEP	file:
190	optim.dumpit.f	/^190   FORMAT('EFSTEPS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
190	optim.ions.f	/^190      CONTINUE$/;"	l	subroutine:IONS	file:
190	optim.keyword.f	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK1	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK2	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK3	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK4	file:
190	optim.mylapack.f	/^  190 CONTINUE$/;"	l	subroutine:SCHCK5	file:
190	optim.read.odata.inc.f90	/^190   CALL INPUT(END)$/;"	l	file:
190	optim.symmetry.f	/^190            FORMAT(' The unique rotational axis is ',I1,'.')$/;"	l	subroutine:SYMMETRY	file:
190	optim.tcheck.f	/^190   CONTINUE$/;"	l	subroutine:TCHECK	file:
190	pathsample.dsort.f	/^  190 IF (KFLAG .LE. -1) THEN$/;"	l	subroutine:DSORT	file:
190	pathsample.keywords.f	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	pathsample.reweight.f	/^  190             CONTINUE$/;"	l	function:DLANTR	file:
192	optim.unrestwist.f	/^192   CONTINUE$/;"	l	subroutine:UNRSPERTDIHE	file:
195	lbfgs.f	/^ 195  IFLAG=-2$/;"	l	subroutine:LBFGS	file:
196	lbfgs.f	/^ 196  IFLAG= -3$/;"	l	subroutine:LBFGS	file:
2	optim.odesd.f	/^2     DO 17 K=1,KMAX$/;"	l	subroutine:BSSTEP	file:
2	optim.pyg.f90	/^2        IF (ABS(D) >= TOL1) THEN ! Arrive here with d computed either from parabolic fit, or$/;"	l	subroutine:BRENTMIN	file:
20	lbfgs.f	/^   20    CONTINUE$/;"	l	subroutine:MCSRCH	file:
20	lbfgs.f	/^   20 m = mod(n,4)$/;"	l	subroutine:daxpy	file:
20	lbfgs.f	/^   20 m = mod(n,5)$/;"	l	function:ddot	file:
20	lbfgs.f	/^ 20   FORMAT('  N=',I5,'   NUMBER OF CORRECTIONS=',I2,$/;"	l	subroutine:LB1	file:
20	mylbfgs.old.f90	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
20	optim.EYtrap.f	/^20       CONTINUE$/;"	l	subroutine:EYDTRAP	file:
20	optim.EYtrap.f	/^20    CONTINUE$/;"	l	subroutine:EYETRAP	file:
20	optim.JM.f	/^20    CONTINUE $/;"	l	subroutine:JM3	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2C	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JM2P	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JME	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMEC	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMECC	file:
20	optim.JM.f	/^20    CONTINUE$/;"	l	subroutine:JMEP	file:
20	optim.SW.f	/^20    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
20	optim.SiO2.f	/^   20 CONTINUE$/;"	l	subroutine:SIO2NDHESS	file:
20	optim.SiO2.f	/^   20 CONTINUE$/;"	l	subroutine:SIO2NSHESS	file:
20	optim.adm.f	/^20     CONTINUE$/;"	l	subroutine:ADM	file:
20	optim.amb_natinterns.f90	/^ 20   CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
20	optim.amber.f	/^20    CONTINUE$/;"	l	subroutine:aparams	file:
20	optim.amber.f	/^20    CONTINUE$/;"	l	subroutine:aread	file:
20	optim.amber.f	/^20    CONTINUE$/;"	l	subroutine:pderivs	file:
20	optim.axdiff.f	/^20    CONTINUE $/;"	l	subroutine:AXDIFF	file:
20	optim.axpairs.f	/^20    CONTINUE$/;"	l	subroutine:AXPAIRS	file:
20	optim.aziz.f	/^20    CONTINUE$/;"	l	subroutine:AZIZ	file:
20	optim.bfgsts.f	/^20          READ(45,*,END=10) EVALMIN$/;"	l	subroutine:BFGSTS	file:
20	optim.bfgsts.f	/^20    CONTINUE$/;"	l	subroutine:ITEIG	file:
20	optim.bfgsts.f	/^20    DUMMY1=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
20	optim.c60diff.f	/^20    CONTINUE$/;"	l	subroutine:C60DIFF	file:
20	optim.c60p.f	/^20    CONTINUE$/;"	l	subroutine:C60P	file:
20	optim.connect.f	/^20                ESTART=EMIN(JDOING-1)$/;"	l	subroutine:CONNECT	file:
20	optim.connect.f	/^20    CONTINUE$/;"	l	subroutine:GETPERM	file:
20	optim.connect.f	/^20    CONTINUE$/;"	l	subroutine:STD_ORIENT	file:
20	optim.connect.f	/^20    CONTINUE$/;"	l	subroutine:STD_ORIENT2D	file:
20	optim.connect.f	/^20    IF (REDOPATH) THEN$/;"	l	subroutine:TSSEARCH	file:
20	optim.connect.f	/^20    OPEN(UNIT=35,STATUS='SCRATCH')$/;"	l	subroutine:REVERSEBLOCK	file:
20	optim.connect.f	/^20    REWIND(IUNIT)$/;"	l	subroutine:REVERSE	file:
20	optim.cubspl.f	/^   20    c(4,m) = g*c(3,m-1) + 2.*(c(3,m) + c(3,m+1))$/;"	l	subroutine:cubspl	file:
20	optim.dctrap.f	/^20       CONTINUE$/;"	l	subroutine:DCTRAP	file:
20	optim.dimer.f	/^ 20    format (5i2)$/;"	l	subroutine:dimer	file:
20	optim.dqag.f	/^   20    CALL XERPRN (' *  ', -1, TEMP(1:15) \/\/ TEMP(I:23), 72)$/;"	l	subroutine:XERMSG	file:
20	optim.dqag.f	/^   20    CONTINUE$/;"	l	subroutine:DQPSRT	file:
20	optim.dqag.f	/^   20    CONTINUE$/;"	l	subroutine:XERSVE	file:
20	optim.dqag.f	/^   20   CALL DQPSRT(LIMIT,LAST,MAXERR,ERRMAX,ELIST,IORD,NRMAX)$/;"	l	subroutine:DQAGE	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK15	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK21	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK31	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK41	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK51	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:DQK61	file:
20	optim.dqag.f	/^   20 CONTINUE$/;"	l	subroutine:XERPRN	file:
20	optim.dsygvx.f	/^   20       CONTINUE$/;"	l	subroutine:DSYEVX	file:
20	optim.dsygvx.f	/^   20    CONTINUE$/;"	l	subroutine:DLACPY	file:
20	optim.dtrap.f	/^20       CONTINUE$/;"	l	subroutine:DTRAP	file:
20	optim.efol.f90	/^20    FORMAT(' Updating structure with pseudo-Newton-Raphson steps.')$/;"	l	subroutine:EFOL	file:
20	optim.eig.f	/^20    CONTINUE$/;"	l	subroutine:EIG	file:
20	optim.escp.f	/^20    CONTINUE$/;"	l	subroutine:DSCP	file:
20	optim.escp.f	/^20    CONTINUE$/;"	l	subroutine:OESCP	file:
20	optim.etrap.f	/^20    CONTINUE$/;"	l	subroutine:ETRAP	file:
20	optim.g2special.f	/^20       NCOUNT=NCOUNT+1$/;"	l	subroutine:G2SPECIAL	file:
20	optim.greatcirc.f	/^ 20   IF (PV) THEN$/;"	l	subroutine:GCLBFGS	file:
20	optim.hybridmin.f	/^20          READ(45,*,END=10) EVALMIN$/;"	l	subroutine:HYBRIDMIN	file:
20	optim.input.f	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	optim.input.f	/^20    CONTINUE$/;"	l	subroutine:UPPERCASE	file:
20	optim.input.f	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	optim.input.f	/^20    LAST=M+131$/;"	l	file:
20	optim.intbfgsts.f	/^20          READ(45,*,END=10) EVALMIN$/;"	l	subroutine:INTBFGSTS	file:
20	optim.intlbfgs.f90	/^20 X(1:D) = X(1:D) + STP(1:D)*SEARCHSTEP(POINT,1:D)$/;"	l	subroutine:INTLBFGS	file:
20	optim.intlbfgslj.f90	/^20 X(1:D) = X(1:D) + STP(1:D)*SEARCHSTEP(POINT,1:D)$/;"	l	subroutine:INTLBFGSLJ	file:
20	optim.intxmylbfgs.f	/^20    CONTINUE$/;"	l	subroutine:INTXMYLBFGS	file:
20	optim.ions.f	/^20    CONTINUE$/;"	l	subroutine:IONS	file:
20	optim.latmin.f	/^20    CONTINUE$/;"	l	subroutine:C60PE	file:
20	optim.latmin.f	/^20    CONTINUE$/;"	l	subroutine:LATMIN	file:
20	optim.ljpshift.f	/^20    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
20	optim.mdiff.f	/^20    CONTINUE$/;"	l	subroutine:MDIFF	file:
20	optim.meccano.f90	/^20    CONTINUE$/;"	l	subroutine:MECBFGS	file:
20	optim.mied.f	/^20    CONTINUE$/;"	l	subroutine:MIED	file:
20	optim.mindist.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	optim.mindist.f	/^20    ENEW=DISTFUNC(X,R,R0,R1)$/;"	l	subroutine:MMYLBFGS	file:
20	optim.minperm.f	/^   20 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
20	optim.minperm.f	/^20               l2 = 2*l$/;"	l	subroutine:minperm	file:
20	optim.minpermrb.f90	/^20 CONTINUE$/;"	l	subroutine:MINPERMRB	file:
20	optim.mlatmin.f	/^20    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
20	optim.mlatmin.f	/^20    CONTINUE$/;"	l	subroutine:MLATMIN	file:
20	optim.mpdiff.f	/^20    CONTINUE$/;"	l	subroutine:MPDIFF	file:
20	optim.mpdiff.f	/^20    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
20	optim.msdiff.f	/^20    CONTINUE$/;"	l	subroutine:MSDIFF	file:
20	optim.mslatmin.f	/^20    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
20	optim.mslatmin.f	/^20    CONTINUE$/;"	l	subroutine:MSLATMIN	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGBMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SGEMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSBMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSPMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:SSYMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STBSV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STPSV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRMV	file:
20	optim.mylapack.f	/^   20             CONTINUE$/;"	l	subroutine:STRSV	file:
20	optim.mylapack.f	/^   20          CONTINUE$/;"	l	subroutine:DTBSV	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSPR2	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR	file:
20	optim.mylapack.f	/^   20         CONTINUE$/;"	l	subroutine:SSYR2	file:
20	optim.mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DPBTRF	file:
20	optim.mylapack.f	/^   20       CONTINUE$/;"	l	subroutine:DSYR	file:
20	optim.mylapack.f	/^   20     CONTINUE$/;"	l	subroutine:SGER	file:
20	optim.mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTF2	file:
20	optim.mylapack.f	/^   20    CONTINUE$/;"	l	subroutine:DPBTRS	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	function:LCE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	function:LDE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	function:LSE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SMAKE	file:
20	optim.mylapack.f	/^   20 CONTINUE$/;"	l	subroutine:SOPEN	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK1	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK2	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK4	file:
20	optim.mylapack.f	/^   20 IY = IY + 1$/;"	l	subroutine:SCHCK5	file:
20	optim.mylapack.f	/^   20 J = J*MJ$/;"	l	function:SBEG	file:
20	optim.mylapack.f	/^   20 NL = I$/;"	l	subroutine:SMESSG	file:
20	optim.mylapack.f	/^   20 NN = NN + 1$/;"	l	subroutine:SCHCK3	file:
20	optim.mylbfgs.f	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
20	optim.myorient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	optim.oldneb.f	/^20    CONTINUE$/;"	l	subroutine:NEBBFGS	file:
20	optim.pertable.f	/^ 20         CONTINUE$/;"	l	subroutine:PERTABLE	file:
20	optim.potential.f	/^20       FORMAT(A,27X,F20.10)$/;"	l	subroutine:POTENTIAL	file:
20	optim.projh.f	/^   20          continue$/;"	l	subroutine:dgefa	file:
20	optim.projh.f	/^   20       continue$/;"	l	subroutine:dgedi	file:
20	optim.projh.f	/^   20 continue$/;"	l	subroutine:dgeco	file:
20	optim.rigidb.f90	/^20    CONTINUE$/;"	l	subroutine:CHECKDRVTS	file:
20	optim.rotcon.f	/^ 20   CONTINUE$/;"	l	subroutine:ROTCON	file:
20	optim.rotd.f	/^20    CONTINUE$/;"	l	subroutine:EPANIC	file:
20	optim.scdiff.f	/^20    CONTINUE$/;"	l	subroutine:SCDIFF	file:
20	optim.specialfuncts.f90	/^20             F1=PF$/;"	l	subroutine:LEGZO	file:
20	optim.symmetry.f	/^20    FORMAT(1X,F15.10)$/;"	l	subroutine:SYMMETRY	file:
20	optim.tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NDHESS	file:
20	optim.tosifumi.f	/^   20 CONTINUE$/;"	l	subroutine:NSHESS	file:
20	optim.unmeccano.f90	/^20    CONTINUE$/;"	l	subroutine:UNMECBFGS	file:
20	optim.unresconnectsections.f	/^20    CONTINUE$/;"	l	subroutine:UNRESGUESSTSSEC	file:
20	optim.unresguessts.f	/^20    CONTINUE$/;"	l	subroutine:UNRESGUESSTS	file:
20	optim.unrestransform.f	/^   20  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
20	optim.xmylbfgs.f	/^20    CONTINUE$/;"	l	subroutine:XMYLBFGS	file:
20	pathsample.Cv.f	/^20    CONTINUE     $/;"	l	subroutine:CV	file:
20	pathsample.DOS.f	/^20    CONTINUE     $/;"	l	subroutine:DOS	file:
20	pathsample.Dijkstra.f90	/^20    CONTINUE$/;"	l	subroutine:SORT3	file:
20	pathsample.KMC.a2b.f	/^20    NSTEP=NSTEP+1.0D0$/;"	l	subroutine:KMCA2B	file:
20	pathsample.KMC.f	/^20       XNSTEP=XNSTEP+1.0D0$/;"	l	subroutine:KMC	file:
20	pathsample.KMCcommit.f	/^20       NSTEP=NSTEP+1$/;"	l	subroutine:KMCCOMMIT	file:
20	pathsample.cycle.f90	/^20    RANDOM=DPRAND()$/;"	l	subroutine:CYCLE	file:
20	pathsample.dsort.f	/^   20    CALL XERPRN (' *  ', -1, TEMP(1:15) \/\/ TEMP(I:23), 72)$/;"	l	subroutine:XERMSG	file:
20	pathsample.dsort.f	/^   20    CONTINUE$/;"	l	subroutine:XERSVE	file:
20	pathsample.dsort.f	/^   20 CONTINUE$/;"	l	subroutine:XERPRN	file:
20	pathsample.dsort.f	/^   20 IF (I .EQ. J) GO TO 60$/;"	l	subroutine:DSORT	file:
20	pathsample.eig.f	/^20    B(I,I)=ONE$/;"	l	subroutine:EIG	file:
20	pathsample.getupair.f90	/^20 CONTINUE$/;"	l	subroutine:GETUPAIR	file:
20	pathsample.input.f	/^20    CONTINUE$/;"	l	subroutine:READF	file:
20	pathsample.input.f	/^20    CONTINUE$/;"	l	subroutine:UPCASE	file:
20	pathsample.input.f	/^20    IF (P .LE. LAST) GO TO 30$/;"	l	subroutine:READK	file:
20	pathsample.input.f	/^20    LAST=M+79$/;"	l	file:
20	pathsample.mind.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	pathsample.mind.f	/^20    CALL DISTFUNC(X,R,R0,R1,NSIZE,ENEW,NATOMS)$/;"	l	subroutine:MMYLBFGS	file:
20	pathsample.mindist.f	/^20    A=ABEST$/;"	l	subroutine:CONVERT2	file:
20	pathsample.mindist.f	/^20    ENEW=DISTFUNC(X,R,R0,R1)$/;"	l	subroutine:MMYLBFGS	file:
20	pathsample.minperm.f	/^   20 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
20	pathsample.minperm.f	/^20               l2 = 2*l$/;"	l	subroutine:minperm	file:
20	pathsample.myorient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	pathsample.orient.f	/^20    CONTINUE$/;"	l	subroutine:ORIENT2D	file:
20	pathsample.orient.f	/^20    CONTINUE$/;"	l	subroutine:ROTXZ	file:
20	pathsample.reweight.f	/^   20            CONTINUE $/;"	l	subroutine:DGETF2	file:
20	pathsample.reweight.f	/^   20          CONTINUE$/;"	l	function:DLANTR	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DGESVX	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DLAQGE	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DLASWP	file:
20	pathsample.reweight.f	/^   20       CONTINUE$/;"	l	subroutine:DLATRS	file:
20	pathsample.reweight.f	/^   20    CONTINUE$/;"	l	subroutine:DGEEQU	file:
20	pathsample.reweight.f	/^   20    CONTINUE$/;"	l	subroutine:DGERFS	file:
20	pathsample.reweight.f	/^   20    CONTINUE$/;"	l	subroutine:DGETRF	file:
20	pathsample.reweight.f	/^   20 CONTINUE$/;"	l	subroutine:DGECON	file:
20	pathsample.reweight.f	/^   20 CONTINUE$/;"	l	subroutine:DLACN2	file:
20	pathsample.reweight.f	/^   20 CONTINUE$/;"	l	subroutine:DLACON	file:
20	pathsample.sort.f	/^20    CONTINUE$/;"	l	subroutine:SORT	file:
20	pathsample.sort.f	/^20    CONTINUE$/;"	l	subroutine:SORT2	file:
20	pathsample.sort.f	/^20    CONTINUE$/;"	l	subroutine:SORT4	file:
20	pathsample.tssearch.f	/^20      TTSSEARCH=TTSSEARCH+TNEW-TINIT$/;"	l	subroutine:TSSEARCH	file:
200	lbfgs.f	/^ 200  FORMAT(\/' IFLAG= -1 ',\/' LINE SEARCH FAILED. SEE'$/;"	l	subroutine:LBFGS	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2C	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2CC	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM2P	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3C	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3CC	file:
200	optim.JM.f	/^200   CONTINUE$/;"	l	subroutine:JM3P	file:
200	optim.axdiff.f	/^200   CONTINUE$/;"	l	subroutine:AXDIFF	file:
200	optim.aziz.f	/^200   CONTINUE$/;"	l	subroutine:AZIZ	file:
200	optim.c60diff.f	/^200   CONTINUE$/;"	l	subroutine:C60DIFF	file:
200	optim.c60p.f	/^200   CONTINUE$/;"	l	subroutine:C60P	file:
200	optim.dumpit.f	/^200   FORMAT('STEPS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
200	optim.get.natoms.inc.f90	/^200   CONTINUE$/;"	l	file:
200	optim.input.f	/^200   TERM=SPACE$/;"	l	file:
200	optim.ions.f	/^200   CONTINUE$/;"	l	subroutine:IONS	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK1	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK2	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK3	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK4	file:
200	optim.mylapack.f	/^  200 CONTINUE$/;"	l	subroutine:SCHCK5	file:
200	optim.rotcon.f	/^ 200   FORMAT(' rotcon> Rotational constants (in cm-1) and principal moments of inertia: ')$/;"	l	subroutine:ROTCON	file:
200	optim.tcheck.f	/^200   IF (ISTATUS.LT.0) WTEST=.TRUE.$/;"	l	subroutine:TCHECK	file:
200	optim.unresconnectsections.f	/^200   CONTINUE$/;"	l	subroutine:UNRESGUESSTSSEC	file:
200	optim.unresguessts.f	/^200   CONTINUE$/;"	l	subroutine:UNRESGUESSTS	file:
200	optim.utils.f	/^ 200   IF (LGE(C, '0') .AND. LLE(C,'9')) THEN$/;"	l	function:ATOI	file:
200	pathsample.amhdump.f90	/^200     CONTINUE$/;"	l	subroutine:AMHQ	file:
200	pathsample.amhdump.f90	/^200     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
200	pathsample.amhdump.f90	/^200     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
200	pathsample.dsort.f	/^  200    CONTINUE$/;"	l	subroutine:DSORT	file:
200	pathsample.input.f	/^200   TERM=SPACE$/;"	l	file:
200	pathsample.reweight.f	/^  200          CONTINUE$/;"	l	function:DLANTR	file:
201	optim.amber.f	/^201      CONTINUE$/;"	l	subroutine:secondderivs	file:
201	optim.fetchz.f	/^201               format (25(i2,1x))$/;"	l	subroutine:FETCHZ	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHDUMP	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHQ	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHQCONT	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHRELQ	file:
201	pathsample.amhdump.f90	/^201        FORMAT (25(I2,1X))$/;"	l	subroutine:AMHRMSD	file:
205	pathsample.amhdump.f90	/^205     CONTINUE$/;"	l	subroutine:AMHQ	file:
205	pathsample.amhdump.f90	/^205     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
205	pathsample.amhdump.f90	/^205     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
206	pathsample.amhdump.f90	/^206        CONTINUE$/;"	l	subroutine:AMHQ	file:
206	pathsample.amhdump.f90	/^206        CONTINUE$/;"	l	subroutine:AMHQCONT	file:
206	pathsample.amhdump.f90	/^206        CONTINUE$/;"	l	subroutine:AMHRELQ	file:
21	fmt.inc.f90	/^21 FORMAT(A,F12.5,A,F12.5,A,F12.5,A,F12.5) $/;"	l	file:
21	optim.JM.f	/^21    CONTINUE$/;"	l	subroutine:JM2CC	file:
21	optim.JM.f	/^21    CONTINUE$/;"	l	subroutine:JMEP	file:
21	optim.aziz.f	/^21    CONTINUE$/;"	l	subroutine:AZIZ	file:
21	optim.c60diff.f	/^21    CONTINUE$/;"	l	subroutine:C60DIFF	file:
21	optim.c60p.f	/^21    CONTINUE$/;"	l	subroutine:C60P	file:
21	optim.connect.f	/^21                ESTART=EMIN(JDOING)$/;"	l	subroutine:CONNECT	file:
21	optim.connect.f	/^21    IF (DMIN.GT.0.1D0) THEN$/;"	l	subroutine:GETPERM	file:
21	optim.cubspl.f	/^   21 if (n .eq. 3 .and. ibcbeg .eq. 0) go to 22$/;"	l	subroutine:cubspl	file:
21	optim.emie.f	/^21    CONTINUE$/;"	l	subroutine:EMIE	file:
21	optim.escp.f	/^21    CONTINUE$/;"	l	subroutine:OESCP	file:
21	optim.minperm.f	/^21               if (l2 .le. m) THEN ! split IF statements to avoid a segmentation fault$/;"	l	subroutine:minperm	file:
21	optim.mlatmin.f	/^21          CONTINUE$/;"	l	subroutine:MLATDIFF	file:
21	optim.msevb.f90	/^21        continue$/;"	l	subroutine:jacobi	file:
21	optim.mslatmin.f	/^21          CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
21	pathsample.minperm.f	/^21               if (l2 .le. m) THEN ! split IF statements to avoid a segmentation fault$/;"	l	subroutine:minperm	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3C	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3CC	file:
210	optim.JM.f	/^210   CONTINUE$/;"	l	subroutine:JM3P	file:
210	optim.Natb.f	/^ 210             CONTINUE$/;"	l	subroutine:entots	file:
210	optim.axdiff.f	/^210   CONTINUE$/;"	l	subroutine:AXDIFF	file:
210	optim.dimer.f	/^210       continue$/;"	l	subroutine:fdimer	file:
210	optim.dumpit.f	/^210   FORMAT('DUMPVECTOR')$/;"	l	subroutine:DUMPIT	file:
210	optim.efol.f90	/^210         FORMAT(' Mode ',I4,' will be searched uphill. Eigenvalue=',4X,F19.10)$/;"	l	subroutine:EFOL	file:
210	optim.mylapack.f	/^  210            CONTINUE$/;"	l	subroutine:SCHCK3	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK1	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK2	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK4	file:
210	optim.mylapack.f	/^  210 CONTINUE$/;"	l	subroutine:SCHCK5	file:
210	optim.symmetry.f	/^210            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
210	pathsample.amhdump.f90	/^210       CONTINUE$/;"	l	subroutine:AMHQ	file:
210	pathsample.amhdump.f90	/^210       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
210	pathsample.amhdump.f90	/^210       CONTINUE$/;"	l	subroutine:AMHRELQ	file:
210	pathsample.reweight.f	/^  210          CONTINUE$/;"	l	function:DLANTR	file:
211	optim.bfgsts.f	/^211         READ(44,*,END=111) EVALMIN$/;"	l	subroutine:BFGSTS	file:
211	optim.emie.f	/^211   CONTINUE$/;"	l	subroutine:EMIE	file:
211	optim.hybridmin.f	/^211         READ(44,*,END=111) EVALMIN$/;"	l	subroutine:HYBRIDMIN	file:
211	optim.intbfgsts.f	/^211         READ(44,*,END=111) EVALMIN$/;"	l	subroutine:INTBFGSTS	file:
211	optim.miel.f	/^211   CONTINUE$/;"	l	subroutine:MIEL	file:
211	optim.read.odata.inc.f90	/^211      CONTINUE$/;"	l	file:
22	fmt.inc.f90	/^22 FORMAT((3(A,G20.10)))$/;"	l	file:
22	optim.Gupta.f	/^22    CONTINUE$/;"	l	subroutine:GUPTA	file:
22	optim.JM.f	/^22       CONTINUE$/;"	l	subroutine:JM2CC	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JME	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMEC	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMECC	file:
22	optim.JM.f	/^22    CONTINUE$/;"	l	subroutine:JMEP	file:
22	optim.axpairs.f	/^22    CONTINUE$/;"	l	subroutine:AXPAIRS	file:
22	optim.aziz.f	/^22       CONTINUE$/;"	l	subroutine:AZIZ	file:
22	optim.c60diff.f	/^22       CONTINUE$/;"	l	subroutine:C60DIFF	file:
22	optim.c60p.f	/^22       CONTINUE$/;"	l	subroutine:C60P	file:
22	optim.connect.f	/^22          CONTINUE$/;"	l	subroutine:CLEANUP	file:
22	optim.connect.f	/^22    CALL TSSEARCH(JDOING,JDOING+1,Q,FIN,BULKT,DTHRESH,FIXD,NATOMS,NIMAGESAVE,PTEST,NSTEPS,FILTH,FILTHSTR,MUPDATE,NSTEPMIN,$/;"	l	subroutine:CONNECT	file:
22	optim.cubspl.f	/^   22 c(2,n) = 2.*c(4,n)$/;"	l	subroutine:cubspl	file:
22	optim.keyword.f	/^22       CONTINUE$/;"	l	subroutine:KEYWORD	file:
22	optim.mlatmin.f	/^22    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
22	optim.mpdiff.f	/^22    CONTINUE$/;"	l	subroutine:MPDIFF	file:
22	optim.mpdiff.f	/^22    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
22	optim.msdiff.f	/^22    CONTINUE$/;"	l	subroutine:MSDIFF	file:
22	optim.msevb.f90	/^22      continue$/;"	l	subroutine:jacobi	file:
22	optim.mslatmin.f	/^22    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3C	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3CC	file:
220	optim.JM.f	/^220         CONTINUE$/;"	l	subroutine:JM3P	file:
220	optim.axdiff.f	/^220         CONTINUE$/;"	l	subroutine:AXDIFF	file:
220	optim.dumpit.f	/^220   FORMAT('GRADIENTS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
220	optim.mylapack.f	/^  220         CONTINUE$/;"	l	subroutine:SCHCK3	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK1	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK2	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK4	file:
220	optim.mylapack.f	/^  220 CONTINUE$/;"	l	subroutine:SCHCK5	file:
220	optim.symmetry.f	/^220                  FORMAT(2I3,F15.7,100I3)$/;"	l	subroutine:SYMMETRY	file:
220	optim.tcheck.f	/^220      DO 280 J5=LBOUND,UBOUND$/;"	l	subroutine:TCHECK	file:
220	pathsample.reweight.f	/^  220          CONTINUE$/;"	l	function:DLANTR	file:
221	optim.Natb.f	/^ 221              kkk=kkk+k$/;"	l	subroutine:entots	file:
222	optim.connect.f	/^222            CONTINUE$/;"	l	subroutine:CONNECT	file:
222	optim.connect.f	/^222      READ(81,'(A80)',END=444) DSTRING$/;"	l	subroutine:ADDMIN	file:
222	pathsample.Dijinit.f90	/^222   LJ1=LOCATIONSTART(J1)$/;"	l	subroutine:DIJINIT	file:
222	pathsample.Dijinitfly.f90	/^222 LJ1=LOCATIONSTART(J1)$/;"	l	subroutine:DIJINITFLY	file:
222	pathsample.keywords.f	/^222      CONTINUE$/;"	l	subroutine:KEYWORD	file:
223	optim.Natb.f	/^ 223           CONTINUE$/;"	l	subroutine:entots	file:
23	fmt.inc.f90	/^23 FORMAT (A,I6,A,F8.4,A,F8.4)$/;"	l	file:
23	mc.bh.inc.f90	/^23       CONTINUE$/;"	l	file:
23	optim.Gupta.f	/^23       CONTINUE$/;"	l	subroutine:GUPTA	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JME	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMEC	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMECC	file:
23	optim.JM.f	/^23       CONTINUE$/;"	l	subroutine:JMEP	file:
23	optim.axpairs.f	/^23       CONTINUE$/;"	l	subroutine:AXPAIRS	file:
23	optim.connect.f	/^23       CONTINUE$/;"	l	subroutine:CLEANUP	file:
23	optim.mlatmin.f	/^23       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
23	optim.mpdiff.f	/^23       CONTINUE$/;"	l	subroutine:MPDIFF	file:
23	optim.mpdiff.f	/^23       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
23	optim.msdiff.f	/^23       CONTINUE$/;"	l	subroutine:MSDIFF	file:
23	optim.msevb.f90	/^23      continue$/;"	l	subroutine:jacobi	file:
23	optim.mslatmin.f	/^23       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3C	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3CC	file:
230	optim.JM.f	/^230       CONTINUE$/;"	l	subroutine:JM3P	file:
230	optim.axdiff.f	/^230       CONTINUE$/;"	l	subroutine:AXDIFF	file:
230	optim.dumpit.f	/^230   FORMAT('VECTORS',T15,I5)$/;"	l	subroutine:DUMPIT	file:
230	optim.mylapack.f	/^  230            CONTINUE$/;"	l	subroutine:SCHCK2	file:
230	optim.mylapack.f	/^  230         CONTINUE$/;"	l	subroutine:SCHCK3	file:
230	optim.mylapack.f	/^  230        CONTINUE$/;"	l	subroutine:SCHCK5	file:
230	optim.mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK1	file:
230	optim.mylapack.f	/^  230 CONTINUE$/;"	l	subroutine:SCHCK4	file:
230	pathsample.reweight.f	/^  230             CONTINUE$/;"	l	function:DLANTR	file:
231	optim.adm.f	/^231                 FORMAT(T3,' Atoms ',i2,' and ',i2,$/;"	l	subroutine:ADM	file:
231	optim.read.odata.inc.f90	/^231      CONTINUE$/;"	l	file:
235	lbfgs.f	/^ 235  FORMAT(\/' IFLAG= -2',\/' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:LBFGS	file:
235	mylbfgs.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	mylbfgs.old.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	optim.efol.f90	/^235   FORMAT(' Mean modulus of positive Hessian eigenvalues=',4X,F20.10,\/,&$/;"	l	subroutine:EFOL	file:
235	optim.greatcirc.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:GCLBFGS	file:
235	optim.intxmylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:INTXMYLBFGS	file:
235	optim.meccano.f90	/^235         FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/, &$/;"	l	subroutine:MECBFGS	file:
235	optim.mylbfgs.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
235	optim.oldneb.f	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:NEBBFGS	file:
235	optim.unmeccano.f90	/^235         FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/, &$/;"	l	subroutine:UNMECBFGS	file:
235	optim.xmylbfgs.f	/^ 235              FORMAT('xmylbfgs> THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:XMYLBFGS	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JME	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMEC	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMECC	file:
24	optim.JM.f	/^24              CONTINUE$/;"	l	subroutine:JMEP	file:
24	optim.axpairs.f	/^24              CONTINUE$/;"	l	subroutine:AXPAIRS	file:
24	optim.connect.f	/^24          CONTINUE$/;"	l	subroutine:CLEANUP	file:
24	optim.cubspl.f	/^   24 c(2,n) = 3.*c(4,n) + c(3,n)\/2.*c(2,n)$/;"	l	subroutine:cubspl	file:
24	optim.keyword.f	/^24       CONTINUE$/;"	l	subroutine:KEYWORD	file:
24	optim.msevb.f90	/^24    continue$/;"	l	subroutine:jacobi	file:
240	lbfgs.f	/^ 240  FORMAT(\/' IFLAG= -3',\/' IMPROPER INPUT PARAMETERS (N OR M',$/;"	l	subroutine:LBFGS	file:
240	mylbfgs.f90	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	mylbfgs.old.f90	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	optim.dumpit.f	/^240   FORMAT('SUMMARY',T15,I5)$/;"	l	subroutine:DUMPIT	file:
240	optim.greatcirc.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:GCLBFGS	file:
240	optim.intxmylbfgs.f	/^ 240        FORMAT('intxmylbfgs> IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:INTXMYLBFGS	file:
240	optim.meccano.f90	/^240  FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MECBFGS	file:
240	optim.mindist.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MMYLBFGS	file:
240	optim.mlatmin.f	/^240   CONTINUE$/;"	l	subroutine:MLATMIN	file:
240	optim.mslatmin.f	/^240   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
240	optim.mylapack.f	/^  240         CONTINUE$/;"	l	subroutine:SCHCK2	file:
240	optim.mylapack.f	/^  240        CONTINUE$/;"	l	subroutine:SCHCK3	file:
240	optim.mylapack.f	/^  240     CONTINUE$/;"	l	subroutine:SCHCK5	file:
240	optim.mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK1	file:
240	optim.mylapack.f	/^  240 CONTINUE$/;"	l	subroutine:SCHCK4	file:
240	optim.mylbfgs.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	optim.oldneb.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:NEBBFGS	file:
240	optim.tcheck.f	/^240         CONTINUE$/;"	l	subroutine:TCHECK	file:
240	optim.unmeccano.f90	/^240  FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:UNMECBFGS	file:
240	optim.xmylbfgs.f	/^ 240        FORMAT('xmylbfgs> IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:XMYLBFGS	file:
240	pathsample.mind.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MMYLBFGS	file:
240	pathsample.mindist.f	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MMYLBFGS	file:
240	pathsample.reweight.f	/^  240          CONTINUE$/;"	l	function:DLANTR	file:
241	optim.dumpit.f	/^241   FORMAT('D5H',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
242	optim.dumpit.f	/^242   FORMAT('OH',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
243	optim.dumpit.f	/^243   FORMAT('IH',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
244	optim.dumpit.f	/^244   FORMAT('TD',T15,F15.5)$/;"	l	subroutine:DUMPIT	file:
245	lbfgs.f	/^ 245  FORMAT(\/'  GTOL IS LESS THAN OR EQUAL TO 1.D-04',$/;"	l	subroutine:LBFGS	file:
245	optim.dumpit.f	/^245      FORMAT('TOSI',1X,4F15.8)$/;"	l	subroutine:DUMPIT	file:
245	optim.symmetry.f	/^245               CONTINUE$/;"	l	subroutine:SYMMETRY	file:
246	optim.intlbfgs.f90	/^246 CONTINUE$/;"	l	subroutine:CHECKREP	file:
246	optim.symmetry.f	/^246                  CONTINUE$/;"	l	subroutine:SYMMETRY	file:
247	optim.dumpit.f	/^247      FORMAT('WELCH',1X,4F15.8,' +++'\/'      ',4F15.8)$/;"	l	subroutine:DUMPIT	file:
248	optim.dumpit.f	/^248   FORMAT('2D')$/;"	l	subroutine:DUMPIT	file:
25	optim.Ackland_wrapper.f	/^25    CONTINUE$/;"	l	subroutine:ACK	file:
25	optim.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMEC	file:
25	optim.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMECC	file:
25	optim.JM.f	/^25    CONTINUE$/;"	l	subroutine:JMEP	file:
25	optim.amb_natinterns.f90	/^ 25   CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
25	optim.ambnatintern_extras.f90	/^ 25   CONTINUE$/;"	l	subroutine:GETDIHONLY	file:
25	optim.axpairs.f	/^25    CONTINUE$/;"	l	subroutine:AXPAIRS	file:
25	optim.c60p.f	/^25    CONTINUE$/;"	l	subroutine:C60P	file:
25	optim.cubspl.f	/^   25 if (ibcend-1)                     26,30,24$/;"	l	subroutine:cubspl	file:
25	optim.emie.f	/^25    CONTINUE$/;"	l	subroutine:EMIE	file:
25	optim.escp.f	/^25    CONTINUE$/;"	l	subroutine:OESCP	file:
25	optim.keyword.f	/^25         FORMAT(25(I2,1X))$/;"	l	subroutine:KEYWORD	file:
25	optim.latmin.f	/^25    CONTINUE$/;"	l	subroutine:C60PE	file:
25	optim.mlatmin.f	/^25    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
25	optim.mlatmin.f	/^25    CONTINUE$/;"	l	subroutine:MLATMIN	file:
25	optim.mpdiff.f	/^25    CONTINUE$/;"	l	subroutine:MPDIFF	file:
25	optim.mpdiff.f	/^25    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
25	optim.msdiff.f	/^25    CONTINUE$/;"	l	subroutine:MSDIFF	file:
25	optim.mslatmin.f	/^25    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
25	optim.mslatmin.f	/^25    CONTINUE$/;"	l	subroutine:MSLATMIN	file:
25	optim.read.odata.inc.f90	/^25         FORMAT(25(I2,1X))$/;"	l	file:
25	optim.rigidb.f90	/^25    CONTINUE$/;"	l	subroutine:CHECKDRVTS	file:
25	optim.unrescalcdihe.f	/^ 25   FORMAT(\/' RGYR: *** ERROR ***  All coordinates were missing'\/)$/;"	l	subroutine:UEDITRGYR	file:
25	pathsample.KMC.a2b.f	/^25             IF (P12P21.GT.PAIRTHRESH) THEN$/;"	l	subroutine:KMCA2B	file:
25	pathsample.main.F	/^25           FORMAT(25(I2,1X))$/;"	l	program:PATHSAMPLE	file:
25	pathsample.main.f90	/^25           FORMAT(25(I2,1X))$/;"	l	program:PATHSAMPLE	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3C	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3CC	file:
250	optim.JM.f	/^250     CONTINUE$/;"	l	subroutine:JM3P	file:
250	optim.axdiff.f	/^250     CONTINUE$/;"	l	subroutine:AXDIFF	file:
250	optim.dumpit.f	/^250   FORMAT('ADM',T15,I5)$/;"	l	subroutine:DUMPIT	file:
250	optim.mylapack.f	/^  250            CONTINUE$/;"	l	subroutine:SCHCK1	file:
250	optim.mylapack.f	/^  250         CONTINUE$/;"	l	subroutine:SCHCK2	file:
250	optim.mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK3	file:
250	optim.mylapack.f	/^  250     CONTINUE$/;"	l	subroutine:SCHCK5	file:
250	optim.mylapack.f	/^  250 CONTINUE$/;"	l	subroutine:SCHCK4	file:
250	optim.symmetry.f	/^250            IF (IREF.NE.0) THEN$/;"	l	subroutine:SYMMETRY	file:
250	optim.tcheck.f	/^250         CONTINUE$/;"	l	subroutine:TCHECK	file:
250	pathsample.reweight.f	/^  250          CONTINUE$/;"	l	function:DLANTR	file:
2504	optim.Natb.f	/^ 2504              CONTINUE    $/;"	l	subroutine:entots	file:
253	optim.dumpit.f	/^253   FORMAT('SHIFTV',T15,G20.10)$/;"	l	subroutine:DUMPIT	file:
255	optim.symmetry.f	/^255               IF (IREF.NE.0) THEN$/;"	l	subroutine:SYMMETRY	file:
256	optim.symmetry.f	/^256                  IF (IREF.EQ.0) THEN$/;"	l	subroutine:SYMMETRY	file:
2570	optim.Natb.f	/^ 2570              grad(K)=GRD$/;"	l	subroutine:entots	file:
2572	optim.Natb.f	/^ 2572              CONTINUE$/;"	l	subroutine:entots	file:
2584	optim.Natb.f	/^ 2584              CONTINUE$/;"	l	subroutine:entots	file:
2585	optim.Natb.f	/^ 2585            CONTINUE$/;"	l	subroutine:entots	file:
2586	optim.Natb.f	/^ 2586                 GRD=GRD+VT(L,NOC)*VT(M,NOC)*HDER(K,ML)$/;"	l	subroutine:entots	file:
26	optim.cubspl.f	/^   26 if (ibcbeg .gt. 0)                go to 22$/;"	l	subroutine:cubspl	file:
26	pathsample.unresdump.f	/^26    CONTINUE$/;"	l	subroutine:UNRESREAD	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3C	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3CC	file:
260	optim.JM.f	/^260   CONTINUE$/;"	l	subroutine:JM3P	file:
260	optim.axdiff.f	/^260   CONTINUE$/;"	l	subroutine:AXDIFF	file:
260	optim.dumpit.f	/^260      FORMAT('PARAMS',1X,3F20.10,3X,'+++',\/,7X,4F20.10)$/;"	l	subroutine:DUMPIT	file:
260	optim.mylapack.f	/^  260         CONTINUE$/;"	l	subroutine:SCHCK1	file:
260	optim.mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK2	file:
260	optim.mylapack.f	/^  260        CONTINUE$/;"	l	subroutine:SCHCK5	file:
260	optim.mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK3	file:
260	optim.mylapack.f	/^  260 CONTINUE$/;"	l	subroutine:SCHCK4	file:
260	optim.symmetry.f	/^260               FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:SYMMETRY	file:
260	optim.tcheck.f	/^260         CONTINUE$/;"	l	subroutine:TCHECK	file:
260	pathsample.amhdump.f90	/^260       CONTINUE$/;"	l	subroutine:AMHQ	file:
260	pathsample.amhdump.f90	/^260       CONTINUE$/;"	l	subroutine:AMHRELQ	file:
260	pathsample.amhdump.f90	/^260     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
260	pathsample.reweight.f	/^  260             CONTINUE$/;"	l	function:DLANTR	file:
2600	optim.Natb.f	/^ 2600              CONTINUE$/;"	l	subroutine:entots	file:
2605	optim.Natb.f	/^ 2605                 KKK=KKK+K      $/;"	l	subroutine:entots	file:
2610	optim.Natb.f	/^ 2610            IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
265	optim.dumpit.f	/^265   FORMAT('ALPHA',T15,3F20.10)$/;"	l	subroutine:DUMPIT	file:
265	optim.symmetry.f	/^265                  FORMAT(' The principal axis has order ',i3,\/,$/;"	l	subroutine:SYMMETRY	file:
266	optim.symmetry.f	/^266                  FORMAT(' The principal axis has order ',I3,\/,$/;"	l	subroutine:SYMMETRY	file:
2660	optim.Natb.f	/^ 2660              DJ(L)=0.D0$/;"	l	subroutine:entots	file:
2670	optim.Natb.f	/^ 2670         IDER=IDER+NBAT$/;"	l	subroutine:entots	file:
2680	optim.Natb.f	/^ 2680        CONTINUE$/;"	l	subroutine:entots	file:
2682	optim.Natb.f	/^ 2682           IJQ=IJQ+3$/;"	l	subroutine:entots	file:
27	optim.siaz.f	/^27      CONTINUE$/;"	l	subroutine:SIAZ	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3C	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3CC	file:
270	optim.JM.f	/^270           CONTINUE$/;"	l	subroutine:JM3P	file:
270	optim.axdiff.f	/^270           CONTINUE$/;"	l	subroutine:AXDIFF	file:
270	optim.dumpit.f	/^270      FORMAT('POINTS')$/;"	l	subroutine:DUMPIT	file:
270	optim.mylapack.f	/^  270         CONTINUE$/;"	l	subroutine:SCHCK1	file:
270	optim.mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK2	file:
270	optim.mylapack.f	/^  270     CONTINUE$/;"	l	subroutine:SCHCK5	file:
270	optim.mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK3	file:
270	optim.mylapack.f	/^  270 CONTINUE$/;"	l	subroutine:SCHCK4	file:
270	optim.symmetry.f	/^270            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
270	optim.tcheck.f	/^270         CONTINUE$/;"	l	subroutine:TCHECK	file:
270	pathsample.amhdump.f90	/^270       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
270	pathsample.amhdump.f90	/^270      CONTINUE$/;"	l	subroutine:AMHQ	file:
270	pathsample.amhdump.f90	/^270      CONTINUE$/;"	l	subroutine:AMHRELQ	file:
270	pathsample.reweight.f	/^  270          CONTINUE$/;"	l	function:DLANTR	file:
271	optim.read.odata.inc.f90	/^271      CONTINUE$/;"	l	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3C	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3CC	file:
275	optim.JM.f	/^275           CONTINUE$/;"	l	subroutine:JM3P	file:
275	optim.axdiff.f	/^275           CONTINUE$/;"	l	subroutine:AXDIFF	file:
275	optim.dumpit.f	/^275      FORMAT('VARIABLES')$/;"	l	subroutine:DUMPIT	file:
28	optim.cubspl.f	/^   28 g = -1.\/c(4,n-1)$/;"	l	subroutine:cubspl	file:
28	optim.miel.f	/^28       CONTINUE$/;"	l	subroutine:MIEL	file:
28	optim.scl.f	/^28    CONTINUE$/;"	l	subroutine:SCL	file:
28	optim.siaz.f	/^28         CONTINUE$/;"	l	subroutine:SIAZ	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3C	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3CC	file:
280	optim.JM.f	/^280       CONTINUE$/;"	l	subroutine:JM3P	file:
280	optim.axdiff.f	/^280       CONTINUE$/;"	l	subroutine:AXDIFF	file:
280	optim.mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK2	file:
280	optim.mylapack.f	/^  280     CONTINUE$/;"	l	subroutine:SCHCK5	file:
280	optim.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK1	file:
280	optim.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK3	file:
280	optim.mylapack.f	/^  280 CONTINUE$/;"	l	subroutine:SCHCK4	file:
280	optim.symmetry.f	/^280         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
280	optim.tcheck.f	/^280      CONTINUE$/;"	l	subroutine:TCHECK	file:
280	pathsample.amhdump.f90	/^280        CONTINUE$/;"	l	subroutine:AMHQ	file:
280	pathsample.amhdump.f90	/^280        CONTINUE$/;"	l	subroutine:AMHQCONT	file:
280	pathsample.amhdump.f90	/^280        CONTINUE$/;"	l	subroutine:AMHRELQ	file:
280	pathsample.reweight.f	/^  280    CONTINUE$/;"	l	function:DLANTR	file:
281	optim.keyword.f	/^281      CONTINUE $/;"	l	subroutine:KEYWORD	file:
29	optim.cubspl.f	/^   29 c(4,n) = g*c(3,n-1) + c(4,n)$/;"	l	subroutine:cubspl	file:
29	optim.miel.f	/^29    CONTINUE$/;"	l	subroutine:MIEL	file:
29	optim.scl.f	/^29       CONTINUE$/;"	l	subroutine:SCL	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3C	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3CC	file:
290	optim.JM.f	/^290         CONTINUE$/;"	l	subroutine:JM3P	file:
290	optim.axdiff.f	/^290         CONTINUE$/;"	l	subroutine:AXDIFF	file:
290	optim.efol.f90	/^290         FORMAT(79('-'))$/;"	l	subroutine:EFOL	file:
290	optim.mylapack.f	/^  290        CONTINUE$/;"	l	subroutine:SCHCK3	file:
290	optim.mylapack.f	/^  290    CONTINUE$/;"	l	subroutine:SCHCK4	file:
290	optim.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK1	file:
290	optim.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK2	file:
290	optim.mylapack.f	/^  290 CONTINUE$/;"	l	subroutine:SCHCK5	file:
290	optim.tcheck.f	/^290         FORMAT(I3,F20.10)$/;"	l	subroutine:TCHECK	file:
290	pathsample.reweight.f	/^  290          CONTINUE$/;"	l	function:DLANTR	file:
291	optim.efol.f90	/^291         FORMAT(51('-'))$/;"	l	subroutine:EFOL	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3C	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3CC	file:
295	optim.JM.f	/^295         CONTINUE$/;"	l	subroutine:JM3P	file:
295	optim.axdiff.f	/^295         CONTINUE$/;"	l	subroutine:AXDIFF	file:
3	optim.odesd.f	/^3     RED=MIN(RED,REDMIN)$/;"	l	subroutine:BSSTEP	file:
3	optim.pyg.f90	/^3     XMIN = X ! Arrive here ready to exit with best values.$/;"	l	subroutine:BRENTMIN	file:
30	finalio.f90	/^30       FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	lbfgs.f	/^   30 CONTINUE$/;"	l	subroutine:MCSRCH	file:
30	lbfgs.f	/^   30 continue$/;"	l	function:ddot	file:
30	lbfgs.f	/^   30 continue$/;"	l	subroutine:daxpy	file:
30	lbfgs.f	/^ 30      IF (DIAG(I).LE.ZERO) GO TO 195$/;"	l	subroutine:LBFGS	file:
30	lbfgs.f	/^ 30   FORMAT(' F= ',1PD10.3,'   GNORM= ',1PD10.3)$/;"	l	subroutine:LB1	file:
30	mylbfgs.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	mylbfgs.old.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	optim.EYtrap.f	/^30    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2C	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2CC	file:
30	optim.JM.f	/^30          CONTINUE$/;"	l	subroutine:JM2P	file:
30	optim.Natb.f	/^ 30        CONTINUE$/;"	l	subroutine:entots	file:
30	optim.SW.f	/^30    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
30	optim.amb_natinterns.f90	/^   30 CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
30	optim.amber.f	/^30    CONTINUE$/;"	l	subroutine:aparams	file:
30	optim.amber.f	/^30    CONTINUE$/;"	l	subroutine:aread	file:
30	optim.ambnatintern_extras.f90	/^ 30   CONTINUE $/;"	l	subroutine:GETDIHONLY	file:
30	optim.aziz.f	/^30          CONTINUE$/;"	l	subroutine:AZIZ	file:
30	optim.bfgsts.f	/^30             FORMAT(1X,79('-'))$/;"	l	subroutine:BFGSTS	file:
30	optim.bfgsts.f	/^30    DUMMY1=0.0D0$/;"	l	subroutine:ORTHOGOPT	file:
30	optim.connect.f	/^30    DO J=1,NBLOCK$/;"	l	subroutine:REVERSEBLOCK	file:
30	optim.cubspl.f	/^   30 j = l $/;"	l	subroutine:cubspl	file:
30	optim.dctrap.f	/^30    CONTINUE$/;"	l	subroutine:DCTRAP	file:
30	optim.dqag.f	/^   30    CONTINUE$/;"	l	subroutine:XERSVE	file:
30	optim.dqag.f	/^   30 CONTINUE$/;"	l	subroutine:DQAGE	file:
30	optim.dqag.f	/^   30 CONTINUE$/;"	l	subroutine:XERPRN	file:
30	optim.dqag.f	/^   30 CONTINUE$/;"	l	subroutine:XGETUA	file:
30	optim.dqag.f	/^   30 IF (LEVEL.LE.0 .OR. (LEVEL.EQ.1 .AND. MKNTRL.LE.1)) RETURN$/;"	l	subroutine:XERMSG	file:
30	optim.dqag.f	/^   30 JUPBN = LAST$/;"	l	subroutine:DQPSRT	file:
30	optim.dsygvx.f	/^   30          CONTINUE$/;"	l	subroutine:DSYEVX	file:
30	optim.dsygvx.f	/^   30       CONTINUE$/;"	l	subroutine:DLACPY	file:
30	optim.dtrap.f	/^30    CONTINUE$/;"	l	subroutine:DTRAP	file:
30	optim.efol.f90	/^30    FORMAT(' Updating structure with quadratic steepest-descent steps.')$/;"	l	subroutine:EFOL	file:
30	optim.escp.f	/^30          CONTINUE$/;"	l	subroutine:DSCP	file:
30	optim.g2special.f	/^30       CONTINUE $/;"	l	subroutine:G2SPECIAL	file:
30	optim.greatcirc.f	/^30    NPT=POINT*N$/;"	l	subroutine:GCLBFGS	file:
30	optim.hybridmin.f	/^30       FORMAT(1X,79('-'))$/;"	l	subroutine:HYBRIDMIN	file:
30	optim.input.f	/^30    CALL UPPERCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	optim.input.f	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	optim.input.f	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	optim.intbfgsts.f	/^30             FORMAT(1X,79('-'))$/;"	l	subroutine:INTBFGSTS	file:
30	optim.ions.f	/^30          CONTINUE$/;"	l	subroutine:IONS	file:
30	optim.latmin.f	/^30    CONTINUE$/;"	l	subroutine:LATMIN	file:
30	optim.ljpshift.f	/^30    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
30	optim.mdiff.f	/^30          CONTINUE$/;"	l	subroutine:MDIFF	file:
30	optim.meccano.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MECBFGS	file:
30	optim.mied.f	/^30          CONTINUE$/;"	l	subroutine:MIED	file:
30	optim.miel.f	/^30    CONTINUE$/;"	l	subroutine:MIEL	file:
30	optim.mindist.f	/^30    NPT=POINT*N$/;"	l	subroutine:MMYLBFGS	file:
30	optim.minperm.f	/^   30 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
30	optim.minperm.f	/^ 30         IF (J.GT.N*MAXNEI) THEN$/;"	l	subroutine:minperm	file:
30	optim.minpermdist.f90	/^30 NCHOOSE2=NCHOOSE2+1$/;"	l	subroutine:MINPERMDIST	file:
30	optim.minpermdistrbcom.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
30	optim.minpermrb.f90	/^30 CONTINUE$/;"	l	subroutine:MINPERMRB	file:
30	optim.mpdiff.f	/^30          CONTINUE$/;"	l	subroutine:MPDIFF	file:
30	optim.mpdiff.f	/^30          CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
30	optim.msdiff.f	/^30          CONTINUE$/;"	l	subroutine:MSDIFF	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBMV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STBSV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPMV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STPSV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRMV	file:
30	optim.mylapack.f	/^   30                    CONTINUE$/;"	l	subroutine:STRSV	file:
30	optim.mylapack.f	/^   30                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSPR2	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR	file:
30	optim.mylapack.f	/^   30                CONTINUE $/;"	l	subroutine:SSYR2	file:
30	optim.mylapack.f	/^   30                CONTINUE$/;"	l	subroutine:DTBSV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:DSYR	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGBMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SGEMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSBMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSPMV	file:
30	optim.mylapack.f	/^   30             CONTINUE$/;"	l	subroutine:SSYMV	file:
30	optim.mylapack.f	/^   30            CONTINUE$/;"	l	subroutine:SGER	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	function:LCE	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	function:LDE	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	function:LSE	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:DPBTF2	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SMESSG	file:
30	optim.mylapack.f	/^   30 CONTINUE$/;"	l	subroutine:SOPEN	file:
30	optim.mylapack.f	/^   30 I = I*MI$/;"	l	function:SBEG	file:
30	optim.mylapack.f	/^   30 IC = IC + 1$/;"	l	subroutine:SCHCK3	file:
30	optim.mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK1	file:
30	optim.mylapack.f	/^   30 MM = MM + 1$/;"	l	subroutine:SCHCK4	file:
30	optim.mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK2	file:
30	optim.mylapack.f	/^   30 NN = NN + 1$/;"	l	subroutine:SCHCK5	file:
30	optim.mylbfgs.f	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
30	optim.oldneb.f	/^30    NPT=POINT*N$/;"	l	subroutine:NEBBFGS	file:
30	optim.projh.f	/^   30       continue$/;"	l	subroutine:dgefa	file:
30	optim.projh.f	/^   30       if (dabs(det(1)) .lt. ten) go to 40$/;"	l	subroutine:dgedi	file:
30	optim.projh.f	/^   30    continue$/;"	l	subroutine:dgeco	file:
30	optim.rbperm.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:RBMINPERMDIST	file:
30	optim.scdiff.f	/^30          CONTINUE$/;"	l	subroutine:SCDIFF	file:
30	optim.scl.f	/^30    CONTINUE$/;"	l	subroutine:SCL	file:
30	optim.specialfuncts.f90	/^30                   CONTINUE$/;"	l	subroutine:LEGZO	file:
30	optim.unmeccano.f90	/^30    NPT=POINT*N$/;"	l	subroutine:UNMECBFGS	file:
30	optim.unrestransform.f	/^   30  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
30	optim.unrestransform.f	/^30    CONTINUE$/;"	l	subroutine:INTSECDET	file:
30	optim.utils.f	/^30    CONTINUE$/;"	l	subroutine:COMPARE2	file:
30	pathsample.KMC.a2b.f	/^30    WAITMEAN=WAITMEAN+WAIT$/;"	l	subroutine:KMCA2B	file:
30	pathsample.KMC.f	/^30       IF (DEBUG) PRINT '(A,I6,A,F15.1,A,G20.10)','KMC> minimum ',ATMIN,' hit in ',XNSTEP,' KMC steps in time ',WAIT$/;"	l	subroutine:KMC	file:
30	pathsample.KMCcommit.f	/^30       IF (DEBUG) PRINT '(A,I6,A,I6,A,I10,A,G20.10)','KMCcommit> minimum ',ATMIN,' formerly ',MINMAP(ATMIN),$/;"	l	subroutine:KMCCOMMIT	file:
30	pathsample.dsort.f	/^   30    CONTINUE$/;"	l	subroutine:XERSVE	file:
30	pathsample.dsort.f	/^   30 CONTINUE$/;"	l	subroutine:XERPRN	file:
30	pathsample.dsort.f	/^   30 CONTINUE$/;"	l	subroutine:XGETUA	file:
30	pathsample.dsort.f	/^   30 IF (LEVEL.LE.0 .OR. (LEVEL.EQ.1 .AND. MKNTRL.LE.1)) RETURN$/;"	l	subroutine:XERMSG	file:
30	pathsample.dsort.f	/^   30 K = I$/;"	l	subroutine:DSORT	file:
30	pathsample.eig.f	/^30    IF(DABS(A(JI,II)).GT.TOL2)IOFF=IOFF+1$/;"	l	subroutine:EIG	file:
30	pathsample.input.f	/^30    CALL UPCASE(CHAR(P))$/;"	l	subroutine:READK	file:
30	pathsample.input.f	/^30    IF (CHAR(LAST) .EQ. SPACE) THEN$/;"	l	file:
30	pathsample.input.f	/^30    STATE=3$/;"	l	subroutine:READF	file:
30	pathsample.mergedb.f90	/^30 NMIN=NMINOLD+NEWMIN$/;"	l	subroutine:MERGEDB	file:
30	pathsample.mind.f	/^30    NPT=POINT*N$/;"	l	subroutine:MMYLBFGS	file:
30	pathsample.mindist.f	/^30    NPT=POINT*N$/;"	l	subroutine:MMYLBFGS	file:
30	pathsample.minperm.f	/^   30 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
30	pathsample.minperm.f	/^ 30         IF (J.GT.N*MAXNEI) THEN$/;"	l	subroutine:minperm	file:
30	pathsample.minpermdist.f90	/^30 NCHOOSE2=NCHOOSE2+1$/;"	l	subroutine:MINPERMDIST	file:
30	pathsample.minpermdistrbcom.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
30	pathsample.rbperm.f90	/^30    NCHOOSE2 = NCHOOSE2+1$/;"	l	subroutine:RBMINPERMDIST	file:
30	pathsample.reweight.f	/^   30             CONTINUE$/;"	l	function:DLANTR	file:
30	pathsample.reweight.f	/^   30          CONTINUE$/;"	l	subroutine:DGESVX	file:
30	pathsample.reweight.f	/^   30       CONTINUE$/;"	l	subroutine:DLAQGE	file:
30	pathsample.reweight.f	/^   30       CONTINUE$/;"	l	subroutine:DLATRS	file:
30	pathsample.reweight.f	/^   30    CONTINUE$/;"	l	subroutine:DGERFS	file:
30	pathsample.reweight.f	/^   30    CONTINUE$/;"	l	subroutine:DLASWP	file:
30	pathsample.reweight.f	/^   30 CONTINUE$/;"	l	subroutine:DGEEQU	file:
30	pathsample.reweight.f	/^   30 CONTINUE$/;"	l	subroutine:DLACN2	file:
30	pathsample.reweight.f	/^   30 CONTINUE$/;"	l	subroutine:DLACON	file:
30	pathsample.setup.f	/^30    IF (YESNO) CLOSE(UMINDATA) ! SAT need to reopen this file$/;"	l	subroutine:SETUP	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3C	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3CC	file:
300	optim.JM.f	/^300     CONTINUE$/;"	l	subroutine:JM3P	file:
300	optim.axdiff.f	/^300     CONTINUE$/;"	l	subroutine:AXDIFF	file:
300	optim.fetchz.f	/^300      CALL INPUT(END)$/;"	l	subroutine:FETCHZ	file:
300	optim.get.natoms.inc.f90	/^300      CALL INPUT(END)$/;"	l	file:
300	optim.mylapack.f	/^  300     CONTINUE$/;"	l	subroutine:SCHCK3	file:
300	optim.mylapack.f	/^  300    CONTINUE$/;"	l	subroutine:SCHCK4	file:
300	optim.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK1	file:
300	optim.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK2	file:
300	optim.mylapack.f	/^  300 CONTINUE$/;"	l	subroutine:SCHCK5	file:
300	optim.rotcon.f	/^ 300   FORMAT((6(F15.5,1X)))$/;"	l	subroutine:ROTCON	file:
300	optim.tcheck.f	/^300      CONTINUE$/;"	l	subroutine:TCHECK	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMHQ	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
300	pathsample.amhdump.f90	/^300     CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
300	pathsample.kshortestpaths.f90	/^300 CONTINUE$/;"	l	subroutine:next_path	file:
300	pathsample.reweight.f	/^  300          CONTINUE$/;"	l	function:DLANTR	file:
3030	optim.Natb.f	/^ 3030              format( 3(2x,i3),3(2x,f10.6))$/;"	l	subroutine:entots	file:
305	pathsample.amhdump.f90	/^305     CONTINUE$/;"	l	subroutine:AMHQ	file:
305	pathsample.amhdump.f90	/^305     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
305	pathsample.amhdump.f90	/^305     CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
306	pathsample.amhdump.f90	/^306        CONTINUE$/;"	l	subroutine:AMHQ	file:
306	pathsample.amhdump.f90	/^306        CONTINUE$/;"	l	subroutine:AMHQCONT	file:
306	pathsample.amhdump.f90	/^306        CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
31	optim.amber.f	/^31     CONTINUE$/;"	l	subroutine:aparams	file:
31	optim.bfgsts.f	/^31    CONTINUE$/;"	l	subroutine:ORTHOGOPT	file:
31	optim.connect.f	/^31    PTEST=.FALSE.$/;"	l	subroutine:CONNECT	file:
31	optim.minperm.f	/^   31      CONTINUE$/;"	l	subroutine:JOVOSAP	file:
31	pathsample.minperm.f	/^   31      CONTINUE$/;"	l	subroutine:JOVOSAP	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3C	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3CC	file:
310	optim.JM.f	/^310   CONTINUE$/;"	l	subroutine:JM3P	file:
310	optim.axdiff.f	/^310   CONTINUE$/;"	l	subroutine:AXDIFF	file:
310	optim.efol.f90	/^310              FORMAT(I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:EFOL	file:
310	optim.mylapack.f	/^  310        CONTINUE$/;"	l	subroutine:SCHCK3	file:
310	optim.mylapack.f	/^  310    CONTINUE$/;"	l	subroutine:SCHCK4	file:
310	optim.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK1	file:
310	optim.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK2	file:
310	optim.mylapack.f	/^  310 CONTINUE$/;"	l	subroutine:SCHCK5	file:
310	optim.read.odata.inc.f90	/^310      READ (UNIT=9,IOSTAT=ios,FMT='(A3)') check$/;"	l	file:
310	optim.symmetry.f	/^310         FORMAT(' Molecule rotated through ',F20.10,' degrees ',$/;"	l	subroutine:SYMMETRY	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMHQ	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMHQCONT	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMHRELQ	file:
310	pathsample.amhdump.f90	/^310       CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
310	pathsample.reweight.f	/^  310          CONTINUE$/;"	l	function:DLANTR	file:
32	optim.Natb.f	/^ 32           CONTINUE$/;"	l	subroutine:entots	file:
32	optim.amber.f	/^32     CONTINUE$/;"	l	subroutine:aparams	file:
32	optim.connect.f	/^32       WRITE(*,'(I5,A)') NTSREDO,' transition state coordinates read from file redopoints'$/;"	l	subroutine:CONNECT	file:
320	optim.mylapack.f	/^  320        CONTINUE$/;"	l	subroutine:SCHCK1	file:
320	optim.mylapack.f	/^  320     CONTINUE$/;"	l	subroutine:SCHCK3	file:
320	optim.mylapack.f	/^  320    CONTINUE$/;"	l	subroutine:SCHCK4	file:
320	optim.mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK2	file:
320	optim.mylapack.f	/^  320 CONTINUE$/;"	l	subroutine:SCHCK5	file:
320	optim.symmetry.f	/^320         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
320	optim.tcheck.f	/^320      CONTINUE$/;"	l	subroutine:TCHECK	file:
320	pathsample.reweight.f	/^  320          CONTINUE$/;"	l	function:DLANTR	file:
33	optim.connect.f	/^33       READ(99,*) (DUMMY(J1),J1=1,NOPT)    ! minimum$/;"	l	subroutine:CONNECT	file:
330	optim.mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK2	file:
330	optim.mylapack.f	/^  330        CONTINUE$/;"	l	subroutine:SCHCK5	file:
330	optim.mylapack.f	/^  330     CONTINUE$/;"	l	subroutine:SCHCK1	file:
330	optim.mylapack.f	/^  330    CONTINUE$/;"	l	subroutine:SCHCK4	file:
330	optim.mylapack.f	/^  330 CONTINUE$/;"	l	subroutine:SCHCK3	file:
330	optim.symmetry.f	/^330         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
330	optim.tcheck.f	/^330         CONTINUE$/;"	l	subroutine:TCHECK	file:
332	pathsample.amhdump.f90	/^332           FORMAT('CA: ',3(F8.3,1X),'CB: ',3(F8.3,1X),'OX: ', 3(F8.3,1X))$/;"	l	subroutine:AMHDUMP	file:
333	optim.connect.f	/^333            CONTINUE  $/;"	l	subroutine:CONNECT	file:
333	optim.connect.f	/^333   CALL NEWMINDIST(FIN,QPLUS,NATOMS,DISTPF,BULKT,TWOD,ZSYMSAVE,.FALSE.,RIGIDBODY,DEBUG,RMAT)$/;"	l	subroutine:ADDMIN	file:
333	optim.geopt.f	/^333            ALLOCATE(ORDERDERIV(NORDER),ORDER(NORDER))$/;"	l	subroutine:GEOPT	file:
334	pathsample.amhdump.f90	/^334         FORMAT(4(I8,1X),' NMRES NMCRD NUMPRO NMSNAP')$/;"	l	subroutine:AMHDUMP	file:
34	fmt.inc.f90	/^34 FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	file:
34	optim.connect.f	/^34          READ(45,*,END=35)$/;"	l	subroutine:CONNECT	file:
340	optim.mlatmin.f	/^340      CONTINUE$/;"	l	subroutine:MLATMIN	file:
340	optim.mslatmin.f	/^340      CONTINUE$/;"	l	subroutine:MSLATMIN	file:
340	optim.mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK2	file:
340	optim.mylapack.f	/^  340     CONTINUE$/;"	l	subroutine:SCHCK5	file:
340	optim.mylapack.f	/^  340    CONTINUE$/;"	l	subroutine:SCHCK3	file:
340	optim.mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK1	file:
340	optim.mylapack.f	/^  340 CONTINUE$/;"	l	subroutine:SCHCK4	file:
340	optim.symmetry.f	/^340         ZANGS = 180.D0\/FLOAT(IHIGH)$/;"	l	subroutine:SYMMETRY	file:
340	optim.tcheck.f	/^340         CONTINUE$/;"	l	subroutine:TCHECK	file:
345	optim.tcheck.f	/^345            DX(I)=(DXX1(I)+DXX2(I)+16.0D0*DXX3(I))\/18.0D0$/;"	l	subroutine:TCHECK	file:
35	optim.axpairs.f	/^35       CONTINUE$/;"	l	subroutine:AXPAIRS	file:
35	optim.connect.f	/^35          CONTINUE$/;"	l	subroutine:CONNECT	file:
35	optim.h2o.f	/^   35 DY=YY-Y(J) $/;"	l	subroutine:DRVTV	file:
35	optim.specialfuncts.f90	/^35                   Q=Q+WP$/;"	l	subroutine:LEGZO	file:
35	optim.unrescalcdihe.f	/^ 35   FORMAT(\/' RGYR: *** WARNING *** Net "mass"=',F12.5\/)$/;"	l	subroutine:UEDITRGYR	file:
350	optim.mlatmin.f	/^350   CONTINUE$/;"	l	subroutine:MLATMIN	file:
350	optim.mslatmin.f	/^350   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
350	optim.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK1	file:
350	optim.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK2	file:
350	optim.mylapack.f	/^  350        CONTINUE$/;"	l	subroutine:SCHCK5	file:
350	optim.mylapack.f	/^  350 AVIGR = MAX(AVIGR,REAL(IGR))$/;"	l	subroutine:SCHCK4	file:
350	optim.mylapack.f	/^  350 CONTINUE$/;"	l	subroutine:SCHCK3	file:
350	optim.symmetry.f	/^350               FORMAT(' S',I3,' axis exists.')$/;"	l	subroutine:SYMMETRY	file:
350	optim.tcheck.f	/^350         CONTINUE$/;"	l	subroutine:TCHECK	file:
36	mc.bh.accrej.inc.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	file:
360	optim.bfgsts.f	/^360             FORMAT(' Unscaled step for mode ',I3,'=',F20.10)$/;"	l	subroutine:BFGSTS	file:
360	optim.efol.f90	/^360             FORMAT(' Unscaled step for mode ',I4,'=',F20.10)$/;"	l	subroutine:EFOL	file:
360	optim.intbfgsts.f	/^360             FORMAT(' Unscaled step for mode ',I3,'=',F20.10)$/;"	l	subroutine:INTBFGSTS	file:
360	optim.mylapack.f	/^  360        CONTINUE$/;"	l	subroutine:SCHCK3	file:
360	optim.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK1	file:
360	optim.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK2	file:
360	optim.mylapack.f	/^  360     CONTINUE$/;"	l	subroutine:SCHCK5	file:
360	optim.mylapack.f	/^  360 CONTINUE$/;"	l	subroutine:SCHCK4	file:
360	optim.symmetry.f	/^360         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
360	optim.tcheck.f	/^360      CONTINUE$/;"	l	subroutine:TCHECK	file:
366	optim.efol.f90	/^366      FORMAT(' Largest modulus ratio of non-zero e\/values= ',5X,G20.10)   $/;"	l	subroutine:EFOL	file:
37	mc.f90	/^37    CONTINUE$/;"	l	subroutine:MC	file:
37	optim.siaz.f	/^37      CONTINUE$/;"	l	subroutine:SIAZ	file:
370	optim.mlatmin.f	/^370   CONTINUE$/;"	l	subroutine:MLATMIN	file:
370	optim.mslatmin.f	/^370   CONTINUE$/;"	l	subroutine:MSLATMIN	file:
370	optim.mylapack.f	/^  370     CONTINUE$/;"	l	subroutine:SCHCK3	file:
370	optim.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK1	file:
370	optim.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK2	file:
370	optim.mylapack.f	/^  370 CONTINUE$/;"	l	subroutine:SCHCK5	file:
370	optim.symmetry.f	/^370            FORMAT(' On-axis perpendicular C2 elements found.')$/;"	l	subroutine:SYMMETRY	file:
370	optim.tcheck.f	/^370      CONTINUE$/;"	l	subroutine:TCHECK	file:
38	optim.siaz.f	/^38         CONTINUE$/;"	l	subroutine:SIAZ	file:
380	optim.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK1	file:
380	optim.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK2	file:
380	optim.mylapack.f	/^  380    CONTINUE$/;"	l	subroutine:SCHCK5	file:
380	optim.mylapack.f	/^  380 CONTINUE$/;"	l	subroutine:SCHCK3	file:
380	optim.symmetry.f	/^380            FORMAT(' Off-axis perpendicular C2 elements found.')$/;"	l	subroutine:SYMMETRY	file:
380	optim.tcheck.f	/^380      CONTINUE$/;"	l	subroutine:TCHECK	file:
390	optim.mylapack.f	/^  390    CONTINUE$/;"	l	subroutine:SCHCK3	file:
390	optim.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK1	file:
390	optim.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK2	file:
390	optim.mylapack.f	/^  390 CONTINUE$/;"	l	subroutine:SCHCK5	file:
390	optim.symmetry.f	/^390            FORMAT(' Horizontal plane of symmetry found.')$/;"	l	subroutine:SYMMETRY	file:
390	optim.tcheck.f	/^390      CONTINUE$/;"	l	subroutine:TCHECK	file:
395	optim.tcheck.f	/^395         DX(I)=(DXX1(I)+DXX2(I)+16.0D0*DXX3(I))\/18.0D0$/;"	l	subroutine:TCHECK	file:
4	optim.mlatmin.f	/^4       CONTINUE$/;"	l	subroutine:MLATDIFF	file:
4	optim.mslatmin.f	/^4       CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
4	optim.odesd.f	/^4     X=XNEW$/;"	l	subroutine:BSSTEP	file:
40	lbfgs.f	/^   40       CONTINUE$/;"	l	subroutine:MCSRCH	file:
40	lbfgs.f	/^   40 mp1 = m + 1$/;"	l	function:ddot	file:
40	lbfgs.f	/^   40 mp1 = m + 1$/;"	l	subroutine:daxpy	file:
40	lbfgs.f	/^ 40      DIAG(I)= 1.0D0$/;"	l	subroutine:LBFGS	file:
40	lbfgs.f	/^ 40   FORMAT(' VECTOR X= ')$/;"	l	subroutine:LB1	file:
40	optim.EYtrap.f	/^40       CONTINUE$/;"	l	subroutine:EYDTRAP	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2C	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2CC	file:
40	optim.JM.f	/^40       CONTINUE$/;"	l	subroutine:JM2P	file:
40	optim.SW.f	/^40    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
40	optim.amb_natinterns.f90	/^   40 CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
40	optim.amber.f	/^40    CONTINUE$/;"	l	subroutine:aparams	file:
40	optim.amber.f	/^40    CONTINUE$/;"	l	subroutine:aread	file:
40	optim.aziz.f	/^40       CONTINUE$/;"	l	subroutine:AZIZ	file:
40	optim.bfgsts.f	/^40             FORMAT(' Vector      Gradient        Secder       Step          Max step    Trust ratio')$/;"	l	subroutine:BFGSTS	file:
40	optim.cubspl.f	/^   40    c(2,j) = (c(2,j) - c(3,j)*c(2,j+1))\/c(4,j)$/;"	l	subroutine:cubspl	file:
40	optim.dctrap.f	/^40       CONTINUE$/;"	l	subroutine:DCTRAP	file:
40	optim.dqag.f	/^   40    CONTINUE$/;"	l	subroutine:XERPRN	file:
40	optim.dqag.f	/^   40 CONTINUE$/;"	l	subroutine:DQPSRT	file:
40	optim.dqag.f	/^   40 RESULT = 0.0D+00$/;"	l	subroutine:DQAGE	file:
40	optim.dsygvx.f	/^   40    CONTINUE$/;"	l	subroutine:DLACPY	file:
40	optim.dsygvx.f	/^   40 CONTINUE$/;"	l	subroutine:DSYEVX	file:
40	optim.dtrap.f	/^40       CONTINUE$/;"	l	subroutine:DTRAP	file:
40	optim.efol.f90	/^40    IF (PTEST) PRINT*$/;"	l	subroutine:EFOL	file:
40	optim.eig.f	/^40        CONTINUE$/;"	l	subroutine:EIG	file:
40	optim.escp.f	/^40       CONTINUE$/;"	l	subroutine:DSCP	file:
40	optim.g2special.f	/^40       DO J2=1,3*NATOMS$/;"	l	subroutine:G2SPECIAL	file:
40	optim.hybridmin.f	/^40       FORMAT(' Vector      Gradient        Secder       Step          Max step    Trust ratio')$/;"	l	subroutine:HYBRIDMIN	file:
40	optim.input.f	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	optim.input.f	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	optim.intbfgsts.f	/^40             FORMAT(' Vector      Gradient        Secder       Step          Max step    Trust ratio')$/;"	l	subroutine:INTBFGSTS	file:
40	optim.ions.f	/^40       CONTINUE$/;"	l	subroutine:IONS	file:
40	optim.latmin.f	/^40    CONTINUE$/;"	l	subroutine:LATMIN	file:
40	optim.ljpshift.f	/^40    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
40	optim.mdiff.f	/^40       CONTINUE$/;"	l	subroutine:MDIFF	file:
40	optim.mied.f	/^40       CONTINUE$/;"	l	subroutine:MIED	file:
40	optim.minperm.f	/^   40 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
40	optim.minpermdist.f90	/^40 NCHOOSE2=0$/;"	l	subroutine:MINPERMDIST	file:
40	optim.minpermdistrbcom.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
40	optim.mpdiff.f	/^40       CONTINUE$/;"	l	subroutine:MPDIFF	file:
40	optim.mpdiff.f	/^40       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
40	optim.msdiff.f	/^40       CONTINUE$/;"	l	subroutine:MSDIFF	file:
40	optim.mylapack.f	/^   40                CONTINUE$/;"	l	subroutine:DPBTRF	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGBMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SGEMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSBMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSPMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:SSYMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STBSV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STPSV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRMV	file:
40	optim.mylapack.f	/^   40             CONTINUE$/;"	l	subroutine:STRSV	file:
40	optim.mylapack.f	/^   40          CONTINUE$/;"	l	subroutine:DTBSV	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSPR2	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR	file:
40	optim.mylapack.f	/^   40         CONTINUE$/;"	l	subroutine:SSYR2	file:
40	optim.mylapack.f	/^   40       CONTINUE$/;"	l	subroutine:DSYR	file:
40	optim.mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SCHCK3	file:
40	optim.mylapack.f	/^   40     CONTINUE$/;"	l	subroutine:SGER	file:
40	optim.mylapack.f	/^   40 CONTINUE$/;"	l	subroutine:SMESSG	file:
40	optim.mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK2	file:
40	optim.mylapack.f	/^   40 IC = IC + 1$/;"	l	subroutine:SCHCK5	file:
40	optim.mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK1	file:
40	optim.mylapack.f	/^   40 NN = NN + 1$/;"	l	subroutine:SCHCK4	file:
40	optim.potential.f	/^40       DO J1=NSTEP,3*NATOMS$/;"	l	subroutine:POTENTIAL	file:
40	optim.projh.f	/^   40       continue$/;"	l	subroutine:dgedi	file:
40	optim.projh.f	/^   40    continue$/;"	l	subroutine:dgeco	file:
40	optim.projh.f	/^   40    continue$/;"	l	subroutine:dgefa	file:
40	optim.rbperm.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
40	optim.scdiff.f	/^40       CONTINUE$/;"	l	subroutine:SCDIFF	file:
40	optim.sortxyz.f	/^40    J=1$/;"	l	subroutine:SORTXYZ	file:
40	optim.specialfuncts.f90	/^40                   X(NR)=Z$/;"	l	subroutine:LEGZO	file:
40	optim.unrestransform.f	/^   40 CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
40	pathsample.Dijkstra.f90	/^40    CONTINUE$/;"	l	subroutine:DIJKSTRA	file:
40	pathsample.dsort.f	/^   40    CONTINUE$/;"	l	subroutine:XERPRN	file:
40	pathsample.dsort.f	/^   40 L = L-1$/;"	l	subroutine:DSORT	file:
40	pathsample.input.f	/^40      IF (CHAR(M) .EQ. CONCAT(L:L)) THEN$/;"	l	file:
40	pathsample.input.f	/^40    IF(CHAR(P) .EQ. C(TP)) GO TO 50$/;"	l	subroutine:READK	file:
40	pathsample.kshortestpaths.f90	/^40    CONTINUE$/;"	l	subroutine:KSHORTESTPATHS	file:
40	pathsample.mergedb.f90	/^40 NTS=NTSOLD+NEWTS$/;"	l	subroutine:MERGEDB	file:
40	pathsample.minperm.f	/^   40 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
40	pathsample.minpermdist.f90	/^40 NCHOOSE2=0$/;"	l	subroutine:MINPERMDIST	file:
40	pathsample.minpermdistrbcom.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
40	pathsample.rbperm.f90	/^40    NCHOOSE2 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
40	pathsample.reweight.f	/^   40          CONTINUE$/;"	l	function:DLANTR	file:
40	pathsample.reweight.f	/^   40          CONTINUE$/;"	l	subroutine:DGERFS	file:
40	pathsample.reweight.f	/^   40          CONTINUE$/;"	l	subroutine:DLASWP	file:
40	pathsample.reweight.f	/^   40       CONTINUE$/;"	l	subroutine:DGESVX	file:
40	pathsample.reweight.f	/^   40       CONTINUE$/;"	l	subroutine:DLATRS	file:
40	pathsample.reweight.f	/^   40    CONTINUE$/;"	l	subroutine:DLAQGE	file:
40	pathsample.reweight.f	/^   40 CONTINUE$/;"	l	subroutine:DGEEQU	file:
40	pathsample.reweight.f	/^   40 CONTINUE$/;"	l	subroutine:DLACN2	file:
40	pathsample.reweight.f	/^   40 CONTINUE$/;"	l	subroutine:DLACON	file:
40	pathsample.setup.f	/^40       CLOSE(UTSDATA) ! SAT need to reopen this file$/;"	l	subroutine:SETUP	file:
400	optim.get.natoms.inc.f90	/^400   CLOSE(5)$/;"	l	file:
400	optim.input.f	/^400   NEST=1$/;"	l	file:
400	optim.mylapack.f	/^  400        CONTINUE$/;"	l	subroutine:SCHCK2	file:
400	optim.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK1	file:
400	optim.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK3	file:
400	optim.mylapack.f	/^  400 CONTINUE$/;"	l	subroutine:SCHCK5	file:
400	optim.symmetry.f	/^400                  IF ((ICOMP2.EQ.0).AND.(.NOT.TWOD)) FPGRP = 'CNv'$/;"	l	subroutine:SYMMETRY	file:
400	optim.tcheck.f	/^400      CONTINUE$/;"	l	subroutine:TCHECK	file:
400	pathsample.amhdump.f90	/^400     CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
400	pathsample.input.f	/^400   NEST=1$/;"	l	file:
401	optim.Natb.f	/^ 401           CONTINUE$/;"	l	subroutine:entots	file:
41	optim.c60p.f	/^41    CONTINUE$/;"	l	subroutine:C60P	file:
41	optim.input.f	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	optim.latmin.f	/^41    CONTINUE$/;"	l	subroutine:C60PE	file:
41	optim.minperm.f	/^   41 L0=L$/;"	l	subroutine:JOVOSAP	file:
41	optim.mlatmin.f	/^41    CONTINUE$/;"	l	subroutine:MLATDIFF	file:
41	optim.mpdiff.f	/^41       CONTINUE$/;"	l	subroutine:MPDIFF	file:
41	optim.mpdiff.f	/^41       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
41	optim.msdiff.f	/^41    CONTINUE$/;"	l	subroutine:MSDIFF	file:
41	optim.mslatmin.f	/^41    CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
41	pathsample.addperm.f	/^41       CONTINUE$/;"	l	subroutine:ADDPERM	file:
41	pathsample.input.f	/^41    SIGN=-1D0$/;"	l	subroutine:READF	file:
41	pathsample.minperm.f	/^   41 L0=L$/;"	l	subroutine:JOVOSAP	file:
41	pathsample.regroup.f	/^41       CONTINUE$/;"	l	subroutine:REGROUP	file:
41	pathsample.setup.f	/^41          CONTINUE$/;"	l	subroutine:SETUP	file:
41	pathsample.setup_sis.f	/^41       CONTINUE$/;"	l	subroutine:SETUP_SIS	file:
41	pathsample.tssearch.f	/^41             CONTINUE$/;"	l	subroutine:TSSEARCH	file:
410	optim.input.f	/^410   L=L+1$/;"	l	file:
410	optim.mylapack.f	/^  410        CONTINUE$/;"	l	subroutine:SCHCK5	file:
410	optim.mylapack.f	/^  410     CONTINUE$/;"	l	subroutine:SCHCK2	file:
410	optim.mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK1	file:
410	optim.mylapack.f	/^  410 CONTINUE$/;"	l	subroutine:SCHCK3	file:
410	optim.symmetry.f	/^410         FORMAT(' The molecule belongs to a point group with doubly', $/;"	l	subroutine:SYMMETRY	file:
410	pathsample.amhdump.f90	/^410       CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
410	pathsample.input.f	/^410   L=L+1$/;"	l	file:
42	optim.input.f	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	optim.minperm.f	/^   42 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
42	pathsample.addperm.f	/^42       CONTINUE$/;"	l	subroutine:ADDPERM	file:
42	pathsample.input.f	/^42    STATE=2$/;"	l	subroutine:READF	file:
42	pathsample.minperm.f	/^   42 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
42	pathsample.regroup.f	/^42       CONTINUE$/;"	l	subroutine:REGROUP	file:
42	pathsample.setup.f	/^42          CONTINUE$/;"	l	subroutine:SETUP	file:
42	pathsample.setup_sis.f	/^42       CONTINUE$/;"	l	subroutine:SETUP_SIS	file:
42	pathsample.tssearch.f	/^42             CONTINUE$/;"	l	subroutine:TSSEARCH	file:
420	optim.mylapack.f	/^  420        CONTINUE$/;"	l	subroutine:SCHCK5	file:
420	optim.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK1	file:
420	optim.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK2	file:
420	optim.mylapack.f	/^  420 CONTINUE$/;"	l	subroutine:SCHCK3	file:
420	optim.symmetry.f	/^420      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
420	optim.tcheck.f	/^420         FORMAT(3F20.16)$/;"	l	subroutine:TCHECK	file:
429	optim.sortc.f	/^ 429  J=1$/;"	l	subroutine:SortC	file:
43	optim.hessout.f	/^ 43   FORMAT(5X,T12,F12.6,T25,F12.6,T38,F12.6,T51,F12.6,T64,F12.6)$/;"	l	subroutine:HESSOUT	file:
43	optim.minperm.f	/^   43 X(I)=J0$/;"	l	subroutine:JOVOSAP	file:
43	pathsample.KMC.f	/^43             CONTINUE$/;"	l	subroutine:KMC	file:
43	pathsample.KMCcommit.f	/^43             CONTINUE$/;"	l	subroutine:KMCCOMMIT	file:
43	pathsample.minperm.f	/^   43 X(I)=J0$/;"	l	subroutine:JOVOSAP	file:
430	optim.mylapack.f	/^  430           CONTINUE$/;"	l	subroutine:SCHCK5	file:
430	optim.mylapack.f	/^  430    CONTINUE$/;"	l	subroutine:SCHCK2	file:
430	optim.mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK1	file:
430	optim.mylapack.f	/^  430 CONTINUE$/;"	l	subroutine:SCHCK3	file:
430	optim.symmetry.f	/^430      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
430	optim.tcheck.f	/^430      CONTINUE$/;"	l	subroutine:TCHECK	file:
432	optim.intlbfgs.f90	/^432         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
432	optim.intlbfgslj.f90	/^432         CONTINUE$/;"	l	subroutine:INTLBFGSLJ	file:
435	optim.tcheck.f	/^435      CONTINUE$/;"	l	subroutine:TCHECK	file:
44	optim.connect.f	/^44          READ(45,*,END=45)$/;"	l	subroutine:CONNECT	file:
440	optim.mylapack.f	/^  440        CONTINUE$/;"	l	subroutine:SCHCK5	file:
440	optim.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK1	file:
440	optim.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK2	file:
440	optim.mylapack.f	/^  440 CONTINUE$/;"	l	subroutine:SCHCK3	file:
440	optim.symmetry.f	/^440      FORMAT(' ORBIT MATRIX:',(F10.6,\/))$/;"	l	subroutine:SYMMETRY	file:
440	optim.tcheck.f	/^440   RETURN$/;"	l	subroutine:TCHECK	file:
444	optim.connect.f	/^444      CLOSE(81)$/;"	l	subroutine:ADDMIN	file:
444	optim.geopt.f	/^444            CONTINUE$/;"	l	subroutine:GEOPT	file:
444	pathsample.GT.f	/^444         CONTINUE$/;"	l	subroutine:GT	file:
444	pathsample.NGT.f	/^444         CONTINUE$/;"	l	subroutine:NGT	file:
444	pathsample.NGT_crstorage.f	/^444         CONTINUE$/;"	l	subroutine:NGT_CRSTORAGE	file:
444	pathsample.setup.f	/^444      CONTINUE$/;"	l	subroutine:SETUP	file:
45	lbfgs.f	/^   45    INFO=0$/;"	l	subroutine:MCSRCH	file:
45	optim.connect.f	/^45          CONTINUE$/;"	l	subroutine:CONNECT	file:
45	optim.h2o.f	/^   45 DZ=ZZ-Z(J) $/;"	l	subroutine:DRVTV	file:
45	optim.specialfuncts.f90	/^45                   W(N+1-NR)=W(NR)$/;"	l	subroutine:LEGZO	file:
45	optim.unrescalcdihe.f	/^ 45   FORMAT(\/' RGYR:   There were',I5,' missing coordinates.'\/)$/;"	l	subroutine:UEDITRGYR	file:
450	optim.mylapack.f	/^  450     CONTINUE$/;"	l	subroutine:SCHCK5	file:
450	optim.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK1	file:
450	optim.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK2	file:
450	optim.mylapack.f	/^  450 CONTINUE$/;"	l	subroutine:SCHCK3	file:
460	optim.mylapack.f	/^  460        CONTINUE$/;"	l	subroutine:SCHCK5	file:
460	optim.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK1	file:
460	optim.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK2	file:
460	optim.mylapack.f	/^  460 CONTINUE$/;"	l	subroutine:SCHCK3	file:
460	optim.symmetry.f	/^460      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
470	optim.mylapack.f	/^  470        CONTINUE$/;"	l	subroutine:SCHCK5	file:
470	optim.mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK2	file:
470	optim.mylapack.f	/^  470 CONTINUE$/;"	l	subroutine:SCHCK3	file:
470	optim.symmetry.f	/^470         FORMAT(' Number of distinct planetary orbits: ',i3,\/,  $/;"	l	subroutine:SYMMETRY	file:
48	optim.TIPmodes.f	/^48    CONTINUE $/;"	l	subroutine:H2OMODES	file:
48	optim.h2o.f	/^48    CONTINUE $/;"	l	subroutine:H2O	file:
480	optim.efol.f90	/^480         FORMAT('Parameter',T20,'dV\/dR',T32,'Step',T46,'Rold',T56,'Rnew')$/;"	l	subroutine:EFOL	file:
480	optim.mylapack.f	/^  480           CONTINUE$/;"	l	subroutine:SCHCK5	file:
480	optim.mylapack.f	/^  480 CONTINUE$/;"	l	subroutine:SCHCK2	file:
480	optim.symmetry.f	/^480            FORMAT(2I3)$/;"	l	subroutine:SYMMETRY	file:
490	optim.efol.f90	/^490         FORMAT(64('-'))$/;"	l	subroutine:EFOL	file:
490	optim.mylapack.f	/^  490        CONTINUE$/;"	l	subroutine:SCHCK5	file:
490	optim.mylapack.f	/^  490 CONTINUE$/;"	l	subroutine:SCHCK2	file:
490	optim.symmetry.f	/^490         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
5	optim.amber.f	/^5           CONTINUE$/;"	l	subroutine:AMBERS	file:
5	optim.dqag.f	/^    5   RLIST(MAXERR) = AREA1$/;"	l	subroutine:DQAGE	file:
5	optim.intlbfgs.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:INTLBFGS	file:
5	optim.make_conpot.f90	/^5 CHANGED=.FALSE.$/;"	l	subroutine:MAKE_CONPOT	file:
5	optim.mlatmin.f	/^5     CONTINUE$/;"	l	subroutine:MLATDIFF	file:
5	optim.mslatmin.f	/^5     CONTINUE$/;"	l	subroutine:MSLATDIFF	file:
5	optim.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMGK	file:
5	optim.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMKK	file:
5	optim.myblas.f	/^ 5    continue$/;"	l	subroutine:DCOOMMSK	file:
5	pathsample.Dijkstra.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:DIJKSTRA	file:
5	pathsample.GT.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:GT	file:
5	pathsample.KMC.a2b.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:KMCA2B	file:
5	pathsample.KMC.f	/^5        CHANGED=.FALSE.$/;"	l	subroutine:KMC	file:
5	pathsample.KMCcommit.f	/^5        CHANGED=.FALSE.$/;"	l	subroutine:KMCCOMMIT	file:
5	pathsample.NGT.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:NGT	file:
5	pathsample.NGT_crstorage.f	/^5     CHANGED=.FALSE.$/;"	l	subroutine:NGT_CRSTORAGE	file:
5	pathsample.Pfold.f90	/^5     CHANGED=.FALSE.$/;"	l	subroutine:PFOLD	file:
5	pathsample.Pfold.f90	/^5     CHANGED=.FALSE.$/;"	l	subroutine:TFOLD	file:
5	pathsample.getppair.f90	/^5  CHANGED=.FALSE.$/;"	l	subroutine:GETPPAIR	file:
5	pathsample.getusepair.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:GETUSEPAIR	file:
5	pathsample.kshortestpaths.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:KSHORTESTPATHS	file:
5	pathsample.make_conpot.f90	/^5 CHANGED=.FALSE.$/;"	l	subroutine:MAKE_CONPOT	file:
5	pathsample.regroupfree2.f90	/^5    CHANGED=.FALSE.$/;"	l	subroutine:REGROUPFREE2	file:
5	pathsample.remove_unconnected.f90	/^5     CHANGED=.FALSE.$/;"	l	subroutine:REMOVE_UNCONNECTED	file:
50	lbfgs.f	/^   50       CONTINUE$/;"	l	subroutine:MCSRCH	file:
50	lbfgs.f	/^   50 continue$/;"	l	function:ddot	file:
50	lbfgs.f	/^   50 continue$/;"	l	subroutine:daxpy	file:
50	lbfgs.f	/^ 50   FORMAT(6(2X,1PD10.3))$/;"	l	subroutine:LB1	file:
50	lbfgs.f	/^ 50   W(ISPT+I)= -G(I)*DIAG(I)$/;"	l	subroutine:LBFGS	file:
50	optim.EYtrap.f	/^50          CONTINUE$/;"	l	subroutine:EYDTRAP	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2C	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2CC	file:
50	optim.JM.f	/^50    CONTINUE$/;"	l	subroutine:JM2P	file:
50	optim.SW.f	/^50    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
50	optim.amb_natinterns.f90	/^ 50   CONTINUE$/;"	l	subroutine:AMB_GETBEENAT	file:
50	optim.amber.f	/^50     CONTINUE$/;"	l	subroutine:aparams	file:
50	optim.amber.f	/^50    CONTINUE$/;"	l	subroutine:aread	file:
50	optim.aziz.f	/^50    CONTINUE$/;"	l	subroutine:AZIZ	file:
50	optim.bfgsts.f	/^50             FORMAT(1X,I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:BFGSTS	file:
50	optim.cubspl.f	/^   50    c(4,i-1) = (divdf3\/dtau)*(6.\/dtau)$/;"	l	subroutine:cubspl	file:
50	optim.dctrap.f	/^50          CONTINUE$/;"	l	subroutine:DCTRAP	file:
50	optim.dqag.f	/^   50 CONTINUE$/;"	l	subroutine:DQAGE	file:
50	optim.dqag.f	/^   50 IORD(JBND) = MAXERR$/;"	l	subroutine:DQPSRT	file:
50	optim.dqag.f	/^   50 LPIECE = INDEX(MESSG(NEXTC:LENMSG), NEWLIN)$/;"	l	subroutine:XERPRN	file:
50	optim.dsygvx.f	/^   50       CONTINUE$/;"	l	subroutine:DLACPY	file:
50	optim.dsygvx.f	/^   50       CONTINUE$/;"	l	subroutine:DSYEVX	file:
50	optim.dtrap.f	/^50          CONTINUE$/;"	l	subroutine:DTRAP	file:
50	optim.eig.f	/^50    P=ZER$/;"	l	subroutine:EIG	file:
50	optim.escp.f	/^50    CONTINUE$/;"	l	subroutine:DSCP	file:
50	optim.hybridmin.f	/^50       FORMAT(1X,I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:HYBRIDMIN	file:
50	optim.input.f	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	optim.input.f	/^50    L=L+1$/;"	l	file:
50	optim.input.f	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	optim.intbfgsts.f	/^50             FORMAT(1X,I4,1X,E15.6,1X,E15.6,1X,E13.6,1X,E12.6,1X,E15.6)$/;"	l	subroutine:INTBFGSTS	file:
50	optim.ions.f	/^50    CONTINUE$/;"	l	subroutine:IONS	file:
50	optim.latmin.f	/^50    CONTINUE$/;"	l	subroutine:LATMIN	file:
50	optim.ljpshift.f	/^50    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
50	optim.mdiff.f	/^50    CONTINUE$/;"	l	subroutine:MDIFF	file:
50	optim.mied.f	/^50    CONTINUE$/;"	l	subroutine:MIED	file:
50	optim.minperm.f	/^   50 I=FREE(K)$/;"	l	subroutine:JOVOSAP	file:
50	optim.minpermdist.f90	/^50 DISTANCE=DBEST$/;"	l	subroutine:MINPERMDIST	file:
50	optim.minpermdistrbcom.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:MINPERMDISTRBCOM	file:
50	optim.mpdiff.f	/^50    CONTINUE$/;"	l	subroutine:MPDIFF	file:
50	optim.mpdiff.f	/^50    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
50	optim.msdiff.f	/^50    CONTINUE$/;"	l	subroutine:MSDIFF	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBMV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STBSV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPMV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STPSV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRMV	file:
50	optim.mylapack.f	/^   50                    CONTINUE$/;"	l	subroutine:STRSV	file:
50	optim.mylapack.f	/^   50                   CONTINUE$/;"	l	subroutine:DPBTRF	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGBMV	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SGEMV	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSPR2	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR	file:
50	optim.mylapack.f	/^   50                CONTINUE $/;"	l	subroutine:SSYR2	file:
50	optim.mylapack.f	/^   50                CONTINUE$/;"	l	subroutine:DTBSV	file:
50	optim.mylapack.f	/^   50             CONTINUE$/;"	l	subroutine:DSYR	file:
50	optim.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSBMV	file:
50	optim.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSPMV	file:
50	optim.mylapack.f	/^   50            CONTINUE$/;"	l	subroutine:SSYMV	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK2	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK3	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK4	file:
50	optim.mylapack.f	/^   50     CONTINUE$/;"	l	subroutine:SCHCK5	file:
50	optim.mylapack.f	/^   50 CONTINUE$/;"	l	subroutine:SMESSG	file:
50	optim.mylapack.f	/^   50 IC = IC + 1$/;"	l	subroutine:SCHCK1	file:
50	optim.potential.f	/^50       CONTINUE$/;"	l	subroutine:POTENTIAL	file:
50	optim.projh.f	/^   50    continue$/;"	l	subroutine:dgeco	file:
50	optim.projh.f	/^   50    continue$/;"	l	subroutine:dgedi	file:
50	optim.projh.f	/^   50    continue$/;"	l	subroutine:dgefa	file:
50	optim.rbperm.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:RBMINPERMDIST	file:
50	optim.scdiff.f	/^50    CONTINUE$/;"	l	subroutine:SCDIFF	file:
50	optim.symmetry.f	/^50    FORMAT(3(2X,F12.6))$/;"	l	subroutine:SYMMETRY	file:
50	optim.unrestransform.f	/^   50  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
50	pathsample.connect.f	/^50    NEWLENGTH=J2-1$/;"	l	subroutine:CONNECT	file:
50	pathsample.dsort.f	/^   50 K = K+1$/;"	l	subroutine:DSORT	file:
50	pathsample.dsort.f	/^   50 LPIECE = INDEX(MESSG(NEXTC:LENMSG), NEWLIN)$/;"	l	subroutine:XERPRN	file:
50	pathsample.eig.f	/^50    P=ZER$/;"	l	subroutine:EIG	file:
50	pathsample.getppair.f90	/^50 CONTINUE$/;"	l	subroutine:GETPPAIR	file:
50	pathsample.getspair.f90	/^50 CONTINUE$/;"	l	subroutine:GETSPAIR	file:
50	pathsample.input.f	/^50    IF (K .EQ. 0) RETURN$/;"	l	subroutine:READA	file:
50	pathsample.input.f	/^50    L=L+1$/;"	l	file:
50	pathsample.input.f	/^50    TP=M(TP)$/;"	l	subroutine:READK	file:
50	pathsample.mergedb.f90	/^50 CONTINUE$/;"	l	subroutine:MERGEDB	file:
50	pathsample.minperm.f	/^   50 I=FREE(K)$/;"	l	subroutine:JOVOSAP	file:
50	pathsample.minpermdist.f90	/^50 DISTANCE=DBEST$/;"	l	subroutine:MINPERMDIST	file:
50	pathsample.minpermdistrbcom.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:MINPERMDISTRBCOM	file:
50	pathsample.rbperm.f90	/^50    DISTANCE = DBEST       ! squared distance$/;"	l	subroutine:RBMINPERMDIST	file:
50	pathsample.reweight.f	/^   50             CONTINUE$/;"	l	function:DLANTR	file:
50	pathsample.reweight.f	/^   50       CONTINUE$/;"	l	subroutine:DGERFS	file:
50	pathsample.reweight.f	/^   50       CONTINUE$/;"	l	subroutine:DGESVX	file:
50	pathsample.reweight.f	/^   50       CONTINUE$/;"	l	subroutine:DLAQGE	file:
50	pathsample.reweight.f	/^   50    CONTINUE$/;"	l	subroutine:DGEEQU	file:
50	pathsample.reweight.f	/^   50    CONTINUE$/;"	l	subroutine:DLASWP	file:
50	pathsample.reweight.f	/^   50    CONTINUE$/;"	l	subroutine:DLATRS	file:
50	pathsample.reweight.f	/^   50 CONTINUE$/;"	l	subroutine:DLACN2	file:
50	pathsample.reweight.f	/^   50 CONTINUE$/;"	l	subroutine:DLACON	file:
500	optim.efol.f90	/^500              FORMAT(T7,A,T17,F10.6,T29,F10.5,T41,F10.5,T53,F10.5)$/;"	l	subroutine:EFOL	file:
500	optim.fetchz.f	/^500              CONTINUE$/;"	l	subroutine:FETCHZ	file:
500	optim.mylapack.f	/^  500     CONTINUE$/;"	l	subroutine:SCHCK5	file:
500	optim.mylapack.f	/^  500 CONTINUE$/;"	l	subroutine:SCHCK2	file:
500	optim.symmetry.f	/^500      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
51	optim.input.f	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	optim.intlbfgs.f90	/^51   NCONSTRAINT=0 $/;"	l	subroutine:INTLBFGS	file:
51	optim.make_conpot.f90	/^51 NCONSTRAINT=0 $/;"	l	subroutine:MAKE_CONPOT	file:
51	optim.minperm.f	/^   51    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
51	pathsample.Dijkstra.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:DIJKSTRA	file:
51	pathsample.GT.f	/^51    CHANGED=.FALSE.$/;"	l	subroutine:GT	file:
51	pathsample.KMC.f	/^51       CHANGED=.FALSE.$/;"	l	subroutine:KMC	file:
51	pathsample.KMCcommit.f	/^51       CHANGED=.FALSE.$/;"	l	subroutine:KMCCOMMIT	file:
51	pathsample.NGT.f	/^51    CHANGED=.FALSE.$/;"	l	subroutine:NGT	file:
51	pathsample.NGT_crstorage.f	/^51    CHANGED=.FALSE.$/;"	l	subroutine:NGT_CRSTORAGE	file:
51	pathsample.Pfold.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:PFOLD	file:
51	pathsample.Pfold.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:TFOLD	file:
51	pathsample.getppair.f90	/^51 CHANGED=.FALSE.$/;"	l	subroutine:GETPPAIR	file:
51	pathsample.getusepair.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:GETUSEPAIR	file:
51	pathsample.input.f	/^51    KXSIGN=-1$/;"	l	subroutine:READF	file:
51	pathsample.kshortestpaths.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:KSHORTESTPATHS	file:
51	pathsample.make_conpot.f90	/^51 NCONSTRAINT=0 $/;"	l	subroutine:MAKE_CONPOT	file:
51	pathsample.minperm.f	/^   51    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
51	pathsample.regroupfree2.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:REGROUPFREE2	file:
51	pathsample.remove_unconnected.f90	/^51    CHANGED=.FALSE.$/;"	l	subroutine:REMOVE_UNCONNECTED	file:
51	pathsample.setup.f	/^51             CLOSE(1)$/;"	l	subroutine:SETUP	file:
51	pathsample.setup_sis.f	/^51          CLOSE(1)$/;"	l	subroutine:SETUP_SIS	file:
510	optim.mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK2	file:
510	optim.mylapack.f	/^  510 CONTINUE$/;"	l	subroutine:SCHCK5	file:
510	optim.symmetry.f	/^510      FORMAT(' The smallest orbit contains ',i3,' members.',\/,$/;"	l	subroutine:SYMMETRY	file:
511	pathsample.kshortestpaths.f90	/^511   CHANGED=.FALSE.$/;"	l	subroutine:KSHORTESTPATHS	file:
52	optim.diis.f	/^52       CONTINUE$/;"	l	subroutine:DIIS	file:
52	optim.dqag.f	/^   52       CONTINUE$/;"	l	subroutine:XERPRN	file:
52	optim.input.f	/^52    I=I+1$/;"	l	file:
52	optim.input.f	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	optim.minperm.f	/^   52    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
52	pathsample.amhdump.f90	/^52       FORMAT('ATOM',4X,I3,2X,'CA',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
52	pathsample.dsort.f	/^   52       CONTINUE$/;"	l	subroutine:XERPRN	file:
52	pathsample.input.f	/^52    I=I+1$/;"	l	file:
52	pathsample.input.f	/^52    STATE=5$/;"	l	subroutine:READF	file:
52	pathsample.minperm.f	/^   52    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
520	optim.mylapack.f	/^  520 CONTINUE$/;"	l	subroutine:SCHCK5	file:
520	optim.symmetry.f	/^520      FORMAT(' Other members of this orbit are: ',100I4)$/;"	l	subroutine:SYMMETRY	file:
525	pathsample.amhdump.f90	/^525       CONTINUE$/;"	l	subroutine:AMHDUMP	file:
525	pathsample.amhdump.f90	/^525      CONTINUE$/;"	l	subroutine:AMHQ	file:
525	pathsample.amhdump.f90	/^525      CONTINUE$/;"	l	subroutine:AMH_RELCO	file:
525	pathsample.amhdump.f90	/^525     CONTINUE$/;"	l	subroutine:AMHQCONT	file:
525	pathsample.amhdump.f90	/^525     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
525	pathsample.amhdump.f90	/^525     CONTINUE$/;"	l	subroutine:AMHRMSD	file:
53	optim.minperm.f	/^   53    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
53	pathsample.amhdump.f90	/^53       FORMAT('ATOM',4X,I3,2X,'CB',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
53	pathsample.minperm.f	/^   53    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
530	optim.symmetry.f	/^530               CONTINUE$/;"	l	subroutine:SYMMETRY	file:
54	optim.dqag.f	/^   54    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
54	pathsample.amhdump.f90	/^54      FORMAT('ATOM',4X,I3,2X,'O ',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
54	pathsample.dsort.f	/^   54    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
540	optim.symmetry.f	/^540               FORMAT(' ANGMAG angle is ',f8.4)$/;"	l	subroutine:SYMMETRY	file:
542	optim.intlbfgs.f90	/^542   CONTINUE$/;"	l	subroutine:INTLBFGS	file:
543	optim.intlbfgs.f90	/^543         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
548	optim.intlbfgs.f90	/^548            CONTINUE$/;"	l	subroutine:INTLBFGS	file:
55	optim.connect.f	/^55    DO J5=1,NATOMS$/;"	l	subroutine:GETPERM	file:
55	optim.h2o.f	/^   55 SX=DX*DX $/;"	l	subroutine:DRVTV	file:
55	pathsample.amhdump.f90	/^55       FORMAT('ATOM',4X,I3,2X,'C ',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, & $/;"	l	subroutine:AMHDUMP	file:
55	pathsample.mergedb.f90	/^55 CONTINUE$/;"	l	subroutine:MERGEDB	file:
550	optim.symmetry.f	/^550               FORMAT(' IERR is ',I2,' for ',I1)$/;"	l	subroutine:SYMMETRY	file:
5500	optim.Natb.f	/^ 5500   HDER(K,IJ)=0.D0$/;"	l	subroutine:entots	file:
555	optim.OPTIM.F	/^555   CONTINUE ! JUMP BACK TO HERE AFTER REOPTIMISATION OF BAD ENDPOINTS$/;"	l	subroutine:OPTIM	file:
555	optim.dftb.f	/^555                 CONTINUE $/;"	l	subroutine:DFDERIV1	file:
555	optim.func.f90	/^555   CONTINUE ! JUMP BACK TO HERE AFTER REOPTIMISATION OF BAD ENDPOINTS$/;"	l	subroutine:OPTIM	file:
555	optim.path.f	/^555   CONTINUE$/;"	l	subroutine:PATH	file:
555	pathsample.Dijkstra.f90	/^555 CONTINUE$/;"	l	subroutine:DIJKSTRA	file:
555	pathsample.GT.f	/^555         CONTINUE$/;"	l	subroutine:GT	file:
555	pathsample.KMC.f	/^555   CONTINUE$/;"	l	subroutine:KMC	file:
555	pathsample.KMCcommit.f	/^555   CONTINUE$/;"	l	subroutine:KMCCOMMIT	file:
555	pathsample.NGT.f	/^555         CONTINUE$/;"	l	subroutine:NGT	file:
555	pathsample.NGT_crstorage.f	/^555         CONTINUE$/;"	l	subroutine:NGT_CRSTORAGE	file:
555	pathsample.connectd.f90	/^555   CONTINUE$/;"	l	subroutine:CONNECTD	file:
555	pathsample.connectdist.f90	/^555   CONTINUE$/;"	l	subroutine:CONNECTDIST	file:
556	pathsample.NGT.f	/^556      CONTINUE$/;"	l	subroutine:NGT	file:
557	pathsample.NGT.f	/^557      CONTINUE$/;"	l	subroutine:NGT	file:
558	pathsample.NGT.f	/^558   CONTINUE ! JMC jump to here after disconnection of I minima using the compressed-row storage scheme$/;"	l	subroutine:NGT	file:
56	keyword.f90	/^56          WRITE(MYUNIT,'(A,I6,A)') $/;"	l	subroutine:KEYWORD	file:
56	optim.dqag.f	/^   56    CONTINUE$/;"	l	subroutine:XERPRN	file:
56	pathsample.amhdump.f90	/^56       FORMAT('ATOM',4X,I3,2X,'N ',2X,A3,1X,'A',1X,I3,4X,F8.3,F8.3,F8.3, &$/;"	l	subroutine:AMHDUMP	file:
56	pathsample.dsort.f	/^   56    CONTINUE$/;"	l	subroutine:XERPRN	file:
560	optim.symmetry.f	/^560                  FORMAT(' PLAYING WITH ATOMS ',I3,' AND ',I3)$/;"	l	subroutine:SYMMETRY	file:
561	optim.potential.f	/^561            WRITE(*,'(A)') 'CELL not found in input data set - quit'$/;"	l	subroutine:POTENTIAL	file:
567	optim.potential.f	/^567            CONTINUE$/;"	l	subroutine:POTENTIAL	file:
57	keyword.f90	/^57          READ(34,*,END=56) DUMMY$/;"	l	subroutine:KEYWORD	file:
570	optim.symmetry.f	/^570               CALL ROTM(3,ANGMG,1,RM)$/;"	l	subroutine:SYMMETRY	file:
5700	optim.Natb.f	/^ 5700        CONTINUE $/;"	l	subroutine:entots	file:
5720	optim.Natb.f	/^ 5720           CONTINUE$/;"	l	subroutine:entots	file:
58	optim.dqag.f	/^   58    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
58	pathsample.dsort.f	/^   58    CBUFF(LPREF+1:LPREF+LPIECE) = MESSG(NEXTC:NEXTC+LPIECE-1)$/;"	l	subroutine:XERPRN	file:
580	optim.symmetry.f	/^580                  FORMAT(' Axis of order ',I1,' identified.')$/;"	l	subroutine:SYMMETRY	file:
590	optim.symmetry.f	/^590                           CONTINUE$/;"	l	subroutine:SYMMETRY	file:
599	optim.msevb.f90	/^ 599     enddo$/;"	l	subroutine:vinter	file:
6	optim.amber.f	/^6           CONTINUE$/;"	l	subroutine:AMBERS	file:
60	lbfgs.f	/^   60 ddot = dtemp$/;"	l	function:ddot	file:
60	lbfgs.f	/^ 60   FORMAT(' GRADIENT VECTOR G= ')$/;"	l	subroutine:LB1	file:
60	optim.EYtrap.f	/^60    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2C	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2CC	file:
60	optim.JM.f	/^60          CONTINUE$/;"	l	subroutine:JM2P	file:
60	optim.SW.f	/^60    CONTINUE$/;"	l	subroutine:SWLATMIN	file:
60	optim.amber.f	/^60    CONTINUE$/;"	l	subroutine:aparams	file:
60	optim.aziz.f	/^60          CONTINUE$/;"	l	subroutine:AZIZ	file:
60	optim.c60diff.f	/^60          CONTINUE$/;"	l	subroutine:C60DIFF	file:
60	optim.c60p.f	/^60          CONTINUE$/;"	l	subroutine:C60P	file:
60	optim.connect.f	/^60          FORMAT(I4,1X,F16.7,G12.5,F16.7,G12.5,F16.7,F8.3,F8.3,F8.3,F8.3)$/;"	l	subroutine:CLEANUP	file:
60	optim.dctrap.f	/^60    CONTINUE$/;"	l	subroutine:DCTRAP	file:
60	optim.dqag.f	/^   60 CONTINUE$/;"	l	subroutine:XERPRN	file:
60	optim.dqag.f	/^   60 IF(KEYF.NE.1) NEVAL = (10*KEYF+1)*(2*NEVAL+1)$/;"	l	subroutine:DQAGE	file:
60	optim.dqag.f	/^   60 IORD(I-1) = MAXERR$/;"	l	subroutine:DQPSRT	file:
60	optim.dsygvx.f	/^   60    CONTINUE$/;"	l	subroutine:DLACPY	file:
60	optim.dsygvx.f	/^   60    CONTINUE$/;"	l	subroutine:DSYEVX	file:
60	optim.dtrap.f	/^60    CONTINUE$/;"	l	subroutine:DTRAP	file:
60	optim.efol.f90	/^60    FORMAT (' Beginning of optimization cycle ', I4,'.',\/&$/;"	l	subroutine:EFOL	file:
60	optim.eig.f	/^60    CONTINUE$/;"	l	subroutine:EIG	file:
60	optim.escp.f	/^60          CONTINUE$/;"	l	subroutine:DSCP	file:
60	optim.h2o.f	/^60    CONTINUE $/;"	l	subroutine:DRVTV	file:
60	optim.input.f	/^60    L=L+1$/;"	l	file:
60	optim.input.f	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	optim.ions.f	/^60          CONTINUE$/;"	l	subroutine:IONS	file:
60	optim.latmin.f	/^60    CONTINUE$/;"	l	subroutine:LATMIN	file:
60	optim.ljpshift.f	/^60    CONTINUE$/;"	l	subroutine:LJPSLATMIN	file:
60	optim.mdiff.f	/^60          CONTINUE$/;"	l	subroutine:MDIFF	file:
60	optim.mied.f	/^60          CONTINUE$/;"	l	subroutine:MIED	file:
60	optim.minperm.f	/^   60    IF (K.EQ.0) THEN$/;"	l	subroutine:JOVOSAP	file:
60	optim.minpermdist.f90	/^60 NCHOOSE1=0$/;"	l	subroutine:MINPERMDIST	file:
60	optim.minpermdistrbcom.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
60	optim.mpdiff.f	/^60          CONTINUE$/;"	l	subroutine:MPDIFF	file:
60	optim.mpdiff.f	/^60          CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
60	optim.msdiff.f	/^60          CONTINUE$/;"	l	subroutine:MSDIFF	file:
60	optim.mylapack.f	/^   60                CONTINUE$/;"	l	subroutine:DPBTRF	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBMV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STBSV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPMV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STPSV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRMV	file:
60	optim.mylapack.f	/^   60             CONTINUE$/;"	l	subroutine:STRSV	file:
60	optim.mylapack.f	/^   60          CONTINUE$/;"	l	subroutine:DTBSV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGBMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SGEMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSBMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSPR2	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYMV	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR	file:
60	optim.mylapack.f	/^   60         CONTINUE$/;"	l	subroutine:SSYR2	file:
60	optim.mylapack.f	/^   60       CONTINUE$/;"	l	subroutine:DSYR	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK1	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK2	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK3	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK4	file:
60	optim.mylapack.f	/^   60     CONTINUE$/;"	l	subroutine:SCHCK5	file:
60	optim.mylapack.f	/^   60 CONTINUE$/;"	l	subroutine:SMESSG	file:
60	optim.path.f	/^60       FORMAT(F17.7,G12.5,F17.7,G12.5,F17.7,F8.3,F8.3,F8.3,F8.3)$/;"	l	subroutine:PATH	file:
60	optim.projh.f	/^   60       continue$/;"	l	subroutine:dgeco	file:
60	optim.projh.f	/^   60    continue$/;"	l	subroutine:dgedi	file:
60	optim.projh.f	/^   60 continue$/;"	l	subroutine:dgefa	file:
60	optim.rbperm.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
60	optim.scdiff.f	/^60          CONTINUE$/;"	l	subroutine:SCDIFF	file:
60	optim.symmetry.f	/^60          CONTINUE$/;"	l	subroutine:SYMMETRY	file:
60	optim.unrescalcdihe.f	/^ 60   CONTINUE$/;"	l	subroutine:UEDITRGYR	file:
60	optim.unrestransform.f	/^   60  CONTINUE$/;"	l	subroutine:UNRSGETBEE	file:
60	pathsample.dsort.f	/^   60 CONTINUE$/;"	l	subroutine:XERPRN	file:
60	pathsample.dsort.f	/^   60 M = M-1$/;"	l	subroutine:DSORT	file:
60	pathsample.eig.f	/^60    CONTINUE$/;"	l	subroutine:EIG	file:
60	pathsample.input.f	/^60    L=L+1$/;"	l	file:
60	pathsample.input.f	/^60    M(I:I)=CHAR(L+I-1)$/;"	l	subroutine:READA	file:
60	pathsample.input.f	/^60    STATE=4$/;"	l	subroutine:READF	file:
60	pathsample.mergedb.f90	/^60 CONTINUE$/;"	l	subroutine:MERGEDB	file:
60	pathsample.minperm.f	/^   60    IF (K.EQ.0) THEN$/;"	l	subroutine:JOVOSAP	file:
60	pathsample.minpermdist.f90	/^60 NCHOOSE1=0$/;"	l	subroutine:MINPERMDIST	file:
60	pathsample.minpermdistrbcom.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:MINPERMDISTRBCOM	file:
60	pathsample.rbperm.f90	/^60    NCHOOSE1 = 0$/;"	l	subroutine:RBMINPERMDIST	file:
60	pathsample.reweight.f	/^   60          CONTINUE$/;"	l	function:DLANTR	file:
60	pathsample.reweight.f	/^   60          CONTINUE$/;"	l	subroutine:DGERFS	file:
60	pathsample.reweight.f	/^   60       CONTINUE$/;"	l	subroutine:DLATRS	file:
60	pathsample.reweight.f	/^   60    CONTINUE$/;"	l	subroutine:DGEEQU	file:
60	pathsample.reweight.f	/^   60    CONTINUE$/;"	l	subroutine:DGESVX	file:
60	pathsample.reweight.f	/^   60    CONTINUE$/;"	l	subroutine:DLAQGE	file:
60	pathsample.reweight.f	/^   60 CONTINUE$/;"	l	subroutine:DLACN2	file:
60	pathsample.reweight.f	/^   60 CONTINUE$/;"	l	subroutine:DLACON	file:
600	optim.symmetry.f	/^600            CONTINUE$/;"	l	subroutine:SYMMETRY	file:
61	optim.minperm.f	/^   61    T=T+1$/;"	l	subroutine:JOVOSAP	file:
61	pathsample.minperm.f	/^   61    T=T+1$/;"	l	subroutine:JOVOSAP	file:
610	optim.symmetry.f	/^610         CONTINUE$/;"	l	subroutine:SYMMETRY	file:
62	optim.minperm.f	/^   62    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
62	pathsample.minperm.f	/^   62    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
620	optim.symmetry.f	/^620      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
625	pathsample.amhdump.f90	/^625      CONTINUE$/;"	l	subroutine:AMHDUMP	file:
625	pathsample.amhdump.f90	/^625     CONTINUE$/;"	l	subroutine:AMHRELQ	file:
63	optim.minperm.f	/^   63    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
63	pathsample.minperm.f	/^   63    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
630	optim.symmetry.f	/^630   ANG = 180.D0$/;"	l	subroutine:SYMMETRY	file:
64	optim.minperm.f	/^   64    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
64	pathsample.minperm.f	/^   64    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
640	optim.symmetry.f	/^640         FORMAT(' Reflection in plane ',i2,' is a valid ',$/;"	l	subroutine:SYMMETRY	file:
65	mylbfgs.old.f90	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:MYLBFGS	file:
65	optim.amber.f	/^65    CONTINUE$/;"	l	subroutine:aparams	file:
65	optim.input.f	/^65    DO I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	optim.input.f	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	optim.minpermdist.f90	/^65 NCHOOSE1=NCHOOSE1+1$/;"	l	subroutine:MINPERMDIST	file:
65	optim.minpermdistrbcom.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
65	optim.rbperm.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:RBMINPERMDIST	file:
65	pathsample.input.f	/^65    DO 70 I=K+1,LEN(M)$/;"	l	subroutine:READA	file:
65	pathsample.input.f	/^65    IF (L .GT. LAST .OR. CHAR(L) .EQ. TERM) GO TO 67$/;"	l	file:
65	pathsample.mergedb.f90	/^65 CONTINUE$/;"	l	subroutine:MERGEDB	file:
65	pathsample.minpermdist.f90	/^65 NCHOOSE1=NCHOOSE1+1$/;"	l	subroutine:MINPERMDIST	file:
65	pathsample.minpermdistrbcom.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:MINPERMDISTRBCOM	file:
65	pathsample.rbperm.f90	/^65    NCHOOSE1 = NCHOOSE1+1$/;"	l	subroutine:RBMINPERMDIST	file:
650	optim.symmetry.f	/^650         FORMAT(' Rotation about ',i2,' is a valid symmetry operation ')$/;"	l	subroutine:SYMMETRY	file:
651	optim.symmetry.f	/^651   IHIGH=0$/;"	l	subroutine:SYMMETRY	file:
652	optim.symmetry.f	/^652   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
653	optim.intlbfgs.f90	/^653         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
653	optim.symmetry.f	/^653              FORMAT(A80)$/;"	l	subroutine:SYMMETRY	file:
654	optim.intlbfgs.f90	/^654          CONTINUE$/;"	l	subroutine:INTLBFGS	file:
659	optim.intlbfgs.f90	/^659         CONTINUE$/;"	l	subroutine:INTLBFGS	file:
660	optim.symmetry.f	/^660   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
664	optim.potential.f	/^664            READ(7,'(A)',ERR=665) STRING$/;"	l	subroutine:POTENTIAL	file:
665	optim.potential.f	/^665            CONTINUE$/;"	l	subroutine:POTENTIAL	file:
666	optim.JM.f	/^666      CLOSE(33)$/;"	l	subroutine:JMEC	file:
666	optim.bfgsts.f	/^666   CONTINUE$/;"	l	subroutine:CHECKIND	file:
666	optim.bfgsts.f	/^666   IF (.NOT.FIXD) THEN$/;"	l	subroutine:BFGSTS	file:
666	optim.dftb.f	/^666           CONTINUE$/;"	l	subroutine:DFDERIV1	file:
666	optim.efol.f90	/^666      J1=J1+1$/;"	l	subroutine:EFOL	file:
666	optim.h2o.f	/^666   CONTINUE$/;"	l	subroutine:H2O	file:
666	optim.hybridmin.f	/^666         J1=J1+1$/;"	l	subroutine:HYBRIDMIN	file:
666	optim.intbfgsts.f	/^666   IF (.NOT.FIXD) THEN$/;"	l	subroutine:INTBFGSTS	file:
666	optim.potential.f	/^666   WRITE(*,'(A)') ' potential> Error reading CADPAC or GAMES output'$/;"	l	subroutine:POTENTIAL	file:
666	pathsample.connect.f	/^666   CLOSE(1)$/;"	l	subroutine:CONNECT	file:
666	pathsample.newconn.f	/^666      CONTINUE$/;"	l	subroutine:NEWCONN	file:
67	optim.input.f	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
67	pathsample.input.f	/^67    IF (W .EQ. '#INCLUDE') THEN$/;"	l	file:
670	optim.symmetry.f	/^670   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
680	optim.symmetry.f	/^680      FORMAT(' The molecule possesses an inversion center. ')$/;"	l	subroutine:SYMMETRY	file:
683	pathsample.amhdump.f90	/^683         FORMAT(3(I6,1X),F8.4,1X,I5,' STUCT SNAP T T TID')$/;"	l	subroutine:AMHDUMP	file:
690	optim.symmetry.f	/^690   FORMAT ('Symmetry bits: ',3(1X,I3))$/;"	l	subroutine:SYMMETRY	file:
699	optim.msevb.f90	/^ 699     enddo             $/;"	l	subroutine:vh2ointer	file:
70	lbfgs.f	/^ 70   FORMAT(\/'   I   NFN',4X,'FUNC',8X,'GNORM',7X,'STEPLENGTH'\/)$/;"	l	subroutine:LB1	file:
70	optim.EYtrap.f	/^70       CONTINUE$/;"	l	subroutine:EYDTRAP	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2C	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2CC	file:
70	optim.JM.f	/^70       CONTINUE$/;"	l	subroutine:JM2P	file:
70	optim.amber.f	/^70    CONTINUE$/;"	l	subroutine:aparams	file:
70	optim.aziz.f	/^70       CONTINUE$/;"	l	subroutine:AZIZ	file:
70	optim.c60diff.f	/^70       CONTINUE$/;"	l	subroutine:C60DIFF	file:
70	optim.c60p.f	/^70       CONTINUE$/;"	l	subroutine:C60P	file:
70	optim.dctrap.f	/^70       CONTINUE$/;"	l	subroutine:DCTRAP	file:
70	optim.dqag.f	/^   70 CONTINUE$/;"	l	subroutine:DQPSRT	file:
70	optim.dtrap.f	/^70       CONTINUE$/;"	l	subroutine:DTRAP	file:
70	optim.efol.f90	/^70    CONTINUE$/;"	l	subroutine:EFOL	file:
70	optim.eig.f	/^70    CONTINUE$/;"	l	subroutine:EIG	file:
70	optim.escp.f	/^70       CONTINUE$/;"	l	subroutine:DSCP	file:
70	optim.h2o.f	/^   70 CONTINUE $/;"	l	subroutine:DRVTV	file:
70	optim.input.f	/^70    ITEM=0$/;"	l	file:
70	optim.input.f	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	optim.input.f	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	optim.ions.f	/^70       CONTINUE$/;"	l	subroutine:IONS	file:
70	optim.mdiff.f	/^70       CONTINUE$/;"	l	subroutine:MDIFF	file:
70	optim.mied.f	/^70       CONTINUE$/;"	l	subroutine:MIED	file:
70	optim.minperm.f	/^   70    IF (MIN.EQ.0) GOTO 80$/;"	l	subroutine:JOVOSAP	file:
70	optim.mlatmin.f	/^70    CONTINUE$/;"	l	subroutine:MLATMIN	file:
70	optim.mpdiff.f	/^70       CONTINUE$/;"	l	subroutine:MPDIFF	file:
70	optim.mpdiff.f	/^70       CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
70	optim.msdiff.f	/^70       CONTINUE$/;"	l	subroutine:MSDIFF	file:
70	optim.mslatmin.f	/^70    CONTINUE$/;"	l	subroutine:MSLATMIN	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBMV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STBSV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPMV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STPSV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRMV	file:
70	optim.mylapack.f	/^   70                    CONTINUE$/;"	l	subroutine:STRSV	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGBMV	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SGEMV	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSPR2	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR	file:
70	optim.mylapack.f	/^   70                CONTINUE $/;"	l	subroutine:SSYR2	file:
70	optim.mylapack.f	/^   70                CONTINUE$/;"	l	subroutine:DTBSV	file:
70	optim.mylapack.f	/^   70             CONTINUE$/;"	l	subroutine:DSYR	file:
70	optim.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSBMV	file:
70	optim.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSPMV	file:
70	optim.mylapack.f	/^   70            CONTINUE$/;"	l	subroutine:SSYMV	file:
70	optim.mylapack.f	/^   70       CONTINUE$/;"	l	subroutine:DPBTRF	file:
70	optim.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK2	file:
70	optim.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK4	file:
70	optim.mylapack.f	/^   70     CONTINUE$/;"	l	subroutine:SCHCK5	file:
70	optim.mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SCHCK3	file:
70	optim.mylapack.f	/^   70 CONTINUE$/;"	l	subroutine:SMESSG	file:
70	optim.projh.f	/^   70          continue$/;"	l	subroutine:dgeco	file:
70	optim.projh.f	/^   70 continue$/;"	l	subroutine:dgedi	file:
70	optim.projh.f	/^   70 continue$/;"	l	subroutine:dgefa	file:
70	optim.scdiff.f	/^70       CONTINUE$/;"	l	subroutine:SCDIFF	file:
70	optim.sortxyz.f	/^70    CONTINUE$/;"	l	subroutine:SORTXYZ	file:
70	optim.symmetry.f	/^70       CONTINUE$/;"	l	subroutine:SYMMETRY	file:
70	pathsample.dsort.f	/^   70 IF (J-I .GE. 1) GO TO 30$/;"	l	subroutine:DSORT	file:
70	pathsample.eig.f	/^70    CONTINUE$/;"	l	subroutine:EIG	file:
70	pathsample.input.f	/^70    ITEM=0$/;"	l	file:
70	pathsample.input.f	/^70    K=-TP$/;"	l	subroutine:READK	file:
70	pathsample.input.f	/^70    M(I:I)=SPACE$/;"	l	subroutine:READA	file:
70	pathsample.input.f	/^70    STATE=2$/;"	l	subroutine:READF	file:
70	pathsample.minperm.f	/^   70    IF (MIN.EQ.0) GOTO 80$/;"	l	subroutine:JOVOSAP	file:
70	pathsample.reweight.f	/^   70             CONTINUE$/;"	l	function:DLANTR	file:
70	pathsample.reweight.f	/^   70          CONTINUE$/;"	l	subroutine:DGESVX	file:
70	pathsample.reweight.f	/^   70       CONTINUE$/;"	l	subroutine:DGERFS	file:
70	pathsample.reweight.f	/^   70       CONTINUE$/;"	l	subroutine:DLATRS	file:
70	pathsample.reweight.f	/^   70 CONTINUE$/;"	l	subroutine:DGEEQU	file:
70	pathsample.reweight.f	/^   70 CONTINUE$/;"	l	subroutine:DLACN2	file:
70	pathsample.reweight.f	/^   70 CONTINUE$/;"	l	subroutine:DLACON	file:
71	optim.input.f	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	optim.minperm.f	/^   71    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
71	optim.unrescalcdihe.f	/^ 71   FORMAT(\/' RGYR:'\/)$/;"	l	subroutine:UEDITRGYR	file:
71	pathsample.input.f	/^71    KXIMP=KXIMP-1$/;"	l	subroutine:READF	file:
71	pathsample.minperm.f	/^   71    CONTINUE$/;"	l	subroutine:JOVOSAP	file:
72	optim.input.f	/^72    AD=I$/;"	l	subroutine:READF	file:
72	optim.unrescalcdihe.f	/^ 72   FORMAT(\/' RGYR:  Mass weighted results:'\/)$/;"	l	subroutine:UEDITRGYR	file:
72	pathsample.input.f	/^72    AD=I$/;"	l	subroutine:READF	file:
73	optim.unrescalcdihe.f	/^ 73   FORMAT(\/' RGYR:  Geometric results:'\/)$/;"	l	subroutine:UEDITRGYR	file:
74	optim.unrescalcdihe.f	/^ 74   FORMAT(\/'       Radius of gyration=',F12.5,5X,$/;"	l	subroutine:UEDITRGYR	file:
740	optim.symmetry.f	/^740   CONTINUE$/;"	l	subroutine:SYMMETRY	file:
750	optim.symmetry.f	/^750      FORMAT(' symmetry> The full molecular point group is ',A4,'.')$/;"	l	subroutine:SYMMETRY	file:
754	optim.h2o.f	/^754   CONTINUE$/;"	l	subroutine:H2O	file:
76	optim.fetchz.f	/^76                format(3(G25.15))$/;"	l	subroutine:FETCHZ	file:
76	optim.geopt.f	/^76                format(A2,3(F20.10))$/;"	l	subroutine:GEOPT	file:
760	optim.symmetry.f	/^760   FORMAT(' symmetry> Distance tolerance=',F12.5,' Inertia tolerance=',F12.5)  $/;"	l	subroutine:SYMMETRY	file:
764	optim.fetchz.f	/^764    CONTINUE$/;"	l	subroutine:FETCHZ	file:
77	optim.morph.f	/^77    CALL POTENTIAL(COORDS,ENERGY,GRAD,.TRUE.,.FALSE.,RMS,.FALSE.,.FALSE.)$/;"	l	subroutine:MORPH	file:
770	optim.symmetry.f	/^770   FORMAT(80('*'))$/;"	l	subroutine:SYMMETRY	file:
772	optim.TIPmodes.f	/^772   CONTINUE $/;"	l	subroutine:H2OMODES	file:
775	optim.symmetry.f	/^775      FORMAT(A1,I1,A1)$/;"	l	subroutine:SYMMETRY	file:
776	optim.symmetry.f	/^776      FORMAT(A1,I2,A1)$/;"	l	subroutine:SYMMETRY	file:
777	optim.intlbfgs.f90	/^   777 CONTINUE$/;"	l	subroutine:INTLBFGS	file:
777	optim.intlbfgslj.f90	/^   777 CONTINUE$/;"	l	subroutine:INTLBFGSLJ	file:
777	optim.symmetry.f	/^777      FORMAT(A3)$/;"	l	subroutine:SYMMETRY	file:
777	pathsample.connectd.f90	/^777 CONTINUE$/;"	l	subroutine:CONNECTD	file:
777	pathsample.connectdist.f90	/^777 CONTINUE$/;"	l	subroutine:CONNECTDIST	file:
777	pathsample.getppair.f90	/^777      CONTINUE$/;"	l	subroutine:GETPPAIR	file:
777	pathsample.newconn.f	/^777         LASTONE=LASTONE+1$/;"	l	subroutine:NEWCONN	file:
777	pathsample.regroupfree2.f90	/^777 CONTINUE ! End of iterative regrouping loop.$/;"	l	subroutine:REGROUPFREE2	file:
777	pathsample.setup.f	/^777         NDUMMY=NDUMMY-1$/;"	l	subroutine:SETUP	file:
778	pathsample.setup.f	/^778         NDUMMY=NDUMMY-1$/;"	l	subroutine:SETUP	file:
790	optim.symmetry.f	/^790   FORMAT(' symmetry> The largest Abelian subgroup of the full molecular point group is ',A4,'.')$/;"	l	subroutine:SYMMETRY	file:
799	optim.msevb.f90	/^ 799     enddo$/;"	l	subroutine:vh2ointra	file:
8	optim.dqag.f	/^    8   IF(ERROR2.GT.ERROR1) GO TO 10$/;"	l	subroutine:DQAGE	file:
80	lbfgs.f	/^ 80   FORMAT(2(I4,1X),3X,3(1PD10.3,2X))$/;"	l	subroutine:LB1	file:
80	lbfgs.f	/^ 80   ITER= ITER+1$/;"	l	subroutine:LBFGS	file:
80	optim.EYtrap.f	/^80          CONTINUE$/;"	l	subroutine:EYDTRAP	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2C	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2CC	file:
80	optim.JM.f	/^80    CONTINUE$/;"	l	subroutine:JM2P	file:
80	optim.amber.f	/^80     CONTINUE$/;"	l	subroutine:aparams	file:
80	optim.aziz.f	/^80    CONTINUE$/;"	l	subroutine:AZIZ	file:
80	optim.bfgsts.f	/^80       NMDONE=INEG$/;"	l	subroutine:CHECKIND	file:
80	optim.bfgsts.f	/^80    CONTINUE$/;"	l	subroutine:ITEIG	file:
80	optim.bfgsts.f	/^80    NMDONE=INEG$/;"	l	subroutine:CHECKIND2	file:
80	optim.c60diff.f	/^80    CONTINUE$/;"	l	subroutine:C60DIFF	file:
80	optim.c60p.f	/^80    CONTINUE$/;"	l	subroutine:C60P	file:
80	optim.dctrap.f	/^80          CONTINUE$/;"	l	subroutine:DCTRAP	file:
80	optim.dqag.f	/^   80 IORD(K+1) = LAST$/;"	l	subroutine:DQPSRT	file:
80	optim.dtrap.f	/^80          CONTINUE$/;"	l	subroutine:DTRAP	file:
80	optim.eig.f	/^80    S=SQRT(0.250*(P-R)**2+Q**2)$/;"	l	subroutine:EIG	file:
80	optim.escp.f	/^80    CONTINUE$/;"	l	subroutine:DSCP	file:
80	optim.input.f	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	optim.input.f	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	optim.ions.f	/^80    CONTINUE$/;"	l	subroutine:IONS	file:
80	optim.mdiff.f	/^80    CONTINUE$/;"	l	subroutine:MDIFF	file:
80	optim.mied.f	/^80    CONTINUE$/;"	l	subroutine:MIED	file:
80	optim.minperm.f	/^   80    I=LAB(J)$/;"	l	subroutine:JOVOSAP	file:
80	optim.mpdiff.f	/^80    CONTINUE$/;"	l	subroutine:MPDIFF	file:
80	optim.mpdiff.f	/^80    CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
80	optim.msdiff.f	/^80    CONTINUE$/;"	l	subroutine:MSDIFF	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBMV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STBSV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPMV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STPSV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRMV	file:
80	optim.mylapack.f	/^   80             CONTINUE$/;"	l	subroutine:STRSV	file:
80	optim.mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DPBTRF	file:
80	optim.mylapack.f	/^   80          CONTINUE$/;"	l	subroutine:DTBSV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGBMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SGEMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSBMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSPR2	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYMV	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR	file:
80	optim.mylapack.f	/^   80         CONTINUE$/;"	l	subroutine:SSYR2	file:
80	optim.mylapack.f	/^   80       CONTINUE$/;"	l	subroutine:DSYR	file:
80	optim.mylapack.f	/^   80     CONTINUE$/;"	l	subroutine:SCHCK1	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK2	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK3	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK4	file:
80	optim.mylapack.f	/^   80 CONTINUE$/;"	l	subroutine:SCHCK5	file:
80	optim.projh.f	/^   80       continue$/;"	l	subroutine:dgeco	file:
80	optim.projh.f	/^   80       continue$/;"	l	subroutine:dgedi	file:
80	optim.scdiff.f	/^80    CONTINUE$/;"	l	subroutine:SCDIFF	file:
80	optim.symmetry.f	/^80       CONTINUE$/;"	l	subroutine:SYMMETRY	file:
80	optim.utils.f	/^ 80   FORMAT(3(1X,F10.5))$/;"	l	subroutine:COMPARE2	file:
80	pathsample.dsort.f	/^   80 I = I+1$/;"	l	subroutine:DSORT	file:
80	pathsample.eig.f	/^80    S=SQRT(0.250*(P-R)**2+Q**2)$/;"	l	subroutine:EIG	file:
80	pathsample.input.f	/^80    STATE=5$/;"	l	subroutine:READF	file:
80	pathsample.input.f	/^80    TCOMMA=.TRUE.$/;"	l	file:
80	pathsample.minperm.f	/^   80    I=LAB(J)$/;"	l	subroutine:JOVOSAP	file:
80	pathsample.reweight.f	/^   80          CONTINUE$/;"	l	function:DLANTR	file:
80	pathsample.reweight.f	/^   80       CONTINUE$/;"	l	subroutine:DGESVX	file:
80	pathsample.reweight.f	/^   80    CONTINUE$/;"	l	subroutine:DGEEQU	file:
80	pathsample.reweight.f	/^   80    CONTINUE$/;"	l	subroutine:DGERFS	file:
80	pathsample.reweight.f	/^   80    CONTINUE$/;"	l	subroutine:DLATRS	file:
80	pathsample.reweight.f	/^   80 CONTINUE$/;"	l	subroutine:DLACN2	file:
80	pathsample.reweight.f	/^   80 CONTINUE$/;"	l	subroutine:DLACON	file:
800	optim.input.f	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
800	optim.symmetry.f	/^800      CONTINUE$/;"	l	subroutine:SYMMETRY	file:
800	pathsample.KMCcommit.f	/^800   CONTINUE$/;"	l	subroutine:KMCCOMMIT	file:
800	pathsample.input.f	/^800   IF (SKIPBL .AND. NITEM .EQ. 0) GO TO 10$/;"	l	file:
81	optim.input.f	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
81	optim.sortc.f	/^ 81   CONTINUE$/;"	l	subroutine:SortC	file:
81	pathsample.input.f	/^81    IF (I .EQ. 10) I=0$/;"	l	subroutine:READF	file:
877	pathsample.setup.f	/^877         NDUMMY=NDUMMY-1$/;"	l	subroutine:SETUP	file:
878	pathsample.setup.f	/^878         NDUMMY=NDUMMY-1$/;"	l	subroutine:SETUP	file:
888	optim.potential.f	/^888      CONTINUE$/;"	l	subroutine:POTENTIAL	file:
888	pathsample.newconn.f	/^888         LASTONE=LASTONE+1$/;"	l	subroutine:NEWCONN	file:
888	pathsample.regroupfree2.f90	/^888 CONTINUE ! Top of iterative regrouping loop$/;"	l	subroutine:REGROUPFREE2	file:
889	optim.potential.f	/^889      CONTINUE$/;"	l	subroutine:POTENTIAL	file:
890	optim.potential.f	/^890      CONTINUE$/;"	l	subroutine:POTENTIAL	file:
899	optim.msevb.f90	/^ 899     enddo$/;"	l	subroutine:vh3ointra	file:
90	lbfgs.f	/^   90    DIAG(I)= YS\/YY$/;"	l	subroutine:LBFGS	file:
90	lbfgs.f	/^ 90   FORMAT(' FINAL POINT X= ')$/;"	l	subroutine:LB1	file:
90	optim.EYtrap.f	/^90    CONTINUE$/;"	l	subroutine:EYDTRAP	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2C	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2CC	file:
90	optim.JM.f	/^90             CONTINUE$/;"	l	subroutine:JM2P	file:
90	optim.aziz.f	/^90             CONTINUE$/;"	l	subroutine:AZIZ	file:
90	optim.bfgsts.f	/^90       EVALMIN=EVALMIN+EVALMAX*0.55D0$/;"	l	subroutine:CHECKIND	file:
90	optim.bfgsts.f	/^90    CONTINUE$/;"	l	subroutine:ITEIG	file:
90	optim.bfgsts.f	/^90    IF (PTEST) PRINT*$/;"	l	subroutine:BFGSTS	file:
90	optim.c60diff.f	/^90             CONTINUE$/;"	l	subroutine:C60DIFF	file:
90	optim.c60p.f	/^90             CONTINUE$/;"	l	subroutine:C60P	file:
90	optim.dctrap.f	/^ 90   CONTINUE$/;"	l	subroutine:DCTRAP	file:
90	optim.dqag.f	/^   90 MAXERR = IORD(NRMAX)$/;"	l	subroutine:DQPSRT	file:
90	optim.dtrap.f	/^90    CONTINUE$/;"	l	subroutine:DTRAP	file:
90	optim.eig.f	/^90    ALP=SUM+S$/;"	l	subroutine:EIG	file:
90	optim.escp.f	/^90             CONTINUE$/;"	l	subroutine:DSCP	file:
90	optim.hybridmin.f	/^90    IF (PTEST) PRINT*$/;"	l	subroutine:HYBRIDMIN	file:
90	optim.input.f	/^90    BLANK=.TRUE.$/;"	l	file:
90	optim.intbfgsts.f	/^90    IF (PTEST) PRINT*$/;"	l	subroutine:INTBFGSTS	file:
90	optim.ions.f	/^90             CONTINUE$/;"	l	subroutine:IONS	file:
90	optim.mdiff.f	/^90             CONTINUE$/;"	l	subroutine:MDIFF	file:
90	optim.mied.f	/^90             CONTINUE$/;"	l	subroutine:MIED	file:
90	optim.minperm.f	/^   90 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
90	optim.morph.f	/^90    CONTINUE$/;"	l	subroutine:MORPH	file:
90	optim.mpdiff.f	/^90             CONTINUE$/;"	l	subroutine:MPDIFF	file:
90	optim.mpdiff.f	/^90             CONTINUE$/;"	l	subroutine:MPDIFFDS	file:
90	optim.msdiff.f	/^90             CONTINUE$/;"	l	subroutine:MSDIFF	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBMV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STBSV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPMV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STPSV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRMV	file:
90	optim.mylapack.f	/^   90                CONTINUE $/;"	l	subroutine:STRSV	file:
90	optim.mylapack.f	/^   90             CONTINUE$/;"	l	subroutine:DTBSV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGBMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SGEMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSBMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSPMV	file:
90	optim.mylapack.f	/^   90            CONTINUE$/;"	l	subroutine:SSYMV	file:
90	optim.mylapack.f	/^   90       CONTINUE$/;"	l	subroutine:DPBTRF	file:
90	optim.mylapack.f	/^   90     CONTINUE$/;"	l	subroutine:SCHCK3	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK1	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK2	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK4	file:
90	optim.mylapack.f	/^   90 CONTINUE$/;"	l	subroutine:SCHCK5	file:
90	optim.projh.f	/^   90       continue$/;"	l	subroutine:dgedi	file:
90	optim.projh.f	/^   90    continue$/;"	l	subroutine:dgeco	file:
90	optim.scdiff.f	/^90             CONTINUE$/;"	l	subroutine:SCDIFF	file:
90	pathsample.dsort.f	/^   90 DX(K+1) = DX(K)$/;"	l	subroutine:DSORT	file:
90	pathsample.eig.f	/^90    ALP=SUM+S$/;"	l	subroutine:EIG	file:
90	pathsample.input.f	/^90    BLANK=.TRUE.$/;"	l	file:
90	pathsample.minperm.f	/^   90 CONTINUE$/;"	l	subroutine:JOVOSAP	file:
90	pathsample.reweight.f	/^   90             CONTINUE$/;"	l	function:DLANTR	file:
90	pathsample.reweight.f	/^   90             CONTINUE$/;"	l	subroutine:DLATRS	file:
90	pathsample.reweight.f	/^   90       CONTINUE$/;"	l	subroutine:DGESVX	file:
90	pathsample.reweight.f	/^   90    CONTINUE$/;"	l	subroutine:DGERFS	file:
90	pathsample.reweight.f	/^   90 CONTINUE$/;"	l	subroutine:DGEEQU	file:
90	pathsample.reweight.f	/^   90 CONTINUE$/;"	l	subroutine:DLACN2	file:
90	pathsample.reweight.f	/^   90 CONTINUE$/;"	l	subroutine:DLACON	file:
900	optim.input.f	/^900   IF (CAT) THEN$/;"	l	file:
900	pathsample.input.f	/^900   IF (CAT) THEN$/;"	l	file:
9000	optim.dqag.f	/^ 9000 FORMAT ('0          ERROR MESSAGE SUMMARY' \/$/;"	l	subroutine:XERSVE	file:
9000	optim.dqag.f	/^ 9000 FORMAT ('1ERROR    1 IN I1MACH - I OUT OF BOUNDS')$/;"	l	function:I1MACH	file:
9000	optim.pertable.f	/^ 9000 FORMAT ('PERTABLE: Mass and at. nr. lookup'\/$/;"	l	subroutine:PERTABLE	file:
9000	pathsample.dsort.f	/^ 9000 FORMAT ('0          ERROR MESSAGE SUMMARY' \/$/;"	l	subroutine:XERSVE	file:
9000	pathsample.dsort.f	/^ 9000 FORMAT ('1ERROR    1 IN I1MACH - I OUT OF BOUNDS')$/;"	l	function:I1MACH	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,'  M =',I4,', N = ',I4,\/,' INCX = ',$/;"	l	subroutine:SCHCK4	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK1	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK2	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTION = ',A,\/,$/;"	l	subroutine:SCHCK5	file:
9001	optim.mylapack.f	/^ 9001 FORMAT (' IN SUBPROGRAM ',A,\/,' TESTS ACTIVE WITH OPTIONS = ',$/;"	l	subroutine:SCHCK3	file:
9010	optim.dqag.f	/^ 9010 FORMAT (1X,A,3X,A,3X,A,3I10)$/;"	l	subroutine:XERSVE	file:
9010	optim.pertable.f	/^ 9010    FORMAT(I3,2X,A5,2X,I5,2X,F10.5)$/;"	l	subroutine:PERTABLE	file:
9010	pathsample.dsort.f	/^ 9010 FORMAT (1X,A,3X,A,3X,A,3I10)$/;"	l	subroutine:XERSVE	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9011	optim.mylapack.f	/^ 9011 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9020	optim.dqag.f	/^ 9020 FORMAT ('0OTHER ERRORS NOT INDIVIDUALLY TABULATED = ', I10)$/;"	l	subroutine:XERSVE	file:
9020	pathsample.dsort.f	/^ 9020 FORMAT ('0OTHER ERRORS NOT INDIVIDUALLY TABULATED = ', I10)$/;"	l	subroutine:XERSVE	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK1	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK2	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK3	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK4	file:
9021	optim.mylapack.f	/^ 9021 FORMAT (' IN SUBPROGRAM ',A,\/,' ARGUMENT ',I2,$/;"	l	subroutine:SCHCK5	file:
9030	optim.dqag.f	/^ 9030 FORMAT (1X)$/;"	l	subroutine:XERSVE	file:
9030	pathsample.dsort.f	/^ 9030 FORMAT (1X)$/;"	l	subroutine:XERSVE	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK1	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK2	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK3	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK4	file:
9031	optim.mylapack.f	/^ 9031 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'RECEIVED A LOSS GRADE OF ', $/;"	l	subroutine:SCHCK5	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK1	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK2	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK3	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK4	file:
9041	optim.mylapack.f	/^ 9041 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'FAILED.')$/;"	l	subroutine:SCHCK5	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK1	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK2	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK3	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK4	file:
9051	optim.mylapack.f	/^ 9051 FORMAT (1X,I2,' SUBPROGRAM ',A,T24,'NOT TESTED.')$/;"	l	subroutine:SCHCK5	file:
93	optim.diis.f	/^93    FORMAT(6(2X,E12.5))$/;"	l	subroutine:DIIS	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3C	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3CC	file:
95	optim.JM.f	/^95             CONTINUE$/;"	l	subroutine:JM3P	file:
95	optim.axdiff.f	/^95             CONTINUE$/;"	l	subroutine:AXDIFF	file:
950	pathsample.input.f	/^950   CHAR(L)=SPACE$/;"	l	file:
96	optim.sortc.f	/^ 96   CONTINUE$/;"	l	subroutine:SortC	file:
975	pathsample.Dijkstra.f90	/^975 CONTINUE ! branch for testing whether ts corresponding to large downhill barriers can be removed$/;"	l	subroutine:DIJKSTRA	file:
98	optim.diis.f	/^ 98       FORMAT(10G13.6)$/;"	l	subroutine:DIIS	file:
987	pathsample.regroupfree2.f90	/^987         CONTINUE$/;"	l	subroutine:REGROUPFREE2	file:
99	optim.input.f	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
99	pathsample.input.f	/^99    IF (NERROR .LE. 1) THEN$/;"	l	subroutine:READF	file:
999	optim.connect.f	/^999   CONTINUE$/;"	l	subroutine:ADDMIN	file:
999	optim.dqag.f	/^  999 RETURN$/;"	l	subroutine:DQAGE	file:
999	optim.sortc.f	/^ 999  Continue$/;"	l	subroutine:SortC	file:
999	pathsample.regroupfree2.f90	/^999 CONTINUE$/;"	l	subroutine:REGROUPFREE2	file:
A	pathsample.GT2data.f90	/^          type(NodeList),pointer :: A$/;"	k	type:Node
A9ATOMTORES	optim.amber9dummy.f90	/^subroutine A9ATOMTORES(/;"	s
A9DUMPMODES	optim.amber9dummy.f90	/^subroutine A9DUMPMODES(/;"	s
A9RESTOATOM	optim.amber9dummy.f90	/^subroutine A9RESTOATOM(/;"	s
AA	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,/;"	v	module:MODUNRES
AAD	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,/;"	v	module:MODUNRES
AAtoEuler	optim.ljcapsidmodule.f90	/^      SUBROUTINE AAtoEuler(/;"	s
ABSC	optim.cubsplstring.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: COEFF(:,:,:), ABSC(/;"	v	module:CUBSPLSTRING
ACCLAN	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN,/;"	v	module:KEY
ACCRAT	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:GMIN_COMMONS
ACCREJ	mc.f90	/^SUBROUTINE ACCREJ(/;"	s
ACESOLV	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB, ACESOLV,/;"	v	module:modcharmm
ACEUPSTEP	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE, NGUESS, NCHENCALLS, ACEUPSTEP$/;"	v	module:modcharmm
ACK	optim.Ackland_wrapper.f	/^      SUBROUTINE ACK(/;"	s
ACKLANDID	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS, ACKLANDID,/;"	v	module:KEY
AD	optim.double.f	/^     1                 V(3*N), R, G(2,2), H, W, CUTOFF, AD(/;"	v
ADDMIN	optim.connect.f	/^      SUBROUTINE ADDMIN(/;"	s
ADDPATH	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS, ADDPATH,/;"	v
ADDPERM	pathsample.addperm.f	/^      SUBROUTINE ADDPERM(/;"	s
ADDPT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT,/;"	v
ADDREPT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT, ADDREPT,/;"	v	module:KEY
ADDTRIPLES	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES,/;"	v
ADJACENT	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: BONDNUM(:), ADJACENT(/;"	v	module:INTCOMMONS
ADM	optim.adm.f	/^      SUBROUTINE ADM(/;"	s
ADMT	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT,/;"	v	module:KEY
AEL3	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,BPP,AEL6,AEL3$/;"	v	module:MODUNRES
AEL6	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,BPP,AEL6,/;"	v	module:MODUNRES
AEZR1	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:LJCAPSIDMODULE
AEZR1	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(/;"	v	module:PYMODULE
AEZR2	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:LJCAPSIDMODULE
AEZR2	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(:,:,:),AEZR1(:,:,:), AEZR2(/;"	v	module:PYMODULE
AHH	optim.VRTMCY5f.f90	/^							bOO = 2.71770d0,&$/;"	v	module:MCY
AIJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HAM, AIJ$/;"	v	module:msevb_common
ALIGNDIR	optim.intcommons.f90	/^  LOGICAL :: ALIGNDIR /;"	v	module:INTCOMMONS
ALJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ALJ /;"	v	module:msevb_common
ALLCHIRALH_ALIGN	optim.chiralhyd.f90	/^      SUBROUTINE ALLCHIRALH_ALIGN(/;"	s
ALLSTEPS	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP, DUMPSP, NOFRQS, &$/;"	v	module:KEY
ALLVECTORS	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS,/;"	v	module:KEY
ALPH	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,PHI,ALPH,/;"	v	module:MODUNRES
ALPHACC	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10, RHOC20H, RHOCH20, &$/;"	v	module:KEY
ALPHACH	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH,/;"	v	module:KEY
ALPHAEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ALPHAEQ /;"	v	module:msevb_common
ALPHAHH	optim.key.f90	/^     &        ALPHACC, ALPHAHH,/;"	v	module:KEY
ALPHAM	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM,/;"	v	module:KEY
ALPHAP	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP,/;"	v	module:KEY
ALPHA_BLEH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ALPHA_BLEH /;"	v	module:msevb_common
AMB	optim.amber.f	/^      SUBROUTINE AMB(/;"	s
AMBALIGNDIH	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBALIGNDIH(/;"	s
AMBER	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER,/;"	v	module:KEY
AMBER	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,/;"	v	program:OPTIM4
AMBERA	optim.amber.f	/^      SUBROUTINE AMBERA$/;"	s
AMBERD	optim.amber.f	/^      SUBROUTINE AMBERD$/;"	s
AMBERDIHEDR	optim.amber9dummy.f90	/^SUBROUTINE  AMBERDIHEDR(/;"	s
AMBERENERGIES	optim.amber9dummy.f90	/^SUBROUTINE AMBERENERGIES(/;"	s
AMBERENERGIEST	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST,/;"	v	module:modamber9
AMBERFINALIO	optim.amber9dummy.f90	/^SUBROUTINE AMBERFINALIO(/;"	s
AMBERICT	optim.modamber9.f90	/^logical:: AMBERICT,/;"	v	module:modamber9
AMBERINTERFACE	optim.amber9dummy.f90	/^SUBROUTINE AMBERINTERFACE(/;"	s
AMBERS	optim.amber.f	/^      SUBROUTINE AMBERS$/;"	s
AMBERSECDER	optim.amber9dummy.f90	/^SUBROUTINE AMBERSECDER(/;"	s
AMBERT	optim.key.f90	/^     &        BBRSDMT, AMBERT,/;"	v	module:KEY
AMBERT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,/;"	v	program:OPTIM4
AMBERT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT, ANGLEAXIS, TAGT, CHARMMT, AMBERT,/;"	v
AMBG	optim.amber.f	/^      SUBROUTINE AMBG$/;"	s
AMBGETANGLE	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETANGLE(/;"	s
AMBGETNATINTERN	optim.amb_natinterns.f90	/^      SUBROUTINE AMBGETNATINTERN$/;"	s
AMBGETNNZNAT	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETNNZNAT(/;"	s
AMBGETOUTOFPLANE	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETOUTOFPLANE(/;"	s
AMBGETTORSION	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBGETTORSION(/;"	s
AMBICDNEBT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT, AMBOLDPERTT, AMBICDNEBT$/;"	v	module:modamber9
AMBIT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT,/;"	v	module:modamber9
AMBOLDPERTT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,AMBIT, AMBOLDPERTT,/;"	v	module:modamber9
AMBPDB_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT, MDCRD_UNIT, AMBRST_UNIT, AMBPDB_UNIT$/;"	v	module:modamber9
AMBPERTT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT, AMBPERTT,/;"	v	module:modamber9
AMBRST_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT, MDCRD_UNIT, AMBRST_UNIT,/;"	v	module:modamber9
AMBSTEPT	optim.modamber9.f90	/^logical:: AMBERICT, AMBSTEPT,/;"	v	module:modamber9
AMBTRANSFORM	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMBTRANSFORM(/;"	s
AMBWORD	keyword.f90	27;"	c	subroutine:KEYWORD
AMB_GETBACKBONE	optim.amb_natinterns.f90	/^      SUBROUTINE AMB_GETBACKBONE$/;"	s
AMB_GETBEENAT	optim.amb_natinterns.f90	/^      SUBROUTINE AMB_GETBEENAT(/;"	s
AMB_GETKDNAT	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMB_GETKDNAT(/;"	s
AMB_NATINTSETUP	optim.amb_natinterns.f90	/^      SUBROUTINE AMB_NATINTSETUP$/;"	s
AMB_PATOM	optim.charmmBildc.f	/^      SUBROUTINE AMB_PATOM(/;"	s
AMB_TRANSBACKDELTA	optim.ambnatintern_extras.f90	/^      SUBROUTINE AMB_TRANSBACKDELTA(/;"	s
AMCHNMAX	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX,/;"	v	module:modamber9
AMCHNMIN	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN,/;"	v	module:modamber9
AMCHPMAX	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX,/;"	v	module:modamber9
AMCHPMIN	optim.modamber9.f90	/^DOUBLE PRECISION :: AMCHNMAX, AMCHNMIN, AMCHPMAX, AMCHPMIN$/;"	v	module:modamber9
AMH	optim.main.f90	/^      LOGICAL AMH$/;"	v	program:OPTIM4
AMHALLATOMMIN	pathsample.amhdump.f90	/^      SUBROUTINE AMHALLATOMMIN$/;"	s
AMHALLATOMMINT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT, SHORTCUTT, MERGEDBT, UNTRAPT, AMHT,  AMHALLATOMMINT,/;"	v
AMHALLATOMTS	pathsample.amhdump.f90	/^      SUBROUTINE AMHALLATOMTS$/;"	s
AMHALLATOMTST	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST,/;"	v
AMHDUMP	pathsample.amhdump.f90	/^      SUBROUTINE AMHDUMP(/;"	s
AMHFINALIO	optim.amhdummy.f	/^      SUBROUTINE AMHFINALIO(/;"	s
AMHQ	pathsample.amhdump.f90	/^      SUBROUTINE AMHQ(/;"	s
AMHQCONT	pathsample.amhdump.f90	/^      SUBROUTINE AMHQCONT(/;"	s
AMHQCONTT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT /;"	v
AMHQT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT,/;"	v
AMHRELQ	pathsample.amhdump.f90	/^      SUBROUTINE AMHRELQ(/;"	s
AMHRELQT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT ,AMHRMSDT, AMHRELQT,/;"	v
AMHRMSD	pathsample.amhdump.f90	/^      SUBROUTINE AMHRMSD(/;"	s
AMHRMSDT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT ,AMHRMSDT,/;"	v
AMHT	optim.key.f90	/^      LOGICAL :: AMHT$/;"	v	module:KEY
AMHT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT, SHORTCUTT, MERGEDBT, UNTRAPT, AMHT,/;"	v
AMH_RELCO	pathsample.amhdump.f90	/^      SUBROUTINE AMH_RELCO(/;"	s
AMH_RELCOT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT ,AMHRMSDT, AMHRELQT, AMH_RELCOT,/;"	v
AMHmaxsiz	optim.amhglobals.f	/^      integer AMHmaxsiz$/;"	v	module:amhglobals
AMIDEFAIL	mc.vars.inc.f90	/^      LOGICAL CHIRALFAIL,AMIDEFAIL,/;"	v
AMM	optim.key.f90	/^     &        APP, AMM,/;"	v	module:KEY
AM_BACKBONE	optim.modamber9.f90	/^logical, dimension (:),allocatable ::AM_BACKBONE$/;"	v	module:modamber9
AN	bln.vars.inc.f90	/^        DOUBLE PRECISION   AN$/;"	v
ANALYSERESULTS	pathsample.dock.f90	/^SUBROUTINE ANALYSERESULTS$/;"	s	module:DOCKMODULE
ANG	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: ANG /;"	v
ANG	optim.modamber.f90	/^      INTEGER ATOMS,ANG,/;"	v	module:MODAMBER
ANGLEAXIS	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS,/;"	v	module:KEY
ANGLEAXIS	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT, ANGLEAXIS,/;"	v
ANGLEAXIS2	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1, REDOPATH2, ANGLEAXIS2,/;"	v	module:KEY
ANGLEAXIS2	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST, LOWESTFRQT, BISECTT, NGTDISCONNECTALL, ANGLEAXIS2,/;"	v
ANGLEHELL	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,ANGLEHELL,/;"	v	module:MODAMBER
ANSWER	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,/;"	v	module:MODAMBER
AOH	optim.VRTMCY5f.f90	/^							bHH = 1.56704d0,&$/;"	v	module:MCY
AOHEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: AOHEQ /;"	v	module:msevb_common
AOO	optim.VRTMCY5f.f90	/^real*8, parameter :: Q2 = 0.583599d0,&$/;"	v	module:MCY
APM	optim.key.f90	/^     &        APP, AMM, APM,/;"	v	module:KEY
APP	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS, MAXNEBBFGS, MAXINTBFGS, &$/;"	v	module:KEY
APPU	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,/;"	v	module:MODUNRES
ARATIO	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV, ARATIO$/;"	v	module:GMIN_COMMONS
ARC	optim.gsdata.f90	/^     DOUBLE PRECISION :: CHORD, ARC,/;"	k	type:IMGNODE
ARCDERV	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION ARCDERV(/;"	f	module:CUBSPLSTRING
ARCDERVF	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION ARCDERVF(/;"	f	module:CUBSPLSTRING
ARCDIFF	optim.gsdata.f90	/^     DOUBLE PRECISION :: CHORD, ARC, ARCDIFF$/;"	k	type:IMGNODE
ARCLENGTH	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION ARCLENGTH(/;"	f	module:CUBSPLSTRING
ARCTOL	optim.cubsplstring.f90	/^  DOUBLE PRECISION, TARGET :: ARCTOL$/;"	v	module:CUBSPLSTRING
AREPCC	optim.dftb.f	/^      SUBROUTINE AREPCC(/;"	s
ARGSTRING	optim.main.f90	/^      CHARACTER(LEN=80) ARGSTRING,/;"	v	program:OPTIM4
ARG_SWAP	optim.intcoords.f90	/^      SUBROUTINE ARG_SWAP(/;"	s	module:INTCUTILS
ARNOLDIT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT ,AMHRMSDT, AMHRELQT, AMH_RELCOT, DIAGT, ARNOLDIT,/;"	v
ARRAYS	optim.mylapack.f	1051;"	c	subroutine:SCHCK3
ARRAYS	optim.mylapack.f	130;"	c	subroutine:SCHCK1
ARRAYS	optim.mylapack.f	1526;"	c	subroutine:SCHCK4
ARRAYS	optim.mylapack.f	1848;"	c	subroutine:SCHCK5
ARRAYS	optim.mylapack.f	566;"	c	subroutine:SCHCK2
ASORT	pathsample.reweight.f	/^      SUBROUTINE ASORT(/;"	s
ASTEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP,/;"	v	module:GMIN_COMMONS
ATMASS	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: ATMASS /;"	v	module:COMMONS
ATMTYPES	optim.intcommons.f90	/^  CHARACTER*8, ALLOCATABLE :: ATMTYPES(/;"	v	module:INTCOMMONS
ATOI	optim.utils.f	/^       INTEGER FUNCTION ATOI /;"	f
ATOM1	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMACTIVE	optim.key.f90	/^      LOGICAL, ALLOCATABLE :: ATOMACTIVE(/;"	v	module:KEY
ATOMACTIVE	pathsample.common.f90	/^      LOGICAL, ALLOCATABLE :: ATOMACTIVE(/;"	v
ATOMGROUPAXIS	optim.modamber9.f90	/^      INTEGER, ALLOCATABLE :: ATOMGROUPAXIS(/;"	v	module:modamber9
ATOMGROUPNAMES	optim.modamber9.f90	/^      CHARACTER(LEN=10), ALLOCATABLE :: ATOMGROUPNAMES(/;"	v	module:modamber9
ATOMGROUPPSELECT	optim.modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(:),ATOMGROUPPSELECT(/;"	v	module:modamber9
ATOMGROUPS	optim.modamber9.f90	/^      LOGICAL, ALLOCATABLE :: ATOMGROUPS(/;"	v	module:modamber9
ATOMGROUPSCALING	optim.modamber9.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ATOMGROUPSCALING(/;"	v	module:modamber9
ATOMINGROUP	mc.vars.inc.f90	/^      LOGICAL CHIRALFAIL,AMIDEFAIL,GOODSTRUCTURE, LOGDUMMY, DISTOK, ATOMINGROUP(/;"	v
ATOMLABEL	pathsample.common.f90	/^      CHARACTER(LEN=4), ALLOCATABLE :: RESLABEL(:), ATOMLABEL(/;"	v
ATOMPAIR	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
ATOMS	optim.modamber.f90	/^      INTEGER ATOMS,/;"	v	module:MODAMBER
ATOMSINALIST	optim.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST,/;"	v	module:modamber9
ATOMSINALISTLOGICAL	optim.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL,/;"	v	module:modamber9
ATOMSINBLIST	optim.modamber9.f90	/^INTEGER,ALLOCATABLE,DIMENSION(:) :: ATOMSINALIST, ATOMSINBLIST /;"	v	module:modamber9
ATOMSINBLISTLOGICAL	optim.modamber9.f90	/^LOGICAL,ALLOCATABLE,DIMENSION(:) :: ATOMSINALISTLOGICAL, ATOMSINBLISTLOGICAL$/;"	v	module:modamber9
ATOM_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: ATOM_COULOMB$/;"	v	module:msevb_common
ATOMxPOSINC	optim.intcommons.f90	/^  INTEGER :: ATOMxPOSINC(/;"	v	module:INTCOMMONS
AUGM	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,/;"	v	module:MODUNRES
AVH	optim.VRTMCY5f.f90	/^							bOH = 1.50467d0,&$/;"	v	module:MCY
AX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,/;"	v	module:MODAMBER
AXDIFF	optim.axdiff.f	/^      SUBROUTINE AXDIFF(/;"	s
AXPAIRS	optim.axpairs.f	/^      SUBROUTINE AXPAIRS /;"	s
AY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,/;"	v	module:MODAMBER
AZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,/;"	v	module:MODAMBER
AZIZ	optim.aziz.f	/^      SUBROUTINE AZIZ(/;"	s
A_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(/;"	v	module:KEY
Arad	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,Arad /;"	v	module:modamber9
B	bln.vars.inc.f90	/^        DOUBL/;"	v
BACKBONE	optim.intcommons.f90	/^  LOGICAL, ALLOCATABLE :: BACKBONE(/;"	v	module:INTCOMMONS
BACKTCUTOFF	optim.intcommons.f90	/^  DOUBLE PRECISION :: BACKTCUTOFF$/;"	v	module:INTCOMMONS
BACKTPRINTERR	optim.intcommons.f90	/^  LOGICAL :: BACKTPRINTERR /;"	v	module:INTCOMMONS
BAD	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,/;"	v	module:MODUNRES
BAND2SCS	optim.specialfuncts.f90	/^  SUBROUTINE BAND2SCS(/;"	s	module:SPFUNCTS
BARRIERSHORT	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY, DIJINITSTARTT, DIJINITCONTT, RETAINSP, REMOVESP, NOFRQS, &$/;"	v
BARRIERSORT	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch, GT2AltPbb, GT2Rescale, GT2Normalise, GT2DisconnectSources, BARRIERSORT,/;"	v
BB	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,/;"	v	module:MODUNRES
BBCART	optim.intcommons.f90	/^  LOGICAL :: BBCART /;"	v	module:INTCOMMONS
BBRALPHA	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA,/;"	v	module:KEY
BBRCONV	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA, BBRCONV,/;"	v	module:KEY
BBREPS	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS,/;"	v	module:KEY
BBRGAM	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM,/;"	v	module:KEY
BBRM	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS, HMNBFGSMAX1, HMNBFGSMAX2, &$/;"	v	module:KEY
BBRSDM	optim.bbrsdm.f90	/^      SUBROUTINE BBRSDM(/;"	s
BBRSDMT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG, CHRIGIDT, PERMDISTINIT, &$/;"	v	module:KEY
BBRSIGMA1	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1,/;"	v	module:KEY
BBRSIGMA2	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2,/;"	v	module:KEY
BBRSTEPS	optim.key.f90	/^     &        BBRM, BBRSTEPS,/;"	v	module:KEY
BC_MDI	optim.modamber9.f90	/^integer BC_MDI /;"	v	module:modamber9
BC_MDR	optim.modamber9.f90	/^integer BC_MDR /;"	v	module:modamber9
BEADLETTER	optim.key.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(/;"	v	module:KEY
BEENUM	optim.unrestransform.f	/^      SUBROUTINE BEENUM(/;"	s
BEIG	optim.beig.f	/^      SUBROUTINE BEIG(/;"	s
BENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,/;"	v	module:MODAMBER
BESTCOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,/;"	v
BESTPATH	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: BESTPATH(/;"	v
BESTPATHLENGTH	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE, NCPU, GTINT, NCONNMAX, BESTPATHLENGTH,/;"	v
BESTPERM	optim.key.f90	/^      INTEGER, ALLOCATABLE :: BESTPERM(/;"	v	module:KEY
BEST_FH	commons.f90	/^INTEGER :: ENERGY_FH, MARKOV_FH, BEST_FH,/;"	v	module:GMIN_COMMONS
BETA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: BETA /;"	v	module:msevb_common
BFGSMINT	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT,/;"	v	module:KEY
BFGSSTEP	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY, CASTEP, ONETEP, &$/;"	v	module:KEY
BFGSSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS,/;"	v	module:KEY
BFGSTS	optim.bfgsts.f	/^      SUBROUTINE BFGSTS(/;"	s
BFGSTST	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST,/;"	v	module:KEY
BFGSTSTOL	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE, INTRMSTOL, BFGSTSTOL,/;"	v	module:KEY
BHACCREJ	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL, GEOMDIFFTOL, DNEBSWITCH, &$/;"	v	module:KEY
BHACCREJ	pathsample.common.f90	/^     &                 GT2RSwitch, GT2Ptol, EUNTRAPTHRESH, PLANCK, REGROUPFREETHRESH, FREETHRESH, &$/;"	v
BHCHECKENERGYT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT,/;"	v	module:KEY
BHCONV	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV,/;"	v	module:KEY
BHCONV	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV,/;"	v
BHDEBUG	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG,/;"	v	module:KEY
BHDISTTHRESH	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH,/;"	v	module:KEY
BHDISTTHRESH	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH,/;"	v
BHINTE	optim.geopt.f	60;"	c	subroutine:GEOPT
BHINTERP	optim.bhinterp.f90	/^SUBROUTINE BHINTERP(/;"	s
BHINTERPT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT,/;"	v	module:KEY
BHINTERPT	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT, KSHORTESTPATHST, KSHORT_FULL_PRINTT, DIJINITFLYT, BHINTERPT,/;"	v
BHINTERPUSELOWEST	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST,/;"	v	module:KEY
BHK	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK,/;"	v	module:KEY
BHK	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHK,/;"	v
BHMAXENERGY	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY,/;"	v	module:KEY
BHMAXENERGY	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHK, BHMAXENERGY,/;"	v
BHSFRAC	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL, KADJUSTFRAC, KADJUSTTOL, &$/;"	v	module:KEY
BHSFRAC	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHK, BHMAXENERGY, BHSFRAC,/;"	v
BHSTEPS	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS,/;"	v	module:KEY
BHSTEPS	pathsample.common.f90	/^     &        NATTEMPT, NNEW, NTOTAL, NEXCLUDE, NPERMGROUP, BHSTEPS,/;"	v
BHSTEPSIZE	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE,/;"	v	module:KEY
BHSTEPSIZE	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE,/;"	v
BHSTEPSMIN	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN,/;"	v	module:KEY
BHTEMP	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP,/;"	v	module:KEY
BHTEMP	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP,/;"	v
BIG_B	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: BIG_B /;"	v	module:msevb_common
BIG_ROOEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: BIG_ROOEQ /;"	v	module:msevb_common
BIN	keyword.f90	17;"	c	subroutine:KEYWORD
BIN	optim.bfgsts.f	1901;"	c	subroutine:HSMOVE
BIN	optim.changep.f	34;"	c	subroutine:CHANGEP
BIN	optim.dumpit.f	31;"	c	subroutine:DUMPIT
BIN	optim.fetchz.f	43;"	c	subroutine:FETCHZ
BIN	optim.keyword.f	79;"	c	subroutine:KEYWORD
BIN	optim.ljpbin.f	53;"	c	subroutine:LJPBIN
BIN	optim.ljpkob.f	53;"	c	subroutine:LJPKOB
BIN	optim.ljpshift.f	1508;"	c	subroutine:LJPSHIFTBIN2
BIN	optim.ljpshift.f	52;"	c	subroutine:LJPSHIFTBIN
BIN	optim.ljpshift.f	709;"	c	subroutine:LJPSHIFTBINC
BINARY	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY,/;"	v	module:KEY
BISECTDEBUG	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T, BISECTT, BISECTDEBUG,/;"	v	module:KEY
BISECTE	optim.bisect.f90	47;"	c	subroutine:BISECT_OPT
BISECTE	optim.geopt.f	62;"	c	subroutine:GEOPT
BISECTMAXATTEMPTS	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS,/;"	v	module:KEY
BISECTMAXATTEMPTS	pathsample.common.f90	/^     &        BISECTSTEPS, BISECTMAXATTEMPTS,/;"	v
BISECTMAXENERGY	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE, INTRMSTOL, BFGSTSTOL, &$/;"	v	module:KEY
BISECTMAXENERGY	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY,/;"	v
BISECTMINDIST	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST,/;"	v	module:KEY
BISECTMINDIST	pathsample.common.f90	/^     &                 BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHK, BHMAXENERGY, BHSFRAC, &$/;"	v
BISECTSTEPS	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS,/;"	v	module:KEY
BISECTSTEPS	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS, MAXATTEMPT, COSTFUNCTIONPOWER, NPAIRDONE, NMINDONE, NPAIRFRQ, &$/;"	v
BISECTT	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T, BISECTT,/;"	v	module:KEY
BISECTT	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST, LOWESTFRQT, BISECTT,/;"	v
BISECT_OPT	optim.bisect.f90	/^SUBROUTINE BISECT_OPT(/;"	s
BLFACTOR	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR,/;"	v	module:KEY
BLJSITE	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,/;"	v	module:KEY
BLN	bln.f90	/^     MODULE BLN /;"	m
BLN	optim.BLN.f	/^      SUBROUTINE BLN(/;"	s
BLNSSTRUCT	optim.key.f90	/^      CHARACTER(LEN=1), ALLOCATABLE :: BEADLETTER(:), BLNSSTRUCT(/;"	v	module:KEY
BLNT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL, BLNT,/;"	v	module:KEY
BONDHELL	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,/;"	v	module:MODAMBER
BONDNUM	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: BONDNUM(/;"	v	module:INTCOMMONS
BOTTOM	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,/;"	v	module:MODAMBER
BOWMANDIR	optim.key.f90	/^      CHARACTER(LEN=80) :: SYS, FILTHSTR, BOWMANDIR$/;"	v	module:KEY
BOWMANPES	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN, SDCHARGE, BOWMANPES,/;"	v	module:KEY
BOWMANT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT,/;"	v	module:KEY
BOXDERIVS	optim.PV.f	42;"	c	subroutine:PVOPT
BOXDERIVS	optim.ljpshift.f	54;"	c	subroutine:LJPSHIFTBIN
BOXLX	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,/;"	v	module:PYMODULE
BOXLX	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX,/;"	v
BOXLY	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,/;"	v	module:PYMODULE
BOXLY	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY,/;"	v
BOXLZ	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,/;"	v	module:PYMODULE
BOXLZ	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ,/;"	v
BPGRP	optim.syminf.f90	/^      CHARACTER(LEN=4) :: FPGRP, BPGRP,/;"	v	module:SYMINF
BPP	optim.modunres.f90	/^      DOUBLE PRECISION :: AA,BB,AUGM,AAD,BAD,APPU,BPP,/;"	v	module:MODUNRES
BRENTMIN	optim.pyg.f90	/^      SUBROUTINE BRENTMIN /;"	s
BRUN	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,/;"	v
BSMIN	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN,/;"	v	module:KEY
BSNEW	keyword.f90	22;"	c	subroutine:KEYWORD
BSNEW	optim.keyword.f	92;"	c	subroutine:KEYWORD
BSNEW	optim.odesd.f	31;"	c	subroutine:ODESD
BSSTEP	optim.odesd.f	/^      SUBROUTINE BSSTEP(/;"	s
BUFFER	optim.input.f	281;"	c	block data:INBLK
BUFFER	optim.input.f	316;"	c	subroutine:READF
BUFFER	optim.input.f	40;"	c	subroutine:INPUT
BUFFER	optim.input.f	490;"	c	subroutine:READK
BUFFER	optim.input.f	549;"	c	subroutine:READA
BUFFER	optim.input.f	627;"	c	subroutine:READCH
BUFFER	optim.input.f	651;"	c	subroutine:GETF
BUFFER	optim.input.f	703;"	c	subroutine:GETA
BUFFER	optim.input.f	758;"	c	subroutine:REREAD
BUFFER	optim.input.f	803;"	c	subroutine:REPORT
BUFFER	pathsample.input.f	280;"	c	block data:INBLK
BUFFER	pathsample.input.f	314;"	c	subroutine:READF
BUFFER	pathsample.input.f	40;"	c	subroutine:INPUT
BUFFER	pathsample.input.f	488;"	c	subroutine:READK
BUFFER	pathsample.input.f	547;"	c	subroutine:READA
BUFFER	pathsample.input.f	623;"	c	subroutine:READCH
BUFFER	pathsample.input.f	646;"	c	subroutine:GETF
BUFFER	pathsample.input.f	697;"	c	subroutine:GETA
BUFFER	pathsample.input.f	752;"	c	subroutine:REREAD
BUFFER	pathsample.input.f	797;"	c	subroutine:REPORT
BUFINF	keyword.f90	12;"	c	subroutine:KEYWORD
BUFINF	optim.changep.f	29;"	c	subroutine:CHANGEP
BUFINF	optim.fetchz.f	65;"	c	subroutine:FETCHZ
BUFINF	optim.input.f	283;"	c	block data:INBLK
BUFINF	optim.input.f	318;"	c	subroutine:READF
BUFINF	optim.input.f	42;"	c	subroutine:INPUT
BUFINF	optim.input.f	492;"	c	subroutine:READK
BUFINF	optim.input.f	551;"	c	subroutine:READA
BUFINF	optim.input.f	629;"	c	subroutine:READCH
BUFINF	optim.input.f	653;"	c	subroutine:GETF
BUFINF	optim.input.f	705;"	c	subroutine:GETA
BUFINF	optim.input.f	760;"	c	subroutine:REREAD
BUFINF	optim.input.f	805;"	c	subroutine:REPORT
BUFINF	optim.keyword.f	73;"	c	subroutine:KEYWORD
BUFINF	optim.main.f90	12;"	c	program:OPTIM4
BUFINF	pathsample.input.f	282;"	c	block data:INBLK
BUFINF	pathsample.input.f	316;"	c	subroutine:READF
BUFINF	pathsample.input.f	42;"	c	subroutine:INPUT
BUFINF	pathsample.input.f	490;"	c	subroutine:READK
BUFINF	pathsample.input.f	549;"	c	subroutine:READA
BUFINF	pathsample.input.f	625;"	c	subroutine:READCH
BUFINF	pathsample.input.f	648;"	c	subroutine:GETF
BUFINF	pathsample.input.f	699;"	c	subroutine:GETA
BUFINF	pathsample.input.f	754;"	c	subroutine:REREAD
BUFINF	pathsample.input.f	799;"	c	subroutine:REPORT
BUFINF	pathsample.keywords.f	36;"	c	subroutine:KEYWORD
BUILD_RHO_SITE	optim.Ackland_metals.f90	/^      SUBROUTINE BUILD_RHO_SITE(/;"	s
BUILD_V_SITE	optim.Ackland_metals.f90	/^       SUBROUTINE BUILD_V_SITE(/;"	s
BULKMINDIST	optim.bulkmindist.f90	/^SUBROUTINE BULKMINDIST(/;"	s
BULKMINDIST	pathsample.bulkmindist.f90	/^SUBROUTINE BULKMINDIST(/;"	s
BULKSHIFT	optim.bulkmindist.f90	27;"	c	subroutine:BULKMINDIST
BULKSHIFT	optim.minpermdist.f90	78;"	c	subroutine:MINPERMDIST
BULKT	optim.key.f90	/^     &        BFGSSTEP, BULKT,/;"	v	module:KEY
BULKT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT,/;"	v
BVR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR,/;"	v
BX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,/;"	v	module:MODAMBER
BY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,/;"	v	module:MODAMBER
BZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,/;"	v	module:MODAMBER
B_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(/;"	v	module:KEY
BinaryIO	optim.binaryio.f90	/^MODULE BinaryIO$/;"	m
C	optim.modunres.f90	/^      DOUBLE PRECI/;"	v	module:MODUNRES
C12	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)), allocatable :: C12(/;"	k	type:rigidbodyPotential
C12	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, allocatable :: C12(/;"	k	type:rigidbodyPotential
C6	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)), allocatable :: C6(/;"	k	type:rigidbodyPotential
C6	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, allocatable :: C6(/;"	k	type:rigidbodyPotential
C60DIFF	optim.c60diff.f	/^      SUBROUTINE C60DIFF(/;"	s
C60P	optim.c60p.f	/^      SUBROUTINE C60P(/;"	s
C60PE	optim.latmin.f	/^      SUBROUTINE C60PE(/;"	s
C6MM	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM,/;"	v	module:KEY
C6PM	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM,/;"	v	module:KEY
C6PP	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP,/;"	v	module:KEY
CAARDIFF	optim.caardiff.f	/^      SUBROUTINE CAARDIFF(/;"	s
CAARG	optim.caardiff.f	/^      SUBROUTINE CAARG(/;"	s
CAARS	optim.caardiff.f	/^      SUBROUTINE CAARS(/;"	s
CADPAC	optim.key.f90	/^     &        GAUSSIAN, CADPAC,/;"	v	module:KEY
CALCDIHE	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,/;"	v	module:modcharmm
CALCORDER	pathsample.calcorder.CypA.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.gb1.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.p53.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.p53.new.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.p53.old.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder.proteinL.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_CYPA.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_CYPA_substrate.f90	/^      SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_p53_RMSDalone.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDER	pathsample.calcorder_p53_helicity_RMSD.f90	/^SUBROUTINE CALCORDER(/;"	s
CALCORDERT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT,/;"	v
CALCULATEPBB	pathsample.GT2.f90	/^     SUBROUTINE CALCULATEPBB$/;"	s	subroutine:SGDETACHNODE
CALCULATEPBB	pathsample.GT2.save.f90	/^     SUBROUTINE CALCULATEPBB$/;"	s	subroutine:SGDETACHNODE
CALC_GRADIENTBLN	optim.BLN.f	/^      SUBROUTINE CALC_GRADIENTBLN(/;"	s
CAPS	keyword.f90	24;"	c	subroutine:KEYWORD
CAPS	optim.capsid.f	63;"	c	subroutine:FCAPSID
CAPS	optim.dumpit.f	33;"	c	subroutine:DUMPIT
CAPS	optim.fetchz.f	60;"	c	subroutine:FETCHZ
CAPS	optim.keyword.f	116;"	c	subroutine:KEYWORD
CAPS	optim.newcapsid.f90	16;"	c	subroutine:NEWCAPSID
CAPS	optim.path.f	73;"	c	subroutine:PATH
CAPSIDIO	optim.dumpit.f	/^      SUBROUTINE CAPSIDIO(/;"	s
CART2INT	optim.intcoords.f90	/^   SUBROUTINE CART2INT(/;"	s	module:INTCUTILS
CARTATMS	optim.intcommons.f90	/^       & IMPDIH(:,:), CARTATMS(/;"	v	module:INTCOMMONS
CARTATMSTART	optim.intcommons.f90	/^  INTEGER :: CARTRESSTART = -1, CARTATMSTART /;"	v	module:INTCOMMONS
CARTRESSTART	optim.intcommons.f90	/^  INTEGER :: CARTRESSTART /;"	v	module:INTCOMMONS
CAS	optim.Clatmin.f	25;"	c	subroutine:CLATMIN
CAS	optim.fetchz.f	45;"	c	subroutine:FETCHZ
CAS	optim.potential.f	75;"	c	subroutine:POTENTIAL
CASTEP	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY, CASTEP,/;"	v	module:KEY
CASTEP	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,/;"	v	program:OPTIM4
CASTEPJOB	optim.key.f90	/^      CHARACTER(LEN=120) :: CASTEPJOB,/;"	v	module:KEY
CAT	optim.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CAT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,/;"	v	program:OPTIM4
CAT	pathsample.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO, CAT$/;"	v	block data:INBLK
CBT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT,/;"	v	module:KEY
CCKJ	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,/;"	v	module:KEY
CEIG	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG,/;"	v	module:KEY
CENTER2	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTER2(/;"	v	module:INTCOMMONS
CENTERS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(/;"	v	module:INTCOMMONS
CENTRE	optim.connect.f	/^      SUBROUTINE CENTRE(/;"	s
CENTRE	pathsample.centre.f	/^      SUBROUTINE CENTRE(/;"	s
CENTRE2	func.f90	/^SUBROUTINE CENTRE2(/;"	s
CENTRE2	gmin.func.f90	/^SUBROUTINE CENTRE2(/;"	s
CFUSIONT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT,/;"	v	module:KEY
CGDETACHNODE	pathsample.GT2.f90	/^     SUBROUTINE CGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CGDETACHNODE	pathsample.GT2.save.f90	/^     SUBROUTINE CGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CHAIN	optim.modunres.f90	47;"	c	module:MODUNRES
CHALLOCATE	optim.chdummy.f	/^      SUBROUTINE CHALLOCATE(/;"	s
CHANGEDE	mc.vars.inc.f90	/^      LOGICAL CHANGEDE,/;"	v
CHANGEDS	pathsample.GT2.f90	/^     SUBROUTINE CHANGEDS(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CHANGEDS	pathsample.GT2.save.f90	/^     SUBROUTINE CHANGEDS(/;"	s	module:GRAPHTRANSFORMATIONMODULE
CHANGEP	optim.changep.f	/^      SUBROUTINE CHANGEP$/;"	s
CHANGE_TEMP	optim.commons.f90	/^      LOGICAL TAGT, CHANGE_TEMP$/;"	v	module:COMMONS
CHAR	optim.input.f	/^      CHARA/;"	v	block data:INBLK
CHAR	pathsample.input.f	/^      CHARA/;"	v	block data:INBLK
CHARGE	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: CHARGE /;"	v	module:KEY
CHARGE	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)), allocatable :: CHARGE(/;"	k	type:rigidbodyPotential
CHARGE	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, allocatable :: CHARGE(/;"	k	type:rigidbodyPotential
CHARGECON	optim.ttm3f.f90	/^double precision, parameter :: CHARGECON /;"	v	module:ttm3f_mod
CHARMMBILDC	optim.amber9dummy.f90	/^subroutine CHARMMBILDC(/;"	s
CHARMMDUMP	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMP(/;"	s
CHARMMDUMP	pathsample.charmmdump.f	/^      SUBROUTINE CHARMMDUMP(/;"	s
CHARMMDUMP2	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMP2(/;"	s
CHARMMDUMPMOBCAL	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMPMOBCAL(/;"	s
CHARMMDUMPMODES	optim.chdummy.f	/^      SUBROUTINE CHARMMDUMPMODES(/;"	s
CHARMMNEB	optim.chdummy.f	/^      SUBROUTINE CHARMMNEB(/;"	s
CHARMMREAD	pathsample.charmmdump.f	/^      SUBROUTINE CHARMMREAD(/;"	s
CHARMMT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT, ANGLEAXIS, TAGT, CHARMMT,/;"	v
CHARMMTYPE	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE,/;"	v	module:modcharmm
CHBIT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,CHECKOMEGAT, ICINTERPT, CHBIT$/;"	v	module:modcharmm
CHCALCDIHE	optim.chdummy.f	/^      SUBROUTINE CHCALCDIHE(/;"	s
CHCALCHELIX	optim.chdummy.f	/^      SUBROUTINE CHCALCHELIX(/;"	s
CHCALCHPDIST	optim.chdummy.f	/^      SUBROUTINE CHCALCHPDIST(/;"	s
CHCALCNUMHB	optim.chdummy.f	/^      SUBROUTINE CHCALCNUMHB(/;"	s
CHCALCRGYR	optim.chdummy.f	/^      SUBROUTINE CHCALCRGYR(/;"	s
CHCALCRMSD	optim.chdummy.f	/^      SUBROUTINE CHCALCRMSD(/;"	s
CHDEBUG	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB, ACESOLV, CHDEBUG,/;"	v	module:modcharmm
CHECKCHIRAL	optim.chdummy.f	/^      SUBROUTINE CHECKCHIRAL(/;"	s
CHECKCHIRALT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,/;"	v	module:modcharmm
CHECKCISTRANS	optim.chdummy.f	/^      SUBROUTINE CHECKCISTRANS(/;"	s
CHECKCISTRANSALWAYS	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA, CHECKCISTRANSALWAYS,/;"	v	module:modamber9
CHECKCISTRANSALWAYSDNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA, CHECKCISTRANSALWAYS, CHECKCISTRANSALWAYSRNA, CHECKCISTRANSALWAYSDNA$/;"	v	module:modamber9
CHECKCISTRANSALWAYSRNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA, CHECKCISTRANSALWAYS, CHECKCISTRANSALWAYSRNA,/;"	v	module:modamber9
CHECKCONINT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT, RPFIXT, CHECKCONINT,/;"	v	module:KEY
CHECKCONINT	pathsample.common.f90	/^     &        INTCONSTRAINTT, CHECKCONINT,/;"	v
CHECKCONNECTIONST	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT, SHORTCUTT, MERGEDBT, UNTRAPT, AMHT,  AMHALLATOMMINT, &$/;"	v
CHECKCONT	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT,/;"	v	module:KEY
CHECKDRVTS	optim.rigidb.f90	/^      SUBROUTINE CHECKDRVTS(/;"	s
CHECKENERGIES	optim.growstring.f90	/^  SUBROUTINE CHECKENERGIES$/;"	s	module:GROWSTRINGUTILS
CHECKICPHI	optim.chdummy.f	/^      SUBROUTINE CHECKICPHI(/;"	s
CHECKIND	optim.bfgsts.f	/^      SUBROUTINE CHECKIND(/;"	s
CHECKIND2	optim.bfgsts.f	/^      SUBROUTINE CHECKIND2(/;"	s
CHECKINDEX	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX,/;"	v	module:KEY
CHECKOMEGA	optim.chdummy.f	/^      SUBROUTINE CHECKOMEGA(/;"	s
CHECKOMEGAT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,CHECKOMEGAT,/;"	v	module:modcharmm
CHECKPOINT	optim.chdummy.f	/^      SUBROUTINE CHECKPOINT(/;"	s
CHECKREP	optim.intlbfgs.f90	/^SUBROUTINE CHECKREP(/;"	s
CHECKSEP	optim.intlbfgs.f90	/^SUBROUTINE CHECKSEP(/;"	s
CHECKTS	pathsample.checkTS.f90	/^      SUBROUTINE CHECKTS(/;"	s
CHECK_CISTRANS_PROTEIN	optim.amber9dummy.f90	/^SUBROUTINE CHECK_CISTRANS_PROTEIN(/;"	s
CHECK_SIDECHAIN	optim.amber9dummy.f90	/^subroutine CHECK_SIDECHAIN(/;"	s
CHGETICVAL	optim.amber9dummy.f90	/^subroutine CHGETICVAL(/;"	s
CHGUESSTS	optim.chdummy.f	/^      SUBROUTINE CHGUESSTS(/;"	s
CHICDNEB	optim.intcommons.f90	/^  LOGICAL :: DESMINT = .FALSE., CHICDNEB=/;"	v	module:INTCOMMONS
CHIR	optim.amber.f	113;"	c	subroutine:AMBERS
CHIR	optim.amber.f	1939;"	c	subroutine:aread
CHIR	optim.amber.f	617;"	c	subroutine:chiraltest
CHIRAL	optim.modamber9.f90	/^integer, dimension(:), allocatable :: CHIRAL$/;"	v	module:modamber9
CHIRAL	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: CHIRAL(/;"	v	module:modcharmm
CHIRALFAIL	mc.vars.inc.f90	/^      LOGICAL CHIRALFAIL,/;"	v
CHORD	optim.gsdata.f90	/^     DOUBLE PRECISION :: CHORD,/;"	k	type:IMGNODE
CHREBUILD	optim.amber9dummy.f90	/^subroutine  CHREBUILD(/;"	s
CHREDUCEDBONDLENGTH	optim.chdummy.f	/^      SUBROUTINE CHREDUCEDBONDLENGTH(/;"	s
CHRESTOATOM	optim.chdummy.f	/^      SUBROUTINE CHRESTOATOM(/;"	s
CHRIGIDT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG, CHRIGIDT,/;"	v	module:KEY
CHRMMT	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,/;"	v	module:modcharmm
CHSEEDI	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI,/;"	v	module:modcharmm
CHSEEDJ	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ,/;"	v	module:modcharmm
CHSEEDK	optim.modcharmm.f90	/^      INTEGER :: CHARMMTYPE, CHSEEDI, CHSEEDJ, CHSEEDK /;"	v	module:modcharmm
CHSETDIHE	optim.chdummy.f	/^      SUBROUTINE CHSETDIHE$/;"	s
CHSETUP	optim.chdummy.f	/^      SUBROUTINE CHSETUP(/;"	s
CHSETZSYMATMASS	optim.chdummy.f	/^      SUBROUTINE CHSETZSYMATMASS$/;"	s
CH_SEED	optim.charmmBildc.f	/^      SUBROUTINE CH_SEED(/;"	s
CLATMIN	optim.Clatmin.f	/^      SUBROUTINE CLATMIN(/;"	s
CLEANUP	optim.connect.f	/^      SUBROUTINE CLEANUP(/;"	s
CLEAR	optim.input.f	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CLEAR	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,/;"	v	program:OPTIM4
CLEAR	pathsample.input.f	/^      LOGICAL SKIPBL, CLEAR,/;"	v	block data:INBLK
CLJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: CLJ /;"	v	module:msevb_common
CLOSEFILEST	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT, DOST, IMFRQT, CLOSEFILEST,/;"	v
CLOSESTALIGNMENT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT,/;"	v	module:KEY
CMDIST	tr.f90	/^      DOUBLE PRECISION CMDIST(/;"	v
CMPLXI	optim.cubsplstring.f90	/^  COMPLEX, PARAMETER :: CMPLXI=/;"	v	module:CUBSPLSTRING
CMPLXI	optim.specialfuncts.f90	/^  COMPLEX (KIND=KIND(1.0D0)), PARAMETER :: CMPLXI /;"	v	module:SPFUNCTS
COEFF	optim.cubsplstring.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: COEFF(/;"	v	module:CUBSPLSTRING
COEFF	optim.intcommons.f90	/^  DOUBLE PRECISION :: COEFF(/;"	v	module:INTCOMMONS
COLDFUSIONLIMIT	optim.key.f90	/^      DOUBLE PRECISION :: COLDFUSIONLIMIT$/;"	v	module:KEY
COL_IND	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: COL_IND(/;"	v	module:NGTMEM
COL_INDTEMP	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: COL_IND(:), COL_INDTEMP(/;"	v	module:NGTMEM
COMMONS	optim.commons.f90	/^MODULE COMMONS$/;"	m
COMPARE2	optim.utils.f	/^      SUBROUTINE COMPARE2(/;"	s
COMPLETEGRAPHTRANSFORMATION	pathsample.GT2.save.f90	/^     SUBROUTINE COMPLETEGRAPHTRANSFORMATION$/;"	s	module:GRAPHTRANSFORMATIONMODULE
CONACTIVE	optim.key.f90	/^      LOGICAL, ALLOCATABLE :: CONACTIVE(/;"	v	module:KEY
CONACTIVE	pathsample.common.f90	/^      LOGICAL, ALLOCATABLE :: CONACTIVE(/;"	v
CONDISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(/;"	v	module:KEY
CONDISTREF	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:),  NREPCUT(:), CONDISTREF(/;"	v
CONDISTREFLOCAL	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(:), CONDISTREFLOCAL(/;"	v	module:KEY
CONDISTREFLOCAL	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:),  NREPCUT(:), CONDISTREF(:), CONDISTREFLOCAL(/;"	v
CONDISTREFLOCALON	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(:), CONDISTREFLOCAL(:), CONDISTREFON(:), CONDISTREFLOCALON(/;"	v	module:KEY
CONDISTREFON	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CONDISTREF(:), CONDISTREFLOCAL(:), CONDISTREFON(/;"	v	module:KEY
CONGRAD	optim.congrad.f90	/^SUBROUTINE CONGRAD(/;"	s
CONGRAD2	optim.congrad.f90	/^SUBROUTINE CONGRAD2(/;"	s
CONGRAD2	pathsample.make_conpot.f90	/^SUBROUTINE CONGRAD2(/;"	s
CONI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(/;"	v	module:KEY
CONI	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: CONI(/;"	v
CONION	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(:), CONION(/;"	v	module:KEY
CONION	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(:), CONION(/;"	v
CONJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(/;"	v	module:KEY
CONJ	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(/;"	v
CONJON	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(:), CONION(:), CONJON(/;"	v	module:KEY
CONJON	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: CONI(:), CONJ(:), CONION(:), CONJON(/;"	v
CONN	optim.OPTIM.F	85;"	c	subroutine:OPTIM
CONN	optim.bfgsts.f	82;"	c	subroutine:BFGSTS
CONN	optim.connect.f	1507;"	c	subroutine:RATES
CONN	optim.connect.f	48;"	c	subroutine:CONNECT
CONN	optim.fetchz.f	49;"	c	subroutine:FETCHZ
CONN	optim.func.f90	64;"	c	subroutine:OPTIM
CONN	optim.geopt.f	58;"	c	subroutine:GEOPT
CONN	optim.intbfgsts.f	54;"	c	subroutine:INTBFGSTS
CONN	optim.keyword.f	104;"	c	subroutine:KEYWORD
CONN	optim.path.f	71;"	c	subroutine:PATH
CONNECT	bln.vars.inc.f90	/^        LOGICAL CONNECT(/;"	v
CONNECT	optim.connect.f	/^      SUBROUTINE CONNECT(/;"	s
CONNECT	pathsample.connect.f	/^      SUBROUTINE CONNECT(/;"	s
CONNECTD	pathsample.connectd.f90	/^SUBROUTINE CONNECTD(/;"	s
CONNECTDIST	pathsample.common.f90	/^     &                 PERTVALUE, TAGMASS, PABCONV, REGROUPTHRESH, REGROUPRATETHRESH, CONNECTDIST,/;"	v
CONNECTDIST	pathsample.connectdist.f90	/^SUBROUTINE CONNECTDIST(/;"	s
CONNECTIONS	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH, CONNECTIONS,/;"	v
CONNECTMIN1	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS, NCONNMIN, CONNECTMIN1,/;"	v
CONNECTMIN2	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS, NCONNMIN, CONNECTMIN1, CONNECTMIN2,/;"	v
CONNECTODATA	pathsample.connectodata.f	/^      SUBROUTINE CONNECTODATA(/;"	s
CONNECTREGIONT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT,/;"	v
CONPOT	optim.make_conpot.f90	/^SUBROUTINE CONPOT(/;"	s
CONPOT	pathsample.make_conpot.f90	/^SUBROUTINE CONPOT(/;"	s
CONPOTT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT,/;"	v	module:KEY
CONSECT	optim.modunres.f90	/^      LOGICAL :: CONSECT$/;"	v	module:MODUNRES
CONTAINER	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI, CONTAINER,/;"	v	module:KEY
CONVERT	optim.mindist.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT	pathsample.mind.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT	pathsample.mindist.f	/^      SUBROUTINE CONVERT(/;"	s
CONVERT2	optim.mindist.f	/^      SUBROUTINE CONVERT2(/;"	s
CONVERT2	pathsample.mind.f	/^       SUBROUTINE CONVERT2(/;"	s
CONVERT2	pathsample.mindist.f	/^      SUBROUTINE CONVERT2(/;"	s
CONVERTIC	optim.chdummy.f	/^      SUBROUTINE CONVERTIC$/;"	s
CONVR	optim.key.f90	/^     &        CONVU, CONVR,/;"	v	module:KEY
CONVU	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE, RK_R, RK_THETA, &$/;"	v	module:KEY
COORD	optim.intlbfgs.f90	/^     DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:TSFOUNDTYPE
COORD	optim.intlbfgs.f90	/^   DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:MINFOUNDTYPE
COORD	optim.intlbfgslj.f90	/^     DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:TSFOUNDTYPE
COORD	optim.intlbfgslj.f90	/^   DOUBLE PRECISION,POINTER :: COORD(/;"	k	type:MINFOUNDTYPE
COORDS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:GMIN_COMMONS
COORDSCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: COORDSLIGAND(:,:), COORDSCOMPLEX(/;"	v	module:DOCKMODULE
COORDSCOMPLEXSTR	pathsample.common.f90	/^      CHARACTER(LEN=80) COORDSLIGANDSTR, COORDSCOMPLEXSTR,/;"	v
COORDSLIGAND	pathsample.dock.f90	/^double precision, allocatable :: COORDSLIGAND(/;"	v	module:DOCKMODULE
COORDSLIGANDSTR	pathsample.common.f90	/^      CHARACTER(LEN=80) COORDSLIGANDSTR,/;"	v
COORDSO	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO,/;"	v	module:GMIN_COMMONS
COORDSPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: COORDSLIGAND(:,:), COORDSCOMPLEX(:,:), COORDSPROTEIN(/;"	v	module:DOCKMODULE
COORDSPROTEINSTR	pathsample.common.f90	/^      CHARACTER(LEN=80) COORDSLIGANDSTR, COORDSCOMPLEXSTR, COORDSPROTEINSTR$/;"	v
COPYFILES	pathsample.common.f90	/^      CHARACTER(LEN=80) COPYFILES$/;"	v
COPYOPTIMT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT,/;"	v
COSTFUNCTIONPOWER	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS, MAXATTEMPT, COSTFUNCTIONPOWER,/;"	v
COS_PHI	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI,/;"	v
COS_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA$/;"	v
COUNT	optim.modamber.f90	/^      INTEGER ATOMS,ANG,IMP,COUNT,/;"	v	module:MODAMBER
COUNTER	optim.modunres.f90	/^      INTEGER COUNTER$/;"	v	module:MODUNRES
CP2K	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K,/;"	v	module:KEY
CP2K	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,/;"	v	program:OPTIM4
CP2KJOB	optim.key.f90	/^      CHARACTER(LEN=120) :: CASTEPJOB, CP2KJOB,/;"	v	module:KEY
CPCONDISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CPCONDISTREF(/;"	v	module:KEY
CPCONFRAC	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP, CPCONSTRAINREPCUT, CPCONFRAC,/;"	v	module:KEY
CPCONI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPCONI(/;"	v	module:KEY
CPCONJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPCONI(:), CPCONJ(/;"	v	module:KEY
CPCONSEP	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON, CPREPSEP, CPCONSEP,/;"	v	module:KEY
CPCONSTRAINREPCUT	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP, CPCONSTRAINREPCUT,/;"	v	module:KEY
CPCONSTRAINTDEL	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL,/;"	v	module:KEY
CPCONSTRAINTREP	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP,/;"	v	module:KEY
CPCONSTRAINTTOL	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA, REPCON, PFORCE, &$/;"	v	module:KEY
CPDISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: CPDISTREF(/;"	v	module:KEY
CPMD	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD,/;"	v	module:KEY
CPMD	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,/;"	v	program:OPTIM4
CPMDC	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC,/;"	v	module:KEY
CPMDLATMIN	optim.cpmdlatmin.f	/^      SUBROUTINE CPMDLATMIN(/;"	s
CPMD_COMMAND	optim.key.f90	/^      CHARACTER(200) :: CPMD_COMMAND$/;"	v	module:KEY
CPREPCUT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:), NREPCUT(:), CPREPCUT(/;"	v	module:KEY
CPREPI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPREPI(/;"	v	module:KEY
CPREPJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: CPREPI(:), CPREPJ(/;"	v	module:KEY
CPREPSEP	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON, CPREPSEP,/;"	v	module:KEY
CROSSOPT	optim.utils.f	/^      SUBROUTINE CROSSOPT(/;"	s
CROSS_PRODUCT	optim.specialfuncts.f90	/^    SUBROUTINE CROSS_PRODUCT(/;"	s	module:SPFUNCTS
CSTRING	optim.main.f90	/^      CHARACTER(LEN=20) OTEMP, OSTRING, CSTRING$/;"	v	program:OPTIM4
CTEST	optim.ctest.f	/^      SUBROUTINE CTEST(/;"	s
CUB	optim.PV.f	41;"	c	subroutine:PVOPT
CUB	optim.fetchz.f	58;"	c	subroutine:FETCHZ
CUB	optim.keyword.f	97;"	c	subroutine:KEYWORD
CUBSPLSTRING	optim.cubsplstring.f90	/^MODULE CUBSPLSTRING$/;"	m
CUBSPLT	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,/;"	k	type:IMGNODE
CUTLAN	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN,/;"	v	module:KEY
CUTOFF	optim.double.f	/^     1                 V(3*N), R, G(2,2), H, W, CUTOFF,/;"	v
CUTOFF_CONT_LOW	optim.amhglobals.f	/^      integer, parameter:: CUTOFF_CONT_LOW=/;"	v	module:amhglobals
CV	pathsample.Cv.f	/^      SUBROUTINE CV$/;"	s
CVT	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT,/;"	v
CVTINC	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC,/;"	v
CVTMAX	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX,/;"	v
CVTMIN	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES, NGTSWITCH, NTFOLD, TOMEGA, TFOLDTHRESH, DIAGSCALE, &$/;"	v
CX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,/;"	v	module:MODAMBER
CY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,/;"	v	module:MODAMBER
CYCLE	pathsample.cycle.f90	/^SUBROUTINE CYCLE$/;"	s
CYCLE2	pathsample.cycle2.f90	/^SUBROUTINE CYCLE2$/;"	s
CZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,/;"	v	module:MODAMBER
C_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(/;"	v	module:KEY
Calculation of the torsional angles gradient	grad.tangle.tex	/^\\subsection{Calculation of the torsional angles gradient}$/;"	u
CoMtoOrigin	pathsample.rigidbody.f90	/^  subroutine CoMtoOrigin /;"	s	module:rigidbody
CoMtoOrigin	pathsample.rigidbodymod.f90	/^  subroutine CoMtoOrigin /;"	s	module:rigidbodymod
Copyright	optim.wc.f90	/^          subroutine Copyright$/;"	s	module:WC
D1	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D1(/;"	f
D1INIT	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT,/;"	v	module:KEY
D1MACH	optim.dqag.f	/^      DOUBLE PRECISION FUNCTION D1MACH /;"	f
D2	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D2(/;"	f
D2INIT	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT,/;"	v	module:KEY
D3	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D3(/;"	f
D4	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D4(/;"	f
D5	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D5(/;"	f
D5HT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT,/;"	v	module:KEY
D6	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D6(/;"	f
D7	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D7(/;"	f
D8	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D8(/;"	f
D9	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION D9(/;"	f
DA	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DA(/;"	f
DAMCCA	optim.dftb.f	/^      SUBROUTINE DAMCCA(/;"	s
DAMCCB	optim.dftb.f	/^      SUBROUTINE DAMCCB(/;"	s
DAMP	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP,/;"	v	module:KEY
DAMP	optim.pahagh.f90	/^      SUBROUTINE DAMP(/;"	s
DAMPCHGE	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DAMPCHGE /;"	v	module:msevb_common
DANGEBYDX	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,DBONDEBYDZ,DANGEBYDX,/;"	v	module:MODAMBER
DATOM1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1,/;"	v	module:MODAMBER
DATOM2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: DATOM1, DATOM2$/;"	v	module:MODAMBER
DB	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DB(/;"	f
DBEPSAB	optim.key.f90	/^     &        DBEPSBB, DBEPSAB,/;"	v	module:KEY
DBEPSBB	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL, NEBKFINAL, NEBFACTOR, &$/;"	v	module:KEY
DBONDEBYDX	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,/;"	v	module:MODAMBER
DBONDEBYDY	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,/;"	v	module:MODAMBER
DBONDEBYDZ	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,DBONDEBYDZ,/;"	v	module:MODAMBER
DBPMU	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU,/;"	v	module:KEY
DBPT	optim.key.f90	/^     &        RBAAT, DBPT,/;"	v	module:KEY
DBPT	pathsample.common.f90	/^     &        INTCONSTRAINTT, CHECKCONINT, INTLJT, INTERPCOSTFUNCTION, REMOVEUNCONNECTEDT, &$/;"	v
DBPTDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT,/;"	v	module:KEY
DBPTDT	pathsample.common.f90	/^     &        DBPT, DBPTDT,/;"	v
DBSIGAB	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB,/;"	v	module:KEY
DBSIGBB	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB,/;"	v	module:KEY
DC	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,/;"	v	module:MODUNRES
DC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DC(/;"	f
DC6CC	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC,/;"	v	module:KEY
DC6CH	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH,/;"	v	module:KEY
DC6HH	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH,/;"	v	module:KEY
DCDV	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,XROT,DC_NORM, &$/;"	v	module:MODUNRES
DCHECK	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK,/;"	v	module:KEY
DCOOMMGK	optim.myblas.f	/^      subroutine DCOOMMGK(/;"	s
DCOOMMKK	optim.myblas.f	/^      subroutine DCOOMMKK(/;"	s
DCOOMMSK	optim.myblas.f	/^      subroutine DCOOMMSK(/;"	s
DCTRAP	optim.dctrap.f	/^      SUBROUTINE DCTRAP(/;"	s
DC_NORM	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,XROT,DC_NORM,/;"	v	module:MODUNRES
DD11	optim.rigidfuncs.f	/^       DOUBLE PRECISION FUNCTION DD11(/;"	f
DD12	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD12(/;"	f
DD13	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD13(/;"	f
DD14	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD14(/;"	f
DD15	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD15(/;"	f
DD16	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD16(/;"	f
DD17	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD17(/;"	f
DD18	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD18(/;"	f
DD19	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD19(/;"	f
DD1A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD1A(/;"	f
DD1B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD1B(/;"	f
DD1C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD1C(/;"	f
DD22	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD22(/;"	f
DD23	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD23(/;"	f
DD24	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD24(/;"	f
DD25	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD25(/;"	f
DD26	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD26(/;"	f
DD27	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD27(/;"	f
DD28	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD28(/;"	f
DD29	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD29(/;"	f
DD2A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD2A(/;"	f
DD2B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD2B(/;"	f
DD2C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD2C(/;"	f
DD33	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD33(/;"	f
DD34	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD34(/;"	f
DD35	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD35 /;"	f
DD36	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD36(/;"	f
DD37	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD37(/;"	f
DD38	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD38(/;"	f
DD39	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD39(/;"	f
DD3A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD3A(/;"	f
DD3B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD3B(/;"	f
DD3C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD3C(/;"	f
DD44	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD44(/;"	f
DD45	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD45(/;"	f
DD46	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD46(/;"	f
DD47	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD47(/;"	f
DD48	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD48(/;"	f
DD49	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD49(/;"	f
DD4A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD4A(/;"	f
DD4B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD4B(/;"	f
DD4C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD4C(/;"	f
DD55	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD55(/;"	f
DD56	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD56(/;"	f
DD57	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD57(/;"	f
DD58	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD58(/;"	f
DD59	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD59(/;"	f
DD5A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD5A(/;"	f
DD5B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD5B(/;"	f
DD5C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD5C(/;"	f
DD66	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD66(/;"	f
DD67	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD67(/;"	f
DD68	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD68(/;"	f
DD69	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD69(/;"	f
DD6A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD6A(/;"	f
DD6B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD6B(/;"	f
DD6C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD6C(/;"	f
DD77	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD77(/;"	f
DD78	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD78(/;"	f
DD79	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD79(/;"	f
DD7A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD7A(/;"	f
DD7B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD7B(/;"	f
DD7C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD7C(/;"	f
DD88	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD88(/;"	f
DD89	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD89(/;"	f
DD8A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD8A(/;"	f
DD8B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD8B(/;"	f
DD8C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD8C(/;"	f
DD99	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD99(/;"	f
DD9A	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD9A(/;"	f
DD9B	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD9B(/;"	f
DD9C	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DD9C(/;"	f
DDAA	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDAA(/;"	f
DDAB	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDAB(/;"	f
DDAC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDAC(/;"	f
DDBB	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDBB(/;"	f
DDBC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDBC(/;"	f
DDCC	optim.rigidfuncs.f	/^      DOUBLE PRECISION FUNCTION DDCC(/;"	f
DDDISTFUNC	optim.mindist.f	/^      subroutine DDDISTFUNC(/;"	s
DDDISTFUNC	pathsample.mindist.f	/^      subroutine DDDISTFUNC(/;"	s
DDELTA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,DDELTA,/;"	v	module:MODAMBER
DDELTA2	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,DDELTA,DDELTA2,/;"	v	module:MODAMBER
DDELTA3	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,DDELTA,DDELTA2,DDELTA3$/;"	v	module:MODAMBER
DDFUNC	pathsample.mind.f	/^      SUBROUTINE DDFUNC(/;"	s
DDISTFUNC	optim.mindist.f	/^      SUBROUTINE DDISTFUNC(/;"	s
DDISTFUNC	pathsample.mindist.f	/^      SUBROUTINE DDISTFUNC(/;"	s
DDT	optim.ttm3f.f90	/^double precision, dimension(:,:), allocatable :: DDT$/;"	v	module:ttm3f_mod
DEADEND	pathsample.GT2.f90	/^     FUNCTION DEADEND(/;"	f	module:GRAPHTRANSFORMATIONMODULE
DEADEND	pathsample.GT2.save.f90	/^     FUNCTION DEADEND(/;"	f	module:GRAPHTRANSFORMATIONMODULE
DEBUG	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI, CONTAINER, DEBUG,/;"	v	module:KEY
DEBUG	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG,/;"	v
DEBYE	optim.ttm3f.f90	/^double precision, parameter :: DEBYE /;"	v	module:ttm3f_mod
DECIDEREPARAM	optim.growstring.f90	/^  SUBROUTINE DECIDEREPARAM(/;"	s	module:GROWSTRINGUTILS
DEFANTHRACENE	optim.pahagh.f90	/^      SUBROUTINE DEFANTHRACENE(/;"	s
DEFBENZENE	optim.pahagh.f90	/^      SUBROUTINE DEFBENZENE(/;"	s
DEFBENZENE	pathsample.rigidb.f90	/^      SUBROUTINE DEFBENZENE(/;"	s
DEFCAPSID	optim.newcapsid.f90	/^      SUBROUTINE DEFCAPSID(/;"	s
DEFDUM	optim.dbpg.f90	/^      SUBROUTINE DEFDUM(/;"	s
DEFDUM	pathsample.rigidb.f90	/^      SUBROUTINE DEFDUM(/;"	s
DEFLWOTP	optim.lwotpgh.f90	/^      SUBROUTINE DEFLWOTP(/;"	s
DEFLWOTPBX	optim.lwotpbox.f90	/^      SUBROUTINE DEFLWOTPBX(/;"	s
DEFMULTSTOCK	optim.msstock.f90	/^      SUBROUTINE DEFMULTSTOCK(/;"	s
DEFMULTSTOCK	pathsample.rigidb.f90	/^      SUBROUTINE DEFMULTSTOCK(/;"	s
DEFNAPHTHALENE	optim.pahagh.f90	/^      SUBROUTINE DEFNAPHTHALENE(/;"	s
DEFPAHA	optim.pahagh.f90	/^      SUBROUTINE DEFPAHA(/;"	s
DEFPATCHES	optim.patchyd.f90	/^SUBROUTINE DEFPATCHES(/;"	s
DEFPATCHYD	pathsample.rigidb.f90	/^      SUBROUTINE DEFPATCHYD(/;"	s
DEFPYRENE	optim.pahagh.f90	/^      SUBROUTINE DEFPYRENE(/;"	s
DEFSTOCK	optim.stockghaa.f90	/^      SUBROUTINE DEFSTOCK(/;"	s
DEFTD	optim.dbptd.f90	/^      SUBROUTINE DEFTD(/;"	s
DEFTD	pathsample.rigidb.f90	/^      SUBROUTINE DEFTD(/;"	s
DEFTIP4	optim.newtip.f90	/^      SUBROUTINE DEFTIP4(/;"	s
DEGTO	optim.modamber.f90	/^      DOUBLE PRECISION KT(42,42,42),TO(42,42,42),DEGTO(/;"	v	module:MODAMBER
DELETENODE	optim.gsdata.f90	/^  SUBROUTINE DELETENODE(/;"	s
DELETESTRING	optim.gsdata.f90	/^  SUBROUTINE DELETESTRING$/;"	s
DELTA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA,/;"	v
DENOM	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,/;"	v	module:MODAMBER
DERIVAT	optim.modunres.f90	57;"	c	module:MODUNRES
DESMAXAVGE	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE,/;"	v	module:KEY
DESMAXEJUMP	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP,/;"	v	module:KEY
DESMDEBUG	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG,/;"	v	module:KEY
DESMINT	optim.intcommons.f90	/^  LOGICAL :: DESMINT /;"	v	module:INTCOMMONS
DETERMINELINES	optim.ljcapsidmodule.f90	/^SUBROUTINE DETERMINELINES(/;"	s
DETERMINELINES	pathsample.dock.f90	/^SUBROUTINE DETERMINELINES(/;"	s	module:DOCKMODULE
DF	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF,/;"	v
DF1T	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC, FREEZERES, DF1T,/;"	v	module:KEY
DF1grad	optim.DF1.f	/^      SUBROUTINE DF1grad(/;"	s
DF1hess	optim.DF1.f	/^      subroutine DF1hess(/;"	s
DFDERIV1	optim.dftb.f	/^      SUBROUTINE DFDERIV1(/;"	s
DFTB	optim.dftb.f	/^      SUBROUTINE DFTB(/;"	s
DFTBT	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT,/;"	v	module:KEY
DFTP	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP,/;"	v	module:KEY
DFTP	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,/;"	v	program:OPTIM4
DFUNC	pathsample.mind.f	/^      SUBROUTINE DFUNC(/;"	s
DG	optim.double.f	/^      SUBROUTINE DG(/;"	s
DGECON	pathsample.reweight.f	/^      SUBROUTINE DGECON(/;"	s
DGEEQU	pathsample.reweight.f	/^      SUBROUTINE DGEEQU(/;"	s
DGERFS	pathsample.reweight.f	/^      SUBROUTINE DGERFS(/;"	s
DGESVX	pathsample.reweight.f	/^      SUBROUTINE DGESVX(/;"	s
DGETF2	pathsample.reweight.f	/^      SUBROUTINE DGETF2(/;"	s
DGETRF	pathsample.reweight.f	/^      SUBROUTINE DGETRF(/;"	s
DGETRS	pathsample.reweight.f	/^      SUBROUTINE DGETRS(/;"	s
DGTOutput	pathsample.GT2.f90	/^     SUBROUTINE DGTOutput(/;"	s	module:GRAPHTRANSFORMATIONMODULE
DGUESS	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS,/;"	v	module:KEY
DIAGONALISE2	pathsample.diagonalise2.f	/^      SUBROUTINE DIAGONALISE2$/;"	s
DIAGSCALE	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES, NGTSWITCH, NTFOLD, TOMEGA, TFOLDTHRESH, DIAGSCALE,/;"	v
DIAGT	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT ,AMHRMSDT, AMHRELQT, AMH_RELCOT, DIAGT,/;"	v
DID	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,DID,/;"	v	module:MODAMBER
DIELEC	optim.modamber.f90	/^      DOUBLE PRECISION DIELEC$/;"	v	module:MODAMBER
DIFF	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: PREVGRAD(:), DIFF(/;"	k	type:IMGNODE
DIHENEB	optim.chdummy.f	/^      SUBROUTINE DIHENEB(/;"	s
DIHINFO	optim.intcommons.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: DIHINFOS/;"	v	module:INTCOMMONS
DIHINFOSINGLE	optim.intcommons.f90	/^  DOUBLE PRECISION, ALLOCATABLE, TARGET :: DIHINFOSINGLE(/;"	v	module:INTCOMMONS
DIIS	optim.diis.f	/^      SUBROUTINE DIIS(/;"	s
DIJINIT	pathsample.Dijinit.f90	/^SUBROUTINE DIJINIT(/;"	s
DIJINITCONTT	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY, DIJINITSTARTT, DIJINITCONTT,/;"	v
DIJINITFLY	pathsample.Dijinitfly.f90	/^SUBROUTINE DIJINITFLY(/;"	s
DIJINITFLYT	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT, KSHORTESTPATHST, KSHORT_FULL_PRINTT, DIJINITFLYT,/;"	v
DIJINITSTARTT	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY, DIJINITSTARTT,/;"	v
DIJINITT	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT, DIJPAIRT, DIJINITT,/;"	v
DIJKSTRA	pathsample.Dijkstra.f90	/^SUBROUTINE DIJKSTRA(/;"	s
DIJKSTRALOCAL	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL,/;"	v	module:KEY
DIJKSTRAT	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT,/;"	v
DIJKSTRAWAITT	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT, DIJPAIRT, DIJINITT, EXTRACTMINT, EXTRACTTST, DIJKSTRAWAITT,/;"	v
DIJPAIRT	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT, DIJPAIRT,/;"	v
DIP	optim.welch.f	/^      SUBROUTINE DIP(/;"	s
DIPGRAD	optim.welch.f	/^      SUBROUTINE DIPGRAD(/;"	s
DIRECTION	pathsample.common.f90	/^      CHARACTER(LEN=2) DIRECTION$/;"	v
DISCON	optim.c60diff.f	40;"	c	subroutine:C60DIFF
DISCON	optim.greatcirc.f	42;"	c	subroutine:GCLBFGS
DISCON	optim.mylbfgs.f	78;"	c	subroutine:MYLBFGS
DISCON	optim.oldneb.f	729;"	c	subroutine:MAKEGRADH
DISCON	optim.oldneb.f	838;"	c	subroutine:MAKEGRADR
DISCON	optim.rad.f	30;"	c	subroutine:RAD
DISCONNECT	pathsample.GT2.f90	/^     SUBROUTINE DISCONNECT(/;"	s	module:GRAPHTRANSFORMATIONMODULE
DISCONNECT	pathsample.GT2.save.f90	/^     SUBROUTINE DISCONNECT(/;"	s	module:GRAPHTRANSFORMATIONMODULE
DIST	tr.f90	/^      DOUBLE PRECISION DIST(/;"	v
DISTANCEPAIRSWAP	optim.intcoords.f90	/^    SUBROUTINE DISTANCEPAIRSWAP(/;"	s	module:INTCUTILS
DISTFUNC	pathsample.mind.f	/^      SUBROUTINE DISTFUNC(/;"	s
DISTOK	mc.vars.inc.f90	/^      LOGICAL CHIRALFAIL,AMIDEFAIL,GOODSTRUCTURE, LOGDUMMY, DISTOK,/;"	v
DISTREF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EPSALPHA(:), DISTREF(/;"	v	module:KEY
DJWCHECKOMEGA	optim.chdummy.f	/^      SUBROUTINE DJWCHECKOMEGA(/;"	s
DLACN2	pathsample.reweight.f	/^      SUBROUTINE DLACN2(/;"	s
DLACON	pathsample.reweight.f	/^      SUBROUTINE DLACON(/;"	s
DLACPY	optim.dsygvx.f	/^      SUBROUTINE DLACPY(/;"	s
DLANTR	pathsample.reweight.f	/^      DOUBLE PRECISION FUNCTION DLANTR(/;"	f
DLAQGE	pathsample.reweight.f	/^      SUBROUTINE DLAQGE(/;"	s
DLASWP	pathsample.reweight.f	/^      SUBROUTINE DLASWP(/;"	s
DLATRS	pathsample.reweight.f	/^      SUBROUTINE DLATRS(/;"	s
DLLModule	pathsample.GT2DLL.f90	/^module DLLModule$/;"	m
DLLaddI	pathsample.GT2DLL.f90	/^     subroutine DLLaddI(/;"	s	module:DLLModule
DLLaddN	pathsample.GT2DLL.f90	/^     subroutine DLLaddN(/;"	s	module:DLLModule
DLLaddR	pathsample.GT2DLL.f90	/^     subroutine DLLaddR(/;"	s	module:DLLModule
DLLdelI	pathsample.GT2DLL.f90	/^     subroutine DLLdelI(/;"	s	module:DLLModule
DLLdelN	pathsample.GT2DLL.f90	/^     subroutine DLLdelN(/;"	s	module:DLLModule
DLLdelR	pathsample.GT2DLL.f90	/^     subroutine DLLdelR(/;"	s	module:DLLModule
DLLdivR	pathsample.GT2DLL.f90	/^     subroutine DLLdivR(/;"	s	module:DLLModule
DLLinitI	pathsample.GT2DLL.f90	/^     subroutine DLLinitI(/;"	s	module:DLLModule
DLLinitN	pathsample.GT2DLL.f90	/^     subroutine DLLinitN(/;"	s	module:DLLModule
DLLinitR	pathsample.GT2DLL.f90	/^     subroutine DLLinitR(/;"	s	module:DLLModule
DLLmulR	pathsample.GT2DLL.f90	/^     subroutine DLLmulR(/;"	s	module:DLLModule
DLLprintI	pathsample.GT2DLL.f90	/^     subroutine DLLprintI(/;"	s	module:DLLModule
DLLprintN	pathsample.GT2DLL.f90	/^     subroutine DLLprintN(/;"	s	module:DLLModule
DLLprintR	pathsample.GT2DLL.f90	/^     subroutine DLLprintR(/;"	s	module:DLLModule
DLLsumR	pathsample.GT2DLL.f90	/^     subroutine DLLsumR(/;"	s	module:DLLModule
DM	optim.amber.f	2911;"	c	subroutine:anglesecderivs
DM	optim.amber.f	6200;"	c	subroutine:hairyhell
DM	optim.amber.f	6388;"	c	subroutine:hairyimphell
DMBLTD	optim.dbptd.f90	/^      SUBROUTINE DMBLTD /;"	s
DMIN1	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: DMIN1(/;"	v
DMIN2	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: DMIN1(:), DMIN2(/;"	v
DMINMAX	pathsample.common.f90	/^      INTEGER :: DMINMAX=/;"	v
DN	optim.amber.f	2915;"	c	subroutine:anglesecderivs
DN	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DN,/;"	v	module:MODAMBER
DN2	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DN,DN2,/;"	v	module:MODAMBER
DN3	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DN,DN2,DN3$/;"	v	module:MODAMBER
DNEBSWITCH	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL, GEOMDIFFTOL, DNEBSWITCH,/;"	v	module:KEY
DOCK	pathsample.dock.f90	/^SUBROUTINE DOCK$/;"	s	module:DOCKMODULE
DOCKCYCLE	pathsample.dock.f90	/^SUBROUTINE DOCKCYCLE$/;"	s	module:DOCKMODULE
DOCKCYCLE2	pathsample.dock.f90	/^SUBROUTINE DOCKCYCLE2$/;"	s	module:DOCKMODULE
DOCKMODULE	pathsample.dock.f90	/^MODULE DOCKMODULE$/;"	m
DOCKT	pathsample.common.f90	/^     &        DUMMYTST, DOCKT,/;"	v
DOCROSSCHECK	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK,/;"	v	module:KEY
DOGROUPROT	optim.modamber9.f90	/^      LOGICAL :: GROUPROTT, DOGROUPROT=/;"	v	module:modamber9
DOH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DOH /;"	v	module:msevb_common
DONEDOUBLE	pathsample.donedouble.f90	/^SUBROUTINE DONEDOUBLE$/;"	s
DOO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DOO /;"	v	module:msevb_common
DOOEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: DOOEQ /;"	v	module:msevb_common
DOS	pathsample.DOS.f	/^      SUBROUTINE DOS$/;"	s
DOSEINC	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC, DOSEMIN, DOSEMAX, DOSEINC,/;"	v
DOSEMAX	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC, DOSEMIN, DOSEMAX,/;"	v
DOSEMIN	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC, DOSEMIN,/;"	v
DOST	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT, DOST,/;"	v
DOUBLET	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE, NORESET, TWOD, &$/;"	v	module:KEY
DOVECC	optim.dftb.f	/^      SUBROUTINE DOVECC(/;"	s
DP	optim.amber.f	2913;"	c	subroutine:anglesecderivs
DPBTF2	optim.mylapack.f	/^      SUBROUTINE DPBTF2(/;"	s
DPBTRF	optim.mylapack.f	/^      SUBROUTINE DPBTRF(/;"	s
DPBTRS	optim.mylapack.f	/^      SUBROUTINE DPBTRS(/;"	s
DPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: DPD$/;"	v
DPHI	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,/;"	v	module:MODAMBER
DPI1RMvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:LJCAPSIDMODULE
DPI1RMvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(/;"	v	module:PYMODULE
DPI2RMvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:LJCAPSIDMODULE
DPI2RMvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(/;"	v	module:PYMODULE
DPI3RMvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:LJCAPSIDMODULE
DPI3RMvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(:,:,:), DPI1RMvec(:,:,:), DPI2RMvec(:,:,:), DPI3RMvec(/;"	v	module:PYMODULE
DPMU	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(:,:), RBSTLA(:,:), STCHRG(:), DPMU(/;"	v	module:COMMONS
DPRAND	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,EPPREV,TIME,ELASTSYM,EPSSAVE,POTEL,DPRAND$/;"	v
DPRAND	pathsample.dprand.f	/^        FUNCTION DPRAND(/;"	f
DQ	optim.amber.f	2917;"	c	subroutine:anglesecderivs
DQAG	optim.dqag.f	/^      SUBROUTINE DQAG /;"	s
DQAGE	optim.dqag.f	/^      SUBROUTINE DQAGE /;"	s
DQAGKEY	optim.cubsplstring.f90	/^  INTEGER :: DQAGKEY$/;"	v	module:CUBSPLSTRING
DQK15	optim.dqag.f	/^      SUBROUTINE DQK15 /;"	s
DQK21	optim.dqag.f	/^      SUBROUTINE DQK21 /;"	s
DQK31	optim.dqag.f	/^      SUBROUTINE DQK31 /;"	s
DQK41	optim.dqag.f	/^      SUBROUTINE DQK41 /;"	s
DQK51	optim.dqag.f	/^      SUBROUTINE DQK51 /;"	s
DQK61	optim.dqag.f	/^      SUBROUTINE DQK61 /;"	s
DQPSRT	optim.dqag.f	/^      SUBROUTINE DQPSRT /;"	s
DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,3) :: DR$/;"	v
DR	optim.TIPmodes.f	86;"	c	subroutine:H2OMODES
DR	optim.h2o.f	315;"	c	subroutine:LC1
DR	optim.h2o.f	609;"	c	subroutine:DRVTV
DR	optim.h2o.f	85;"	c	subroutine:H2O
DREPCC	optim.dftb.f	/^      SUBROUTINE DREPCC(/;"	s
DRSCL	pathsample.reweight.f	/^      SUBROUTINE DRSCL(/;"	s
DRVTV	optim.h2o.f	/^      SUBROUTINE DRVTV(/;"	s
DS	optim.double.f	/^      SUBROUTINE DS(/;"	s
DSC	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,/;"	v	module:MODUNRES
DSCALE	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE,/;"	v
DSCP	optim.escp.f	/^      SUBROUTINE DSCP(/;"	s
DSORT	pathsample.dsort.f	/^      SUBROUTINE DSORT /;"	s
DSTAGE	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(/;"	v
DSTRING1	optim.main.f90	/^      CHARACTER(LEN=21) DSTRING1,/;"	v	program:OPTIM4
DSTRING2	optim.main.f90	/^      CHARACTER(LEN=21) DSTRING1, DSTRING2$/;"	v	program:OPTIM4
DSYEVX	optim.dsygvx.f	/^      SUBROUTINE DSYEVX(/;"	s
DSYGVX	optim.dsygvx.f	/^      SUBROUTINE DSYGVX(/;"	s
DSYR	optim.mylapack.f	/^      SUBROUTINE DSYR /;"	s
DTBSV	optim.mylapack.f	/^      SUBROUTINE DTBSV /;"	s
DTEST	optim.key.f90	/^      LOGICAL :: DTEST,/;"	v	module:KEY
DTHRESH	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO, ESHIFT, FORCE, DTHRESH$/;"	v	module:MODTWOEND
DTRAP	optim.dtrap.f	/^      SUBROUTINE DTRAP(/;"	s
DTSGI	optim.modamber9.f90	123;"	c	module:modamber9
DTSGL	optim.modamber9.f90	126;"	c	module:modamber9
DU	optim.amber.f	2907;"	c	subroutine:anglesecderivs
DU	optim.amber.f	6196;"	c	subroutine:hairyhell
DU	optim.amber.f	6384;"	c	subroutine:hairyimphell
DUMBBELLP	optim.dbpg.f90	/^      SUBROUTINE DUMBBELLP /;"	s
DUMMY	optim.main.f90	/^      DOUBLE PRECISION DUMMY$/;"	v	program:OPTIM4
DUMMY1	pathsample.main.F	/^      DOUBLE PRECISION TINIT, TNEW, DUMMY1(/;"	v	program:PATHSAMPLE
DUMMY1	pathsample.main.f90	/^      DOUBLE PRECISION TINIT, TNEW, DUMMY1(/;"	v	program:PATHSAMPLE
DUMMY2	pathsample.main.F	/^      DOUBLE PRECISION TINIT, TNEW, DUMMY1(1), DUMMY2(/;"	v	program:PATHSAMPLE
DUMMY2	pathsample.main.f90	/^      DOUBLE PRECISION TINIT, TNEW, DUMMY1(1), DUMMY2(/;"	v	program:PATHSAMPLE
DUMMYCHAR	mc.vars.inc.f90	/^      CHARACTER (LEN=20) QUENCHNUM, QUNAME, DUMMYCHAR$/;"	v
DUMMYRUNT	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT, DUMMYRUNT,/;"	v
DUMMYTST	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT, KSHORTESTPATHST, KSHORT_FULL_PRINTT, DIJINITFLYT, BHINTERPT, ICINTERPT, &$/;"	v
DUMPALLPATHS	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS,/;"	v	module:KEY
DUMPCOORDS	optim.growstring.f90	/^  SUBROUTINE DUMPCOORDS(/;"	s	module:GROWSTRINGUTILS
DUMPCOORDS	optim.specialfuncts.f90	/^  SUBROUTINE DUMPCOORDS(/;"	s	module:SPFUNCTS
DUMPDATAT	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT,/;"	v	module:KEY
DUMPFRAMES	optim.specialfuncts.f90	/^  SUBROUTINE DUMPFRAMES(/;"	s	module:SPFUNCTS
DUMPGROUPST	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT, DUMMYRUNT, REWEIGHTT, REGROUPFREET, REGROUPFREEABT, READMINT, &$/;"	v
DUMPGSALL	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,FIXATMS, PREROTATE, DUMPGSALL /;"	k	type:IMGNODE
DUMPGSPATH	optim.growstring.f90	/^  SUBROUTINE DUMPGSPATH(/;"	s	module:GROWSTRINGUTILS
DUMPIND	optim.gsdata.f90	/^  INTEGER :: DUMPIND$/;"	k	type:IMGNODE
DUMPINTEOS	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS,/;"	v	module:KEY
DUMPINTEOSFREQ	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE, DUMPINTXYZFREQ, DUMPINTEOSFREQ,/;"	v	module:KEY
DUMPINTXYZ	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ,/;"	v	module:KEY
DUMPINTXYZFREQ	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE, DUMPINTXYZFREQ,/;"	v	module:KEY
DUMPIT	optim.dumpit.f	/^      SUBROUTINE DUMPIT(/;"	s
DUMPMODEN	optim.modamber9.f90	/^      logical, dimension(:), allocatable :: DUMPMODEN$/;"	v	module:modamber9
DUMPP	optim.dumpp.f	/^      SUBROUTINE DUMPP(/;"	s
DUMPSP	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP, DUMPSP,/;"	v	module:KEY
DUMPSTRUCTURES	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES,/;"	v	module:KEY
DUMPV	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV,/;"	v	module:KEY
DV	optim.amber.f	2909;"	c	subroutine:anglesecderivs
DV	optim.amber.f	6198;"	c	subroutine:hairyhell
DV	optim.amber.f	6386;"	c	subroutine:hairyimphell
DVEC	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: DVEC(/;"	v	module:NGTMEM
DVECTEMP	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: DVEC(:), DVECTEMP(/;"	v	module:NGTMEM
DVN	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,DID,DVN,/;"	v	module:MODAMBER
DVN2	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DPHI,DID,DVN,DVN2$/;"	v	module:MODAMBER
DVN3	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: DVN3,/;"	v	module:MODAMBER
DVNEB	optim.oldneb.f	315;"	c	subroutine:NEBBFGS
DVNEB	optim.oldneb.f	35;"	c	subroutine:OLDNEB
DVNEB	optim.oldneb.f	726;"	c	subroutine:MAKEGRADH
DVNEB	optim.oldneb.f	834;"	c	subroutine:MAKEGRADR
DX	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,DX,/;"	v	module:MODAMBER
DXDS	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,/;"	v	module:MODUNRES
DXDV	optim.modunres.f90	/^     &                    DCDV,DXDV,/;"	v	module:MODUNRES
DY	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,DX,DY,/;"	v	module:MODAMBER
DZ	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,DENOM,DX,DY,DZ$/;"	v	module:MODAMBER
DZUGUTOV	optim.dzugutov.f	/^      SUBROUTINE DZUGUTOV(/;"	s
D_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(:,:), A_BLN(:), B_BLN(:), C_BLN(:), D_BLN(/;"	v	module:KEY
D_rg	optim.amhglobals.f	/^      double precision D_rg,/;"	v	module:amhglobals
DataModule	pathsample.GT2data.f90	/^module DataModule$/;"	m
DenseGraphTransformation	pathsample.GT2.f90	/^     SUBROUTINE DenseGraphTransformation$/;"	s	module:GRAPHTRANSFORMATIONMODULE
E	bln.vars.inc.f90	/^        DOUBLE /;"	v
E	optim.gsdata.f90	/^     DOUBLE /;"	k	type:IMGNODE
E	optim.intlbfgs.f90	/^     DOUBLE /;"	k	type:TSFOUNDTYPE
E	optim.intlbfgs.f90	/^   DOUBLE /;"	k	type:MINFOUNDTYPE
E	optim.intlbfgslj.f90	/^     DOUBLE /;"	k	type:TSFOUNDTYPE
E	optim.intlbfgslj.f90	/^   DOUBLE /;"	k	type:MINFOUNDTYPE
EACH_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: EACH_COULOMB$/;"	v	module:msevb_common
EAMLJCOMM	keyword.f90	19;"	c	subroutine:KEYWORD
EB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR, EB$/;"	v
EBEST	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,/;"	v
EBLN	bln.f90	/^        SUBROUTINE EBLN(/;"	s	module:BLN
ECHO	optim.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECHO	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,/;"	v	program:OPTIM4
ECHO	pathsample.input.f	/^      LOGICAL SKIPBL, CLEAR, ECHO,/;"	v	block data:INBLK
ECTRAP	optim.ectrap.f	/^      SUBROUTINE ECTRAP /;"	s
EDEBUG	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB, ACESOLV, CHDEBUG, EDEBUG$/;"	v	module:modcharmm
EDIFFTOL	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL,/;"	v	module:KEY
EDIFFTOL	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL,/;"	v
EDITIT	optim.key.f90	/^      CHARACTER(LEN=20) :: EDITIT$/;"	v	module:KEY
EDITRGYR	optim.chdummy.f	/^      SUBROUTINE EDITRGYR(/;"	s
EDOUBLE	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD(6), R2, EDOUBLE,/;"	v
EFIELD	optim.key.f90	/^      DOUBLE PRECISION :: EFIELD /;"	v	module:KEY
EFIELDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT, UNIAXT, STOCKAAT, &$/;"	v	module:KEY
EFIELDT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT,/;"	v
EFOL	optim.efol.f90	/^      SUBROUTINE EFOL(/;"	s	module:MODEFOL
EFSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS,/;"	v	module:KEY
EFSTEPST	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST,/;"	v	module:KEY
EICCH	optim.chdummy.f	/^      SUBROUTINE EICCH(/;"	s
EIG	optim.eig.f	/^      SUBROUTINE EIG(/;"	s
EIG	pathsample.eig.f	/^      SUBROUTINE EIG(/;"	s
EINC	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH, OMEGA, EINC,/;"	v
ELASTSYM	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,EPPREV,TIME,ELASTSYM,/;"	v
ELLIPSOIDROTATION	optim.ljcapsidmodule.f90	/^      SUBROUTINE ELLIPSOIDROTATION /;"	s
ELLIPSOIDT	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,ELLIPSOIDT,/;"	v	module:KEY
EMIE	optim.emie.f	/^      SUBROUTINE EMIE(/;"	s
EMIN	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(/;"	v
EMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB,/;"	v	module:modcharmm
EMINSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMINSAVE(/;"	v	module:SAVESTATE
END	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,/;"	v	program:OPTIM4
ENDHESS	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,/;"	v	module:modcharmm
ENDNUMHESS	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,ENDNUMHESS,/;"	v	module:modcharmm
ENDRES	optim.modunres.f90	/^      INTEGER :: STARTRES(10),ENDRES(/;"	v	module:MODUNRES
ENERGIESCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: ENERGIESLIGAND(:), ENERGIESCOMPLEX(/;"	v	module:DOCKMODULE
ENERGIESLIGAND	pathsample.dock.f90	/^double precision, allocatable :: ENERGIESLIGAND(/;"	v	module:DOCKMODULE
ENERGIESPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: ENERGIESLIGAND(:), ENERGIESCOMPLEX(:), ENERGIESPROTEIN(/;"	v	module:DOCKMODULE
ENERGY	bln.vars.inc.f90	/^        DOUBLE PRECISION ENERGY$/;"	v
ENERGY_FH	commons.f90	/^INTEGER :: ENERGY_FH,/;"	v	module:GMIN_COMMONS
ENSEMBLE	pathsample.common.f90	/^      CHARACTER(LEN=1) ENSEMBLE$/;"	v
EPANIC	optim.rotd.f	/^      SUBROUTINE EPANIC(/;"	s
EPPREV	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,EPPREV,/;"	v
EPREV	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV,/;"	v	module:GMIN_COMMONS
EPSALPHA	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EPSALPHA(/;"	v	module:KEY
EPSILON	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON,/;"	v
EPSILON	optim.modamber.f90	/^      DOUBLE PRECISION RSTAR,EPSILON$/;"	v	module:MODAMBER
EPSILON_MIX	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: EPSILON_MIX /;"	v	module:msevb_common
EPSILON_MSEVB	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: EPSILON_MSEVB /;"	v	module:msevb_common
EPSSAVE	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,EPPREV,TIME,ELASTSYM,EPSSAVE,/;"	v
ERROR	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH, CONNECTIONS, HORDER, ERROR,/;"	v
ESHIFT	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO, ESHIFT,/;"	v	module:MODTWOEND
ETA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ETA /;"	v	module:msevb_common
ETRAP	optim.etrap.f	/^      SUBROUTINE ETRAP /;"	s
ETS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(/;"	v
ETSSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETSSAVE(/;"	v	module:SAVESTATE
EUNTRAPTHRESH	pathsample.common.f90	/^     &                 GT2RSwitch, GT2Ptol, EUNTRAPTHRESH,/;"	v
EV	mc.f90	42;"	c	subroutine:ACCREJ
EV	mylbfgs.old.f90	51;"	c	subroutine:MYLBFGS
EV	optim.capsid.f	62;"	c	subroutine:FCAPSID
EVALMIN	optim.intlbfgs.f90	/^     DOUBLE PRECISION,POINTER :: EVALMIN$/;"	k	type:TSFOUNDTYPE
EVALMIN	optim.intlbfgslj.f90	/^     DOUBLE PRECISION,POINTER :: EVALMIN$/;"	k	type:TSFOUNDTYPE
EVCUT	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT,/;"	v	module:KEY
EVCUT	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC, DOSEMIN, DOSEMAX, DOSEINC, EVCUT,/;"	v
EVDISTTHRESH	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7, EVDISTTHRESH,/;"	v	module:COMMONS
EVOLVESTRING	optim.growstring.f90	/^  SUBROUTINE EVOLVESTRING(/;"	s	module:GROWSTRINGUTILS
EVOLVESTRINGT	optim.gsdata.f90	/^  LOGICAL :: EVOLVESTRINGT$/;"	k	type:IMGNODE
EXCHANGE	mc.vars.inc.f90	/^      LOGICAL CHANGEDE, EXCHANGEA/;"	v
EXCHANGEACCEPT	mc.vars.inc.f90	/^      LOGICAL CHANGEDE, EXCHANGEACCEPT,/;"	v
EXEC	pathsample.common.f90	/^      CHARACTER(LEN=80) EXEC,/;"	v
EXECGMIN	pathsample.common.f90	/^      CHARACTER(LEN=80) EXEC,EXECGMIN$/;"	v
EXPCOSTFUNCTION	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT, DIJPAIRT, DIJINITT, EXTRACTMINT, EXTRACTTST, DIJKSTRAWAITT, &$/;"	v
EXPON	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,EXPON,/;"	v	module:MODUNRES
EXPON2	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,EXPON,EXPON2,/;"	v	module:MODUNRES
EXTENDLEFT	optim.gsdata.f90	/^  SUBROUTINE EXTENDLEFT$/;"	s
EXTENDRIGHT	optim.gsdata.f90	/^  SUBROUTINE EXTENDRIGHT /;"	s
EXTRACTMINT	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT, DIJPAIRT, DIJINITT, EXTRACTMINT,/;"	v
EXTRACTTST	pathsample.common.f90	/^     &        STARTTRIPLES, ADDTRIPLES, DIJKSTRAT, DIJPAIRT, DIJINITT, EXTRACTMINT, EXTRACTTST,/;"	v
EXTRAP	optim.bfgsts.f	/^      SUBROUTINE EXTRAP(/;"	s
EXTRASTEPS	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,RANDOMCUTOFF,PERMDIHE(20), EXTRASTEPS$/;"	v	module:modcharmm
EYDTRAP	optim.EYtrap.f	/^      SUBROUTINE EYDTRAP(/;"	s
EYETRAP	optim.EYtrap.f	/^      SUBROUTINE EYETRAP /;"	s
EYTRAPT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS, INTLJT, INTTST, EYTRAPT$/;"	v	module:KEY
E_harm_springs	optim.amhglobals.f	/^      double precision E_temp, E_harm_springs$/;"	v	module:amhglobals
E_temp	optim.amhglobals.f	/^      double precision E_temp,/;"	v	module:amhglobals
Efd	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: Efd$/;"	v	module:ttm3f_mod
Efq	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: Efq$/;"	v	module:ttm3f_mod
EllipsoidsAAtoPolar	optim.ljcapsidmodule.f90	/^SUBROUTINE EllipsoidsAAtoPolar(/;"	s
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(-1:N+1,2) :: F$/;"	v
FAIL	optim.dftb.f	43;"	c	subroutine:DFTB
FAILT	optim.modcharmm.f90	/^      LOGICAL :: FAILT,/;"	v	module:modcharmm
FAKEWATER	optim.modamber.f90	/^      LOGICAL FAKEWATER$/;"	v	module:MODAMBER
FB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: FB$/;"	v
FCAPSID	optim.capsid.f	/^      SUBROUTINE FCAPSID(/;"	s
FD	optim.fd.f	/^      SUBROUTINE FD(/;"	s
FD5H	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H,/;"	v	module:KEY
FDUMP	optim.dqag.f	/^      SUBROUTINE FDUMP$/;"	s
FDUMP	pathsample.dsort.f	/^      SUBROUTINE FDUMP$/;"	s
FECOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: FELIGAND(:), FECOMPLEX(/;"	v	module:DOCKMODULE
FELIGAND	pathsample.dock.f90	/^double precision, allocatable :: FELIGAND(/;"	v	module:DOCKMODULE
FEMBED	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION FEMBED(/;"	f
FEMBED_D	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION FEMBED_D(/;"	f
FEMBED_DD	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION FEMBED_DD(/;"	f
FEPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: FELIGAND(:), FECOMPLEX(:), FEPROTEIN(/;"	v	module:DOCKMODULE
FETCHZ	optim.fetchz.f	/^      SUBROUTINE FETCHZ(/;"	s
FF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(/;"	v	module:GMIN_COMMONS
FF	gmin.main.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	program:GMIN
FH	pathsample.GT2data.f90	/^          logical :: FH,/;"	k	type:Node
FHcascadingCut	pathsample.GT2FibonacciHeap.f90	/^     recursive subroutine FHcascadingCut(/;"	s	module:FibonacciHeapModule
FHconcatenate	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHconcatenate(/;"	s	module:FibonacciHeapModule
FHconsolidate	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHconsolidate$/;"	s	module:FibonacciHeapModule
FHcut	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHcut(/;"	s	module:FibonacciHeapModule
FHdecreaseKey	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHdecreaseKey(/;"	s	module:FibonacciHeapModule
FHextractMin	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHextractMin(/;"	s	module:FibonacciHeapModule
FHincreaseKey	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHincreaseKey(/;"	s	module:FibonacciHeapModule
FHinit	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHinit$/;"	s	module:FibonacciHeapModule
FHinsert	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHinsert(/;"	s	module:FibonacciHeapModule
FHlink	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHlink(/;"	s	module:FibonacciHeapModule
FHmin	pathsample.GT2FibonacciHeap.f90	/^     type(Node),pointer :: FHmin$/;"	v	module:FibonacciHeapModule
FHremove	pathsample.GT2FibonacciHeap.f90	/^     subroutine FHremove(/;"	s	module:FibonacciHeapModule
FIELDT	optim.key.f90	/^     &        VARIABLES, FIELDT,/;"	v	module:KEY
FIH	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH,/;"	v	module:KEY
FILLICT	optim.chdummy.f	/^      SUBROUTINE FILLICT(/;"	s
FILLICTABLE	optim.chdummy.f	/^      SUBROUTINE FILLICTABLE(/;"	s
FILTH	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH,/;"	v	module:KEY
FILTH	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG, FILTH,/;"	v	program:OPTIM4
FILTH2	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2,/;"	v	module:KEY
FILTH2	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG, FILTH, FILTH2$/;"	v	program:OPTIM4
FILTHSTR	optim.key.f90	/^      CHARACTER(LEN=80) :: SYS, FILTHSTR,/;"	v	module:KEY
FIN	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: FIN(/;"	v	program:GMIN
FIN	optim.modtwoend.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: FIN,/;"	v	module:MODTWOEND
FINALIO	finalio.f90	/^      SUBROUTINE FINALIO$/;"	s
FINALQ	finalq.f90	/^      SUBROUTINE FINALQ$/;"	s
FINC	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC,/;"	v	module:MODTWOEND
FINCORD	optim.key.f90	/^      DOUBLE PRECISION :: FINCORD(/;"	v	module:KEY
FINDCHIRALH	optim.chiralhyd.f90	/^      SUBROUTINE FINDCHIRALH(/;"	s
FINDPERMDIH	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPERMDIH$/;"	s
FINDPERMGROUP	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPERMGROUP(/;"	s
FINDPGCHAIN	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPGCHAIN(/;"	s
FINDPG_NOSWAPS	optim.ambnatintern_extras.f90	/^      SUBROUTINE FINDPG_NOSWAPS(/;"	s
FINNMRSS	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS,/;"	v	module:KEY
FINNQUENCH	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS, FINNUMCRR, FINNUMPRR, FINNQUENCH$/;"	v	module:KEY
FINNUMCRR	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS, FINNUMCRR,/;"	v	module:KEY
FINNUMPRR	optim.key.f90	/^      INTEGER PROCNT, FINNMRSS, FINNUMCRR, FINNUMPRR,/;"	v	module:KEY
FIRST	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST,/;"	k	type:IMGNODE
FIXAFTER	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS, NFREEZE, HINDEX, &$/;"	v	module:KEY
FIXATMS	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,FIXATMS,/;"	k	type:IMGNODE
FIXD	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD,/;"	v	module:KEY
FIXIMAGE	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE,/;"	v	module:KEY
FLAG	mc.vars.inc.f90	/^      LOGICAL CHANGEDE, EXCHANGEACCEPT, EXCHANGE, FLAG /;"	v
FLDMINDIST	optim.rigidb.f90	/^      SUBROUTINE FLDMINDIST(/;"	s
FLDMINDIST	pathsample.rigidb.f90	/^      SUBROUTINE FLDMINDIST(/;"	s
FNAME	mc.vars.inc.f90	/^      CHARACTER FNAME*/;"	v
FNAME	optim.main.f90	/^      CHARACTER FNAME*/;"	v	program:OPTIM4
FNORM2	optim.gsdata.f90	/^     DOUBLE PRECISION :: TNORM, FNORM2,/;"	k	type:IMGNODE
FOH	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH,/;"	v	module:KEY
FOLLOWARCBIS	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION FOLLOWARCBIS(/;"	f	module:CUBSPLSTRING
FOLLOWARCNEWT	optim.cubsplstring.f90	/^  DOUBLE PRECISION FUNCTION FOLLOWARCNEWT(/;"	f	module:CUBSPLSTRING
FORCE	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO, ESHIFT, FORCE,/;"	v	module:MODTWOEND
FOURPIEO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: FOURPIEO /;"	v	module:msevb_common
FPGRP	optim.syminf.f90	/^      CHARACTER(LEN=4) :: FPGRP,/;"	v	module:SYMINF
FPSI	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FPSI(/;"	f
FPSI_D	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FPSI_D(/;"	f
FPSI_DD	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FPSI_DD(/;"	f
FRACTIONAL	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL,/;"	v	module:KEY
FRAMEEDIFF	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF,/;"	v	module:KEY
FREEPAIRT	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT,/;"	v
FREETHRESH	pathsample.common.f90	/^     &                 GT2RSwitch, GT2Ptol, EUNTRAPTHRESH, PLANCK, REGROUPFREETHRESH,/;"	v
FREEZE	optim.gsdata.f90	/^     LOGICAL :: FREEZE$/;"	k	type:IMGNODE
FREEZE	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV, FREEZE,/;"	v	module:KEY
FREEZE	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE,/;"	v
FREEZENODEST	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST,/;"	v	module:KEY
FREEZERES	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC, FREEZERES,/;"	v	module:KEY
FREEZETOL	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER, GCMXSTP, GCSCALE, &$/;"	v	module:KEY
FRICTIONFAC	pathsample.frictionfac.f90	/^DOUBLE PRECISION FUNCTION FRICTIONFAC(/;"	f
FRICTIONT	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT, DOST, IMFRQT, CLOSEFILEST, PULLT, FRICTIONT,/;"	v
FRINGS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(:,:), FRINGS(/;"	v	module:INTCOMMONS
FROZEN	optim.key.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN,/;"	v	module:KEY
FROZEN	pathsample.common.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN /;"	v
FROZENAMBER	optim.modamber9.f90	/^LOGICAL, ALLOCATABLE,DIMENSION(:) :: FROZENAMBER$/;"	v	module:modamber9
FROZENRES	optim.key.f90	/^      LOGICAL, ALLOCATABLE, DIMENSION(:) :: FROZEN, FROZENRES /;"	v	module:KEY
FRQS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: FRQS(/;"	v
FRR	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF, FRR(/;"	v
FSTART	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART,/;"	v	module:MODTWOEND
FTD	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD,/;"	v	module:KEY
FTEST	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST,/;"	v	module:KEY
FUNC	gmin.func.f90	/^MODULE FUNC$/;"	m
FVARPHI	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FVARPHI /;"	f
FVARPHI_D	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FVARPHI_D /;"	f
FVARPHI_DD	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION FVARPHI_DD /;"	f
FVIBMIN	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(:), FVIBMIN(/;"	v
FVIBMINCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(:), FVIBMINCOMPLEX(/;"	v	module:DOCKMODULE
FVIBMINLIGAND	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(/;"	v	module:DOCKMODULE
FVIBMINPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(:), FVIBMINCOMPLEX(:), FVIBMINPROTEIN(/;"	v	module:DOCKMODULE
FVIBTS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(/;"	v
FibonacciHeapModule	pathsample.GT2FibonacciHeap.f90	/^module FibonacciHeapModule$/;"	m
FinDifGrad	optim.finite_differences.f90	/^function FinDifGrad(/;"	f	module:finite_differences
FinDifHess	optim.finite_differences.f90	/^function FinDifHess(/;"	f	module:finite_differences
FinDifHess_Pot	optim.finite_differences.f90	/^function FinDifHess_Pot(/;"	f	module:finite_differences
FreeMemory	pathsample.GT2FreeMemory.f90	/^     subroutine FreeMemory$/;"	s	module:FreeMemoryModule
FreeMemoryModule	pathsample.GT2FreeMemory.f90	/^module FreeMemoryModule$/;"	m
G	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G,/;"	v
G	optim.double.f	/^     1                 V(3*N), R, G(/;"	v
G	pathsample.GT2data.f90	/^     type(NodeArray),allocatable :: G(/;"	v	module:DataModule
G2	optim.g2special.f	32;"	c	subroutine:G2SPECIAL
G2	optim.greatcirc.f	33;"	c	subroutine:GCLBFGS
G2	optim.keyword.f	95;"	c	subroutine:KEYWORD
G2	optim.mylbfgs.f	69;"	c	subroutine:MYLBFGS
G2	optim.odesd.f	36;"	c	subroutine:ODESD
G2	optim.oldneb.f	313;"	c	subroutine:NEBBFGS
G2SPECIAL	optim.g2special.f	/^      SUBROUTINE G2SPECIAL(/;"	s
GALPHA	optim.key.f90	/^     &        OMEGA, GALPHA,/;"	v	module:KEY
GAMESSUK	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK,/;"	v	module:KEY
GAMESSUS	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS,/;"	v	module:KEY
GAMMAFRICTION	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC, DOSEMIN, DOSEMAX, DOSEINC, EVCUT, GAMMAFRICTION,/;"	v
GAMMA_MSEVB	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: GAMMA_MSEVB /;"	v	module:msevb_common
GAUSSIAN	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI, CONTAINER, DEBUG, &$/;"	v	module:KEY
GB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA/;"	v
GB	optim.gb.f90	/^      SUBROUTINE GB /;"	s
GBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA,/;"	v
GBANISOTROPYR	optim.key.f90	/^      DOUBLE PRECISION :: GBANISOTROPYR,/;"	v	module:KEY
GBA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I,/;"	v
GBA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J,/;"	v
GBA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J, GBA_K$/;"	v
GBBOX	optim.gbbox.f90	/^      SUBROUTINE GBBOX /;"	s
GBCHI	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT, GBCHI,/;"	v	module:KEY
GBCHIPRM	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM,/;"	v	module:KEY
GBD	optim.gbd.f90	/^      SUBROUTINE GBD /;"	s
GBDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT,/;"	v	module:KEY
GBEPSNOT	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT,/;"	v	module:KEY
GBKAPPA	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA, BBRCONV, STOCKZTOL, &$/;"	v	module:KEY
GBKAPPRM	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM,/;"	v	module:KEY
GBMU	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU,/;"	v	module:KEY
GBNU	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU,/;"	v	module:KEY
GBSIGNOT	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT,/;"	v	module:KEY
GBT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT,/;"	v	module:KEY
GBWELLDEPTHR	optim.key.f90	/^      DOUBLE PRECISION :: GBANISOTROPYR, GBWELLDEPTHR$/;"	v	module:KEY
GCART	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZCART(:), GCART(/;"	k	type:IMGNODE
GCCONV	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE, GCCONV,/;"	v	module:KEY
GCIMAGE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE,/;"	v	module:KEY
GCLBFGS	optim.greatcirc.f	/^      SUBROUTINE GCLBFGS(/;"	s
GCMXSTP	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER, GCMXSTP,/;"	v	module:KEY
GCSCALE	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER, GCMXSTP, GCSCALE,/;"	v	module:KEY
GCSEED	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS, GCUPDATE, GCSEED,/;"	v	module:KEY
GCSTEPS	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS,/;"	v	module:KEY
GCUPDATE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS, GCUPDATE,/;"	v	module:KEY
GD	mylbfgs.old.f90	50;"	c	subroutine:MYLBFGS
GDIIS	optim.gdiis.f90	/^MODULE GDIIS$/;"	m
GELC	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,GELC,/;"	v	module:MODUNRES
GENERGIES	optim.guesspath.f90	/^   SUBROUTINE GENERGIES(/;"	s	subroutine:GUESSPATH
GENERGIES	optim.unguesspath.f90	/^   SUBROUTINE GENERGIES(/;"	s	subroutine:UNGUESSPATH
GENIMPPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION MIDIMPPARAMS(4,6),GENIMPPARAMS(/;"	v	module:MODAMBER
GENTORSPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION GENTORSPARAMS(/;"	v	module:MODAMBER
GEOM	optim.mindist.f	40;"	c	subroutine:MINDIST
GEOM	optim.mindist.f	714;"	c	subroutine:MMYLBFGS
GEOM	pathsample.mindist.f	40;"	c	subroutine:MINDIST
GEOM	pathsample.mindist.f	714;"	c	subroutine:MMYLBFGS
GEOMDIFFTOL	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA, EDIFFTOL, GEOMDIFFTOL,/;"	v	module:KEY
GEOMDIFFTOL	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL,/;"	v
GEOPT	optim.geopt.f	/^      SUBROUTINE GEOPT(/;"	s
GETA	optim.input.f	/^      SUBROUTINE GETA(/;"	s
GETA	pathsample.input.f	/^      SUBROUTINE GETA(/;"	s
GETALLMIN	pathsample.getallmin.f	/^      SUBROUTINE GETALLMIN(/;"	s
GETALLPATHS	pathsample.getallpaths.f	/^      SUBROUTINE GETALLPATHS$/;"	s
GETATOMN	optim.chdummy.f	/^      INTEGER FUNCTION GETATOMN(/;"	f
GETBACKBONE	optim.intcoords.f90	/^    SUBROUTINE GETBACKBONE$/;"	s	module:INTCUTILS
GETBARRIER	pathsample.getupair.f90	/^SUBROUTINE GETBARRIER(/;"	s
GETCHRMINTPARAM	optim.chdummy.f	/^      SUBROUTINE GETCHRMINTPARAM(/;"	s
GETDIHE	optim.chdummy.f	/^      SUBROUTINE GETDIHE(/;"	s
GETDIHEDIST	optim.chdummy.f	/^      SUBROUTINE GETDIHEDIST(/;"	s
GETDIHONLY	optim.ambnatintern_extras.f90	/^      SUBROUTINE GETDIHONLY(/;"	s
GETDPAIR	pathsample.getdpair.f90	/^SUBROUTINE GETDPAIR(/;"	s
GETENERG	optim.greatcirc.f	/^      SUBROUTINE GETENERG(/;"	s
GETETERM	optim.chdummy.f	/^      SUBROUTINE GETETERM(/;"	s
GETF	optim.input.f	/^      SUBROUTINE GETF(/;"	s
GETF	pathsample.input.f	/^      SUBROUTINE GETF(/;"	s
GETFREEBARRIER	pathsample.getfreebarrier.f90	/^SUBROUTINE GETFREEBARRIER(/;"	s
GETFREEPAIR	pathsample.getfreepair.f90	/^SUBROUTINE GETFREEPAIR(/;"	s
GETI	optim.input.f	/^      SUBROUTINE GETI(/;"	s
GETI	pathsample.input.f	/^      SUBROUTINE GETI(/;"	s
GETICCOORDS	optim.amber9dummy.f90	/^subroutine GETICCOORDS(/;"	s
GETIMGDERVS	optim.greatcirc.f	/^      SUBROUTINE GETIMGDERVS(/;"	s
GETIMGPOT	optim.growstring.f90	/^  SUBROUTINE GETIMGPOT(/;"	s	module:GROWSTRINGUTILS
GETIPHI	optim.chdummy.f	/^      SUBROUTINE GETIPHI(/;"	s
GETKD	optim.chdummy.f	/^      SUBROUTINE GETKD(/;"	s
GETLDH	optim.ambnatintern_extras.f90	/^      SUBROUTINE GETLDH(/;"	s
GETMAXAIM	optim.chdummy.f	/^      SUBROUTINE GETMAXAIM$/;"	s
GETNATINTERN	optim.chdummy.f	/^      SUBROUTINE GETNATINTERN(/;"	s
GETNATINTERNFILE	optim.chdummy.f	/^      SUBROUTINE GETNATINTERNFILE$/;"	s
GETNCONN	pathsample.main.F	/^      SUBROUTINE GETNCONN$/;"	s
GETNCONN	pathsample.main.f90	/^      SUBROUTINE GETNCONN$/;"	s
GETNEWPATH	pathsample.getnewpath.f	/^      SUBROUTINE GETNEWPATH(/;"	s
GETNINT	optim.chdummy.f	/^      SUBROUTINE GETNINT(/;"	s
GETNNZ	optim.chdummy.f	/^      SUBROUTINE GETNNZ(/;"	s
GETNODES	pathsample.nodes.f90	/^     SUBROUTINE GETNODES(/;"	s	module:NODES
GETPAIR	pathsample.getpair.f90	/^SUBROUTINE GETPAIR(/;"	s
GETPERM	optim.connect.f	/^      SUBROUTINE GETPERM(/;"	s
GETPPAIR	pathsample.getppair.f90	/^SUBROUTINE GETPPAIR(/;"	s
GETPPSANGLE	optim.chdummy.f	/^      SUBROUTINE GETPPSANGLE(/;"	s
GETRESID	optim.ambnatintern_extras.f90	/^      SUBROUTINE GETRESID(/;"	s
GETRESNUM	optim.chdummy.f	/^      SUBROUTINE GETRESNUM(/;"	s
GETRPAIR	pathsample.getrpair.f90	/^SUBROUTINE GETRPAIR(/;"	s
GETS	optim.input.f	/^      SUBROUTINE GETS(/;"	s
GETS	pathsample.input.f	/^      SUBROUTINE GETS(/;"	s
GETSEEDATM	optim.amber9dummy.f90	/^subroutine  GETSEEDATM(/;"	s
GETSPAIR	pathsample.getspair.f90	/^SUBROUTINE GETSPAIR(/;"	s
GETSPLVAL	optim.cubsplstring.f90	/^  SUBROUTINE GETSPLVAL(/;"	s	module:CUBSPLSTRING
GETSTUFF	optim.unrestransform.f	/^      SUBROUTINE GETSTUFF(/;"	s
GETTANGENTS	optim.growstring.f90	/^  SUBROUTINE GETTANGENTS$/;"	s	module:GROWSTRINGUTILS
GETUPAIR	pathsample.getupair.f90	/^SUBROUTINE GETUPAIR(/;"	s
GETUSEPAIR	pathsample.getusepair.f90	/^SUBROUTINE GETUSEPAIR(/;"	s
GET_RND	func.f90	/^SUBROUTINE GET_RND(/;"	s
GET_RND	gmin.func.f90	/^SUBROUTINE GET_RND(/;"	s
GET_TWISTABLE	optim.amber9dummy.f90	/^subroutine GET_TWISTABLE(/;"	s
GFRACTION	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION,/;"	v	module:KEY
GHPBC	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,/;"	v	module:MODUNRES
GHPBX	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,/;"	v	module:MODUNRES
GLOBALB	optim.cubsplstring.f90	/^  INTEGER :: GLOBALB /;"	v	module:CUBSPLSTRING
GLOC	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,/;"	v	module:MODUNRES
GLYCART	optim.intcommons.f90	/^  LOGICAL :: GLYCART /;"	v	module:INTCOMMONS
GLYDIH	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: GLYDIH(/;"	v	module:INTCOMMONS
GLYINTPERM	optim.chiralhyd.f90	/^      SUBROUTINE GLYINTPERM(/;"	s
GMAX	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX,/;"	v	module:KEY
GMETRY	optim.gmetry.f	/^      SUBROUTINE GMETRY(/;"	s
GMIN	func.f90	/^MODULE GMIN./;"	m
GMIN	gmin.main.f90	/^      PROGRAM GMIN$/;"	p
GMIN_COMMONS	commons.f90	/^MODULE GMIN_COMMONS$/;"	m
GNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB,/;"	v
GOODSTRUCTURE	mc.vars.inc.f90	/^      LOGICAL CHIRALFAIL,AMIDEFAIL,GOODSTRUCTURE,/;"	v
GOODSTRUCTURE1	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1,/;"	v	module:modamber9
GOODSTRUCTURE2	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2,/;"	v	module:modamber9
GOT	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT,/;"	v	module:KEY
GPFOLD	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(:), FVIBMIN(:), PFMIN(:), IXMIN(:),  IYMIN(:), IZMIN(:), &$/;"	v
GRAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G, GRAD$/;"	v
GRAD	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,/;"	v
GRAD	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(:), GRAD(/;"	k	type:IMGNODE
GRAD4T	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T,/;"	v	module:KEY
GRADC	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,/;"	v	module:MODUNRES
GRADCORR	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,GRADCORR,/;"	v	module:MODUNRES
GRADSQ	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV, FREEZE, GRADSQ,/;"	v	module:KEY
GRADT	bln.vars.inc.f90	/^        LOGICAL GRADT,/;"	v
GRADX	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,/;"	v	module:MODUNRES
GRADXORR	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,GRADCORR,GRADXORR,/;"	v	module:MODUNRES
GRADX_SCP	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,GELC,GRADX_SCP,/;"	v	module:MODUNRES
GRAD_MIN	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(/;"	v
GRAD_PLUS	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(N,3), GRAD_PLUS(/;"	v
GRAPH	pathsample.kshortestpaths.f90	/^MODULE GRAPH$/;"	m
GRAPHTRANSFORMATIONMODULE	pathsample.GT2.f90	/^MODULE GRAPHTRANSFORMATIONMODULE$/;"	m
GRAPHTRANSFORMATIONMODULE	pathsample.GT2.save.f90	/^MODULE GRAPHTRANSFORMATIONMODULE$/;"	m
GREATCIRCLET	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT, MORPHT, PERMDIST, &$/;"	v	module:KEY
GROUPROTATION	optim.grouprotation.f90	/^      SUBROUTINE GROUPROTATION(/;"	s
GROUPROTFREQ	optim.modamber9.f90	/^      INTEGER :: GROUPROTFREQ,/;"	v	module:modamber9
GROUPROTT	optim.modamber9.f90	/^      LOGICAL :: GROUPROTT,/;"	v	module:modamber9
GROWSTRING	optim.growstring.f90	/^  SUBROUTINE GROWSTRING(/;"	s	module:GROWSTRINGUTILS
GROWSTRINGT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT,/;"	v	module:KEY
GROWSTRINGUTILS	optim.growstring.f90	/^MODULE GROWSTRINGUTILS$/;"	m
GRSTWFU	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: GRSTWFU$/;"	v	module:msevb_common
GSCONV	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSGROWTOL, GSCONV,/;"	k	type:IMGNODE
GSDATA	optim.gsdata.f90	/^MODULE GSDATA$/;"	m
GSDGUESS	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSIMGDENSITY, GSITERDENSITY, GSDGUESS$/;"	k	type:IMGNODE
GSGROWTOL	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSGROWTOL,/;"	k	type:IMGNODE
GSIMGDENSITY	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSIMGDENSITY,/;"	k	type:IMGNODE
GSITERDENSITY	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSIMGDENSITY, GSITERDENSITY,/;"	k	type:IMGNODE
GSMAXTOTITD	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSMXSTP, GSMAXTOTITD$/;"	k	type:IMGNODE
GSMXSTP	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSMXSTP,/;"	k	type:IMGNODE
GSORT	func.f90	/^      SUBROUTINE GSORT(/;"	s
GSORT	gmin.func.f90	/^      SUBROUTINE GSORT(/;"	s
GSTEPS	optim.modguess.f90	/^      INTEGER :: GSTEPS,/;"	v	module:MODGUESS
GSUPDATE	optim.gsdata.f90	/^  INTEGER :: GSUPDATE,/;"	k	type:IMGNODE
GT	pathsample.GT.f	/^      SUBROUTINE GT$/;"	s
GT2AltPbb	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch, GT2AltPbb,/;"	v
GT2DisconnectSources	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch, GT2AltPbb, GT2Rescale, GT2Normalise, GT2DisconnectSources,/;"	v
GT2Normalise	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch, GT2AltPbb, GT2Rescale, GT2Normalise,/;"	v
GT2Ptol	pathsample.common.f90	/^     &                 GT2RSwitch, GT2Ptol,/;"	v
GT2RSwitch	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH, OMEGA, EINC, RWBINWIDTH, RWEMAX, RWEMIN, &$/;"	v
GT2Rescale	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch, GT2AltPbb, GT2Rescale,/;"	v
GT2Sparse	pathsample.common.f90	/^     &        CHECKCONNECTIONST, AMHALLATOMTST, AMHQT, AMHQCONTT ,AMHRMSDT, AMHRELQT, AMH_RELCOT, DIAGT, ARNOLDIT, &$/;"	v
GT2Switch	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch,/;"	v
GT2T	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS, ADDPATH, NGTT, GTT, GT2T,/;"	v
GTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB, GTA,/;"	v
GTA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I,/;"	v
GTA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J,/;"	v
GTA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K,/;"	v
GTA_L	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K, GTA_L$/;"	v
GTEST	bln.vars.inc.f90	/^        LOGICAL GTEST,/;"	v
GTEST	optim.double.f	/^      LOGICAL GTEST,/;"	v
GTHRESHOLD	optim.modguess.f90	/^      DOUBLE PRECISION :: GTHRESHOLD,/;"	v	module:MODGUESS
GTINT	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE, NCPU, GTINT,/;"	v
GTOL	lbfgs.f	/^      DOUBLE PRECISION GTOL,/;"	v	block data:LB2
GTT	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS, ADDPATH, NGTT,/;"	v
GUESSPATH	optim.guesspath.f90	/^SUBROUTINE GUESSPATH(/;"	s
GUESSPATHT	optim.modguess.f90	/^      LOGICAL :: GUESSPATHT=/;"	v	module:MODGUESS
GUESSTHRESH	optim.modcharmm.f90	/^      DOUBLE PRECISION  :: GUESSTHRESH,/;"	v	module:modcharmm
GUESSTST	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,/;"	v	module:modcharmm
GUPTA	optim.Gupta.f	/^      SUBROUTINE GUPTA(/;"	s
GUPTATYPE	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN, KADJUSTFRQ, GUPTATYPE,/;"	v	module:KEY
GVDWC	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,/;"	v	module:MODUNRES
GVDWC_SCP	optim.modunres.f90	/^     &                    DCDV,DXDV,DXDS,GRADX,GRADC,GVDWC,GELC,GRADX_SCP, &$/;"	v	module:MODUNRES
GVDWX	optim.modunres.f90	/^     &                    GVDWC_SCP,GHPBX,GHPBC,GLOC,GRADCORR,GRADXORR,GVDWX$/;"	v	module:MODUNRES
Go	optim.GoOptim.f	/^      SUBROUTINE Go(/;"	s
GoANGL	optim.GoOptim.f	/^      SUBROUTINE GoANGL(/;"	s
GoBonds	optim.GoOptim.f	/^      subroutine GoBonds(/;"	s
Gocontacts	optim.GoOptim.f	/^      subroutine Gocontacts(/;"	s
Godihedral	optim.GoOptim.f	/^      SUBROUTINE Godihedral(/;"	s
Goinit	optim.GoOptim.f	/^      subroutine Goinit(/;"	s
Gononcontacts	optim.GoOptim.f	/^      subroutine Gononcontacts(/;"	s
H	optim.double.f	/^     1                 V(3*N), R, G(2,2), H,/;"	v
H2O	optim.h2o.f	/^      SUBROUTINE H2O(/;"	s
H2OINTEREPSILON	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OINTEREPSILON /;"	v	module:msevb_common
H2OINTERSIGMA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OINTERSIGMA /;"	v	module:msevb_common
H2OKB	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OKB /;"	v	module:msevb_common
H2OKTHETA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OKTHETA /;"	v	module:msevb_common
H2OMODES	optim.TIPmodes.f	/^      SUBROUTINE H2OMODES(/;"	s
H2OROHEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: H2OROHEQ /;"	v	module:msevb_common
HAM	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HAM,/;"	v	module:msevb_common
HAMCCA	optim.dftb.f	/^      SUBROUTINE HAMCCA(/;"	s
HAMCCB	optim.dftb.f	/^      SUBROUTINE HAMCCB(/;"	s
HESS	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: HESS$/;"	v
HESS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS$/;"	v	module:GMIN_COMMONS
HESS	optim.modhess.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS /;"	v	module:MODHESS
HESSGRAD	optim.gsdata.f90	/^  LOGICAL :: PTEST, JOINED, HESSGRAD,/;"	k	type:IMGNODE
HESSIAN	optim.PachecoC60.f	/^      subroutine HESSIAN(/;"	s
HESSOUT	optim.hessout.f	/^      SUBROUTINE HESSOUT(/;"	s
HESST	bln.vars.inc.f90	/^        LOGICAL GRADT, HESST$/;"	v
HIGHESTIMAGE	optim.modneb.f90	/^      LOGICAL :: NEBT, NEWNEBT, NEWCONNECTT, HIGHESTIMAGE=/;"	v	module:MODNEB
HINDEX	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS, NFREEZE, HINDEX,/;"	v	module:KEY
HMCEIG	optim.key.f90	/^     &        BHSFRAC, HMCEIG,/;"	v	module:KEY
HMEVMAX	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX,/;"	v	module:KEY
HMMETHOD	optim.key.f90	/^      CHARACTER(LEN=2) :: HMMETHOD$/;"	v	module:KEY
HMMXSTP	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP,/;"	v	module:KEY
HMNBFGSMAX1	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS, HMNBFGSMAX1,/;"	v	module:KEY
HMNBFGSMAX2	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS, HMNBFGSMAX1, HMNBFGSMAX2,/;"	v	module:KEY
HMNEVL	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL,/;"	v	module:KEY
HMNEVS	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS,/;"	v	module:KEY
HMNSTEPS	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS, HMNEVS, HMNEVL, HMNSTEPS,/;"	v	module:KEY
HORDER	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH, CONNECTIONS, HORDER,/;"	v
HORDERMIN	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERMIN(/;"	v
HORDERTS	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERTS(/;"	v
HS	optim.bfgsts.f	1902;"	c	subroutine:HSMOVE
HS	optim.connect.f	43;"	c	subroutine:CONNECT
HS	optim.keyword.f	106;"	c	subroutine:KEYWORD
HSMOVE	optim.bfgsts.f	/^      SUBROUTINE HSMOVE(/;"	s
HUPD	optim.potential.f	/^      SUBROUTINE HUPD(/;"	s
HUPDATE	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE,/;"	v	module:KEY
HVXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD,/;"	v
HYBRIDMIN	optim.hybridmin.f	/^      SUBROUTINE HYBRIDMIN(/;"	s
HYBRIDMINT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL, BLNT, HYBRIDMINT,/;"	v	module:KEY
Hfunc	optim.Ackland_metals.f90	/^	double precision function Hfunc(/;"	f
Hfunc0	optim.Ackland_metals.f90	/^	double precision function Hfunc0(/;"	f
I	bln.vars.inc.f90	/^        IN/;"	v
I	mc.vars.inc.f90	/^      IN/;"	v
I	optim.ljcapsidmodule.f90	/^ IN/;"	v	module:LJCAPSIDMODULE
I	optim.pymodule.f90	/^ IN/;"	v	module:PYMODULE
I1MACH	optim.dqag.f	/^      INTEGER FUNCTION I1MACH /;"	f
I1MACH	pathsample.dsort.f	/^      INTEGER FUNCTION I1MACH /;"	f
I3	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION ::I3(/;"	v	module:LJCAPSIDMODULE
I3	optim.pymodule.f90	/^ DOUBLE PRECISION ::I3(/;"	v	module:PYMODULE
IA	commons.f90	/^INTEGER IA,/;"	v	module:GMIN_COMMONS
IALPH	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,/;"	v	module:MODUNRES
IATEL_E	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,/;"	v	module:MODUNRES
IATEL_S	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,/;"	v	module:MODUNRES
IATNUM	optim.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NR, IATNUM /;"	v	module:COMMONS
IATSCP_E	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,IATSCP_E,/;"	v	module:MODUNRES
IATSCP_S	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,/;"	v	module:MODUNRES
IATSC_E	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,ISCPEND,IATSC_S, &$/;"	v	module:MODUNRES
IATSC_S	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,ISCPEND,IATSC_S,/;"	v	module:MODUNRES
IBIB	optim.modamber9.f90	/^integer, allocatable:: IBIB(/;"	v	module:modamber9
ICCHECKPP	optim.chdummy.f	/^      SUBROUTINE ICCHECKPP(/;"	s
ICG	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,NVARU,NFL,ICG$/;"	v	module:MODUNRES
ICINTERPOL	optim.chdummy.f	/^      SUBROUTINE ICINTERPOL(/;"	s
ICINTERPT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,CHECKCHIRALT,CHECKOMEGAT, ICINTERPT,/;"	v	module:modcharmm
ICINTERPT	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT, KSHORTESTPATHST, KSHORT_FULL_PRINTT, DIJINITFLYT, BHINTERPT, ICINTERPT,/;"	v
ICOUNT	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX, ICOUNT$/;"	v
ICTYPECHECKAM	optim.amber9dummy.f90	/^subroutine ICTYPECHECKAM(/;"	s
IC_COORDS	optim.modamber9.f90	/^integer, dimension(:,:),allocatable:: IC_COORDS$/;"	v	module:modamber9
IC_IMPROP	optim.modamber9.f90	/^character(len=3), dimension(:), allocatable:: IC_IMPROP$/;"	v	module:modamber9
IDELTA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,IVN,IDELTA,/;"	v	module:MODAMBER
IDIFFTOL	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL,/;"	v
IDIVF	optim.modamber.f90	/^      INTEGER PN,IDIVF,/;"	v	module:MODAMBER
IELEND	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,/;"	v	module:MODUNRES
IELSTART	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,/;"	v	module:MODUNRES
IEND	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,/;"	v	module:MODUNRES
IH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,/;"	v
IHT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT,/;"	v	module:KEY
IK	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,/;"	v
IMAX	pathsample.common.f90	/^      INTEGER :: SMAX, IMAX,/;"	v
IMFRQT	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT, DOST, IMFRQT,/;"	v
IMGD	optim.gsdata.f90	/^  DOUBLE PRECISION :: IMGD,/;"	k	type:IMGNODE
IMGNODE	optim.gsdata.f90	/^  TYPE IMGNODE$/;"	t	module:GSDATA
IMINCUT	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,/;"	v	module:modcharmm
IMP	optim.modamber.f90	/^      INTEGER ATOMS,ANG,IMP,/;"	v	module:MODAMBER
IMPDIH	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(:,:), FRINGS(:,:), LINDIH(:,:), &$/;"	v	module:INTCOMMONS
IMPENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,IMPENERGY,/;"	v	module:MODAMBER
IMSEPMAX	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS, IMSEPMIN, IMSEPMAX,/;"	v	module:KEY
IMSEPMIN	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS, IMSEPMIN,/;"	v	module:KEY
IN	optim.TIPmodes.f	88;"	c	subroutine:H2OMODES
IN	optim.h2o.f	314;"	c	subroutine:LC1
IN	optim.h2o.f	608;"	c	subroutine:DRVTV
IN	optim.h2o.f	88;"	c	subroutine:H2O
IN1	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,IVN,IDELTA,IN1$/;"	v	module:MODAMBER
INBLK	optim.input.f	/^      BLOCK DATA INBLK$/;"	b
INBLK	pathsample.input.f	/^      BLOCK DATA INBLK$/;"	b
IND	optim.gsdata.f90	/^     INTEGER :: IND /;"	k	type:IMGNODE
INDEXCOSTFUNCTION	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION,/;"	v
INDEXT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV, FRACTIONAL, BLNT, HYBRIDMINT, &$/;"	v	module:KEY
INERTIA	optim.inertia.f	/^      SUBROUTINE INERTIA(/;"	s
INERTIA	pathsample.inertia.f	/^      SUBROUTINE INERTIA(/;"	s
INERTIA2	optim.inertia.f	/^      SUBROUTINE INERTIA2(/;"	s
INFIX	commons.f90	/^INTEGER :: INFIX$/;"	v	module:GMIN_COMMONS
INITIALISEPYGPERIODIC	optim.ljcapsidmodule.f90	/^SUBROUTINE INITIALISEPYGPERIODIC$/;"	s
INITIATE_RANDOM	optim.specialfuncts.f90	/^  SUBROUTINE INITIATE_RANDOM(/;"	s	module:SPFUNCTS
INPUT	optim.input.f	/^      SUBROUTINE INPUT(/;"	s
INPUT	pathsample.input.f	/^      SUBROUTINE INPUT(/;"	s
INPUTI	optim.input.f	/^      SUBROUTINE INPUTI(/;"	s
INPUTI	pathsample.input.f	/^      SUBROUTINE INPUTI(/;"	s
INPUTMODULE	pathsample.GT2input.f90	/^MODULE INPUTMODULE$/;"	m
INR	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR,/;"	v	module:COMMONS
INT1	optim.escp.f	165;"	c	subroutine:DSCP
INT1	optim.escp.f	34;"	c	subroutine:OESCP
INTBEIG	optim.intbeig.f	/^      SUBROUTINE INTBEIG(/;"	s
INTBFGSTS	optim.intbfgsts.f	/^      SUBROUTINE INTBFGSTS(/;"	s
INTCLEANUP	optim.intcoords.f90	/^   SUBROUTINE INTCLEANUP$/;"	s	module:INTCUTILS
INTCOMMONS	optim.intcommons.f90	/^MODULE INTCOMMONS$/;"	m
INTCONFRAC	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC,/;"	v	module:KEY
INTCONMAX	optim.key.f90	/^      INTEGER :: INTCONMAX=/;"	v	module:KEY
INTCONMAX	pathsample.common.f90	/^      INTEGER :: INTCONMAX=/;"	v
INTCONSEP	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN, SDCHARGE, BOWMANPES, &$/;"	v	module:KEY
INTCONSEP	pathsample.common.f90	/^     &        BISECTSTEPS, BISECTMAXATTEMPTS, NDIAGEIG, QRELONE, QRELTWO, MAXTSATTEMPTS, &$/;"	v
INTCONSTEPS	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS,/;"	v	module:KEY
INTCONSTRAINREPCUT	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF, INTCONSTRAINTREP, INTCONSTRAINREPCUT,/;"	v	module:KEY
INTCONSTRAINREPCUT	pathsample.common.f90	/^     &                 INTEPSILON, INTCONSTRAINTDEL, INTCONSTRAINTREP, INTCONSTRAINREPCUT,/;"	v
INTCONSTRAINTDEL	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL,/;"	v	module:KEY
INTCONSTRAINTDEL	pathsample.common.f90	/^     &                 INTEPSILON, INTCONSTRAINTDEL,/;"	v
INTCONSTRAINTREP	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF, INTCONSTRAINTREP,/;"	v	module:KEY
INTCONSTRAINTREP	pathsample.common.f90	/^     &                 INTEPSILON, INTCONSTRAINTDEL, INTCONSTRAINTREP,/;"	v
INTCONSTRAINTT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT, ADDREPT, INTCONSTRAINTT,/;"	v	module:KEY
INTCONSTRAINTT	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT, DOST, IMFRQT, CLOSEFILEST, PULLT, FRICTIONT, &$/;"	v
INTCONSTRAINTTOL	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL,/;"	v	module:KEY
INTCONSTRAINTTOL	pathsample.common.f90	/^      DOUBLE PRECISION INTCONSTRAINTTOL,/;"	v
INTCUTILS	optim.intcoords.f90	/^MODULE INTCUTILS$/;"	m
INTDGUESS	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT, NEBDGUESS, INTDGUESS,/;"	v	module:KEY
INTDISTANCE	optim.intcoords.f90	/^      SUBROUTINE INTDISTANCE(/;"	s	module:INTCUTILS
INTDISTANCET	optim.intcommons.f90	/^  LOGICAL :: INTDISTANCET /;"	v	module:INTCOMMONS
INTEFF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	module:GMIN_COMMONS
INTEFF	gmin.main.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	program:GMIN
INTEPSILON	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS, TIMELIMIT, TSTART, &$/;"	v	module:KEY
INTEPSILON	pathsample.common.f90	/^     &                 CVTMIN, CVTMAX, CVTINC, DOSEMIN, DOSEMAX, DOSEINC, EVCUT, GAMMAFRICTION, &$/;"	v
INTEQMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:GMIN_COMMONS
INTEQMIN	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	program:GMIN
INTEQMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:GMIN_COMMONS
INTEQMINP	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	program:GMIN
INTERACT	optim.modunres.f90	73;"	c	module:MODUNRES
INTERATOMICR	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: INTERATOMICR$/;"	v	module:msevb_common
INTERPBACKTCUT	optim.intcommons.f90	/^  DOUBLE PRECISION :: MINBACKTCUT = 1.0D-4, INTERPBACKTCUT /;"	v	module:INTCOMMONS
INTERPCHOICE	optim.intcommons.f90	/^  LOGICAL :: INTERPCHOICE /;"	v	module:INTCOMMONS
INTERPCOSTFUNCTION	pathsample.common.f90	/^     &        INTCONSTRAINTT, CHECKCONINT, INTLJT, INTERPCOSTFUNCTION,/;"	v
INTERPCUBSPL	optim.cubsplstring.f90	/^  SUBROUTINE INTERPCUBSPL$/;"	s	module:CUBSPLSTRING
INTERPOLATE	optim.growstring.f90	/^  SUBROUTINE INTERPOLATE$/;"	s	module:GROWSTRINGUTILS
INTERPSIMPLE	optim.intcommons.f90	/^  LOGICAL :: BBCART = .FALSE., INTINTERPT = .FALSE., INTERPSIMPLE /;"	v	module:INTCOMMONS
INTER_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: INTER_COULOMB$/;"	v	module:msevb_common
INTGRAD	optim.unresoptim.f	/^      SUBROUTINE INTGRAD(/;"	s
INTGRADLJ	optim.intgradlj.f90	/^SUBROUTINE INTGRADLJ(/;"	s
INTGRADLJ	pathsample.make_conpot.f90	/^SUBROUTINE INTGRADLJ(/;"	s
INTHUP	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP,/;"	v	module:KEY
INTH_ALIGN	optim.intcoords.f90	/^     SUBROUTINE INTH_ALIGN(/;"	s
INTIMAGE	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE,/;"	v	module:KEY
INTIMAGE	pathsample.common.f90	/^      INTEGER :: INTIMAGE=/;"	v
INTINTERPOLATE	optim.intcoords.f90	/^    SUBROUTINE INTINTERPOLATE(/;"	s	module:INTCUTILS
INTINTERPT	optim.intcommons.f90	/^  LOGICAL :: BBCART = .FALSE., INTINTERPT /;"	v	module:INTCOMMONS
INTLBFGS	optim.intlbfgs.f90	/^SUBROUTINE INTLBFGS(/;"	s
INTLBFGSLJ	optim.intlbfgslj.f90	/^SUBROUTINE INTLBFGSLJ(/;"	s
INTLJDEL	optim.key.f90	/^     &        INTLJTOL, INTLJDEL,/;"	v	module:KEY
INTLJDEL	pathsample.common.f90	/^     &                 INTEPSILON, INTCONSTRAINTDEL, INTCONSTRAINTREP, INTCONSTRAINREPCUT, INTLJDEL,/;"	v
INTLJEPS	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS,/;"	v	module:KEY
INTLJEPS	pathsample.common.f90	/^     &                 INTEPSILON, INTCONSTRAINTDEL, INTCONSTRAINTREP, INTCONSTRAINREPCUT, INTLJDEL, INTLJEPS,/;"	v
INTLJSTEPS	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS, INTSTEPS1, INTLJSTEPS,/;"	v	module:KEY
INTLJT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS, INTLJT,/;"	v	module:KEY
INTLJT	pathsample.common.f90	/^     &        INTCONSTRAINTT, CHECKCONINT, INTLJT,/;"	v
INTLJTOL	optim.key.f90	/^     &        CPCONSTRAINTTOL, CPCONSTRAINTDEL, CPCONSTRAINTREP, CPCONSTRAINREPCUT, CPCONFRAC, &$/;"	v	module:KEY
INTMINONLY	optim.congrad.f90	/^SUBROUTINE INTMINONLY(/;"	s
INTMINPERM	optim.intcoords.f90	/^  SUBROUTINE INTMINPERM(/;"	s	module:INTCUTILS
INTMINPERMT	optim.modamber9.f90	/^logical :: INTMINPERMT /;"	v	module:modamber9
INTMINPERM_CHIRAL	optim.intcoords.f90	/^      SUBROUTINE INTMINPERM_CHIRAL(/;"	s	module:INTCUTILS
INTMINT	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,ENDNUMHESS,PERMDIHET,INTMINT$/;"	v	module:modcharmm
INTMUPDATE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE,/;"	v	module:KEY
INTNEWT	optim.intcommons.f90	/^  LOGICAL :: NATINT = .FALSE., INTNEWT /;"	v	module:INTCOMMONS
INTPARFILE	optim.intcommons.f90	/^  CHARACTER*100 :: INTPARFILE /;"	v	module:INTCOMMONS
INTPTEST	optim.gsdata.f90	/^  LOGICAL :: PTEST, JOINED, HESSGRAD, INTPTEST$/;"	k	type:IMGNODE
INTRELSTEPS	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS,/;"	v	module:KEY
INTREPSEP	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP,/;"	v	module:KEY
INTREPSEP	pathsample.common.f90	/^     &        INTCONSEP, INTREPSEP /;"	v
INTRMSTOL	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE, INTRMSTOL,/;"	v	module:KEY
INTS	optim.meccano.f90	40;"	c	subroutine:MECCANO
INTS	optim.meccano.f90	622;"	c	subroutine:MAKEGRADMEC
INTS	optim.oldneb.f	1090;"	c	subroutine:MAKEIMAGE
INTS	optim.oldneb.f	318;"	c	subroutine:NEBBFGS
INTS	optim.oldneb.f	39;"	c	subroutine:OLDNEB
INTS	optim.oldneb.f	728;"	c	subroutine:MAKEGRADH
INTS	optim.oldneb.f	836;"	c	subroutine:MAKEGRADR
INTS	optim.unmeccano.f90	40;"	c	subroutine:UNMECCANO
INTS	optim.unmeccano.f90	631;"	c	subroutine:UNMAKEGRADMEC
INTSECDET	optim.unrestransform.f	/^      SUBROUTINE INTSECDET(/;"	s
INTSECDIAG	optim.intsecdiag.f	/^      SUBROUTINE INTSECDIAG(/;"	s
INTSETUP	optim.intcoords.f90	/^     SUBROUTINE INTSETUP$/;"	s	module:INTCUTILS
INTSTEP	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: INTSTEP /;"	v	module:MODUNRES
INTSTEPS1	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS, INTSTEPS1,/;"	v	module:KEY
INTTST	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT, CFUSIONT, DUMPINTXYZ, DUMPINTEOS, INTLJT, INTTST,/;"	v	module:KEY
INTXMYLBFGS	optim.intxmylbfgs.f	/^      SUBROUTINE INTXMYLBFGS(/;"	s
INVMTRX	optim.rbperm.f90	/^      SUBROUTINE INVMTRX(/;"	s
INVMTRX	pathsample.rbperm.f90	/^      SUBROUTINE INVMTRX(/;"	s
ION	optim.Natb.f	28;"	c	subroutine:NATB
ION	optim.Natb.f	78;"	c	subroutine:entots
IONS	optim.ions.f	/^      SUBROUTINE IONS(/;"	s
IOS	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS,/;"	v	program:OPTIM4
IPHASE	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,IPHASE$/;"	v	module:MODAMBER
IPHI	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,/;"	v	module:MODAMBER
IPK	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,IPK,/;"	v	module:MODAMBER
IPN	optim.modamber.f90	/^      INTEGER PN,IDIVF,PN2,PN3,IPN$/;"	v	module:MODAMBER
IPRNT	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT,/;"	v	module:COMMONS
IPS	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,/;"	v	module:modamber9
IR	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR,/;"	v	program:OPTIM4
IRANDOMSELECT	optim.specialfuncts.f90	/^    SUBROUTINE IRANDOMSELECT(/;"	s	module:SPFUNCTS
IS	optim.beig.f	41;"	c	subroutine:BEIG
IS	optim.bfgsts.f	1090;"	c	subroutine:ITEIG
IS	optim.bfgsts.f	1592;"	c	subroutine:CHECKIND
IS	optim.bfgsts.f	1775;"	c	subroutine:CHECKIND2
IS	optim.intbeig.f	42;"	c	subroutine:INTBEIG
ISCP	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,IATSCP_E,ISPP,ISCP$/;"	v	module:MODUNRES
ISCPEND	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,ISCPEND,/;"	v	module:MODUNRES
ISCPSTART	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,ISCPSTART,/;"	v	module:MODUNRES
ISEED	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED,/;"	v
ISGEND	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,/;"	v	module:modamber9
ISGSTA	optim.modamber9.f90	/^      integer ISGSTA,/;"	v	module:modamber9
ISNEWTS	optim.connect.f	/^      SUBROUTINE ISNEWTS(/;"	s
ISPP	optim.modunres.f90	/^     &           IATSC_E,IATEL_S,IATEL_E,IATSCP_S,IATSCP_E,ISPP,/;"	v	module:MODUNRES
ISSIDECHAIN	optim.modcharmm.f90	/^      LOGICAL, DIMENSION(:), ALLOCATABLE :: ISSIDECHAIN$/;"	v	module:modcharmm
ISTART	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,/;"	v	module:MODUNRES
ISTAT	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,QDONE,JBEST,NDONE,NRMS,I,J,NTOT,ISTAT$/;"	v
ISTATUS	optim.commons.f90	/^      INTEGER :: ISTATUS$/;"	v	module:COMMONS
ISTCRT	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT,/;"	v	module:COMMONS
ISTEP	commons.f90	/^INTEGER :: ISTEP$/;"	v	module:GMIN_COMMONS
ISTR	mc.vars.inc.f90	/^      CHARACTER (LEN= 3)  ISTR$/;"	v
IS_SIDECHAIN	optim.modamber9.f90	/^logical, dimension(:), allocatable :: IS_SIDECHAIN$/;"	v	module:modamber9
ITEIG	optim.bfgsts.f	/^      SUBROUTINE ITEIG(/;"	s
ITEIGN	optim.bfgsts.f	/^      SUBROUTINE ITEIGN(/;"	s
ITEL	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,EXPON,EXPON2, &$/;"	v	module:MODUNRES
ITEM	optim.main.f90	/^      INTEGER ITEM,/;"	v	program:OPTIM4
ITERATIONS	mc.vars.inc.f90	/^      INTEGER ITERATIONS,/;"	v
ITERD	optim.gsdata.f90	/^  DOUBLE PRECISION :: IMGD, ITERD /;"	k	type:IMGNODE
ITOA	optim.utils.f	/^       CHARACTER*(*) FUNCTION ITOA(/;"	f
ITXMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB,/;"	v	module:modcharmm
ITYMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB, ITYMINB,/;"	v	module:modcharmm
ITYPE	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,/;"	v	module:MODUNRES
ITYPRO	optim.modunres.f90	/^     &           ITEL,ITYPRO,/;"	v	module:MODUNRES
ITZMINB	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB, ITYMINB, ITZMINB,/;"	v	module:modcharmm
IVAR	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,/;"	v	module:MODUNRES
IVEC	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC,/;"	v	module:COMMONS
IVEC2	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2,/;"	v	module:COMMONS
IVN	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) :: IPHI,IVN,/;"	v	module:MODAMBER
IXMIN	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(:), FVIBMIN(:), PFMIN(:), IXMIN(/;"	v
IXTS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(:), KPLUS(:), KMINUS(:), IXTS(/;"	v
IYMIN	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(:), FVIBMIN(:), PFMIN(:), IXMIN(:),  IYMIN(/;"	v
IYTS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(:), KPLUS(:), KMINUS(:), IXTS(:),  IYTS(/;"	v
IZMIN	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(:), FVIBMIN(:), PFMIN(:), IXMIN(:),  IYMIN(:), IZMIN(/;"	v
IZTS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(:), KPLUS(:), KMINUS(:), IXTS(:),  IYTS(:), IZTS(/;"	v
I_RES	optim.main.f90	/^      INTEGER :: NRES,I_RES,/;"	v	program:OPTIM4
I_RES	pathsample.main.F	/^      INTEGER :: NRES,I_RES,/;"	v	program:PATHSAMPLE
I_RES	pathsample.main.f90	/^      INTEGER :: NRES,I_RES,/;"	v	program:PATHSAMPLE
InputFile	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile="GTkeywords",InputFile=/;"	v	module:DataModule
Insrt	pathsample.dock.f90	/^  Subroutine Insrt(/;"	s	module:DOCKMODULE
InsrtSwap	pathsample.dock.f90	/^  Subroutine InsrtSwap(/;"	s	module:DOCKMODULE
IntegerList	pathsample.GT2data.f90	/^     type IntegerList$/;"	t	module:DataModule
J	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J,/;"	v
J	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JA/;"	v
J	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J,/;"	v	module:LJCAPSIDMODULE
J	optim.pymodule.f90	/^ INTEGER          :: I, J,/;"	v	module:PYMODULE
J1	bln.vars.inc.f90	/^        INTEGER J1,/;"	v
J1	optim.double.f	/^      INTEGER N, J1,/;"	v
J1	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:LJCAPSIDMODULE
J1	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR, LAST, J1$/;"	v	program:OPTIM4
J1	optim.pymodule.f90	/^ INTEGER          :: I, J, J1,/;"	v	module:PYMODULE
J1	pathsample.main.F	/^      INTEGER J1,/;"	v	program:PATHSAMPLE
J1	pathsample.main.f90	/^      INTEGER J1,/;"	v	program:PATHSAMPLE
J1	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1,/;"	v	module:NODES
J2	bln.vars.inc.f90	/^        INTEGER J1,J2$/;"	v
J2	optim.double.f	/^      INTEGER N, J1, J2$/;"	v
J2	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:LJCAPSIDMODULE
J2	optim.main.f90	/^      INTEGER J2,/;"	v	program:OPTIM4
J2	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2,/;"	v	module:PYMODULE
J2	pathsample.main.F	/^      INTEGER :: NRES,I_RES,J2$/;"	v	program:PATHSAMPLE
J2	pathsample.main.f90	/^      INTEGER :: NRES,I_RES,J2$/;"	v	program:PATHSAMPLE
J3	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:LJCAPSIDMODULE
J3	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3,/;"	v	module:PYMODULE
J4	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:LJCAPSIDMODULE
J4	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4,/;"	v	module:PYMODULE
J4SAVE	optim.dqag.f	/^      FUNCTION J4SAVE /;"	f
J4SAVE	pathsample.dsort.f	/^      FUNCTION J4SAVE /;"	f
J5	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:LJCAPSIDMODULE
J5	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5,/;"	v	module:PYMODULE
J6	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:LJCAPSIDMODULE
J6	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6,/;"	v	module:PYMODULE
JA	commons.f90	/^INTEGER IA, JA$/;"	v	module:GMIN_COMMONS
JACCPREV	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,/;"	v
JBEST	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,QDONE,JBEST,/;"	v
JBJB	optim.modamber9.f90	/^integer, allocatable:: IBIB(:),JBJB(/;"	v	module:modamber9
JH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,JH,/;"	v
JK	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,/;"	v
JM2	optim.JM.f	/^      SUBROUTINE JM2(/;"	s
JM2C	optim.JM.f	/^      SUBROUTINE JM2C /;"	s
JM2CC	optim.JM.f	/^      SUBROUTINE JM2CC(/;"	s
JM2P	optim.JM.f	/^      SUBROUTINE JM2P /;"	s
JM3	optim.JM.f	/^      SUBROUTINE JM3(/;"	s
JM3C	optim.JM.f	/^      SUBROUTINE JM3C /;"	s
JM3CC	optim.JM.f	/^      SUBROUTINE JM3CC(/;"	s
JM3P	optim.JM.f	/^      SUBROUTINE JM3P /;"	s
JMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX,/;"	v
JMAX	tr.f90	/^      INTEGER JMAX$/;"	v
JMAX2	tr.f90	/^      INTEGER JMAX2$/;"	v
JME	optim.JM.f	/^      SUBROUTINE JME(/;"	s
JMEC	optim.JM.f	/^      SUBROUTINE JMEC(/;"	s
JMECC	optim.JM.f	/^      SUBROUTINE JMECC(/;"	s
JMEP	optim.JM.f	/^      SUBROUTINE JMEP(/;"	s
JOINED	optim.gsdata.f90	/^  LOGICAL :: PTEST, JOINED,/;"	k	type:IMGNODE
JOVOSAP	optim.minperm.f	/^      SUBROUTINE JOVOSAP(/;"	s
JOVOSAP	pathsample.minperm.f	/^      SUBROUTINE JOVOSAP(/;"	s
JPN	pathsample.nodes.f90	/^     INTEGER :: JPN,/;"	v	module:NODES
JZ	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ,/;"	v	module:KEY
K	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K,/;"	v
K1	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:LJCAPSIDMODULE
K1	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1,/;"	v	module:PYMODULE
K2	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:LJCAPSIDMODULE
K2	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2,/;"	v	module:PYMODULE
KADJUSTFRAC	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL, KADJUSTFRAC,/;"	v	module:KEY
KADJUSTFRQ	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN, KADJUSTFRQ,/;"	v	module:KEY
KADJUSTTOL	optim.key.f90	/^     &        BHACCREJ, BHSTEPSIZE, BHCONV, BHTEMP, BHDISTTHRESH, BHMAXENERGY, BHK, DIJKSTRALOCAL, KADJUSTFRAC, KADJUSTTOL,/;"	v	module:KEY
KALPHA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: KALPHA /;"	v	module:msevb_common
KAPPA	pathsample.common.f90	/^     &        MAXCONN, KAPPA,/;"	v
KD	optim.intcommons.f90	/^  INTEGER :: KD,/;"	v	module:INTCOMMONS
KEEPINDEX	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX,/;"	v	module:KEY
KEXP	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: KEXP /;"	v	module:msevb_common
KEY	optim.key.f90	/^MODULE KEY$/;"	m
KEY	pathsample.key.f90	/^MODULE KEY /;"	m
KEYINTPRINT	optim.intcoords.f90	/^   SUBROUTINE KEYINTPRINT$/;"	s	module:INTCUTILS
KEYWORD	keyword.f90	/^      SUBROUTINE KEYWORD$/;"	s
KEYWORD	optim.keyword.f	/^      SUBROUTINE KEYWORD(/;"	s
KEYWORD	pathsample.keywords.f	/^      SUBROUTINE KEYWORD$/;"	s
KH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,JH,KH$/;"	v
KI	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,/;"	v
KJ	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,/;"	v
KKJ	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ,/;"	v	module:KEY
KMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX,/;"	v
KMC	pathsample.KMC.f	/^      SUBROUTINE KMC$/;"	s
KMCA2B	pathsample.KMC.a2b.f	/^      SUBROUTINE KMCA2B$/;"	s
KMCCOMMIT	pathsample.KMCcommit.f	/^      SUBROUTINE KMCCOMMIT$/;"	s
KMCCOMMITT	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT,/;"	v
KMCT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT, ANGLEAXIS, TAGT, CHARMMT, AMBERT, STARTFROMPATH, &$/;"	v
KMINUS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(:), KPLUS(:), KMINUS(/;"	v
KMINUSSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETSSAVE(:), KPLUSSAVE(:), KMINUSSAVE(/;"	v	module:SAVESTATE
KNOWN	optim.OPTIM.F	87;"	c	subroutine:OPTIM
KNOWN	optim.bfgsts.f	92;"	c	subroutine:BFGSTS
KNOWN	optim.bhinterp.f90	47;"	c	subroutine:BHINTERP
KNOWN	optim.bisect.f90	43;"	c	subroutine:BISECT_OPT
KNOWN	optim.connect.f	1785;"	c	subroutine:TSSEARCH
KNOWN	optim.efol.f90	50;"	c	subroutine:EFOL
KNOWN	optim.func.f90	66;"	c	subroutine:OPTIM
KNOWN	optim.geopt.f	1206;"	c	subroutine:MAKENUMHESS
KNOWN	optim.geopt.f	1268;"	c	subroutine:MAKENUMHESSRP
KNOWN	optim.geopt.f	54;"	c	subroutine:GEOPT
KNOWN	optim.greatcirc.f	38;"	c	subroutine:GCLBFGS
KNOWN	optim.hybridmin.f	56;"	c	subroutine:HYBRIDMIN
KNOWN	optim.intbfgsts.f	66;"	c	subroutine:INTBFGSTS
KNOWN	optim.intlbfgs.f90	41;"	c	subroutine:INTLBFGS
KNOWN	optim.intlbfgslj.f90	35;"	c	subroutine:INTLBFGSLJ
KNOWN	optim.meccano.f90	265;"	c	subroutine:MECBFGS
KNOWN	optim.morph.f	45;"	c	subroutine:MORPH
KNOWN	optim.mylbfgs.f	74;"	c	subroutine:MYLBFGS
KNOWN	optim.odesd.f	38;"	c	subroutine:ODESD
KNOWN	optim.path.f	90;"	c	subroutine:PATH
KNOWN	optim.potential.f	78;"	c	subroutine:POTENTIAL
KNOWN	optim.unmeccano.f90	231;"	c	subroutine:UNMECBFGS
KPLUS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(:), KPLUS(/;"	v
KPLUSSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETSSAVE(:), KPLUSSAVE(/;"	v	module:SAVESTATE
KR	optim.modamber.f90	/^      DOUBLE PRECISION KR(/;"	v	module:MODAMBER
KSHORTESTPATHS	pathsample.kshortestpaths.f90	/^SUBROUTINE KSHORTESTPATHS(/;"	s
KSHORTESTPATHST	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT, KSHORTESTPATHST,/;"	v
KSHORT_FULL_PRINTT	pathsample.common.f90	/^     &        DUMPGROUPST, FREEPAIRT, KSHORTESTPATHST, KSHORT_FULL_PRINTT,/;"	v
KSHORT_PRINTING	pathsample.kshortestpaths.f90	/^SUBROUTINE KSHORT_PRINTING(/;"	s
KT	optim.modamber.f90	/^      DOUBLE PRECISION KT(/;"	v	module:MODAMBER
KTWN	optim.modamber9.f90	/^      double precision :: KTWN$/;"	v	module:modamber9
KTWNT	optim.modamber9.f90	/^      logical :: KTWNT$/;"	v	module:modamber9
KeywordsFile	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile=/;"	v	module:DataModule
LAMBDA	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,/;"	v	module:MODAMBER
LANCZOST	optim.key.f90	/^     &        INDEXT, LANCZOST,/;"	v	module:KEY
LANV	optim.modtwoend.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: LANV /;"	v	module:MODTWOEND
LARGE_FORCE	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: LARGE_FORCE /;"	v	module:msevb_common
LAST	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST, LAST,/;"	k	type:IMGNODE
LAST	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR, IR, LAST,/;"	v	program:OPTIM4
LATMIN	optim.latmin.f	/^      SUBROUTINE LATMIN(/;"	s
LB1	lbfgs.f	/^      SUBROUTINE LB1(/;"	s
LB2	lbfgs.f	/^      BLOCK DATA LB2$/;"	b
LB3	lbfgs.f	187;"	c	subroutine:LBFGS
LB3	lbfgs.f	449;"	c	subroutine:LB1
LB3	lbfgs.f	516;"	c	block data:LB2
LB3	lbfgs.f	632;"	c	subroutine:MCSRCH
LB3	optim.changep.f	37;"	c	subroutine:CHANGEP
LBFGS	lbfgs.f	/^      SUBROUTINE LBFGS(/;"	s
LC1	optim.h2o.f	/^      SUBROUTINE LC1(/;"	s
LCE	optim.mylapack.f	/^      LOGICAL FUNCTION LCE(/;"	f
LCOUNT	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1, N1, N2, LCOUNT$/;"	v	module:NODES
LDE	optim.mylapack.f	/^      LOGICAL FUNCTION LDE(/;"	f
LEFTFRONT	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST, LAST, LEFTFRONT,/;"	k	type:IMGNODE
LEGZO	optim.specialfuncts.f90	/^    SUBROUTINE LEGZO(/;"	s	module:SPFUNCTS
LEN_DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LEN_DR$/;"	v
LEU_SWAP	optim.intcoords.f90	/^      SUBROUTINE LEU_SWAP(/;"	s	module:INTCUTILS
LF	optim.gsdata.f90	/^     LOGICAL :: LF,/;"	k	type:IMGNODE
LFH	commons.f90	/^INTEGER :: LFH$/;"	v	module:GMIN_COMMONS
LFN	commons.f90	/^CHARACTER(LEN=100) LFN$/;"	v	module:GMIN_COMMONS
LINDH2PERMG	optim.ambnatintern_extras.f90	/^      SUBROUTINE LINDH2PERMG(/;"	s
LINDIH	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(:,:), FRINGS(:,:), LINDIH(/;"	v	module:INTCOMMONS
LINE	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE,/;"	v	program:OPTIM4
LINEMIN	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN,/;"	v	module:KEY
LJATT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP, LJATT$/;"	v
LJATT_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(:,:), LJATT_BLN(/;"	v	module:KEY
LJCAPSIDMODULE	optim.ljcapsidmodule.f90	/^MODULE LJCAPSIDMODULE$/;"	m
LJDIFF	optim.ljdiff.f	/^      SUBROUTINE LJDIFF(/;"	s
LJG	optim.ljdiff.f	/^      SUBROUTINE LJG(/;"	s
LJMS	optim.ljms.f	/^      SUBROUTINE LJMS /;"	s
LJMSG	optim.ljms.f	/^      SUBROUTINE LJMSG(/;"	s
LJMSS	optim.ljms.f	/^      SUBROUTINE LJMSS(/;"	s
LJPBIN	optim.ljpbin.f	/^      SUBROUTINE LJPBIN(/;"	s
LJPBING	optim.ljpbin.f	/^      SUBROUTINE LJPBING(/;"	s
LJPBINS	optim.ljpbin.f	/^      SUBROUTINE LJPBINS(/;"	s
LJPDIFF	optim.ljpdiff.f	/^      SUBROUTINE LJPDIFF(/;"	s
LJPG	optim.ljpdiff.f	/^      SUBROUTINE LJPG(/;"	s
LJPKOB	optim.ljpkob.f	/^      SUBROUTINE LJPKOB(/;"	s
LJPKOBG	optim.ljpkob.f	/^      SUBROUTINE LJPKOBG(/;"	s
LJPKOBS	optim.ljpkob.f	/^      SUBROUTINE LJPKOBS(/;"	s
LJPS	optim.ljpdiff.f	/^      SUBROUTINE LJPS(/;"	s
LJPSHIFT	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFT(/;"	s
LJPSHIFTBIN	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTBIN(/;"	s
LJPSHIFTBIN2	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTBIN2(/;"	s
LJPSHIFTBINC	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTBINC(/;"	s
LJPSHIFTG	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTG(/;"	s
LJPSHIFTGBIN	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTGBIN(/;"	s
LJPSHIFTGBIN2	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTGBIN2(/;"	s
LJPSHIFTGBINC	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTGBINC(/;"	s
LJPSHIFTS	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTS(/;"	s
LJPSHIFTSBIN	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTSBIN(/;"	s
LJPSHIFTSBIN2	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTSBIN2(/;"	s
LJPSHIFTSBINC	optim.ljpshift.f	/^      SUBROUTINE LJPSHIFTSBINC(/;"	s
LJPSLATMIN	optim.ljpshift.f	/^      SUBROUTINE LJPSLATMIN(/;"	s
LJR	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: LJR$/;"	v	module:msevb_common
LJREP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,/;"	v
LJREP_BLN	optim.key.f90	/^      DOUBLE PRECISION ,ALLOCATABLE :: LJREP_BLN(/;"	v	module:KEY
LJS	optim.ljdiff.f	/^      SUBROUTINE LJS(/;"	s
LJSITE	optim.key.f90	/^      LOGICAL          :: LJSITE,/;"	v	module:KEY
LJSITEATTR	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,/;"	v	module:KEY
LJSITECOORDS	optim.key.f90	/^     &                     PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH, LJSITECOORDS(/;"	v	module:KEY
LJSITECOORDST	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,ELLIPSOIDT,LJSITECOORDST,/;"	v	module:KEY
LJ_INTER	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: LJ_INTER$/;"	v	module:msevb_common
LNBLNK	optim.utils.f	/^       INTEGER FUNCTION LNBLNK /;"	f
LOC	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC,/;"	v	program:OPTIM4
LOCALPERMDIST	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT, ADDREPT, INTCONSTRAINTT, &$/;"	v	module:KEY
LOCALSTEEREDMINT	optim.modamber9.f90	/^LOGICAL STEEREDMINT, LOCALSTEEREDMINT$/;"	v	module:modamber9
LOCASE	optim.input.f	/^      ENTRY LOCASE(/;"	e	subroutine:UPPERCASE
LOCASE	pathsample.input.f	/^      ENTRY LOCASE(/;"	e	subroutine:UPCASE
LOCATIONA	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: LOCATIONA(/;"	v
LOCATIONASAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: LOCATIONASAVE(/;"	v	module:SAVESTATE
LOCATIONB	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: LOCATIONA(:), LOCATIONB(/;"	v
LOCATIONBSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: LOCATIONASAVE(:), LOCATIONBSAVE(/;"	v	module:SAVESTATE
LOGDUMMY	mc.vars.inc.f90	/^      LOGICAL CHIRALFAIL,AMIDEFAIL,GOODSTRUCTURE, LOGDUMMY,/;"	v
LOOPCENTERS	optim.ambnatintern_extras.f90	/^      SUBROUTINE LOOPCENTERS(/;"	s
LOWESTFRQT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST, STOCKSPIN, LOWESTFRQT,/;"	v	module:KEY
LOWESTFRQT	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST, LOWESTFRQT,/;"	v
LP	lbfgs.f	/^      INTEGER LP,/;"	v	block data:LB2
LPCOMPLEX	pathsample.dock.f90	/^                              & LPLIGAND(:),LPCOMPLEX(/;"	v	module:DOCKMODULE
LPDGEOMDIFFTOL	optim.key.f90	/^     &        ALPHACC, ALPHAHH, ALPHACH, DC6CC, DC6HH, DC6CH, KKJ, CCKJ,        &$/;"	v	module:KEY
LPLIGAND	pathsample.dock.f90	/^double precision, allocatable :: FVIBMINLIGAND(:), FVIBMINCOMPLEX(:), FVIBMINPROTEIN(:), &$/;"	v	module:DOCKMODULE
LPPROTEIN	pathsample.dock.f90	/^                              & LPLIGAND(:),LPCOMPLEX(:),LPPROTEIN(/;"	v	module:DOCKMODULE
LSE	optim.mylapack.f	/^      LOGICAL FUNCTION LSE(/;"	f
LSYS	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS,/;"	v	module:KEY
LSYS	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS,/;"	v	program:OPTIM4
LWOTPBOX	optim.lwotpbox.f90	/^      SUBROUTINE LWOTPBOX /;"	s
LWOTPGH	optim.lwotpgh.f90	/^      SUBROUTINE LWOTPGH /;"	s
LWOTPT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT,/;"	v	module:KEY
M	optim.gsdata.f90	/^  INTEGER :: MA/;"	k	type:IMGNODE
MACHINE	optim.key.f90	/^     LOGICAL :: MACHINE=/;"	v	module:KEY
MACHINE	pathsample.key.f90	/^     LOGICAL :: MACHINE=/;"	v	module:KEY
MAKED	pathsample.KMCcommit.f	/^      SUBROUTINE MAKED(/;"	s
MAKED2	pathsample.Pfold.f90	/^SUBROUTINE MAKED2(/;"	s
MAKED4	pathsample.kshortestpaths.f90	/^      SUBROUTINE MAKED4(/;"	s
MAKEDMAT3	pathsample.KMC.f	/^      SUBROUTINE MAKEDMAT3(/;"	s
MAKEGRADH	optim.oldneb.f	/^      SUBROUTINE MAKEGRADH(/;"	s
MAKEGRADMEC	optim.meccano.f90	/^SUBROUTINE MAKEGRADMEC(/;"	s
MAKEGRADR	optim.oldneb.f	/^      SUBROUTINE MAKEGRADR(/;"	s
MAKEIMAGE	optim.oldneb.f	/^      SUBROUTINE MAKEIMAGE(/;"	s
MAKENUMHESS	optim.geopt.f	/^      SUBROUTINE MAKENUMHESS(/;"	s
MAKENUMHESSRP	optim.geopt.f	/^      SUBROUTINE MAKENUMHESSRP(/;"	s
MAKENUMINTHESS	optim.geopt.f	/^      SUBROUTINE MAKENUMINTHESS(/;"	s
MAKE_CONPOT	optim.make_conpot.f90	/^SUBROUTINE MAKE_CONPOT(/;"	s
MAKE_CONPOT	pathsample.make_conpot.f90	/^SUBROUTINE MAKE_CONPOT(/;"	s
MALPHA1	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1,/;"	v	module:KEY
MALPHA2	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2,/;"	v	module:KEY
MARKOV_FH	commons.f90	/^INTEGER :: ENERGY_FH, MARKOV_FH,/;"	v	module:GMIN_COMMONS
MASS	optim.H2O.pjt2.f	8;"	c	subroutine:POTV
MASS	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  MASS$/;"	v	module:MODAMBER
MASS	pathsample.common.f90	/^      DOUBLE PRECISION, POINTER :: MASS(/;"	v
MASSES	optim.modunres.f90	/^      DOUBLE PRECISION :: MASSES(/;"	v	module:MODUNRES
MASSFILE	pathsample.main.F	/^      LOGICAL MASSFILE$/;"	v	program:PATHSAMPLE
MASSFILE	pathsample.main.f90	/^      LOGICAL MASSFILE$/;"	v	program:PATHSAMPLE
MASST	optim.key.f90	/^      LOGICAL :: DTEST, MASST,/;"	v	module:KEY
MASSWT	optim.geopt.f	/^      SUBROUTINE MASSWT(/;"	s
MASSWT2	optim.geopt.f	/^      SUBROUTINE MASSWT2(/;"	s
MASSWTRP	optim.geopt.f	/^      SUBROUTINE MASSWTRP(/;"	s
MATMULV	optim.utils.f	/^      SUBROUTINE MATMULV(/;"	s
MAXATTEMPT	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS, MAXATTEMPT,/;"	v
MAXBARRIER	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY, MAXBARRIER,/;"	v	module:KEY
MAXBARRIER	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE, PSCALE, TSTHRESH, MAXBARRIER,/;"	v
MAXBFGS	commons.f90	/^INTEGER :: MAXBFGS$/;"	v	module:GMIN_COMMONS
MAXBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS,/;"	v	module:KEY
MAXBFGSB	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,/;"	v	module:modcharmm
MAXBFGSI	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,/;"	v	module:modcharmm
MAXBFGSP	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,/;"	v	module:modcharmm
MAXBFGST	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,/;"	v	module:modcharmm
MAXBREAK	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK,/;"	v
MAXCONE	optim.key.f90	/^     &        LPDGEOMDIFFTOL, INTCONFRAC, MAXCONE,/;"	v	module:KEY
MAXCONN	pathsample.common.f90	/^     &        NATTEMPT, NNEW, NTOTAL, NEXCLUDE, NPERMGROUP, BHSTEPS, NGTSIZE,  &$/;"	v
MAXCONUSE	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE,/;"	v	module:KEY
MAXCONUSE	pathsample.common.f90	/^      INTEGER :: NNREPULSIVE, NCONSTRAINT, NREPULSIVE, MAXCONUSE$/;"	v
MAXDIM	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM,/;"	v	module:MODUNRES
MAXDONE	pathsample.common.f90	/^      INTEGER :: MAXDONE=/;"	v
MAXDOWNBARRIER	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE, PSCALE, TSTHRESH, MAXBARRIER, MAXDOWNBARRIER,/;"	v
MAXDROPS	optim.gsdata.f90	/^  INTEGER :: MAXDROPS,/;"	k	type:IMGNODE
MAXERISE	optim.gsdata.f90	/^  DOUBLE PRECISION :: MAXERISE /;"	k	type:IMGNODE
MAXERISE	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE,/;"	v	module:KEY
MAXGCYCLES	optim.modguess.f90	/^      INTEGER :: GSTEPS, MAXGCYCLES /;"	v	module:MODGUESS
MAXGROWSTEPS	optim.gsdata.f90	/^  INTEGER :: GSUPDATE, MAXGROWSTEPS$/;"	k	type:IMGNODE
MAXHBONDLENGTH	optim.msevb_common.f90	/^  DOUBLE PRECISION :: MAXHBONDLENGTH,/;"	v	module:msevb_common
MAXINTBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS, MAXNEBBFGS, MAXINTBFGS,/;"	v	module:KEY
MAXINTE	optim.modguess.f90	/^      DOUBLE PRECISION :: GTHRESHOLD, MAXINTE /;"	v	module:MODGUESS
MAXINTERACTIONS	optim.key.f90	/^      INTEGER          :: MAXINTERACTIONS,/;"	v	module:KEY
MAXINTIMAGE	optim.key.f90	/^     &        NTRAPPOW, MAXINTIMAGE$/;"	v	module:KEY
MAXINT_GR	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,ISTART,IEND,ITYPE,MAXINT_GR,/;"	v	module:MODUNRES
MAXITER	optim.ttm3f.f90	/^integer, parameter          :: MAXITER /;"	v	module:ttm3f_mod
MAXLEN	optim.gsdata.f90	/^  DOUBLE PRECISION :: MAXLEN$/;"	k	type:IMGNODE
MAXLENGTH	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH,/;"	v
MAXLENPERIM	optim.gsdata.f90	/^  DOUBLE PRECISION :: MAXLENPERIM$/;"	k	type:IMGNODE
MAXMAX	optim.key.f90	/^     &        MINMAX, MAXMAX,/;"	v	module:KEY
MAXMAXBARRIER	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, MAXMAXBARRIER,/;"	v	module:KEY
MAXMBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS,/;"	v	module:KEY
MAXMIN	pathsample.common.f90	/^      INTEGER :: MAXMIN=/;"	v
MAXNEBBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS, MAXMBFGS, MAXNEBBFGS,/;"	v	module:KEY
MAXPAIRS	pathsample.common.f90	/^      INTEGER :: MAXPAIRS=/;"	v
MAXTOTSTEPS	optim.gsdata.f90	/^  INTEGER :: MAXTOTSTEPS,/;"	k	type:IMGNODE
MAXTS	pathsample.common.f90	/^      INTEGER :: MAXTS=/;"	v
MAXTSATTEMPTS	pathsample.common.f90	/^     &        BISECTSTEPS, BISECTMAXATTEMPTS, NDIAGEIG, QRELONE, QRELTWO, MAXTSATTEMPTS,/;"	v
MAXTSENERGY	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP, MAXTSENERGY,/;"	v	module:KEY
MAXVAR	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM, MAXVAR,/;"	v	module:MODUNRES
MAXXBFGS	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT, MAXBFGS, MAXXBFGS,/;"	v	module:KEY
MB	optim.MB.f	/^      SUBROUTINE MB(/;"	s
MBADJACENT	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: MBBONDNUM(:), MBADJACENT(/;"	v	module:INTCOMMONS
MBBONDNUM	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: MBBONDNUM(/;"	v	module:INTCOMMONS
MC	mc.f90	/^      SUBROUTINE MC(/;"	s
MCRUNS	mcruns.f90	/^      SUBROUTINE MCRUNS(/;"	s
MCSRCH	lbfgs.f	/^      SUBROUTINE MCSRCH(/;"	s
MCSTEP	lbfgs.f	/^      SUBROUTINE MCSTEP(/;"	s
MCY	optim.VRTMCY5f.f90	/^module MCY$/;"	m
MDCRD_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT, MDCRD_UNIT,/;"	v	module:modamber9
MDIFF	optim.mdiff.f	/^      SUBROUTINE MDIFF(/;"	s
MDINFO_UNIT	optim.modamber9.f90	/^       INTEGER MYUNITNEW, MDINFO_UNIT,/;"	v	module:modamber9
MDSTEPT	optim.modamber9.f90	/^      LOGICAL MDSTEPT,/;"	v	module:modamber9
MECBFGS	optim.meccano.f90	/^SUBROUTINE MECBFGS(/;"	s
MECCANO	optim.meccano.f90	/^SUBROUTINE MECCANO(/;"	s
MECCANOT	optim.modmec.f90	/^      LOGICAL :: MECCANOT=/;"	v	module:MODMEC
MECDGUESS	optim.modmec.f90	/^      DOUBLE PRECISION :: MECDGUESS /;"	v	module:MODMEC
MECDIST	optim.modmec.f90	/^      DOUBLE PRECISION :: MECDIST,/;"	v	module:MODMEC
MECIMDENS	optim.modmec.f90	/^      DOUBLE PRECISION :: MECIMDENS,/;"	v	module:MODMEC
MECITDENS	optim.modmec.f90	/^      DOUBLE PRECISION :: MECIMDENS, MECITDENS /;"	v	module:MODMEC
MECLAMBDA	optim.modmec.f90	/^      DOUBLE PRECISION :: MECDIST, MECLAMBDA /;"	v	module:MODMEC
MECMAXIMAGES	optim.modmec.f90	/^      INTEGER :: MECMAXIT, MECMAXIMAGES$/;"	v	module:MODMEC
MECMAXIT	optim.modmec.f90	/^      INTEGER :: MECMAXIT,/;"	v	module:MODMEC
MECRMSTOL	optim.modmec.f90	/^      DOUBLE PRECISION :: MECRMSTOL,/;"	v	module:MODMEC
MECSTEP	optim.modmec.f90	/^      DOUBLE PRECISION :: MECRMSTOL, MECSTEP /;"	v	module:MODMEC
MECUPDATE	optim.modmec.f90	/^      INTEGER :: MECUPDATE /;"	v	module:MODMEC
MERGE	pathsample.merge.f	/^      SUBROUTINE MERGE(/;"	s
MERGEDB	pathsample.mergedb.f90	/^SUBROUTINE MERGEDB$/;"	s
MERGEDBT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT, SHORTCUTT, MERGEDBT,/;"	v
MERGEDNV	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE ::  MERGEDNV(/;"	v	module:NGTMEM
MERGEDPB	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: NEWPBRANCH(:,:), MERGEDPB(/;"	v	module:NGTMEM
METAL	optim.Natb.f	29;"	c	subroutine:NATB
METAL	optim.Natb.f	548;"	c	subroutine:ftss
METAL	optim.Natb.f	599;"	c	subroutine:ftsz
METAL	optim.Natb.f	652;"	c	subroutine:frss
METAL	optim.Natb.f	84;"	c	subroutine:entots
MFPT	pathsample.Dijkstra.f90	/^SUBROUTINE MFPT(/;"	s
MFRACTION1	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE, GCCONV, NEBK, &$/;"	v	module:KEY
MFRACTION2	optim.key.f90	/^     &        MFRACTION1, MFRACTION2,/;"	v	module:KEY
MG	optim.morse.f	/^      SUBROUTINE MG(/;"	s
MIDIMPPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION MIDIMPPARAMS(/;"	v	module:MODAMBER
MIED	optim.mied.f	/^      SUBROUTINE MIED(/;"	s
MIEL	optim.miel.f	/^      SUBROUTINE MIEL(/;"	s
MIN1REDO	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MIN1REDO(/;"	v	module:KEY
MIN2REDO	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: MIN1REDO(:), MIN2REDO(/;"	v	module:KEY
MINBACKTCUT	optim.intcommons.f90	/^  DOUBLE PRECISION :: MINBACKTCUT /;"	v	module:INTCOMMONS
MINCURVE	pathsample.common.f90	/^     &                                 GPFOLD(:), MINDISTMIN(:), MINCURVE(/;"	v
MIND	pathsample.mind.f	/^      SUBROUTINE MIND(/;"	s
MINDIST	optim.mindist.f	/^      SUBROUTINE MINDIST(/;"	s
MINDIST	pathsample.mindist.f	/^      SUBROUTINE MINDIST(/;"	s
MINDISTA	optim.minpermdistrbcom.f90	/^      SUBROUTINE MINDISTA(/;"	s
MINDISTA	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE MINDISTA(/;"	s
MINDISTMIN	pathsample.common.f90	/^     &                                 GPFOLD(:), MINDISTMIN(/;"	v
MINDOM	optim.mindist.f	335;"	c	function:distfunc
MINDOM	optim.mindist.f	41;"	c	subroutine:MINDIST
MINDOM	optim.mindist.f	478;"	c	subroutine:ROTGEOM
MINDOM	optim.mindist.f	715;"	c	subroutine:MMYLBFGS
MINDOM	optim.newmindist.f90	45;"	c	subroutine:NEWMINDIST
MINDOM	pathsample.mind.f	258;"	c	subroutine:DISTFUNC
MINDOM	pathsample.mind.f	36;"	c	subroutine:MIND
MINDOM	pathsample.mindist.f	335;"	c	function:distfunc
MINDOM	pathsample.mindist.f	41;"	c	subroutine:MINDIST
MINDOM	pathsample.mindist.f	478;"	c	subroutine:ROTGEOM
MINDOM	pathsample.mindist.f	715;"	c	subroutine:MMYLBFGS
MINDOM	pathsample.newmindist.f90	40;"	c	subroutine:NEWMINDIST
MINDONE	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: MINDONE(/;"	v
MINDOUBLE	pathsample.mindouble.f90	/^SUBROUTINE MINDOUBLE$/;"	s
MINFOUNDTYPE	optim.intlbfgs.f90	/^TYPE MINFOUNDTYPE$/;"	t	subroutine:INTLBFGS
MINFOUNDTYPE	optim.intlbfgslj.f90	/^TYPE MINFOUNDTYPE$/;"	t	subroutine:INTLBFGSLJ
MINFRQ2	pathsample.common.f90	/^     &                                 GPFOLD(:), MINDISTMIN(:), MINCURVE(:), MINFRQ2(/;"	v
MINGROUP	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERMIN(:), TOPPOINTER(:), MINGROUP(/;"	v
MINHBONDANGLE	optim.msevb_common.f90	/^  DOUBLE PRECISION :: MAXHBONDLENGTH, MINHBONDANGLE$/;"	v	module:msevb_common
MINIM	optim.bfgsts.f	/^      DOUBLE PRECISION FUNCTION MINIM(/;"	f
MINMAP	pathsample.main.F	/^      INTEGER, ALLOCATABLE :: MINMAP(/;"	v	program:PATHSAMPLE
MINMAP	pathsample.main.f90	/^      INTEGER, ALLOCATABLE :: MINMAP(/;"	v	program:PATHSAMPLE
MINMAX	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT, NEBDGUESS, INTDGUESS,  &$/;"	v	module:KEY
MINMAXD2	optim.congrad.f90	/^SUBROUTINE MINMAXD2(/;"	s
MINMAXD2	pathsample.make_conpot.f90	/^SUBROUTINE MINMAXD2(/;"	s
MINMAXD2R	optim.congrad.f90	/^SUBROUTINE MINMAXD2R(/;"	s
MINMAXD2R	pathsample.make_conpot.f90	/^SUBROUTINE MINMAXD2R(/;"	s
MINNAME	pathsample.common.f90	/^      CHARACTER(LEN=80) PATHNAME, MINNAME$/;"	v
MINOMEGA	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MINOMEGA$/;"	v	module:modcharmm
MINPERMDIST	optim.minpermdist.f90	/^SUBROUTINE MINPERMDIST(/;"	s
MINPERMDIST	pathsample.minpermdist.f90	/^SUBROUTINE MINPERMDIST(/;"	s
MINPERMDISTRBCOM	optim.minpermdistrbcom.f90	/^      SUBROUTINE MINPERMDISTRBCOM(/;"	s
MINPERMDISTRBCOM	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE MINPERMDISTRBCOM(/;"	s
MINPERMRB	optim.minpermrb.f90	/^SUBROUTINE MINPERMRB(/;"	s
MINPERM_CHIRAL	optim.chiralhyd.f90	/^      SUBROUTINE MINPERM_CHIRAL(/;"	s
MINSEP	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH, CONNECTIONS, HORDER, ERROR, MINSEP,/;"	v
MINUS	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERTS(:), PLUS(:), MINUS(/;"	v
MINUSSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(:), MINUSSAVE(/;"	v	module:SAVESTATE
MINUSTRIGUNITY	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: MINUSTRIGUNITY /;"	v	module:msevb_common
MKFNAMES	optim.connect.f	/^      SUBROUTINE MKFNAMES(/;"	s
MLATDIFF	optim.mlatmin.f	/^      SUBROUTINE MLATDIFF(/;"	s
MLATMIN	optim.mlatmin.f	/^      SUBROUTINE MLATMIN(/;"	s
MME2WRAPPER	optim.amber9dummy.f90	/^SUBROUTINE MME2WRAPPER(/;"	s
MMEINITWRAPPER	optim.amber9dummy.f90	/^SUBROUTINE MMEINITWRAPPER(/;"	s
MMID	optim.odesd.f	/^      SUBROUTINE MMID(/;"	s
MMUPDATE	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS, MUPDATE, XMUPDATE, &$/;"	v	module:KEY
MMYLBFGS	optim.mindist.f	/^      SUBROUTINE MMYLBFGS(/;"	s
MMYLBFGS	pathsample.mind.f	/^      SUBROUTINE MMYLBFGS(/;"	s
MMYLBFGS	pathsample.mindist.f	/^      SUBROUTINE MMYLBFGS(/;"	s
MN	optim.amber.f	2919;"	c	subroutine:anglesecderivs
MN	optim.amber.f	6203;"	c	subroutine:hairyhell
MN	optim.amber.f	6391;"	c	subroutine:hairyimphell
MNBFGSMAX1	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1,/;"	v	module:KEY
MNBFGSMAX2	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1, MNBFGSMAX2,/;"	v	module:KEY
MODAMBER	optim.modamber.f90	/^MODULE MODAMBER$/;"	m
MODAMBER2	optim.modamber2.f90	/^MODULE MODAMBER2$/;"	m
MODEFOL	optim.efol.f90	/^MODULE MODEFOL$/;"	m
MODGUESS	optim.modguess.f90	/^MODULE MODGUESS$/;"	m
MODHESS	optim.modhess.f90	/^MODULE MODHESS$/;"	m
MODMEC	optim.modmec.f90	/^MODULE MODMEC$/;"	m
MODMXATMS	optim.modmxatms.f90	/^MODULE MODMXATMS$/;"	m
MODNEB	optim.modneb.f90	/^MODULE MODNEB$/;"	m
MODTWOEND	optim.modtwoend.f90	/^MODULE MODTWOEND$/;"	m
MODUNRES	optim.modunres.f90	/^MODULE MODUNRES$/;"	m
MORPH	optim.morph.f	/^      SUBROUTINE MORPH(/;"	s
MORPHDATA	optim.greatcirc.f	44;"	c	subroutine:GCLBFGS
MORPHDATA	optim.morph.f	46;"	c	subroutine:MORPH
MORPHDATA	optim.mylbfgs.f	80;"	c	subroutine:MYLBFGS
MORPHEMAX	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX,/;"	v	module:KEY
MORPHERISE	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE,/;"	v	module:KEY
MORPHMXSTP	optim.key.f90	/^     &        INTEPSILON, FRAMEEDIFF, MORPHERISE, MORPHEMAX, MORPHMXSTP,/;"	v	module:KEY
MORPHT	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT, MORPHT,/;"	v	module:KEY
MORSE	optim.morse.f	/^      SUBROUTINE MORSE /;"	s
MOVIE	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE,/;"	v	module:KEY
MP	lbfgs.f	/^      INTEGER LP,MP$/;"	v	block data:LB2
MPDIFF	optim.mpdiff.f	/^      SUBROUTINE MPDIFF(/;"	s
MPDIFFDS	optim.mpdiff.f	/^      SUBROUTINE MPDIFFDS(/;"	s
MS	optim.morse.f	/^      SUBROUTINE MS(/;"	s
MSDIFF	optim.msdiff.f	/^      SUBROUTINE MSDIFF(/;"	s
MSEVB_hess	optim.drvmsevb.f90	/^subroutine MSEVB_hess /;"	s
MSLATDIFF	optim.mslatmin.f	/^      SUBROUTINE MSLATDIFF(/;"	s
MSLATMIN	optim.mslatmin.f	/^      SUBROUTINE MSLATMIN(/;"	s
MSSTOCKGH	optim.msstock.f90	/^      SUBROUTINE MSSTOCKGH /;"	s
MSSTOCKT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT,/;"	v	module:KEY
MSSTOCKT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT, MSSTOCKT,/;"	v
MSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS,/;"	v	module:KEY
MTRANSOPT	optim.utils.f	/^      SUBROUTINE MTRANSOPT(/;"	s
MTRXIN	optim.pyg.f90	/^      SUBROUTINE MTRXIN(/;"	s
MU	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,/;"	v	module:MODAMBER
MUL3	optim.siaz.f	/^      SUBROUTINE MUL3(/;"	s
MUPDATE	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS, MUPDATE,/;"	v	module:KEY
MWVECTORS	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS,/;"	v	module:KEY
MXATMS	optim.modmxatms.f90	/^      INTEGER :: MXATMS=/;"	v	module:MODMXATMS
MXSTP	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP,/;"	v	module:KEY
MYCPU_TIME	optim.mycpu_time.f90	/^SUBROUTINE MYCPU_TIME(/;"	s
MYLBFGS	mylbfgs.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYLBFGS	mylbfgs.old.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYLBFGS	optim.mylbfgs.f	/^      SUBROUTINE MYLBFGS(/;"	s
MYLINE	optim.main.f90	/^      CHARACTER(LEN=80) ARGSTRING, MYLINE$/;"	v	program:OPTIM4
MYMERGE	pathsample.mymerge.f	/^      SUBROUTINE MYMERGE(/;"	s
MYORIENT	optim.myorient.f	/^      SUBROUTINE MYORIENT(/;"	s
MYORIENT	pathsample.myorient.f	/^      SUBROUTINE MYORIENT(/;"	s
MYPOT	finalq.f90	15;"	c	subroutine:FINALQ
MYPOT	gmin.main.f90	33;"	c	program:GMIN
MYPOT	mc.vars.inc.f90	9;"	c
MYPOT	mylbfgs.old.f90	47;"	c	subroutine:MYLBFGS
MYPOT	quench.f90	31;"	c	subroutine:QUENCH
MYQMINSAVE	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: MYQMINSAVE$/;"	v	module:MODUNRES
MYSYSTEM	pathsample.mysystem.f90	/^SUBROUTINE MYSYSTEM(/;"	s
MYUNIT	optim.key.f90	/^      INTEGER          :: MAXINTERACTIONS,PYBINARYTYPE1,MYUNIT$/;"	v	module:KEY
MYUNITNEW	optim.modamber9.f90	/^       INTEGER MYUNITNEW,/;"	v	module:modamber9
MYUNRESDUMP	optim.unresdump.f	/^      SUBROUTINE MYUNRESDUMP(/;"	s
MYUNRESDUMP	pathsample.unresdump.f	/^      SUBROUTINE MYUNRESDUMP(/;"	s
MYWAIT	pathsample.mywait.f90	/^SUBROUTINE MYWAIT(/;"	s
M_LBFGS	commons.f90	/^INTEGER :: M_LBFGS$/;"	v	module:GMIN_COMMONS
M_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg, delR_rg, M_rg,/;"	v	module:amhglobals
MaxDegree	pathsample.GT2FibonacciHeap.f90	/^     integer,parameter :: MaxDegree=/;"	v	module:FibonacciHeapModule
Mfunc	optim.Ackland_metals.f90	/^	double precision function Mfunc(/;"	f
Mfunc_d	optim.Ackland_metals.f90	/^	double precision function Mfunc_d(/;"	f
Mfunc_dd	optim.Ackland_metals.f90	/^        double precision function Mfunc_dd(/;"	f
N	bln.vars.inc.f90	/^        INT/;"	v
N	optim.double.f	/^      INT/;"	v
N1	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1, N1,/;"	v	module:NODES
N2	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2, J1, N1, N2,/;"	v	module:NODES
NA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: NA /;"	v	module:msevb_common
NABT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT,/;"	v	module:KEY
NABT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,NABT,/;"	v	program:OPTIM4
NADM	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM,/;"	v	module:KEY
NAG	pathsample.nag.f90	/^MODULE NAG$/;"	m
NAMES	optim.modunres.f90	65;"	c	module:MODUNRES
NARG	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(105), IOS, NARG,/;"	v	program:OPTIM4
NATB	optim.Natb.f	/^        SUBROUTINE NATB(/;"	s
NATBT	optim.key.f90	/^     &        REPEL,UNRST, NATBT,/;"	v	module:KEY
NATINT	optim.intcommons.f90	/^  LOGICAL :: NATINT /;"	v	module:INTCOMMONS
NATINTSETUP	optim.intcoords.f90	/^     SUBROUTINE NATINTSETUP$/;"	s	module:INTCUTILS
NATOMS	commons.f90	/^INTEGER :: NATOMS$/;"	v	module:GMIN_COMMONS
NATOMS	optim.commons.f90	/^      INTEGER :: NATOMS$/;"	v	module:COMMONS
NATOMS	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS, SAVELENGTH, NPFOLD, PFOLDINT, NRWBINS, NUSEPAIRS, &$/;"	v
NATOMSINA	optim.modamber9.f90	/^INTEGER :: NATOMSINA,/;"	v	module:modamber9
NATOMSINB	optim.modamber9.f90	/^INTEGER :: NATOMSINA, NATOMSINB$/;"	v	module:modamber9
NATTEMPT	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH, CONNECTIONS, HORDER, ERROR, MINSEP, NRWREACTANT, &$/;"	v
NAVAIL	pathsample.main.F	/^      INTEGER J1, NSIZE, NWORST, NAVAIL,/;"	v	program:PATHSAMPLE
NAVAIL	pathsample.main.f90	/^      INTEGER J1, NSIZE, NWORST, NAVAIL,/;"	v	program:PATHSAMPLE
NBDS	optim.intcommons.f90	/^  INTEGER :: NBDS,/;"	v	module:INTCOMMONS
NBFGSMAX1	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1,/;"	v	module:KEY
NBFGSMAX2	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2,/;"	v	module:KEY
NBOND	optim.modamber9.f90	/^integer :: NBOND$/;"	v	module:modamber9
NBOXTS	optim.key.f90	/^     &        FIXAFTER, NBOXTS,/;"	v	module:KEY
NC	optim.gsdata.f90	/^  INTEGER :: NC /;"	k	type:IMGNODE
NCAPT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT,/;"	v	module:KEY
NCARBON	optim.key.f90	/^     &        TIPID, PAHID, NCARBON,/;"	v	module:KEY
NCHENCALLS	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE, NGUESS, NCHENCALLS,/;"	v	module:modcharmm
NCHIRAL	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NCHIRAL$/;"	v	module:modamber9
NCHIRAL	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,NCHIRAL /;"	v	module:modcharmm
NCHIRALTOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,NOMEGACTOT,NSIDECHAINTOT,NCHIRALTOT$/;"	v	module:modcharmm
NCNT	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT,/;"	v	module:INTCOMMONS
NCNT2	optim.intcommons.f90	/^  INTEGER :: NCNT2 /;"	v	module:INTCOMMONS
NCONN	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NCONN(/;"	v
NCONNGROUP	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NCONNGROUP(/;"	v
NCONNMAX	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE, NCPU, GTINT, NCONNMAX,/;"	v
NCONNMIN	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS, NCONNMIN,/;"	v
NCONSTRAINT	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT,/;"	v	module:KEY
NCONSTRAINT	pathsample.common.f90	/^      INTEGER :: NNREPULSIVE, NCONSTRAINT,/;"	v
NCONSTRAINTON	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON,/;"	v	module:KEY
NCORE	commons.f90	/^INTEGER :: NCORE$/;"	v	module:GMIN_COMMONS
NCPCONMAX	optim.key.f90	/^      INTEGER :: INTCONMAX=10, NCPCONMAX=/;"	v	module:KEY
NCPCONSTRAINT	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT,/;"	v	module:KEY
NCPREPMAX	optim.key.f90	/^      INTEGER :: NREPMAX=10, NCPREPMAX=/;"	v	module:KEY
NCPREPULSIVE	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2, INTREPSEP, NCONSTRAINTON, CPREPSEP, CPCONSEP, &$/;"	v	module:KEY
NCPU	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE, NCPU,/;"	v
NCR	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR,/;"	v	program:OPTIM4
NCRT	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH, NIMP, NCRT,/;"	v	module:INTCOMMONS
NCT	optim.modunres.f90	/^      INTEGER :: NNT,NCT,/;"	v	module:MODUNRES
NDHESS	optim.tosifumi.f	/^      SUBROUTINE NDHESS(/;"	s
NDIAGEIG	pathsample.common.f90	/^     &        BISECTSTEPS, BISECTMAXATTEMPTS, NDIAGEIG,/;"	v
NDIH	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH, NIMP, NCRT, NDIH$/;"	v	module:INTCOMMONS
NDIHE	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE,/;"	v
NDIHEDRALS	optim.modamber.f90	/^      INTEGER NDIHEDRALS$/;"	v	module:MODAMBER
NDIIA	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM, BHSTEPS, BHSTEPSMIN, KADJUSTFRQ, GUPTATYPE, &$/;"	v	module:KEY
NDIIS	optim.gdiis.f90	/^      INTEGER, PARAMETER :: NDIIS=/;"	v	module:GDIIS
NDONE	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,QDONE,JBEST,NDONE,/;"	v
NDUMMY	gmin.main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(/;"	v	program:GMIN
NDUMMY2	gmin.main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(:), NDUMMY2(/;"	v	program:GMIN
NEBBFGS	optim.oldneb.f	/^      SUBROUTINE NEBBFGS(/;"	s
NEBDGUESS	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN, CUTLAN, GMAX, EVCUT, NEBDGUESS,/;"	v	module:KEY
NEBFACTOR	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL, NEBKFINAL, NEBFACTOR,/;"	v	module:KEY
NEBK	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE, GCCONV, NEBK,/;"	v	module:KEY
NEBKFINAL	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL, NEBKFINAL,/;"	v	module:KEY
NEBKINITIAL	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT, NEBKINITIAL,/;"	v	module:KEY
NEBMAG	optim.modneb.f90	/^      INTEGER :: NSTEPNEB, NIMAGE, NEBMAG$/;"	v	module:MODNEB
NEBMIND	optim.key.f90	/^     LOGICAL :: MACHINE=.FALSE., NEBMIND=/;"	v	module:KEY
NEBMUPDATE	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE,/;"	v	module:KEY
NEBRESEEDBMAX	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX, NEBRESEEDBMAX,/;"	v	module:KEY
NEBRESEEDDEL1	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX, NEBRESEEDBMAX, NEBRESEEDDEL1,/;"	v	module:KEY
NEBRESEEDDEL2	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX, NEBRESEEDBMAX, NEBRESEEDDEL1, &$/;"	v	module:KEY
NEBRESEEDEMAX	optim.key.f90	/^     &        BISECTMAXENERGY, BISECTMINDIST, BLFACTOR, NEBRESEEDEMAX,/;"	v	module:KEY
NEBRESEEDINT	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS, NEBRESEEDINT,/;"	v	module:KEY
NEBRESEEDPOW1	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1,/;"	v	module:KEY
NEBRESEEDPOW2	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2,/;"	v	module:KEY
NEBRESEEDT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT, CBT, CLOSESTALIGNMENT, NEBRESEEDT,/;"	v	module:KEY
NEBRMS	optim.connect.f	1783;"	c	subroutine:TSSEARCH
NEBRMS	optim.connect.f	44;"	c	subroutine:CONNECT
NEBRMS	optim.meccano.f90	260;"	c	subroutine:MECBFGS
NEBRMS	optim.meccano.f90	37;"	c	subroutine:MECCANO
NEBRMS	optim.meccano.f90	620;"	c	subroutine:MAKEGRADMEC
NEBRMS	optim.oldneb.f	1097;"	c	subroutine:MAKEIMAGE
NEBRMS	optim.oldneb.f	314;"	c	subroutine:NEBBFGS
NEBRMS	optim.oldneb.f	36;"	c	subroutine:OLDNEB
NEBRMS	optim.oldneb.f	725;"	c	subroutine:MAKEGRADH
NEBRMS	optim.oldneb.f	833;"	c	subroutine:MAKEGRADR
NEBRMS	optim.unmeccano.f90	226;"	c	subroutine:UNMECBFGS
NEBRMS	optim.unmeccano.f90	37;"	c	subroutine:UNMECCANO
NEBRMS	optim.unmeccano.f90	629;"	c	subroutine:UNMAKEGRADMEC
NEBT	optim.modneb.f90	/^      LOGICAL :: NEBT,/;"	v	module:MODNEB
NEGEIG	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: ETS(:), FVIBTS(:), KPLUS(:), KMINUS(:), IXTS(:),  IYTS(:), IZTS(:), NEGEIG(/;"	v
NELEMENTS	optim.main.f90	/^      INTEGER J2, NELEMENTS,/;"	v	program:OPTIM4
NENDHESS	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS,/;"	v	module:KEY
NERROR	optim.main.f90	/^      INTEGER ITEM, NITEMS, LOC, LINE, NCR, NERROR,/;"	v	program:OPTIM4
NEVL	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1, MNBFGSMAX2, PVSTEPS, &$/;"	v	module:KEY
NEVS	optim.key.f90	/^     &        NEVL, NEVS,/;"	v	module:KEY
NEWCAPSID	optim.newcapsid.f90	/^      SUBROUTINE NEWCAPSID /;"	s
NEWCONN	pathsample.newconn.f	/^      SUBROUTINE NEWCONN(/;"	s
NEWCONNECTT	optim.modneb.f90	/^      LOGICAL :: NEBT, NEWNEBT, NEWCONNECTT,/;"	v	module:MODNEB
NEWMINDIST	optim.newmindist.f90	/^SUBROUTINE NEWMINDIST(/;"	s
NEWMINDIST	pathsample.newmindist.f90	/^SUBROUTINE NEWMINDIST(/;"	s
NEWNEBT	optim.modneb.f90	/^      LOGICAL :: NEBT, NEWNEBT,/;"	v	module:MODNEB
NEWNVAL	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NEWNVAL(/;"	v	module:NGTMEM
NEWPBRANCH	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: NEWPBRANCH(/;"	v	module:NGTMEM
NEWREAD	optim.chdummy.f	/^      SUBROUTINE NEWREAD(/;"	s
NEWREAD	pathsample.unresdump.f	/^      SUBROUTINE NEWREAD(/;"	s
NEWRES_TEMP	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7, EVDISTTHRESH, NEWRES_TEMP$/;"	v	module:COMMONS
NEWROTGEOM	optim.newmindist.f90	/^SUBROUTINE NEWROTGEOM(/;"	s
NEWROTGEOM	pathsample.newmindist.f90	/^SUBROUTINE NEWROTGEOM(/;"	s
NEWROTGEOMA	optim.minpermdistrbcom.f90	/^      SUBROUTINE NEWROTGEOMA(/;"	s
NEWROTGEOMA	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE NEWROTGEOMA(/;"	s
NEWROTGEOMSTOCK	optim.newmindist.f90	/^SUBROUTINE NEWROTGEOMSTOCK(/;"	s
NEWTIP	optim.newtip.f90	/^      SUBROUTINE NEWTIP /;"	s
NEXCLUDE	pathsample.common.f90	/^     &        NATTEMPT, NNEW, NTOTAL, NEXCLUDE,/;"	v
NEXT	optim.gsdata.f90	/^     TYPE(IMGNODE), POINTER :: NEXT$/;"	k	type:IMGNODE
NFAIL	mc.vars.inc.f90	/^      INTEGER NFAIL,/;"	v
NFAILMAX	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX,/;"	v	module:KEY
NFAILT	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT,/;"	v
NFFINISH	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH,/;"	v
NFINISH	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH,/;"	v	module:NODES
NFINISH2	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2, NFINISH2,/;"	v	module:NODES
NFL	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,NVARU,NFL,/;"	v	module:MODUNRES
NFREEZE	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS, EFSTEPS, NFREEZE,/;"	v	module:KEY
NFREEZE	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS, NCONNMIN, CONNECTMIN1, CONNECTMIN2, NFREEZE,/;"	v
NFRG	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG,/;"	v	module:INTCOMMONS
NFSTART	pathsample.common.f90	/^      INTEGER NFSTART,/;"	v
NGLY	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE, NCPU, GTINT, NCONNMAX, BESTPATHLENGTH, NGLY,/;"	v
NGLYDIH	optim.intcommons.f90	/^  INTEGER ::NGLYDIH$/;"	v	module:INTCOMMONS
NGRADIENTS	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS,/;"	v	module:KEY
NGROUPS	optim.modamber9.f90	/^      INTEGER :: GROUPROTFREQ, NGROUPS$/;"	v	module:modamber9
NGT	pathsample.NGT.f	/^      SUBROUTINE NGT$/;"	s
NGTCRSWITCH	pathsample.common.f90	/^     &                 INTEPSILON, INTCONSTRAINTDEL, INTCONSTRAINTREP, INTCONSTRAINREPCUT, INTLJDEL, INTLJEPS, NGTCRSWITCH$/;"	v
NGTDISCONNECTALL	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST, LOWESTFRQT, BISECTT, NGTDISCONNECTALL,/;"	v
NGTMEM	pathsample.NGTmem.f90	/^MODULE NGTMEM$/;"	m
NGTREALLOC	pathsample.NGTrealloc.f90	/^SUBROUTINE NGTREALLOC(/;"	s
NGTREALLOC_CRSTORAGE	pathsample.NGTrealloc_crstorage.f90	/^SUBROUTINE NGTREALLOC_CRSTORAGE(/;"	s
NGTREMOVEI	pathsample.NGTremovei.f90	/^SUBROUTINE NGTREMOVEI(/;"	s
NGTREMOVEID	pathsample.NGTremoveid.f90	/^SUBROUTINE NGTREMOVEID(/;"	s
NGTREMOVEID_CRSTORAGE	pathsample.NGTremoveid_crstorage.f90	/^SUBROUTINE NGTREMOVEID_CRSTORAGE(/;"	s
NGTREMOVEI_CRSTORAGE	pathsample.NGTremovei_crstorage.f90	/^SUBROUTINE NGTREMOVEI_CRSTORAGE(/;"	s
NGTRENORM	pathsample.NGTrenorm.f90	/^SUBROUTINE NGTRENORM(/;"	s
NGTRENORM_CRSTORAGE	pathsample.NGTrenorm_crstorage.f90	/^SUBROUTINE NGTRENORM_CRSTORAGE(/;"	s
NGTSIZE	pathsample.common.f90	/^     &        NATTEMPT, NNEW, NTOTAL, NEXCLUDE, NPERMGROUP, BHSTEPS, NGTSIZE,/;"	v
NGTSWITCH	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES, NGTSWITCH,/;"	v
NGTT	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS, ADDPATH, NGTT,/;"	v
NGT_CRSTORAGE	pathsample.NGT_crstorage.f	/^      SUBROUTINE NGT_CRSTORAGE(/;"	s
NGUESS	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE, NGUESS,/;"	v	module:modcharmm
NHCHECK	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK,/;"	v	module:KEY
NHUP	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=/;"	v	module:KEY
NICTOT	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NICTOT /;"	v	module:modamber9
NIM	optim.gsdata.f90	/^  INTEGER :: NIM,/;"	k	type:IMGNODE
NIMAGE	optim.modneb.f90	/^      INTEGER :: NSTEPNEB, NIMAGE,/;"	v	module:MODNEB
NIMAGEMAX	optim.modneb.f90	/^      INTEGER, PARAMETER :: NIMAGEMAX=/;"	v	module:MODNEB
NIMP	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH, NIMP,/;"	v	module:INTCOMMONS
NINTC	optim.intcommons.f90	/^  INTEGER :: NINTC /;"	v	module:INTCOMMONS
NINTERP	optim.modguess.f90	/^      INTEGER :: NINTERP /;"	v	module:MODGUESS
NINTIM	optim.intcommons.f90	/^  INTEGER :: NINTIM /;"	v	module:INTCOMMONS
NINTS	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT, NMOL, NINTS,/;"	v	module:COMMONS
NINTS	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS,/;"	v
NINTV	optim.key.f90	/^     &        NDIIA, NINTV,/;"	v	module:KEY
NINT_GR	optim.modunres.f90	/^      INTEGER :: NNT,NCT,NINT_GR,/;"	v	module:MODUNRES
NITEMS	optim.main.f90	/^      INTEGER ITEM, NITEMS,/;"	v	program:OPTIM4
NITSTART	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NITSTART(/;"	v	module:KEY
NKMCCYCLES	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES,/;"	v
NLDH	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG, NFRG, NLDH,/;"	v	module:INTCOMMONS
NLIM	optim.gsdata.f90	/^  INTEGER :: NIM, NLIM,/;"	k	type:IMGNODE
NMDONE	optim.vecck.f90	/^       INTEGER :: NMDONE$/;"	v	module:VECCK
NMIN	pathsample.common.f90	/^      INTEGER NMINA/;"	v
NMINA	pathsample.common.f90	/^      INTEGER NMINA,/;"	v
NMINASAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE,/;"	v	module:SAVESTATE
NMINB	optim.modcharmm.f90	/^      INTEGER :: NMINB,/;"	v	module:modcharmm
NMINB	pathsample.common.f90	/^      INTEGER NMINA, NMINB,/;"	v
NMINBSAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE, NMINBSAVE,/;"	v	module:SAVESTATE
NMINDONE	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS, MAXATTEMPT, COSTFUNCTIONPOWER, NPAIRDONE, NMINDONE,/;"	v
NMINSAVE	pathsample.main.F	/^      INTEGER J1, NSIZE, NWORST, NAVAIL, NMINSAVE,/;"	v	program:PATHSAMPLE
NMINSAVE	pathsample.main.f90	/^      INTEGER J1, NSIZE, NWORST, NAVAIL, NMINSAVE,/;"	v	program:PATHSAMPLE
NMINSAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE, NMINBSAVE, NMINSAVE,/;"	v	module:SAVESTATE
NMOL	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT, NMOL,/;"	v	module:COMMONS
NMRES	optim.amhglobals.f	/^      INTEGER NMRES$/;"	v	module:amhglobals
NNBIPS	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST/;"	v	module:modamber9
NNBIPST	optim.modamber9.f90	/^      integer ISGSTA,ISGEND,IPS,NNBIPST,/;"	v	module:modamber9
NNEW	pathsample.common.f90	/^     &        NATTEMPT, NNEW,/;"	v
NNEWNCOL	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NEWNVAL(:,:), NNEWNCOL(/;"	v	module:NGTMEM
NNLEN	pathsample.nodes.f90	/^     INTEGER :: JPN,NNODES,NNLEN$/;"	v	module:NODES
NNODES	pathsample.nodes.f90	/^     INTEGER :: JPN,NNODES,/;"	v	module:NODES
NNREPULSIVE	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS, NEBRESEEDINT, NREPULSIVE, &$/;"	v	module:KEY
NNREPULSIVE	pathsample.common.f90	/^      INTEGER :: NNREPULSIVE,/;"	v
NNT	optim.modunres.f90	/^      INTEGER :: NNT,/;"	v	module:MODUNRES
NNZ	optim.intcommons.f90	/^  INTEGER :: KD, NNZ$/;"	v	module:INTCOMMONS
NO	optim.SD.f90	/^integer :: NO,/;"	v	module:SDwater
NOCISTRANS	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,/;"	v	module:modcharmm
NOCISTRANSDNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA, NOCISTRANSDNA,/;"	v	module:modamber9
NOCISTRANSRNA	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords, NOCISTRANSRNA,/;"	v	module:modamber9
NODEN	pathsample.nodes.f90	/^     CHARACTER(LEN=120) :: NODEN$/;"	v	module:NODES
NODENAME	pathsample.nodes.f90	/^     CHARACTER(LEN=80),ALLOCATABLE,DIMENSION(:) :: NODENAME$/;"	v	module:NODES
NODES	pathsample.nodes.f90	/^MODULE NODES$/;"	m
NODESTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=120) :: NODESTRING$/;"	v	module:NODES
NOFRQS	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP, DUMPSP, NOFRQS,/;"	v	module:KEY
NOFRQS	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY, DIJINITSTARTT, DIJINITCONTT, RETAINSP, REMOVESP, NOFRQS,/;"	v
NOGLY	optim.main.f90	/^      INTEGER :: NRES,I_RES,NOGLY$/;"	v	program:OPTIM4
NOHESS	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS,/;"	v	module:KEY
NOIT	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT,/;"	v	module:KEY
NOLBFGS	optim.gsdata.f90	/^  LOGICAL :: NOLBFGS$/;"	k	type:IMGNODE
NOMEGAC	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NOMEGAC$/;"	v	module:modamber9
NOMEGAC	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,/;"	v	module:modcharmm
NOMEGACTOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,NOMEGACTOT,/;"	v	module:modcharmm
NOPERMPROCHIRAL	optim.modamber9.f90	/^logical :: NOPERMPROCHIRAL /;"	v	module:modamber9
NOPOINTS	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS,/;"	v
NOPT	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT,/;"	v	module:COMMONS
NORANDOM	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,/;"	v	module:modcharmm
NORDER	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER,/;"	v	module:KEY
NORDERB	optim.modcharmm.f90	/^      INTEGER :: NMINB,NORDERB$/;"	v	module:modcharmm
NORESET	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE, NORESET,/;"	v	module:KEY
NORMAL	optim.utils.f	/^      SUBROUTINE NORMAL(/;"	s
NORMALIZE	optim.specialfuncts.f90	/^    SUBROUTINE NORMALIZE(/;"	s	module:SPFUNCTS
NOSHIFT	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT,/;"	v	module:KEY
NO_zero	optim.amhglobals.f	/^        double precision sigma_h,sigma_NO,ho_zero,NO_zero$/;"	v	module:amhglobals
NPAIRDONE	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS, MAXATTEMPT, COSTFUNCTIONPOWER, NPAIRDONE,/;"	v
NPAIRFRQ	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS, MAXATTEMPT, COSTFUNCTIONPOWER, NPAIRDONE, NMINDONE, NPAIRFRQ,/;"	v
NPATHS	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS, NCONNMIN, CONNECTMIN1, CONNECTMIN2, NFREEZE, NPATHS,/;"	v
NPERMDIHE	optim.modcharmm.f90	/^      INTEGER :: NPERMDIHE$/;"	v	module:modcharmm
NPERMGROUP	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP,/;"	v	module:KEY
NPERMGROUP	pathsample.common.f90	/^     &        NATTEMPT, NNEW, NTOTAL, NEXCLUDE, NPERMGROUP,/;"	v
NPERMSIZE	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v	module:KEY
NPERMSIZE	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(/;"	v
NPFOLD	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS, SAVELENGTH, NPFOLD,/;"	v
NPHI	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,/;"	v	module:MODUNRES
NPHIPSI	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NPHIPSI$/;"	v	module:modamber9
NPHIPSI	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,/;"	v	module:modcharmm
NPHIPSITOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,/;"	v	module:modcharmm
NPOWER	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER,/;"	v	module:KEY
NPROC	optim.key.f90	/^      CHARACTER(LEN=4) :: NPROC$/;"	v	module:KEY
NQ	commons.f90	/^INTEGER :: NQ$/;"	v	module:GMIN_COMMONS
NQTOT	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS, NSUCCESST, NQTOT$/;"	v
NR	optim.commons.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NR,/;"	v	module:COMMONS
NRBGROUP	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP,/;"	v	module:KEY
NRBGROUP	pathsample.common.f90	/^      INTEGER :: NRBSITES, NTSITES, NRBGROUP,/;"	v
NRBSITES	optim.commons.f90	/^      INTEGER :: NUNIQUE, NOPT, IPRNT, INR, IVEC, IVEC2, ISTCRT, NMOL, NINTS, NRBSITES$/;"	v	module:COMMONS
NRBSITES	pathsample.common.f90	/^      INTEGER :: NRBSITES,/;"	v
NRBTRIES	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES, NRBGROUP, INTIMAGE, DUMPINTXYZFREQ, DUMPINTEOSFREQ, &$/;"	v	module:KEY
NREPCUT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:), NREPCUT(/;"	v	module:KEY
NREPCUT	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(:),  NREPCUT(/;"	v
NREPELTS	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS,/;"	v	module:KEY
NREPI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NREPI(/;"	v	module:KEY
NREPI	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NREPI(/;"	v
NREPJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NREPI(:), NREPJ(/;"	v	module:KEY
NREPJ	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NREPI(:), NREPJ(/;"	v
NREPMAX	optim.key.f90	/^      INTEGER :: NREPMAX=/;"	v	module:KEY
NREPMAX	pathsample.common.f90	/^      INTEGER :: NREPMAX=/;"	v
NREPULSIVE	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN, BISECTSTEPS, BISECTMAXATTEMPTS, NEBRESEEDINT, NREPULSIVE,/;"	v	module:KEY
NREPULSIVE	pathsample.common.f90	/^      INTEGER :: NNREPULSIVE,/;"	v
NRES	optim.main.f90	/^      INTEGER :: NRES,/;"	v	program:OPTIM4
NRES	optim.modunres.f90	/^      INTEGER :: NRES,/;"	v	module:MODUNRES
NRES	pathsample.main.F	/^      INTEGER :: NRES,/;"	v	program:PATHSAMPLE
NRES	pathsample.main.f90	/^      INTEGER :: NRES,/;"	v	program:PATHSAMPLE
NRES0	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,/;"	v	module:MODUNRES
NRES_AMH_TEMP	optim.key.f90	/^      INTEGER :: NRES_AMH_TEMP /;"	v	module:KEY
NRIM	optim.gsdata.f90	/^  INTEGER :: NIM, NLIM, NRIM /;"	k	type:IMGNODE
NRMLMD	optim.newtip.f90	/^      SUBROUTINE NRMLMD /;"	s
NRMS	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,QDONE,JBEST,NDONE,NRMS,/;"	v
NRNG	optim.intcommons.f90	/^  INTEGER :: NBDS, NCNT, NRNG,/;"	v	module:INTCOMMONS
NROTE	optim.rotd.f	/^      SUBROUTINE NROTE(/;"	s
NRWBINS	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS, SAVELENGTH, NPFOLD, PFOLDINT, NRWBINS,/;"	v
NRWREACTANT	pathsample.common.f90	/^     &        NATOMS, MAXLENGTH, CONNECTIONS, HORDER, ERROR, MINSEP, NRWREACTANT,/;"	v
NSAVE	commons.f90	/^INTEGER :: NSAVE$/;"	v	module:GMIN_COMMONS
NSCP_GR	optim.modunres.f90	/^     &           ITEL,ITYPRO,IELSTART,IELEND,NSCP_GR,/;"	v	module:MODUNRES
NSECDIAG	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG,/;"	v	module:KEY
NSEGATOMS	optim.modcharmm.f90	/^      INTEGER, ALLOCATABLE, DIMENSION(:) :: NSEGATOMS /;"	v	module:modcharmm
NSETS	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v	module:KEY
NSETS	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NSETS(/;"	v
NSHESS	optim.tosifumi.f	/^      SUBROUTINE NSHESS(/;"	s
NSIDE	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,/;"	v	module:MODUNRES
NSIDECHAIN	optim.modamber9.f90	/^integer, dimension(:), allocatable :: NSIDECHAIN$/;"	v	module:modamber9
NSIDECHAIN	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE  :: NPHIPSI,NOMEGAC,NSIDECHAIN,/;"	v	module:modcharmm
NSIDECHAINTOT	optim.modcharmm.f90	/^      INTEGER :: NPHIPSITOT,NOMEGACTOT,NSIDECHAINTOT,/;"	v	module:modcharmm
NSIZE	pathsample.main.F	/^      INTEGER J1, NSIZE,/;"	v	program:PATHSAMPLE
NSIZE	pathsample.main.f90	/^      INTEGER J1, NSIZE,/;"	v	program:PATHSAMPLE
NSTART	pathsample.nodes.f90	/^     INTEGER NSTART,/;"	v	module:NODES
NSTART2	pathsample.nodes.f90	/^     INTEGER NSTART, NFINISH, NSTART2,/;"	v	module:NODES
NSTEPMIN	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN,/;"	v	module:KEY
NSTEPNEB	optim.modneb.f90	/^      INTEGER :: NSTEPNEB,/;"	v	module:MODNEB
NSTEPS	mc.vars.inc.f90	/^      INTEGER NSTEPS$/;"	v
NSTEPS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS,/;"	v	module:KEY
NSTHUP	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP,/;"	v	module:KEY
NSUCCESS	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS,/;"	v
NSUCCESST	mc.vars.inc.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS, NSUCCESST,/;"	v
NSUMMARY	optim.key.f90	/^      INTEGER :: NSUMMARY,/;"	v	module:KEY
NSYMCALL	mc.vars.inc.f90	/^      INTEGER :: NSYMCALL=/;"	v
NTAG	optim.commons.f90	/^      INTEGER NTAG$/;"	v	module:COMMONS
NTAG	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG,/;"	v
NTFOLD	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES, NGTSWITCH, NTFOLD,/;"	v
NTHETA	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,/;"	v	module:MODUNRES
NTIPT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT,/;"	v	module:KEY
NTOT	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,QDONE,JBEST,NDONE,NRMS,I,J,NTOT,/;"	v
NTOTAL	pathsample.common.f90	/^     &        NATTEMPT, NNEW, NTOTAL,/;"	v
NTRAPPOW	optim.key.f90	/^     &        NCPREPULSIVE, NCPCONSTRAINT, MAXCONUSE, INTCONSTEPS, INTRELSTEPS, INTSTEPS1, INTLJSTEPS, &$/;"	v	module:KEY
NTRYING	pathsample.common.f90	/^      INTEGER :: NTRYING=/;"	v
NTS	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS,/;"	v
NTSITES	optim.key.f90	/^     &        TIPID, PAHID, NCARBON, NTSITES,/;"	v	module:KEY
NTSITES	pathsample.common.f90	/^      INTEGER :: NRBSITES, NTSITES,/;"	v
NTSSAVE	pathsample.savestate.f90	/^      INTEGER NMINASAVE, NMINBSAVE, NMINSAVE, NTSSAVE$/;"	v	module:SAVESTATE
NTWO	optim.modtwoend.f90	/^      INTEGER :: NTWO,/;"	v	module:MODTWOEND
NTWOITER	optim.modtwoend.f90	/^      INTEGER :: NTWO, NTWOITER$/;"	v	module:MODTWOEND
NTW_ANGLES	optim.modamber9.f90	/^integer:: NTW_ANGLES /;"	v	module:modamber9
NTYP	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM, MAXVAR, NTYP,/;"	v	module:MODUNRES
NTYP1	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2, MAXDIM, MAXVAR, NTYP, NTYP1$/;"	v	module:MODUNRES
NTYPE	bln.vars.inc.f90	/^        INTEGER NTYPE(/;"	v
NTYPE	optim.main.f90	/^      INTEGER J2, NELEMENTS, LSYS, NTYPE(/;"	v	program:OPTIM4
NUBONDS	optim.intcommons.f90	/^  INTEGER :: NUBONDS=/;"	v	module:INTCOMMONS
NUMBER_OF_ATOMS	func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:GMIN
NUMBER_OF_ATOMS	gmin.func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	gmin.main.f90	/^      INTEGER :: NUMBER_OF_ATOMS$/;"	v	program:GMIN
NUMER	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,BOTTOM,AX,BX,CX,AY,BY,CY,AZ,BZ,CZ,MU,LAMBDA,NUMER,/;"	v	module:MODAMBER
NUMERICALZEROLIMIT	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: NUMERICALZEROLIMIT /;"	v	module:msevb_common
NUMGLY	optim.key.f90	/^      INTEGER :: SEQ(500),NUMGLY$/;"	v	module:KEY
NUMSEC	optim.modunres.f90	/^      INTEGER :: STARTRES(10),ENDRES(10),NUMSEC$/;"	v	module:MODUNRES
NUNIQUE	optim.commons.f90	/^      INTEGER :: NUNIQUE,/;"	v	module:COMMONS
NUP	optim.zwk.f90	/^       INTEGER :: NUP$/;"	v	module:ZWK
NURINGS	optim.intcommons.f90	/^  INTEGER :: NURINGS=/;"	v	module:INTCOMMONS
NUSEEV	optim.key.f90	/^     &        MMUPDATE, NEBMUPDATE, INTMUPDATE, FILTH, FILTH2, NFAILMAX, NPERMGROUP, GCIMAGE, GCSTEPS, GCUPDATE, GCSEED, &$/;"	v	module:KEY
NUSEPAIRS	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS, SAVELENGTH, NPFOLD, PFOLDINT, NRWBINS, NUSEPAIRS,/;"	v
NVAL	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NVAL(/;"	v	module:NGTMEM
NVALTEMP	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NVAL(:,:), NVALTEMP(/;"	v	module:NGTMEM
NVALTMP	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: NEWNVAL(:,:), NNEWNCOL(:), NVALTMP(/;"	v	module:NGTMEM
NVALUES	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES,/;"	v	module:KEY
NVARU	optim.modunres.f90	/^      INTEGER :: NRES,NRES0,IALPH,IVAR,NTHETA,NPHI,NSIDE,NVARU,/;"	v	module:MODUNRES
NVECTORS	optim.key.f90	/^      INTEGER :: NSUMMARY, NADM, MSTEPS, BFGSSTEPS, NSTEPS, NVALUES, NVECTORS,/;"	v	module:KEY
NWORST	pathsample.main.F	/^      INTEGER J1, NSIZE, NWORST,/;"	v	program:PATHSAMPLE
NWORST	pathsample.main.f90	/^      INTEGER J1, NSIZE, NWORST,/;"	v	program:PATHSAMPLE
NZERO	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO,/;"	v	module:KEY
Na	optim.SD.f90	/^integer :: NO, Na$/;"	v	module:SDwater
Nats	optim.ttm3f.f90	/^integer :: Nats,/;"	v	module:ttm3f_mod
Natsd	optim.ttm3f.f90	/^integer :: Nats, Natsd,/;"	v	module:ttm3f_mod
Natsq	optim.ttm3f.f90	/^integer :: Nats, Natsd, Natsq$/;"	v	module:ttm3f_mod
Ninodes	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,Nsinks,Ninodes,/;"	v	module:DataModule
Nnodes	pathsample.GT2data.f90	/^     integer :: Nnodes,/;"	v	module:DataModule
Node	pathsample.GT2data.f90	/^     type Node$/;"	t	module:DataModule
NodeArray	pathsample.GT2data.f90	/^     type NodeArray$/;"	t	module:DataModule
NodeList	pathsample.GT2data.f90	/^     type NodeList$/;"	t	module:DataModule
Nsinks	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,Nsinks,/;"	v	module:DataModule
Nsources	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,/;"	v	module:DataModule
NunprocessedNodes	pathsample.GT2data.f90	/^     integer :: Nnodes,Nsources,Nsinks,Ninodes,NunprocessedNodes$/;"	v	module:DataModule
Nw_old	optim.ttm3f.f90	/^integer :: Nw_old$/;"	v	module:ttm3f_mod
OBJCTF	optim.pyg.f90	/^      SUBROUTINE OBJCTF(/;"	s
OCHARMM	optim.chdummy.f	/^      SUBROUTINE OCHARMM(/;"	s
ODESD	optim.odesd.f	/^      SUBROUTINE ODESD(/;"	s
ODIHET	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,ODIHET,/;"	v	module:modcharmm
OEPATH	optim.OPTIM.F	93;"	c	subroutine:OPTIM
OEPATH	optim.func.f90	72;"	c	subroutine:OPTIM
OEPATH	optim.geopt.f	80;"	c	subroutine:GEOPT
OESCP	optim.escp.f	/^      SUBROUTINE OESCP(/;"	s
OFFSET	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:LJCAPSIDMODULE
OFFSET	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET,/;"	v	module:PYMODULE
OHT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT,/;"	v	module:KEY
OLDC	optim.connect.f	1788;"	c	subroutine:TSSEARCH
OLDINTMINPERMT	optim.intcommons.f90	/^  LOGICAL :: OLDINTMINPERMT=/;"	v	module:INTCOMMONS
OLDNEB	optim.oldneb.f	/^      SUBROUTINE OLDNEB(/;"	s
OLDROTGEOMSTOCK	optim.newmindist.f90	/^SUBROUTINE OLDROTGEOMSTOCK(/;"	s
OLD_INTMINPERM	optim.intcoords.f90	/^    SUBROUTINE OLD_INTMINPERM(/;"	s	module:INTCUTILS
OMEG	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,PHI,ALPH,OMEG$/;"	v	module:MODUNRES
OMEGA	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL, PVCONV, PVTOL, &$/;"	v	module:KEY
OMEGA	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH, OMEGA,/;"	v
OMEGAC	optim.modamber9.f90	/^integer, dimension(:), allocatable :: OMEGAC$/;"	v	module:modamber9
OMEGAC	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,/;"	v	module:modcharmm
OMEGAEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: OMEGAEQ /;"	v	module:msevb_common
OMEGASTART	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: EMINB, ITXMINB, ITYMINB, ITZMINB, OMEGASTART$/;"	v	module:modcharmm
ONELET	optim.modunres.f90	/^      CHARACTER(LEN=1) :: ONELET$/;"	v	module:MODUNRES
ONETEP	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY, CASTEP, ONETEP,/;"	v	module:KEY
ONETEP	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,/;"	v	program:OPTIM4
ONETEPJOB	optim.key.f90	/^      CHARACTER(LEN=120) :: CASTEPJOB, CP2KJOB, ONETEPJOB$/;"	v	module:KEY
OOCLASH_SQ	optim.msevb_common.f90	/^  DOUBLE PRECISION :: OOCLASH_SQ$/;"	v	module:msevb_common
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s	module:GMIN
OPENF	gmin.func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OPTIM	optim.OPTIM.F	/^      SUBROUTINE OPTIM(/;"	s
OPTIM	optim.func.f90	/^      SUBROUTINE OPTIM(/;"	s
OPTIM4	optim.main.f90	/^      PROGRAM OPTIM4$/;"	p
OPTMAXE	optim.modguess.f90	/^      LOGICAL :: OPTTOTAL=.FALSE., OPTMAXE=/;"	v	module:MODGUESS
OPTTOTAL	optim.modguess.f90	/^      LOGICAL :: OPTTOTAL=/;"	v	module:MODGUESS
ORDERBLABEL	optim.modcharmm.f90	/^      CHARACTER(LEN=8) ORDERBLABEL(/;"	v	module:modcharmm
ORDERBPARAM	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:) :: ORDERBPARAM(/;"	v	module:modcharmm
ORDERBT	optim.modcharmm.f90	/^      LOGICAL :: ORDERBT$/;"	v	module:modcharmm
ORDERI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: ORDERI(/;"	v	module:KEY
ORDERJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: ORDERI(:), ORDERJ(/;"	v	module:KEY
ORDERNUM	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(:), ORDERNUM(/;"	v	module:KEY
ORDERODATA	pathsample.orderodata.f	/^      SUBROUTINE ORDERODATA(/;"	s
ORDERPARAM	pathsample.common.f90	/^     &                 PERTVALUE, TAGMASS, PABCONV, REGROUPTHRESH, REGROUPRATETHRESH, CONNECTDIST, &$/;"	v
ORDERPARAMT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT,/;"	v	module:KEY
ORIENT	pathsample.orient.f	/^      SUBROUTINE ORIENT(/;"	s
ORIENT2D	pathsample.orient.f	/^      SUBROUTINE ORIENT2D(/;"	s
ORIENTA	optim.minpermdistrbcom.f90	/^      SUBROUTINE ORIENTA(/;"	s
ORIENTA	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE ORIENTA(/;"	s
ORTHOGOPT	optim.bfgsts.f	/^      SUBROUTINE ORTHOGOPT(/;"	s
ORTHOGRIGID	optim.rigidb.f90	/^      SUBROUTINE ORTHOGRIGID /;"	s
ORTHOGSTOCK	optim.stock.f	/^      SUBROUTINE ORTHOGSTOCK(/;"	s
ORTHOGTH	optim.thomson.f	/^      SUBROUTINE ORTHOGTH(/;"	s
OSASAT	optim.modcharmm.f90	/^      LOGICAL :: CALCDIHE,OSASAT,/;"	v	module:modcharmm
OSTEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP,/;"	v	module:GMIN_COMMONS
OSTRING	optim.main.f90	/^      CHARACTER(LEN=20) OTEMP, OSTRING,/;"	v	program:OPTIM4
OTEMP	optim.main.f90	/^      CHARACTER(LEN=20) OTEMP,/;"	v	program:OPTIM4
OUTPUT	optim.growstring.f90	/^  SUBROUTINE OUTPUT(/;"	s	module:GROWSTRINGUTILS
OUTPUT	pathsample.GT2.save.f90	/^     SUBROUTINE OUTPUT(/;"	s	module:GRAPHTRANSFORMATIONMODULE
OVECC	optim.dftb.f	/^      SUBROUTINE OVECC(/;"	s
P	optim.msevb_common.f90	/^  DOUBLE PR/;"	v	module:msevb_common
P	pathsample.GT2data.f90	/^          type(RealList),pointer :: P$/;"	k	type:Node
P	pathsample.GT2data.f90	/^     double precision,dimension(:,:),allocatable :: P$/;"	v	module:DataModule
P46MERDIFF	p46merdiff.f	/^        SUBROUTINE P46MERDIFF(/;"	s
P4DIFF	optim.p4diff.f	/^      SUBROUTINE P4DIFF(/;"	s
P4G	optim.p4diff.f	/^      SUBROUTINE P4G(/;"	s
P4S	optim.p4diff.f	/^      SUBROUTINE P4S(/;"	s
PABCONV	pathsample.common.f90	/^     &                 PERTVALUE, TAGMASS, PABCONV,/;"	v
PAHAGH	optim.pahagh.f90	/^      SUBROUTINE PAHAGH /;"	s
PAHAT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT,/;"	v	module:KEY
PAHAT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT, MSSTOCKT, PAHAT,/;"	v
PAHID	optim.key.f90	/^     &        TIPID, PAHID,/;"	v	module:KEY
PAHID	pathsample.common.f90	/^      INTEGER :: NRBSITES, NTSITES, NRBGROUP, PAHID$/;"	v
PAIR1	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: PAIR1(/;"	v
PAIR2	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: PAIR1(:), PAIR2(/;"	v
PAIRDIST	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: PAIRDIST(/;"	v
PAIRDISTMAX	pathsample.common.f90	/^      INTEGER :: PAIRDISTMAX=/;"	v
PAIRDIST_FH	commons.f90	/^INTEGER :: ENERGY_FH, MARKOV_FH, BEST_FH, PAIRDIST_FH$/;"	v	module:GMIN_COMMONS
PAIRDOUBLE	pathsample.pairdouble.f90	/^SUBROUTINE PAIRDOUBLE$/;"	s
PAIRTHRESH	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE, PSCALE, TSTHRESH, MAXBARRIER, MAXDOWNBARRIER, REGROUPPETHRESH, &$/;"	v
PARALLEL	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL,/;"	v	module:KEY
PARALLEL	pathsample.common.f90	/^      INTEGER NFSTART, NFFINISH, NINTS, NCONNMIN, CONNECTMIN1, CONNECTMIN2, NFREEZE, NPATHS, PARALLEL$/;"	v
PARAM1	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=/;"	v	module:COMMONS
PARAM2	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2,/;"	v	module:COMMONS
PARAM3	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3,/;"	v	module:COMMONS
PARAM4	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4,/;"	v	module:COMMONS
PARAM5	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5,/;"	v	module:COMMONS
PARAM6	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6,/;"	v	module:COMMONS
PARAM7	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO, PARAM1=0.0D0, PARAM2, PARAM3, PARAM4, PARAM5, PARAM6, PARAM7,/;"	v	module:COMMONS
PARAMONOVCUTOFF	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,PARAMONOVPBCY,PARAMONOVPBCZ,PARAMONOVCUTOFF$/;"	v	module:KEY
PARAMONOVNUMFIRSTDER	optim.ljcapsidmodule.f90	/^SUBROUTINE PARAMONOVNUMFIRSTDER(/;"	s
PARAMONOVPBCX	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,/;"	v	module:KEY
PARAMONOVPBCY	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,PARAMONOVPBCY,/;"	v	module:KEY
PARAMONOVPBCZ	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,PARAMONOVPBCX,PARAMONOVPBCY,PARAMONOVPBCZ,/;"	v	module:KEY
PARAMS	optim.JM.f	1145;"	c	subroutine:JM3C
PARAMS	optim.JM.f	173;"	c	subroutine:JM2C
PARAMS	optim.JM.f	2003;"	c	subroutine:JM3P
PARAMS	optim.JM.f	2645;"	c	subroutine:JMEC
PARAMS	optim.JM.f	2866;"	c	subroutine:JMEP
PARAMS	optim.JM.f	456;"	c	subroutine:JM2P
PARAM_CUT_OFF	optim.Ackland_metals.f90	108;"	c	function:RHO_POT_DD
PARAM_CUT_OFF	optim.Ackland_metals.f90	156;"	c	function:VPOT
PARAM_CUT_OFF	optim.Ackland_metals.f90	23;"	c	function:RHO_POT
PARAM_CUT_OFF	optim.Ackland_metals.f90	243;"	c	function:VPOT_D
PARAM_CUT_OFF	optim.Ackland_metals.f90	338;"	c	function:VPOT_DD
PARAM_CUT_OFF	optim.Ackland_metals.f90	485;"	c	function:FEMBED
PARAM_CUT_OFF	optim.Ackland_metals.f90	539;"	c	function:FEMBED_D
PARAM_CUT_OFF	optim.Ackland_metals.f90	606;"	c	function:FEMBED_DD
PARAM_CUT_OFF	optim.Ackland_metals.f90	62;"	c	function:RHO_POT_D
PATCHYD	optim.patchyd.f90	/^SUBROUTINE PATCHYD /;"	s
PATCHYDT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT,/;"	v	module:KEY
PATCHYDT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT, MSSTOCKT, PAHAT, PATCHYDT,/;"	v
PATH	optim.path.f	/^      SUBROUTINE PATH(/;"	s
PATHNAME	pathsample.common.f90	/^      CHARACTER(LEN=80) PATHNAME,/;"	v
PATHSAMPLE	pathsample.main.F	/^      PROGRAM PATHSAMPLE$/;"	p
PATHSAMPLE	pathsample.main.f90	/^      PROGRAM PATHSAMPLE$/;"	p
PATHSDSTEPS	optim.key.f90	/^     &        NUSEEV, PATHSDSTEPS,/;"	v	module:KEY
PATHSTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=200) :: PATHSTRING$/;"	v	module:NODES
PATHSTRINGARRAY	pathsample.dock.f90	/^character(len=30), allocatable  ::  PATHSTRINGARRAY(/;"	v	module:DOCKMODULE
PATOM1	commons.f90	/^INTEGER :: PATOM1$/;"	v	module:GMIN_COMMONS
PATOM1	optim.key.f90	/^     &        INTCONSEP, PATOM1,/;"	v	module:KEY
PATOM2	commons.f90	/^INTEGER :: PATOM2$/;"	v	module:GMIN_COMMONS
PATOM2	optim.key.f90	/^     &        INTCONSEP, PATOM1, PATOM2,/;"	v	module:KEY
PBRANCH	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: PBRANCH(/;"	v	module:NGTMEM
PBRANCHTEMP	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE :: PBRANCH(:,:), PBRANCHTEMP(/;"	v	module:NGTMEM
PBRANCHTMP	pathsample.NGTmem.f90	/^   DOUBLE PRECISION, ALLOCATABLE ::  PBRANCHTMP(/;"	v	module:NGTMEM
PBTHRESH	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH,/;"	v
PCALL	keyword.f90	28;"	c	subroutine:KEYWORD
PCALL	optim.OPTIM.F	750;"	c	subroutine:TSUMMARY
PCALL	optim.OPTIM.F	78;"	c	subroutine:OPTIM
PCALL	optim.func.f90	57;"	c	subroutine:OPTIM
PCALL	optim.func.f90	729;"	c	subroutine:TSUMMARY
PCALL	optim.geopt.f	52;"	c	subroutine:GEOPT
PCALL	optim.potential.f	76;"	c	subroutine:POTENTIAL
PCUT	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT,/;"	v	module:KEY
PCUTOFF	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,/;"	v	module:KEY
PENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,/;"	v	module:MODAMBER
PEPSILON1	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(/;"	v	module:KEY
PEPSILONATTR	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(2), &$/;"	v	module:KEY
PEPTBOND	optim.modunres.f90	52;"	c	module:MODUNRES
PERMCHAIN	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: PERMNEIGHBOURS(:,:), PERMCHAIN(/;"	v	module:INTCOMMONS
PERMDIHE	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,RANDOMCUTOFF,PERMDIHE(/;"	v	module:modcharmm
PERMDIHET	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,GUESSTST,NOCISTRANS,NORANDOM,ENDHESS,ENDNUMHESS,PERMDIHET,/;"	v	module:modcharmm
PERMDIST	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS, DUMPDATAT, MORPHT, PERMDIST,/;"	v	module:KEY
PERMDIST	pathsample.common.f90	/^     &        GT2Sparse, GT2Switch, GT2AltPbb, GT2Rescale, GT2Normalise, GT2DisconnectSources, BARRIERSORT, &$/;"	v
PERMDISTINIT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT, BHINTERPT, BHDEBUG, CHRIGIDT, PERMDISTINIT,/;"	v	module:KEY
PERMGROUP	optim.key.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v	module:KEY
PERMGROUP	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: NPERMSIZE(:), PERMGROUP(/;"	v
PERMISOMER	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER,/;"	v
PERMNANGLE	optim.intcommons.f90	/^  DOUBLE PRECISION, ALLOCATABLE :: PERMNANGLE(/;"	v	module:INTCOMMONS
PERMNEIGHBOURS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: PERMNEIGHBOURS(/;"	v	module:INTCOMMONS
PERTABLE	optim.pertable.f	/^      SUBROUTINE PERTABLE$/;"	s
PERTDIHAM	optim.amber9dummy.f90	/^subroutine PERTDIHAM(/;"	s
PERTDIHE	optim.chdummy.f	/^      SUBROUTINE PERTDIHE(/;"	s
PERTDIHET	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,PERTDIHET,/;"	v	module:modcharmm
PERTHRESH	optim.modamber9.f90	/^double precision:: PERTHRESH /;"	v	module:modamber9
PERTMAX	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE, TEMPERATURE, PFTOTALA, PFTOTALB, PERTMAX,/;"	v
PERTMIN	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE, TEMPERATURE, PFTOTALA, PFTOTALB, PERTMAX, PERTMIN,/;"	v
PERTVALUE	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE, TEMPERATURE, PFTOTALA, PFTOTALB, PERTMAX, PERTMIN, &$/;"	v
PFMEAN	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN,/;"	v
PFMIN	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMIN(:), FVIBMIN(:), PFMIN(/;"	v
PFMINSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: EMINSAVE(:), PFMINSAVE(/;"	v	module:SAVESTATE
PFOLD	pathsample.Pfold.f90	/^SUBROUTINE PFOLD$/;"	s
PFOLDINT	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS, SAVELENGTH, NPFOLD, PFOLDINT,/;"	v
PFORCE	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA, REPCON, PFORCE,/;"	v	module:KEY
PFTOTALA	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE, TEMPERATURE, PFTOTALA,/;"	v
PFTOTALASAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION PFTOTALASAVE,/;"	v	module:SAVESTATE
PFTOTALB	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE, TEMPERATURE, PFTOTALA, PFTOTALB,/;"	v
PFTOTALBSAVE	pathsample.savestate.f90	/^      DOUBLE PRECISION PFTOTALASAVE, PFTOTALBSAVE /;"	v	module:SAVESTATE
PGRAD	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT, DUMPV, FREEZE, GRADSQ, &$/;"	v	module:KEY
PGRP	optim.syminf.f90	/^      CHARACTER(LEN=4) :: FPGRP,/;"	v	module:SYMINF
PHASE	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,/;"	v	module:MODAMBER
PHASE2	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,/;"	v	module:MODAMBER
PHASE3	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,PHASE2,PHASE3,/;"	v	module:MODAMBER
PHI	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,PHI,/;"	v	module:MODUNRES
PHIG	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG,/;"	v	module:KEY
PHIPSI	optim.modamber9.f90	/^integer, dimension(:), allocatable :: PHIPSI$/;"	v	module:modamber9
PHIPSI	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,/;"	v	module:modcharmm
PHI_INTERP	optim.amber9dummy.f90	/^double precision function PHI_INTERP(/;"	f
PI	optim.intcommons.f90	/^  DOUBLE PRECISION, PARAMETER :: PI=/;"	v	module:INTCOMMONS
PI	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: PI /;"	v	module:msevb_common
PI	pathsample.common.f90	/^      DOUBLE PRECISION, PARAMETER :: PI=/;"	v
PI4	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 = 1.8326D0, PI4=/;"	v
PIKSR2	optim.utils.f	/^        SUBROUTINE PIKSR2(/;"	s
PK	optim.modamber.f90	/^      DOUBLE PRECISION PK,/;"	v	module:MODAMBER
PK2	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,/;"	v	module:MODAMBER
PK3	optim.modamber.f90	/^      DOUBLE PRECISION PK,PHASE,PK2,PK3,/;"	v	module:MODAMBER
PLANCK	pathsample.common.f90	/^     &                 GT2RSwitch, GT2Ptol, EUNTRAPTHRESH, PLANCK,/;"	v
PLUS	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERTS(:), PLUS(/;"	v
PLUSSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(/;"	v	module:SAVESTATE
PN	optim.modamber.f90	/^      INTEGER PN,/;"	v	module:MODAMBER
PN2	optim.modamber.f90	/^      INTEGER PN,IDIVF,PN2,/;"	v	module:MODAMBER
PN3	optim.modamber.f90	/^      INTEGER PN,IDIVF,PN2,PN3,/;"	v	module:MODAMBER
POINTERM	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERTS(:), PLUS(:), MINUS(:), POINTERM(/;"	v
POINTERMSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(:), MINUSSAVE(:), POINTERMSAVE(/;"	v	module:SAVESTATE
POINTERP	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERTS(:), PLUS(:), MINUS(:), POINTERM(:), POINTERP(/;"	v
POINTERPSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: PLUSSAVE(:), MINUSSAVE(:), POINTERMSAVE(:), POINTERPSAVE(/;"	v	module:SAVESTATE
POPSS	pathsample.common.f90	/^      INTEGER :: SMAX, IMAX, POPSS$/;"	v
POTEL	gmin.main.f90	/^      DOUBLE PRECISION POTEL$/;"	v	program:GMIN
POTEL	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,EPPREV,TIME,ELASTSYM,EPSSAVE,POTEL,/;"	v
POTENTIAL	optim.potential.f	/^      SUBROUTINE POTENTIAL(/;"	s
POTENTIAL	potential.f90	/^      SUBROUTINE POTENTIAL(/;"	s
POTS	optim.H2O.pjt2.f	/^      SUBROUTINE POTS(/;"	s
POTV	optim.H2O.pjt2.f	/^      SUBROUTINE POTV(/;"	s
POWERS	optim.escp.f	163;"	c	subroutine:DSCP
POWERS	optim.escp.f	32;"	c	subroutine:OESCP
POWERS	optim.scl.f	32;"	c	subroutine:SCL
PQ	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,Y,Z,PQ$/;"	v	module:MODAMBER
PRC60	optim.PachecoC60.f	/^      SUBROUTINE PRC60(/;"	s
PREPAREDATAFILE	pathsample.dock.f90	/^SUBROUTINE PREPAREDATAFILE(/;"	s	module:DOCKMODULE
PREPAREGMINDIRS	pathsample.dock.f90	/^SUBROUTINE PREPAREGMINDIRS(/;"	s	module:DOCKMODULE
PREPAREGMINFILES	pathsample.dock.f90	/^SUBROUTINE PREPAREGMINFILES$/;"	s	module:DOCKMODULE
PREPAREOPTIMFILES	pathsample.dock.f90	/^SUBROUTINE PREPAREOPTIMFILES$/;"	s	module:DOCKMODULE
PREROTATE	optim.gsdata.f90	/^  LOGICAL :: CUBSPLT,FIXATMS, PREROTATE,/;"	k	type:IMGNODE
PRESS	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS,/;"	v	module:KEY
PRESSURE	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE,/;"	v	module:KEY
PREV	optim.gsdata.f90	/^     TYPE(IMGNODE), POINTER :: PREV$/;"	k	type:IMGNODE
PREVDIH	optim.intcommons.f90	/^  DOUBLE PRECISION, POINTER :: PREVDIH(/;"	v	module:INTCOMMONS
PREVGRAD	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: PREVGRAD(/;"	k	type:IMGNODE
PREVXCART	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZCART(:), GCART(:), PREVXCART(/;"	k	type:IMGNODE
PREVXYZ	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: PREVGRAD(:), DIFF(:), PREVXYZ(/;"	k	type:IMGNODE
PRINTCOORDS	optim.intcommons.f90	/^  LOGICAL :: PRINTCOORDS$/;"	v	module:INTCOMMONS
PRINTDIHE	optim.chdummy.f	/^      SUBROUTINE PRINTDIHE(/;"	s
PRINTMATRIX	pathsample.GT2.f90	/^     SUBROUTINE PRINTMATRIX(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTMATRIX	pathsample.GT2.save.f90	/^     SUBROUTINE PRINTMATRIX(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTNODEINFO	pathsample.GT2.f90	/^     SUBROUTINE PRINTNODEINFO(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTNODEINFO	pathsample.GT2.save.f90	/^     SUBROUTINE PRINTNODEINFO(/;"	s	module:GRAPHTRANSFORMATIONMODULE
PRINTPTS	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS,/;"	v	module:KEY
PRINTT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT,/;"	v
PROBABIL	optim.amber9dummy.f90	/^double precision function PROBABIL(/;"	f
PROBACC	pathsample.probacc.f	/^      SUBROUTINE PROBACC(/;"	s
PROCHIRALCNT	optim.modamber9.f90	/^integer, allocatable :: PROCHIRALCNT(/;"	v	module:modamber9
PROCHIRALH	optim.modamber9.f90	/^logical, allocatable :: PROCHIRALH(/;"	v	module:modamber9
PROCNT	optim.key.f90	/^      INTEGER PROCNT,/;"	v	module:KEY
PROD	optim.mindist.f	/^      SUBROUTINE PROD(/;"	s
PROD	pathsample.mindist.f	/^      SUBROUTINE PROD(/;"	s
PRODTHRESH	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH,/;"	v
PROJH	optim.projh.f	/^      SUBROUTINE PROJH(/;"	s
PROL_PERMUTE	optim.ambnatintern_extras.f90	/^      SUBROUTINE PROL_PERMUTE(/;"	s
PROT	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,TRANSMAX,PROT,/;"	v	module:modcharmm
PSCALE	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE, PSCALE,/;"	v
PSCALEFAC1	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(3),PSCALEFAC1(/;"	v	module:KEY
PSCALEFAC1vec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC1vec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(/;"	v	module:PYMODULE
PSCALEFAC2	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(3),PEPSILON1(3),PSCALEFAC1(2),PSCALEFAC2(/;"	v	module:KEY
PSCALEFAC2vec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:LJCAPSIDMODULE
PSCALEFAC2vec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(/;"	v	module:PYMODULE
PSFPHI	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,PSFPHI /;"	v	module:modcharmm
PSIGMAATTR	optim.key.f90	/^     &                     PEPSILONATTR(2),PSIGMAATTR(/;"	v	module:KEY
PSIX	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: PSIX,/;"	v	module:msevb_common
PSIY	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: PSIX, PSIY,/;"	v	module:msevb_common
PSIZ	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: PSIX, PSIY, PSIZ /;"	v	module:msevb_common
PTEST	optim.gsdata.f90	/^  LOGICAL :: PTEST,/;"	k	type:IMGNODE
PTRANS	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,/;"	v	module:modcharmm
PTYPE	bln.vars.inc.f90	/^        CHARACTER(LEN=*) :: PTYPE$/;"	v
PULLT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT,/;"	v	module:KEY
PULLT	pathsample.common.f90	/^     &        SLURMT, INDEXCOSTFUNCTION, CVT, DOST, IMFRQT, CLOSEFILEST, PULLT,/;"	v
PURGICPHI	optim.chdummy.f	/^      SUBROUTINE PURGICPHI(/;"	s
PUSHCUT	optim.key.f90	/^     &        MINMAX, MAXMAX, C6PP, C6MM, C6PM, PUSHCUT,/;"	v	module:KEY
PUSHOFF	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF,/;"	v	module:KEY
PV	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS, PV,/;"	v	module:KEY
PVCONV	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL, PVCONV,/;"	v	module:KEY
PVF	optim.OPTIM.F	75;"	c	subroutine:OPTIM
PVF	optim.PV.f	40;"	c	subroutine:PVOPT
PVF	optim.bfgsts.f	78;"	c	subroutine:BFGSTS
PVF	optim.efol.f90	66;"	c	subroutine:EFOL
PVF	optim.func.f90	54;"	c	subroutine:OPTIM
PVF	optim.greatcirc.f	32;"	c	subroutine:GCLBFGS
PVF	optim.hybridmin.f	46;"	c	subroutine:HYBRIDMIN
PVF	optim.intbfgsts.f	50;"	c	subroutine:INTBFGSTS
PVF	optim.morph.f	41;"	c	subroutine:MORPH
PVF	optim.mylbfgs.f	68;"	c	subroutine:MYLBFGS
PVF	optim.odesd.f	35;"	c	subroutine:ODESD
PVF	optim.oldneb.f	312;"	c	subroutine:NEBBFGS
PVF	optim.twoend.f	40;"	c	subroutine:TWOEND
PVOPT	optim.PV.f	/^      SUBROUTINE PVOPT(/;"	s
PVSTEPS	optim.key.f90	/^     &        NDIIA, NINTV, NGRADIENTS, NZERO, NPOWER, NBFGSMAX1, NBFGSMAX2, MNBFGSMAX1, MNBFGSMAX2, PVSTEPS,/;"	v	module:KEY
PVTOL	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL, PVCONV, PVTOL,/;"	v	module:KEY
PVTS	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS,/;"	v	module:KEY
PYA1	optim.key.f90	/^     &        GBKAPPA, GBKAPPRM, GBMU, GBNU, GBSIGNOT, GBEPSNOT, GBCHI, GBCHIPRM, &$/;"	v	module:KEY
PYA11	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(/;"	v	module:KEY
PYA12	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(/;"	v	module:KEY
PYA2	optim.key.f90	/^     &        PYA1(3), PYA2(/;"	v	module:KEY
PYA21	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(/;"	v	module:KEY
PYA22	optim.key.f90	/^      DOUBLE PRECISION :: PCUTOFF,PYA11(3),PYA21(3),PYA12(3),PYA22(/;"	v	module:KEY
PYBINARYT	optim.key.f90	/^      LOGICAL          :: LJSITE,BLJSITE,LJSITEATTR,PYBINARYT,/;"	v	module:KEY
PYBINARYTYPE1	optim.key.f90	/^      INTEGER          :: MAXINTERACTIONS,PYBINARYTYPE1,/;"	v	module:KEY
PYEPSNOT	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT, PYEPSNOT,/;"	v	module:KEY
PYG	optim.pyg.f90	/^      SUBROUTINE PYG /;"	s
PYGPERIODIC	optim.ljcapsidmodule.f90	/^      SUBROUTINE PYGPERIODIC /;"	s
PYGPERIODICSECDER	optim.ljcapsidmodule.f90	/^SUBROUTINE PYGPERIODICSECDER(/;"	s
PYGPERIODICT	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,/;"	v	module:KEY
PYGSECDER	optim.ljcapsidmodule.f90	/^SUBROUTINE PYGSECDER(/;"	s
PYGT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT,/;"	v	module:KEY
PYMODULE	optim.pymodule.f90	/^MODULE PYMODULE$/;"	m
PYOVERLAPTHRESH	optim.key.f90	/^     &                     PEPSILONATTR(2),PSIGMAATTR(2), PYOVERLAPTHRESH,/;"	v	module:KEY
PYRANDOMSWAP	optim.ljcapsidmodule.f90	/^SUBROUTINE PYRANDOMSWAP(/;"	s
PYREALIGNXYZ	optim.ljcapsidmodule.f90	/^SUBROUTINE PYREALIGNXYZ$/;"	s
PYSIGNOT	optim.key.f90	/^     &        PYA1(3), PYA2(3), PYSIGNOT,/;"	v	module:KEY
PZEXTR	optim.odesd.f	/^      SUBROUTINE PZEXTR(/;"	s
Q0_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,/;"	v	module:amhglobals
Q0_b	optim.amhglobals.f	/^      double precision        width_Qexp_b, Q0_b,/;"	v	module:amhglobals
Q0_inc_a	optim.amhglobals.f	/^     *           Q0_safe_a, Q0_safe_b,$/;"	v	module:amhglobals
Q0_inc_b	optim.amhglobals.f	/^     *           Q0_inc_a,Q0_inc_b,/;"	v	module:amhglobals
Q0_safe_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,Q_weight_a,Q_clip_a,$/;"	v	module:amhglobals
Q0_safe_b	optim.amhglobals.f	/^     *           Q0_safe_a, Q0_safe_b,/;"	v	module:amhglobals
Q2	optim.VRTMCY5f.f90	/^real*8, parameter :: Q2 /;"	v	module:MCY
Q4C	mc.vars.inc.f90	11;"	c
Q4C	mylbfgs.old.f90	48;"	c	subroutine:MYLBFGS
QCONTCUT	pathsample.common.f90	/^      DOUBLE PRECISION QCONTCUT,/;"	v
QDONE	mc.vars.inc.f90	/^      INTEGER ITERATIONS,JACCPREV,BRUN,QDONE,/;"	v
QENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,IMPENERGY,QENERGY,/;"	v	module:MODAMBER
QEXCHH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QEXCHH /;"	v	module:msevb_common
QEXCHO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QEXCHO /;"	v	module:msevb_common
QINTERH	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QINTERH /;"	v	module:msevb_common
QINTERO	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QINTERO /;"	v	module:msevb_common
QMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:GMIN_COMMONS
QMIN	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	program:GMIN
QMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:GMIN_COMMONS
QMINP	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	program:GMIN
QRELONE	pathsample.common.f90	/^     &        BISECTSTEPS, BISECTMAXATTEMPTS, NDIAGEIG, QRELONE,/;"	v
QRELTWO	pathsample.common.f90	/^     &        BISECTSTEPS, BISECTMAXATTEMPTS, NDIAGEIG, QRELONE, QRELTWO,/;"	v
QROTAA	optim.rbperm.f90	/^      SUBROUTINE QROTAA(/;"	s
QROTAA	pathsample.rbperm.f90	/^      SUBROUTINE QROTAA(/;"	s
QROTMAT	optim.rbperm.f90	/^      SUBROUTINE QROTMAT(/;"	s
QROTMAT	pathsample.rbperm.f90	/^      SUBROUTINE QROTMAT(/;"	s
QROTQ	optim.rbperm.f90	/^      SUBROUTINE QROTQ(/;"	s
QROTQ	pathsample.rbperm.f90	/^      SUBROUTINE QROTQ(/;"	s
QSPCFWT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT, RPFIXT, CHECKCONINT, &$/;"	v	module:KEY
QTIP3P_H	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QTIP3P_H /;"	v	module:msevb_common
QTIP3P_O	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: QTIP3P_O /;"	v	module:msevb_common
QTIP4PFT	optim.key.f90	/^     &        QSPCFWT, QTIP4PFT,/;"	v	module:KEY
QUENCH	quench.f90	/^      SUBROUTINE QUENCH(/;"	s
QUENCHNUM	mc.vars.inc.f90	/^      CHARACTER (LEN=20) QUENCHNUM,/;"	v
QUNAME	mc.vars.inc.f90	/^      CHARACTER (LEN=20) QUENCHNUM, QUNAME,/;"	v
QX	optim.modamber.f90	/^      DOUBLE PRECISION  QX(/;"	v	module:MODAMBER
QY	optim.modamber.f90	/^      DOUBLE PRECISION  QX(3),QY(/;"	v	module:MODAMBER
QZ	optim.modamber.f90	/^      DOUBLE PRECISION  QX(3),QY(3),QZ(/;"	v	module:MODAMBER
Q_clip_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,Q_weight_a,Q_clip_a,/;"	v	module:amhglobals
Q_clip_b	optim.amhglobals.f	/^      double precision        width_Qexp_b, Q0_b,Q_weight_b,Q_clip_b$/;"	v	module:amhglobals
Q_ij_a	optim.amhglobals.f	/^       double precision del_r_a(1:AMHmaxsiz),$/;"	v	module:amhglobals
Q_ij_b	optim.amhglobals.f	/^       double precision del_r_b(1:AMHmaxsiz),$/;"	v	module:amhglobals
Q_weight_a	optim.amhglobals.f	/^     *           width_Qexp_a,Q0_a,Q_weight_a,/;"	v	module:amhglobals
Q_weight_b	optim.amhglobals.f	/^      double precision        width_Qexp_b, Q0_b,Q_weight_b,/;"	v	module:amhglobals
Qbiaspoly_a	optim.amhglobals.f	/^     *           biaspoly(1:100),Qbiaspoly_a(/;"	v	module:amhglobals
Qbiaspoly_b	optim.amhglobals.f	/^      double precision   Qbiaspoly_b(/;"	v	module:amhglobals
Qvalue_a	optim.amhglobals.f	/^     *           Q0_inc_a,Q0_inc_b,Qvalue_a,/;"	v	module:amhglobals
Qvalue_b	optim.amhglobals.f	/^     *           Q0_inc_a,Q0_inc_b,Qvalue_a,Qvalue_b$/;"	v	module:amhglobals
R	bln.vars.inc.f90	/^        DOUBLE PRE/;"	v
R	optim.double.f	/^     1                 V(3*N), R,/;"	v
R	optim.modamber.f90	/^      DOUBLE PRE/;"	v	module:MODAMBER
R2	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD(6), R2,/;"	v
RAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(15) :: RAD,/;"	v
RAD	func.f90	/^      SUBROUTINE RAD(/;"	s	module:GMIN
RAD	gmin.func.f90	/^      SUBROUTINE RAD(/;"	s	module:FUNC
RAD	optim.rad.f	/^      SUBROUTINE RAD(/;"	s
RADIFT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT,/;"	v	module:KEY
RADIUS	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS,/;"	v	module:KEY
RADR	func.f90	/^      SUBROUTINE RADR(/;"	s	module:GMIN
RADR	gmin.func.f90	/^      SUBROUTINE RADR(/;"	s	module:FUNC
RADS	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: RADS /;"	v	module:msevb_common
RANDDP	optim.dprand.f	36;"	c	subroutine:SDPRND
RANDDP	optim.dprand.f	80;"	c	function:dprand
RANDDP	pathsample.dprand.f	30;"	c	function:DPRAND
RANDDP	pathsample.sdprnd.f	38;"	c	subroutine:SDPRND
RANDOMCUTOFF	optim.modcharmm.f90	/^      DOUBLE PRECISION :: MAXBFGSB,MAXBFGST,MAXBFGSP,MAXBFGSI,IMINCUT,RANDOMCUTOFF,/;"	v	module:modcharmm
RATECONST_SETUP	pathsample.rateconst_setup.f90	/^      SUBROUTINE RATECONST_SETUP(/;"	s
RATES	optim.connect.f	/^      SUBROUTINE RATES(/;"	s
RATESHORT	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT,/;"	v
RATIOS	optim.commons.f90	/^      LOGICAL REDOPATH, REDOPATHXYZ, RATIOS,/;"	v	module:COMMONS
RBAAT	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST, STOCKSPIN, LOWESTFRQT, &$/;"	v	module:KEY
RBAAT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT, MSSTOCKT, PAHAT, PATCHYDT, STOCKAAT, RBAAT,/;"	v
RBATOMSMAX	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS, ACKLANDID, RBATOMSMAX,/;"	v	module:KEY
RBCOMMINDIST	optim.rigidb.f90	/^      SUBROUTINE RBCOMMINDIST(/;"	s
RBCOMMINDIST	pathsample.rigidb.f90	/^      SUBROUTINE RBCOMMINDIST(/;"	s
RBCUTOFF	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF,/;"	v	module:KEY
RBFRAME	optim.rbperm.f90	/^      SUBROUTINE RBFRAME(/;"	s
RBGROUP	optim.key.f90	/^      INTEGER, ALLOCATABLE :: RBGROUP(/;"	v	module:KEY
RBMINDIST	optim.rigidb.f90	/^      SUBROUTINE RBMINDIST /;"	s
RBMINDIST	pathsample.rigidb.f90	/^      SUBROUTINE RBMINDIST(/;"	s
RBMINDIST2	optim.rigidb.f90	/^      SUBROUTINE RBMINDIST2(/;"	s
RBMINDISTCM	optim.rigidb.f90	/^      SUBROUTINE RBMINDISTCM(/;"	s
RBMINPERMDIST	optim.rbperm.f90	/^      SUBROUTINE RBMINPERMDIST(/;"	s
RBMINPERMDIST	pathsample.rbperm.f90	/^      SUBROUTINE RBMINPERMDIST(/;"	s
RBNEWROTGEOM	optim.rigidb.f90	/^      SUBROUTINE RBNEWROTGEOM(/;"	s
RBNEWROTGEOM	pathsample.rigidb.f90	/^      SUBROUTINE RBNEWROTGEOM(/;"	s
RBNEWROTGEOMMYORIENT	optim.rigidb.f90	/^      SUBROUTINE RBNEWROTGEOMMYORIENT(/;"	s
RBNINGROUP	optim.key.f90	/^      INTEGER, ALLOCATABLE :: RBGROUP(:), RBNINGROUP(/;"	v	module:KEY
RBOPS	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBOPS(/;"	v	module:KEY
RBOPS	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBOPS(/;"	v
RBORIENT	optim.rbperm.f90	/^      SUBROUTINE RBORIENT(/;"	s
RBORIENT	pathsample.rbperm.f90	/^      SUBROUTINE RBORIENT(/;"	s
RBROT	optim.rbperm.f90	/^      SUBROUTINE RBROT(/;"	s
RBROT	pathsample.rbperm.f90	/^      SUBROUTINE RBROT(/;"	s
RBROTMAT	optim.rbperm.f90	/^      SUBROUTINE RBROTMAT(/;"	s
RBROTXZ	optim.rbperm.f90	/^      SUBROUTINE RBROTXZ(/;"	s
RBROTXZ	pathsample.rbperm.f90	/^      SUBROUTINE RBROTXZ(/;"	s
RBSITE	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(/;"	v	module:COMMONS
RBSITE	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(/;"	v
RBSITESORIENT	optim.rbperm.f90	/^      SUBROUTINE RBSITESORIENT(/;"	s
RBSITESORIENT	pathsample.rbperm.f90	/^      SUBROUTINE RBSITESORIENT(/;"	s
RBSITESROTXZ	optim.rbperm.f90	/^      SUBROUTINE RBSITESROTXZ(/;"	s
RBSITESROTXZ	pathsample.rbperm.f90	/^      SUBROUTINE RBSITESROTXZ(/;"	s
RBSORT	optim.minpermrb.f90	/^SUBROUTINE RBSORT(/;"	s
RBSTLA	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(:,:), RBSTLA(/;"	v	module:COMMONS
RBSYMT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT,/;"	v	module:KEY
RBSYMT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT, MSSTOCKT, PAHAT, PATCHYDT, STOCKAAT, RBAAT, RBSYMT /;"	v
RCONST	optim.ljpshift.f	1147;"	c	subroutine:LJPSHIFT
RCONST	optim.ljpshift.f	1272;"	c	subroutine:LJPSHIFTG
RCONST	optim.ljpshift.f	1311;"	c	subroutine:LJPSHIFTS
RCONSTBIN	optim.ljpshift.f	1509;"	c	subroutine:LJPSHIFTBIN2
RCONSTBIN	optim.ljpshift.f	1746;"	c	subroutine:LJPSHIFTGBIN2
RCONSTBIN	optim.ljpshift.f	1800;"	c	subroutine:LJPSHIFTSBIN2
RCONSTBIN	optim.ljpshift.f	320;"	c	subroutine:LJPSHIFTGBIN
RCONSTBIN	optim.ljpshift.f	462;"	c	subroutine:LJPSHIFTSBIN
RCONSTBIN	optim.ljpshift.f	53;"	c	subroutine:LJPSHIFTBIN
RCONSTBIN	optim.ljpshift.f	710;"	c	subroutine:LJPSHIFTBINC
RCONSTBIN	optim.ljpshift.f	906;"	c	subroutine:LJPSHIFTGBINC
RCONSTBIN	optim.ljpshift.f	967;"	c	subroutine:LJPSHIFTSBINC
RCONSTKOB	optim.ljpkob.f	264;"	c	subroutine:LJPKOBG
RCONSTKOB	optim.ljpkob.f	326;"	c	subroutine:LJPKOBS
RCONSTKOB	optim.ljpkob.f	54;"	c	subroutine:LJPKOB
RCOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,TEMPCOORDS,RCOORDS,/;"	v
RCOORDSO	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,TEMPCOORDS,RCOORDS,RCOORDSO$/;"	v
READA	optim.input.f	/^      SUBROUTINE READA(/;"	s
READA	pathsample.input.f	/^      SUBROUTINE READA(/;"	s
READCH	optim.input.f	/^      SUBROUTINE READCH(/;"	s
READCH	pathsample.input.f	/^      SUBROUTINE READCH(/;"	s
READF	optim.input.f	/^      SUBROUTINE READF(/;"	s
READF	pathsample.input.f	/^      SUBROUTINE READF(/;"	s
READHESS	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS,/;"	v	module:KEY
READI	optim.input.f	/^      SUBROUTINE READI(/;"	s
READI	pathsample.input.f	/^      SUBROUTINE READI(/;"	s
READINPUT	pathsample.GT2input.f90	/^     SUBROUTINE READINPUT(/;"	s	module:INPUTMODULE
READK	optim.input.f	/^      SUBROUTINE READK(/;"	s
READK	pathsample.input.f	/^      SUBROUTINE READK(/;"	s
READL	optim.input.f	/^      ENTRY READL(/;"	e	subroutine:READU
READL	pathsample.input.f	/^      ENTRY READL(/;"	e	subroutine:READU
READMINIMA	pathsample.dock.f90	/^SUBROUTINE READMINIMA$/;"	s	module:DOCKMODULE
READMINT	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT, DUMMYRUNT, REWEIGHTT, REGROUPFREET, REGROUPFREEABT, READMINT,/;"	v
READREF	optim.chdummy.f	/^      SUBROUTINE READREF(/;"	s
READREF	pathsample.charmmdump.f	/^      SUBROUTINE READREF(/;"	s
READSNGL	optim.input.f	/^      SUBROUTINE READSNGL(/;"	s
READSNGL	pathsample.input.f	/^      SUBROUTINE READSNGL(/;"	s
READSP	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED, READSP,/;"	v	module:KEY
READU	optim.input.f	/^      SUBROUTINE READU(/;"	s
READU	pathsample.input.f	/^      SUBROUTINE READU(/;"	s
READV	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV,/;"	v	module:KEY
READ_CMD_ARGS	pathsample.read_cmd_args.f90	/^SUBROUTINE READ_CMD_ARGS$/;"	s
REALIGNXYZ	optim.key.f90	/^      LOGICAL          :: PYGPERIODICT,ELLIPSOIDT,LJSITECOORDST,REALIGNXYZ$/;"	v	module:KEY
REALNATOMS	optim.ljcapsidmodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:LJCAPSIDMODULE
REALNATOMS	optim.pymodule.f90	/^ INTEGER          :: I, J, J1, J2, J3, J4, J5, J6, K1, K2, OFFSET, REALNATOMS$/;"	v	module:PYMODULE
REBUILD	optim.chdummy.f	/^      SUBROUTINE REBUILD(/;"	s
REBUILDIMAGE	optim.chdummy.f	/^      SUBROUTINE REBUILDIMAGE(/;"	s
REBUILDNEB	optim.chdummy.f	/^      SUBROUTINE REBUILDNEB(/;"	s
REBUILDSC	optim.modcharmm.f90	/^      DOUBLE PRECISION  :: GUESSTHRESH, REBUILDSC$/;"	v	module:modcharmm
REBUILDSCT	optim.modcharmm.f90	/^      LOGICAL :: FAILT, REBUILDSCT /;"	v	module:modcharmm
REDOBFGSSTEPS	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS,/;"	v	module:KEY
REDOE1	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1,/;"	v	module:KEY
REDOE2	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2,/;"	v	module:KEY
REDOFRAC	optim.key.f90	/^     &        REDOK, REDOFRAC,/;"	v	module:KEY
REDOK	optim.key.f90	/^     &        NEBRESEEDDEL2, INTCONSTRAINTTOL, INTCONSTRAINTDEL, RBCUTOFF, INTCONSTRAINTREP, INTCONSTRAINREPCUT, &$/;"	v	module:KEY
REDOKADD	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD,/;"	v	module:KEY
REDOPATH	optim.commons.f90	/^      LOGICAL REDOPATH,/;"	v	module:COMMONS
REDOPATH1	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1,/;"	v	module:KEY
REDOPATH2	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1, REDOPATH2,/;"	v	module:KEY
REDOPATHNEB	optim.commons.f90	/^      LOGICAL REDOPATH, REDOPATHXYZ, RATIOS, REDOPATHNEB$/;"	v	module:COMMONS
REDOPATHXYZ	optim.commons.f90	/^      LOGICAL REDOPATH, REDOPATHXYZ,/;"	v	module:COMMONS
REDOTSIM	optim.key.f90	/^     &        NRBTRIES, REDOTSIM,/;"	v	module:KEY
REDUCEDBONDLENGTHT	optim.key.f90	/^     &        EFIELDT, BHCHECKENERGYT, REDUCEDBONDLENGTHT,/;"	v	module:KEY
REFCOORD	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD,/;"	v	module:modcharmm
REFIHB	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: REFIHB,/;"	v	module:modcharmm
REFJHB	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: REFIHB, REFJHB,/;"	v	module:modcharmm
REFKHB	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: REFIHB, REFJHB, REFKHB$/;"	v	module:modcharmm
REFLECT	optim.utils.f	/^      SUBROUTINE REFLECT(/;"	s
REFNHB	optim.modcharmm.f90	/^      INTEGER  :: REFNHB$/;"	v	module:modcharmm
REFPPSANGLE	optim.modcharmm.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: REFCOORD, REFPPSANGLE /;"	v	module:modcharmm
REGROUP	pathsample.regroup.f	/^      SUBROUTINE REGROUP(/;"	s
REGROUPFREE	pathsample.regroupfree.f90	/^SUBROUTINE REGROUPFREE$/;"	s
REGROUPFREE2	pathsample.regroupfree2.f90	/^SUBROUTINE REGROUPFREE2(/;"	s
REGROUPFREEABT	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT, DUMMYRUNT, REWEIGHTT, REGROUPFREET, REGROUPFREEABT,/;"	v
REGROUPFREET	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT, DUMMYRUNT, REWEIGHTT, REGROUPFREET,/;"	v
REGROUPFREETHRESH	pathsample.common.f90	/^     &                 GT2RSwitch, GT2Ptol, EUNTRAPTHRESH, PLANCK, REGROUPFREETHRESH,/;"	v
REGROUPPET	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET,/;"	v
REGROUPPETHRESH	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE, PSCALE, TSTHRESH, MAXBARRIER, MAXDOWNBARRIER, REGROUPPETHRESH,/;"	v
REGROUPRATE	pathsample.regrouprate.f90	/^SUBROUTINE REGROUPRATE(/;"	s
REGROUPRATET	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET,/;"	v
REGROUPRATETHRESH	pathsample.common.f90	/^     &                 PERTVALUE, TAGMASS, PABCONV, REGROUPTHRESH, REGROUPRATETHRESH,/;"	v
REGROUPT	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT,/;"	v
REGROUPTHRESH	pathsample.common.f90	/^     &                 PERTVALUE, TAGMASS, PABCONV, REGROUPTHRESH,/;"	v
RELCOCUT	pathsample.common.f90	/^      DOUBLE PRECISION QCONTCUT, RELCOCUT$/;"	v
RELFECOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: RELFELIGAND(:), RELFECOMPLEX(/;"	v	module:DOCKMODULE
RELFELIGAND	pathsample.dock.f90	/^double precision, allocatable :: RELFELIGAND(/;"	v	module:DOCKMODULE
RELFEPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: RELFELIGAND(:), RELFECOMPLEX(:), RELFEPROTEIN(/;"	v	module:DOCKMODULE
REMMIN	optim.connect.f	/^      SUBROUTINE REMMIN(/;"	s
REMMIN2	optim.connect.f	/^      SUBROUTINE REMMIN2(/;"	s
REMOVESP	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY, DIJINITSTARTT, DIJINITCONTT, RETAINSP, REMOVESP,/;"	v
REMOVEUNCONNECTEDT	pathsample.common.f90	/^     &        INTCONSTRAINTT, CHECKCONINT, INTLJT, INTERPCOSTFUNCTION, REMOVEUNCONNECTEDT,/;"	v
REMOVE_UNCONNECTED	pathsample.remove_unconnected.f90	/^      SUBROUTINE REMOVE_UNCONNECTED$/;"	s
REOPT	optim.key.f90	/^     &        DOUBLET, REOPT,/;"	v	module:KEY
REOPTIMISEENDPOINTS	optim.key.f90	/^     &        REPEL,UNRST, NATBT, ANGLEAXIS, DUMPALLPATHS, GOT, REOPTIMISEENDPOINTS,/;"	v	module:KEY
REPARAMETRIZE	optim.growstring.f90	/^  SUBROUTINE REPARAMETRIZE$/;"	s	module:GROWSTRINGUTILS
REPARAMTOL	optim.gsdata.f90	/^  DOUBLE PRECISION :: GSGROWTOL, GSCONV, REPARAMTOL$/;"	k	type:IMGNODE
REPCON	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA, REPCON,/;"	v	module:KEY
REPCON	pathsample.common.f90	/^      DOUBLE PRECISION INTCONSTRAINTTOL, REPCON$/;"	v
REPCUT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(/;"	v	module:KEY
REPCUT	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: REPCUT(/;"	v
REPEL	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS, RKMIN, REPELT/;"	v	module:KEY
REPELFROM	optim.key.f90	/^     &        FIXAFTER, NBOXTS, NREPELTS, REPELFROM,/;"	v	module:KEY
REPELPUSH	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH,/;"	v	module:KEY
REPELSP	optim.repelsp.f	/^      SUBROUTINE REPELSP(/;"	s
REPELTS	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: REPELTS /;"	v	module:KEY
REPELTST	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS, RKMIN, REPELTST,/;"	v	module:KEY
REPI	optim.key.f90	/^      INTEGER, ALLOCATABLE :: REPI(/;"	v	module:KEY
REPI	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: REPI(/;"	v
REPJ	optim.key.f90	/^      INTEGER, ALLOCATABLE :: REPI(:), REPJ(/;"	v	module:KEY
REPJ	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: REPI(:), REPJ(/;"	v
REPORT	optim.input.f	/^      SUBROUTINE REPORT(/;"	s
REPORT	pathsample.input.f	/^      SUBROUTINE REPORT(/;"	s
REPPOW	optim.key.f90	/^      INTEGER, ALLOCATABLE :: ORDERI(:), ORDERJ(:), REPPOW(/;"	v	module:KEY
REPULSE_INTER	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: REPULSE_INTER$/;"	v	module:msevb_common
REREAD	optim.input.f	/^      SUBROUTINE REREAD(/;"	s
REREAD	pathsample.input.f	/^      SUBROUTINE REREAD(/;"	s
RESCALEC6	optim.c60diff.f	/^      SUBROUTINE RESCALEC6(/;"	s
RESIZE	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE,/;"	v	module:KEY
RESLABEL	pathsample.common.f90	/^      CHARACTER(LEN=4), ALLOCATABLE :: RESLABEL(/;"	v
RESLIST	optim.intcommons.f90	/^  CHARACTER*8, ALLOCATABLE :: RESLIST(/;"	v	module:INTCOMMONS
RESNUMBER	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: RESNUMBER(/;"	v
RESSTARTS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: RESSTARTS(/;"	v	module:INTCOMMONS
RESTYP	optim.modunres.f90	/^      CHARACTER(LEN=3) :: RESTYP$/;"	v	module:MODUNRES
RES_TYPE_ALA	optim.key.f90	/^      CHARACTER(LEN=3) :: RES_TYPE_ALA=/;"	v	module:KEY
RETAINSP	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY, DIJINITSTARTT, DIJINITCONTT, RETAINSP,/;"	v
REVERSE	optim.connect.f	/^      SUBROUTINE REVERSE(/;"	s
REVERSEBLOCK	optim.connect.f	/^      SUBROUTINE REVERSEBLOCK(/;"	s
REWEIGHT	pathsample.reweight.f	/^      SUBROUTINE REWEIGHT$/;"	s
REWEIGHTT	pathsample.common.f90	/^     &        BARRIERSHORT, FREEZE, RATESHORT, DUMMYRUNT, REWEIGHTT,/;"	v
RF	optim.gsdata.f90	/^     LOGICAL :: LF, RF /;"	k	type:IMGNODE
RHO	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR, RHO,/;"	v	module:COMMONS
RHOC10H	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H,/;"	v	module:KEY
RHOC20H	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10, RHOC20H,/;"	v	module:KEY
RHOCC0	optim.key.f90	/^     &        DBEPSBB, DBEPSAB, DBSIGBB, DBSIGAB, DBPMU, MAXMAXBARRIER, &$/;"	v	module:KEY
RHOCC10	optim.key.f90	/^     &        RHOCC0, RHOCC10,/;"	v	module:KEY
RHOCC20	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,/;"	v	module:KEY
RHOCH0	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0,/;"	v	module:KEY
RHOCH10	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10,/;"	v	module:KEY
RHOCH20	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20, RHOCH0, RHOC10H, RHOCH10, RHOC20H, RHOCH20,/;"	v	module:KEY
RHOHH0	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0,/;"	v	module:KEY
RHOHH10	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10,/;"	v	module:KEY
RHOHH20	optim.key.f90	/^     &        RHOCC0, RHOCC10, RHOCC20,  RHOHH0, RHOHH10, RHOHH20,/;"	v	module:KEY
RHO_POT	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION RHO_POT(/;"	f
RHO_POT_D	optim.Ackland_metals.f90	/^       DOUBLE PRECISION FUNCTION RHO_POT_D(/;"	f
RHO_POT_DD	optim.Ackland_metals.f90	/^        DOUBLE PRECISION  FUNCTION RHO_POT_DD(/;"	f
RIGHTFRONT	optim.gsdata.f90	/^  TYPE(IMGNODE), POINTER :: FIRST, LAST, LEFTFRONT, RIGHTFRONT$/;"	k	type:IMGNODE
RIGIDBODY	optim.key.f90	/^     &        INDEXT, LANCZOST, NOSHIFT, GAMESSUS, GAMESSUK, PVTS, RIGIDBODY,/;"	v	module:KEY
RIGIDBODY	pathsample.common.f90	/^     &        PERMDIST, PERMISOMER, RIGIDBODY,/;"	v
RINDEX	optim.commons.f90	/^      INTEGER :: RINDEX /;"	v	module:COMMONS
RINGPOLYMERT	optim.key.f90	/^     &        LOCALPERMDIST, DOCROSSCHECK, REDOKADD, REDOPATH1, REDOPATH2, ANGLEAXIS2, &$/;"	v	module:KEY
RINGPOLYMERT	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,CLEAR,ECHO,AMBER,AMBERT,NABT,RINGPOLYMERT$/;"	v	program:OPTIM4
RINGS	optim.intcommons.f90	/^  INTEGER, ALLOCATABLE :: CENTERS(:,:), RINGS(/;"	v	module:INTCOMMONS
RKCK	optim.odesd.f	/^      SUBROUTINE RKCK(/;"	s
RKMIN	optim.key.f90	/^     &        DOUBLET, REOPT, PARALLEL, LINEMIN, FIXD, KEEPINDEX, BSMIN, PRINTPTS, RKMIN,/;"	v	module:KEY
RKQS	optim.odesd.f	/^      SUBROUTINE RKQS(/;"	s
RK_R	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R,/;"	v
RK_R	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE, RK_R,/;"	v	module:KEY
RK_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R, RK_THETA$/;"	v
RK_THETA	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC, PRESS, MAXERISE, RK_R, RK_THETA,/;"	v	module:KEY
RM	optim.ttm3f.f90	/^double precision, dimension(:,:), allocatable :: RM$/;"	v	module:ttm3f_mod
RMASS	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS,/;"	v
RMASS	commons.f90	/^DOUBLE PRECISION ::     RMASS(/;"	v	module:GMIN_COMMONS
RMAT	optim.vars.f90	/^DOUBLE PRECISION :: RMAT(/;"	v	module:VARS
RMDFAS	optim.rigidb.f90	/^      SUBROUTINE RMDFAS(/;"	s
RMDRVT	optim.rigidb.f90	/^      SUBROUTINE RMDRVT(/;"	s
RMIvec	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:LJCAPSIDMODULE
RMIvec	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: RMIvec(/;"	v	module:PYMODULE
RMSD	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,/;"	v
RMSNEB	optim.modneb.f90	/^      DOUBLE PRECISION :: RMSNEB$/;"	v	module:MODNEB
RMSTWO	optim.modtwoend.f90	/^      DOUBLE PRECISION :: FSTART, FINC, RMSTWO,/;"	v	module:MODTWOEND
RND	commons.f90	/^DOUBLE PRECISION ::     RND(/;"	v	module:GMIN_COMMONS
RO	optim.modamber.f90	/^      DOUBLE PRECISION KR(42,42),RO(/;"	v	module:MODAMBER
ROHEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ROHEQ /;"	v	module:msevb_common
ROOEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: ROOEQ /;"	v	module:msevb_common
ROTAMERT	optim.modamber9.f90	/^      LOGICAL :: ROTAMERT$/;"	v	module:modamber9
ROTATE	optim.specialfuncts.f90	/^    SUBROUTINE ROTATE(/;"	s	module:SPFUNCTS
ROTATEANGLAXIS	optim.specialfuncts.f90	/^    SUBROUTINE ROTATEANGLAXIS(/;"	s	module:SPFUNCTS
ROTATEZERO	optim.specialfuncts.f90	/^    SUBROUTINE ROTATEZERO(/;"	s	module:SPFUNCTS
ROTATM	optim.minpermdistrbcom.f90	/^      SUBROUTINE ROTATM(/;"	s
ROTATM	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE ROTATM(/;"	s
ROTATMXZ	optim.minpermdistrbcom.f90	/^      SUBROUTINE ROTATMXZ(/;"	s
ROTATMXZ	pathsample.minpermdistrbcom.f90	/^      SUBROUTINE ROTATMXZ(/;"	s
ROTCENTRE	optim.modamber9.f90	/^      INTEGER :: ROTMAXCHANGE, ROTCENTRE$/;"	v	module:modamber9
ROTCON	optim.rotcon.f	/^      SUBROUTINE ROTCON(/;"	s
ROTCUTOFF	optim.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW, ROTCUTOFF /;"	v	module:modamber9
ROTD	optim.rotd.f	/^      SUBROUTINE ROTD(/;"	s
ROTDERIV	optim.rotd.f	/^      SUBROUTINE ROTDERIV(/;"	s
ROTENERGY	optim.rotd.f	/^      SUBROUTINE ROTENERGY(/;"	s
ROTGEOM	optim.mindist.f	/^      SUBROUTINE ROTGEOM(/;"	s
ROTGEOM	pathsample.mindist.f	/^      SUBROUTINE ROTGEOM(/;"	s
ROTM	optim.rotm.f	/^      SUBROUTINE ROTM(/;"	s
ROTMAT	optim.rigidb.f90	/^      SUBROUTINE ROTMAT(/;"	s
ROTMAT	pathsample.rigidb.f90	/^      SUBROUTINE ROTMAT(/;"	s
ROTMAX	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,TRANSMAX,PROT,ROTMAX$/;"	v	module:modcharmm
ROTMAXCHANGE	optim.modamber9.f90	/^      INTEGER :: ROTMAXCHANGE,/;"	v	module:modamber9
ROTOCCUW	optim.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT, ROTOCCUW,/;"	v	module:modamber9
ROTPSELECT	optim.modamber9.f90	/^      DOUBLE PRECISION :: ROTPSELECT,/;"	v	module:modamber9
ROTXZ	optim.myorient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTXZ	pathsample.myorient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROTXZ	pathsample.orient.f	/^      SUBROUTINE ROTXZ(/;"	s
ROW_PTR	pathsample.NGTmem.f90	/^   INTEGER, ALLOCATABLE :: ROW_PTR(/;"	v	module:NGTMEM
RPBETA	optim.key.f90	/^     &        REDOK, REDOFRAC, D1INIT, D2INIT, REDOE1, REDOE2, RPBETA,/;"	v	module:KEY
RPCYCLICT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT,/;"	v	module:KEY
RPDOF	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF,/;"	v	module:KEY
RPFIXT	optim.key.f90	/^     &        RINGPOLYMERT, SDT, BOWMANT, PULLT, RBSYMT, CONPOTT, GRAD4T, RPCYCLICT, RPFIXT,/;"	v	module:KEY
RPIMAGES	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES,/;"	v	module:KEY
RPMASSES	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RPMASSES(/;"	v	module:KEY
RPRO	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,/;"	v	module:modcharmm
RPSYSTEM	optim.key.f90	/^      CHARACTER(LEN=5) :: RPSYSTEM$/;"	v	module:KEY
RSTAR	optim.modamber.f90	/^      DOUBLE PRECISION RSTAR,/;"	v	module:MODAMBER
RTEST	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST,/;"	v	module:KEY
RUNTYPE	optim.OPTIM.F	81;"	c	subroutine:OPTIM
RUNTYPE	optim.func.f90	60;"	c	subroutine:OPTIM
RUNTYPE	optim.geopt.f	65;"	c	subroutine:GEOPT
RUNTYPE	optim.greatcirc.f	36;"	c	subroutine:GCLBFGS
RUNTYPE	optim.keyword.f	100;"	c	subroutine:KEYWORD
RUNTYPE	optim.meccano.f90	263;"	c	subroutine:MECBFGS
RUNTYPE	optim.mylbfgs.f	72;"	c	subroutine:MYLBFGS
RUNTYPE	optim.path.f	88;"	c	subroutine:PATH
RUNTYPE	optim.unmeccano.f90	229;"	c	subroutine:UNMECBFGS
RVAT	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS) :: RVAT,/;"	v
RVATO	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS) :: RVAT, RVATO$/;"	v
RWBINWIDTH	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH, OMEGA, EINC, RWBINWIDTH,/;"	v
RWEMAX	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH, OMEGA, EINC, RWBINWIDTH, RWEMAX,/;"	v
RWEMIN	pathsample.common.f90	/^     &                 PAIRTHRESH, MAXBREAK, PRODTHRESH, PBTHRESH, OMEGA, EINC, RWBINWIDTH, RWEMAX, RWEMIN,/;"	v
RWG	optim.intlbfgs.f90	/^SUBROUTINE RWG(/;"	s
RWPROB	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RWPROB(/;"	v
RZEXTR	optim.odesd.f	/^      SUBROUTINE RZEXTR(/;"	s
ReadInpFile	optim.binaryio.f90	/^     subroutine ReadInpFile(/;"	s	module:BinaryIO
RealList	pathsample.GT2data.f90	/^     type RealList$/;"	t	module:DataModule
Rg_biaspoly	optim.amhglobals.f	/^      double precision Rg_biaspoly(/;"	v	module:amhglobals
S	bln.vars.inc.f90	/^        DOUBLE PRECISI/;"	v
SAVECOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,/;"	v
SAVEF	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SAVES(:), SAVEF(/;"	v	module:KEY
SAVELENGTH	pathsample.common.f90	/^      INTEGER NMINA, NMINB, NMIN, NTS, SAVELENGTH,/;"	v
SAVES	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SAVES(/;"	v	module:KEY
SAVESTATE	pathsample.savestate.f90	/^MODULE SAVESTATE$/;"	m
SBEG	optim.mylapack.f	/^      FUNCTION SBEG(/;"	f
SCALEFAC	mc.vars.inc.f90	/^      DOUBLE PRECISION :: SCALEFAC,/;"	v
SCDIFF	optim.scdiff.f	/^      SUBROUTINE SCDIFF(/;"	s
SCDOT	optim.utils.f	/^      SUBROUTINE SCDOT(/;"	s
SCHCK1	optim.mylapack.f	/^      SUBROUTINE SCHCK1(/;"	s
SCHCK2	optim.mylapack.f	/^      SUBROUTINE SCHCK2(/;"	s
SCHCK3	optim.mylapack.f	/^      SUBROUTINE SCHCK3(/;"	s
SCHCK4	optim.mylapack.f	/^      SUBROUTINE SCHCK4(/;"	s
SCHCK5	optim.mylapack.f	/^      SUBROUTINE SCHCK5(/;"	s
SCL	optim.scl.f	/^      SUBROUTINE SCL(/;"	s
SCLOCAL	optim.modunres.f90	51;"	c	module:MODUNRES
SCORE_QUEUE	optim.key.f90	/^      LOGICAL :: SCORE_QUEUE$/;"	v	module:KEY
SCREENC	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SCREENC	mc.vars.inc.f90	/^      DOUBLE PRECISION :: SCALEFAC, SCREENC(/;"	v
SDCHARGE	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN, SDCHARGE,/;"	v	module:KEY
SDHYDROGEN	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN, SDHYDROGEN,/;"	v	module:KEY
SDIFF	optim.mylapack.f	/^      FUNCTION SDIFF(/;"	f
SDOXYGEN	optim.key.f90	/^     &        NRBTRIES, REDOTSIM, REDOBFGSSTEPS, RPIMAGES, RPDOF, SDOXYGEN,/;"	v	module:KEY
SDPRND	optim.dprand.f	/^        SUBROUTINE SDPRND /;"	s
SDPRND	pathsample.sdprnd.f	/^        SUBROUTINE SDPRND(/;"	s
SDT	optim.key.f90	/^     &        RINGPOLYMERT, SDT,/;"	v	module:KEY
SDUMMY	pathsample.main.F	/^      CHARACTER(LEN=2) :: SDUMMY$/;"	v	program:PATHSAMPLE
SDUMMY	pathsample.main.f90	/^      CHARACTER(LEN=2) :: SDUMMY$/;"	v	program:PATHSAMPLE
SDwater	optim.SD.f90	/^module SDwater$/;"	m
SECDFTB	optim.dftb.f	/^      SUBROUTINE SECDFTB(/;"	s
SECDIAG	optim.secdiag.f	/^      SUBROUTINE SECDIAG(/;"	s
SECONDMIN	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN,/;"	v
SECSI	optim.tight.f	/^      SUBROUTINE SECSI(/;"	s
SEQ	optim.key.f90	/^      INTEGER :: SEQ(/;"	v	module:KEY
SEQ	pathsample.main.F	/^      INTEGER :: SEQ(/;"	v	program:PATHSAMPLE
SEQ	pathsample.main.f90	/^      INTEGER :: SEQ(/;"	v	program:PATHSAMPLE
SETCARTATMS	optim.intcoords.f90	/^      SUBROUTINE SETCARTATMS$/;"	s	module:INTCUTILS
SETCENTRE	centre.f	/^      SUBROUTINE SETCENTRE(/;"	s
SETCHIRAL	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST, UACHIRAL, SETCHIRAL$/;"	v	module:modamber9
SETDIHE	optim.chdummy.f	/^      SUBROUTINE SETDIHE$/;"	s
SETDIHEAM	optim.amber9dummy.f90	/^subroutine SETDIHEAM(/;"	s
SETS	optim.key.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v	module:KEY
SETS	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: SETS(/;"	v
SETSEED	optim.chdummy.f	/^      SUBROUTINE SETSEED$/;"	s
SETUP	pathsample.setup.f	/^      SUBROUTINE SETUP$/;"	s
SETUPAMB	optim.amber9dummy.f90	/^SUBROUTINE SETUPAMB(/;"	s
SETUP_SIS	pathsample.setup_sis.f	/^      SUBROUTINE SETUP_SIS$/;"	s
SGBMV	optim.mylapack.f	/^      SUBROUTINE SGBMV(/;"	s
SGDETACHNODE	pathsample.GT2.f90	/^     SUBROUTINE SGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
SGDETACHNODE	pathsample.GT2.save.f90	/^     SUBROUTINE SGDETACHNODE(/;"	s	module:GRAPHTRANSFORMATIONMODULE
SGEMV	optim.mylapack.f	/^      SUBROUTINE SGEMV(/;"	s
SGER	optim.mylapack.f	/^      SUBROUTINE SGER(/;"	s
SGTOutput	pathsample.GT2.f90	/^     subroutine SGTOutput /;"	s	module:GRAPHTRANSFORMATIONMODULE
SHIFTABLE	pathsample.common.f90	/^      LOGICAL, ALLOCATABLE :: SHIFTABLE(/;"	v
SHIFTED	optim.key.f90	/^     &        TOSIC6, TOSIPOL, FIXIMAGE, DFTBT, CHECKCONT, SHIFTED,/;"	v	module:KEY
SHIFTH	optim.shifth.f	/^      SUBROUTINE SHIFTH(/;"	s
SHIFTHTH	optim.thomson.f	/^      SUBROUTINE SHIFTHTH(/;"	s
SHIFTL	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(/;"	v	module:KEY
SHIFTLAN	optim.key.f90	/^     &        MFRACTION1, MFRACTION2, MALPHA2, ACCLAN, SHIFTLAN,/;"	v	module:KEY
SHIFTRIGID	optim.rigidb.f90	/^      SUBROUTINE SHIFTRIGID /;"	s
SHIFTSTOCK	optim.stock.f	/^      SUBROUTINE SHIFTSTOCK(/;"	s
SHIFTV	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV,/;"	v	module:KEY
SHIFTZERO	optim.specialfuncts.f90	/^    SUBROUTINE SHIFTZERO(/;"	s	module:SPFUNCTS
SHORTCUT	optim.connect.f	/^      SUBROUTINE SHORTCUT(/;"	s
SHORTCUTT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT, SHORTCUTT,/;"	v
SIAZ	optim.siaz.f	/^      SUBROUTINE SIAZ(/;"	s
SIDECHAIN	optim.modcharmm.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: PHIPSI,OMEGAC,SIDECHAIN,/;"	v	module:modcharmm
SIGMA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA,/;"	v
SIGMA	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: SIGMA /;"	v	module:msevb_common
SIGMA_MIX	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: SIGMA_MIX /;"	v	module:msevb_common
SIO2	optim.SiO2.f	/^      SUBROUTINE SIO2(/;"	s
SIO2C6	optim.SiO2.f	/^      SUBROUTINE SIO2C6(/;"	s
SIO2C6T	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T,/;"	v	module:KEY
SIO2GRAD	optim.SiO2.f	/^      SUBROUTINE SIO2GRAD(/;"	s
SIO2IND	optim.SiO2.f	/^      SUBROUTINE SIO2IND(/;"	s
SIO2NDHESS	optim.SiO2.f	/^      SUBROUTINE SIO2NDHESS(/;"	s
SIO2NSHESS	optim.SiO2.f	/^      SUBROUTINE SIO2NSHESS(/;"	s
SIO2POL	optim.SiO2.f	/^      SUBROUTINE SIO2POL(/;"	s
SIO2SEC	optim.SiO2.f	/^      SUBROUTINE SIO2SEC(/;"	s
SIO2T	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T,/;"	v	module:KEY
SISBETA	pathsample.common.f90	/^      DOUBLE PRECISION :: SISMU, SISKAPPA, SISBETA$/;"	v
SISKAPPA	pathsample.common.f90	/^      DOUBLE PRECISION :: SISMU, SISKAPPA,/;"	v
SISMU	pathsample.common.f90	/^      DOUBLE PRECISION :: SISMU,/;"	v
SIST	pathsample.common.f90	/^      LOGICAL :: SIST$/;"	v
SITE	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)), allocatable :: SITE(/;"	k	type:rigidbodyPotential
SITE	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, allocatable :: SITE(/;"	k	type:rigidbodyPotential
SITEPOS	optim.rbperm.f90	/^      SUBROUTINE SITEPOS(/;"	s
SITEPOS	pathsample.rbperm.f90	/^      SUBROUTINE SITEPOS(/;"	s
SKIPBL	optim.input.f	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SKIPBL	optim.main.f90	/^      LOGICAL VARIABLES,CASTEP,ONETEP,CP2K,DFTP,CPMD,END,CAT,SKIPBL,/;"	v	program:OPTIM4
SKIPBL	pathsample.input.f	/^      LOGICAL SKIPBL,/;"	v	block data:INBLK
SLURMT	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST, LOWESTFRQT, BISECTT, NGTDISCONNECTALL, ANGLEAXIS2, TFOLDT, &$/;"	v
SMAKE	optim.mylapack.f	/^      SUBROUTINE SMAKE(/;"	s
SMALL_B	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: SMALL_B /;"	v	module:msevb_common
SMAX	pathsample.common.f90	/^      INTEGER :: SMAX,/;"	v
SMESSG	optim.mylapack.f	/^      SUBROUTINE SMESSG(/;"	s
SMINATOMA	optim.modamber9.f90	/^INTEGER SMINATOMA,/;"	v	module:modamber9
SMINATOMB	optim.modamber9.f90	/^INTEGER SMINATOMA, SMINATOMB$/;"	v	module:modamber9
SMINDISTFINISH	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH,/;"	v	module:modamber9
SMINDISTSTART	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC, SMINDISTSTART,/;"	v	module:modamber9
SMINK	optim.modamber9.f90	/^DOUBLE PRECISION SMINK,/;"	v	module:modamber9
SMINKCURRENT	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC, SMINDISTSTART, SMINDISTFINISH, SMINKCURRENT$/;"	v	module:modamber9
SMINKINC	optim.modamber9.f90	/^DOUBLE PRECISION SMINK, SMINKINC,/;"	v	module:modamber9
SO	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,/;"	v	module:amhglobals
SOPEN	optim.mylapack.f	/^      SUBROUTINE SOPEN(/;"	s
SORT	pathsample.sort.f	/^      SUBROUTINE SORT(/;"	s
SORT2	pathsample.sort.f	/^      SUBROUTINE SORT2(/;"	s
SORT3	pathsample.Dijkstra.f90	/^      SUBROUTINE SORT3(/;"	s
SORT4	pathsample.sort.f	/^      SUBROUTINE SORT4(/;"	s
SORTN	optim.bfgsts.f	/^      SUBROUTINE SORTN(/;"	s
SORTXYZ	optim.sortxyz.f	/^      SUBROUTINE SORTXYZ(/;"	s
SPARSEGRAPHTRANSFORMATION	pathsample.GT2.f90	/^     SUBROUTINE SPARSEGRAPHTRANSFORMATION$/;"	s	module:GRAPHTRANSFORMATIONMODULE
SPARSEGRAPHTRANSFORMATION	pathsample.GT2.save.f90	/^     SUBROUTINE SPARSEGRAPHTRANSFORMATION$/;"	s	module:GRAPHTRANSFORMATIONMODULE
SPECIMPPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION GENTORSPARAMS(100,6),SPECTORSPARAMS(100,14),SPECIMPPARAMS(/;"	v	module:MODAMBER
SPECTORSPARAMS	optim.modamber.f90	/^      DOUBLE PRECISION GENTORSPARAMS(100,6),SPECTORSPARAMS(/;"	v	module:MODAMBER
SPFUNCTS	optim.specialfuncts.f90	/^MODULE SPFUNCTS$/;"	m
SRUTU	optim.unresoptim.f	54;"	c	subroutine:UENERGY
SRUTU	optim.unresoptim.f	93;"	c	subroutine:INTGRAD
SSBMV	optim.mylapack.f	/^      SUBROUTINE SSBMV(/;"	s
SSHPARALLEL	pathsample.nodes.f90	/^     LOGICAL :: SSHPARALLEL=/;"	v	module:NODES
SSHSUBMIT	pathsample.nodes.f90	/^     SUBROUTINE SSHSUBMIT(/;"	s	module:NODES
SSHSUBMITFRQ	pathsample.dock.f90	/^SUBROUTINE SSHSUBMITFRQ(/;"	s	module:DOCKMODULE
SSHSUBMITGMIN	pathsample.dock.f90	/^SUBROUTINE SSHSUBMITGMIN(/;"	s	module:DOCKMODULE
SSPMV	optim.mylapack.f	/^      SUBROUTINE SSPMV(/;"	s
SSPR	optim.mylapack.f	/^      SUBROUTINE SSPR(/;"	s
SSPR2	optim.mylapack.f	/^      SUBROUTINE SSPR2(/;"	s
SSYMV	optim.mylapack.f	/^      SUBROUTINE SSYMV(/;"	s
SSYR	optim.mylapack.f	/^      SUBROUTINE SSYR(/;"	s
SSYR2	optim.mylapack.f	/^      SUBROUTINE SSYR2(/;"	s
START	optim.modtwoend.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: FIN, START /;"	v	module:MODTWOEND
STARTFROMPATH	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT, ANGLEAXIS, TAGT, CHARMMT, AMBERT, STARTFROMPATH,/;"	v
STARTLINDH	optim.intcommons.f90	/^  INTEGER:: STARTLINDH$/;"	v	module:INTCOMMONS
STARTMINA	pathsample.common.f90	/^     &        MAXCONN, KAPPA, ISEED, NTAG, NDIHE, NCPU, GTINT, NCONNMAX, BESTPATHLENGTH, NGLY, &$/;"	v
STARTMINB	pathsample.common.f90	/^     &        STARTMINA, STARTMINB,/;"	v
STARTRES	optim.modunres.f90	/^      INTEGER :: STARTRES(/;"	v	module:MODUNRES
STARTTRIPLES	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS, ADDPATH, NGTT, GTT, GT2T, TRIPLES, &$/;"	v
STARTUP	optim.connect.f	/^      SUBROUTINE STARTUP(/;"	s
STBMV	optim.mylapack.f	/^      SUBROUTINE STBMV(/;"	s
STBSV	optim.mylapack.f	/^      SUBROUTINE STBSV(/;"	s
STCHRG	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RBSITE(:,:), RBSTLA(:,:), STCHRG(/;"	v	module:COMMONS
STD_ORIENT	optim.connect.f	/^      SUBROUTINE STD_ORIENT(/;"	s
STD_ORIENT2D	optim.connect.f	/^      SUBROUTINE STD_ORIENT2D(/;"	s
STEEREDMINT	optim.modamber9.f90	/^LOGICAL STEEREDMINT,/;"	v	module:modamber9
STEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP,/;"	v	module:GMIN_COMMONS
STEST	bln.vars.inc.f90	/^        LOGICAL GTEST, STEST$/;"	v
STEST	optim.double.f	/^      LOGICAL GTEST, STEST$/;"	v
STOCK	optim.stock.f	/^      SUBROUTINE STOCK(/;"	s
STOCKAAT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT, UNIAXT, STOCKAAT,/;"	v	module:KEY
STOCKAAT	pathsample.common.f90	/^     &        DBPT, DBPTDT, EFIELDT, MSSTOCKT, PAHAT, PATCHYDT, STOCKAAT,/;"	v
STOCKGHAA	optim.stockghaa.f90	/^      SUBROUTINE STOCKGHAA /;"	s
STOCKLAMBDA	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU, STOCKLAMBDA,/;"	v	module:KEY
STOCKMAXSPIN	optim.key.f90	/^     &        BBRM, BBRSTEPS, NORDER, NSECDIAG, STOCKMAXSPIN,/;"	v	module:KEY
STOCKMU	optim.key.f90	/^     &        FREEZETOL, DESMAXEJUMP, DESMAXAVGE, STOCKMU,/;"	v	module:KEY
STOCKSPIN	optim.key.f90	/^     &        BBRSDMT, AMBERT, NABT, DUMPSTRUCTURES, ORDERPARAMT, BHINTERPUSELOWEST, STOCKSPIN,/;"	v	module:KEY
STOCKT	optim.key.f90	/^     &        GREATCIRCLET, DESMDEBUG, GROWSTRINGT, FREEZENODEST, STOCKT,/;"	v	module:KEY
STOCKZTOL	optim.key.f90	/^     &        BHSFRAC, HMCEIG, HMMXSTP, HMEVMAX, BBRGAM, BBREPS, BBRSIGMA1, BBRSIGMA2, BBRALPHA, BBRCONV, STOCKZTOL,/;"	v	module:KEY
STOPD	optim.connect.f	2040;"	c	subroutine:ADDMIN
STOPD	optim.connect.f	54;"	c	subroutine:CONNECT
STOPD	optim.connect.f	852;"	c	subroutine:REMMIN
STOPD	optim.keyword.f	114;"	c	subroutine:KEYWORD
STPMAX	lbfgs.f	/^      DOUBLE PRECISION GTOL,STPMIN,STPMAX$/;"	v	block data:LB2
STPMAX	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: STPMAX /;"	v	module:COMMONS
STPMIN	lbfgs.f	/^      DOUBLE PRECISION GTOL,STPMIN,/;"	v	block data:LB2
STPMV	optim.mylapack.f	/^      SUBROUTINE STPMV(/;"	s
STPSV	optim.mylapack.f	/^      SUBROUTINE STPSV(/;"	s
STRING	optim.utils.f	/^      CHARACTER(LEN=4) FUNCTION STRING(/;"	f
STRINGLEN	optim.gsdata.f90	/^  DOUBLE PRECISION :: STRINGLEN /;"	k	type:IMGNODE
STRINGS	optim.OPTIM.F	77;"	c	subroutine:OPTIM
STRINGS	optim.bbrsdm.f90	14;"	c	subroutine:BBRSDM
STRINGS	optim.dumpit.f	30;"	c	subroutine:DUMPIT
STRINGS	optim.efol.f90	64;"	c	subroutine:EFOL
STRINGS	optim.func.f90	56;"	c	subroutine:OPTIM
STRINGS	optim.greatcirc.f	40;"	c	subroutine:GCLBFGS
STRINGS	optim.meccano.f90	267;"	c	subroutine:MECBFGS
STRINGS	optim.mylbfgs.f	76;"	c	subroutine:MYLBFGS
STRINGS	optim.potential.f	72;"	c	subroutine:POTENTIAL
STRINGS	optim.symmetry.f	60;"	c	subroutine:SYMMETRY
STRINGS	optim.unmeccano.f90	233;"	c	subroutine:UNMECBFGS
STRMV	optim.mylapack.f	/^      SUBROUTINE STRMV(/;"	s
STRSV	optim.mylapack.f	/^      SUBROUTINE STRSV(/;"	s
SUBMITFRQJOBS	pathsample.dock.f90	/^SUBROUTINE SUBMITFRQJOBS(/;"	s	module:DOCKMODULE
SUBMITGMINJOBS	pathsample.dock.f90	/^SUBROUTINE SUBMITGMINJOBS(/;"	s	module:DOCKMODULE
SUBMITOPTIMJOB	pathsample.submitoptimjob.f90	/^SUBROUTINE SUBMITOPTIMJOB(/;"	s
SUMMARYT	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST, SUMMARYT,/;"	v	module:KEY
SWAP2ATONCE	optim.intcoords.f90	/^      SUBROUTINE SWAP2ATONCE(/;"	s	module:INTCUTILS
SWAP3ATONCE	optim.intcoords.f90	/^SUBROUTINE SWAP3ATONCE(/;"	s	module:INTCUTILS
SWAP4ATONCE	optim.intcoords.f90	/^SUBROUTINE SWAP4ATONCE(/;"	s	module:INTCUTILS
SWAP5ATONCE	optim.intcoords.f90	/^      SUBROUTINE SWAP5ATONCE(/;"	s	module:INTCUTILS
SWAPNODE	pathsample.swapnode.f90	/^SUBROUTINE SWAPNODE(/;"	s
SWLATMIN	optim.SW.f	/^      SUBROUTINE SWLATMIN(/;"	s
SWTHREE	optim.SW.f	/^      SUBROUTINE SWTHREE(/;"	s
SWTWO	optim.SW.f	/^      SUBROUTINE SWTWO(/;"	s
SWTWOG	optim.SW.f	/^      SUBROUTINE SWTWOG(/;"	s
SWTWOS	optim.SW.f	/^      SUBROUTINE SWTWOS(/;"	s
SYMCUT	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT,/;"	v	module:KEY
SYMINF	optim.syminf.f90	/^MODULE SYMINF$/;"	m
SYMMETRY	optim.symmetry.f	/^      SUBROUTINE SYMMETRY(/;"	s
SYS	optim.OPTIM.F	89;"	c	subroutine:OPTIM
SYS	optim.connect.f	1782;"	c	subroutine:TSSEARCH
SYS	optim.connect.f	2037;"	c	subroutine:ADDMIN
SYS	optim.connect.f	2925;"	c	subroutine:ISNEWTS
SYS	optim.connect.f	51;"	c	subroutine:CONNECT
SYS	optim.connect.f	760;"	c	subroutine:SHORTCUT
SYS	optim.connect.f	957;"	c	subroutine:CLEANUP
SYS	optim.efol.f90	52;"	c	subroutine:EFOL
SYS	optim.func.f90	68;"	c	subroutine:OPTIM
SYS	optim.greatcirc.f	46;"	c	subroutine:GCLBFGS
SYS	optim.growstring.f90	50;"	c	subroutine:GROWSTRING
SYS	optim.growstring.f90	737;"	c	subroutine:REPARAMETRIZE
SYS	optim.intcoords.f90	1826;"	c	subroutine:OLD_INTMINPERM
SYS	optim.intcoords.f90	250;"	c	subroutine:INTMINPERM
SYS	optim.intcoords.f90	45;"	c	subroutine:INTINTERPOLATE
SYS	optim.key.f90	/^      CHARACTER(LEN=80) :: SYS,/;"	v	module:KEY
SYS	optim.main.f90	/^      CHARACTER(LEN=80) :: SYS$/;"	v	program:OPTIM4
SYS	optim.meccano.f90	43;"	c	subroutine:MECCANO
SYS	optim.morph.f	43;"	c	subroutine:MORPH
SYS	optim.mylbfgs.f	82;"	c	subroutine:MYLBFGS
SYS	optim.oldneb.f	41;"	c	subroutine:OLDNEB
SYS	optim.path.f	93;"	c	subroutine:PATH
SYS	optim.unresconnectsections.f	558;"	c	subroutine:UNRESGUESSMINSEC
SYS	optim.unresguessts.f	438;"	c	subroutine:UNRESGUESSMIN
SortC	optim.sortc.f	/^      SUBROUTINE SortC /;"	s
T	optim.SD.f90	/^pure function T(/;"	f	module:SDwater
T	optim.modamber.f90	/^      INTE/;"	v	module:MODAMBER
T12FAC	optim.key.f90	/^     &        OMEGA, GALPHA, MALPHA1, FOH, FIH, FTD, FD5H, T12FAC,/;"	v	module:KEY
TAGFAC	optim.commons.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TAGFAC(/;"	v	module:COMMONS
TAGFAC	pathsample.common.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TAGFAC(/;"	v
TAGMASS	pathsample.common.f90	/^     &                 PERTVALUE, TAGMASS,/;"	v
TAGNUM	optim.commons.f90	/^      INTEGER, ALLOCATABLE :: TAGNUM(/;"	v	module:COMMONS
TAGNUM	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: TAGNUM(/;"	v
TAGT	optim.commons.f90	/^      LOGICAL TAGT,/;"	v	module:COMMONS
TAGT	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD, BULKT, ANGLEAXIS, TAGT,/;"	v
TAKESTEP	func.f90	/^SUBROUTINE TAKESTEP$/;"	s
TAKESTEP	gmin.func.f90	/^SUBROUTINE TAKESTEP$/;"	s
TAKESTEPAMDIHED	optim.amber9dummy.f90	/^subroutine  TAKESTEPAMDIHED(/;"	s
TAKESTEPAMM	optim.amber9dummy.f90	/^subroutine TAKESTEPAMM(/;"	s
TAKESTEPCH	optim.chdummy.f	/^      SUBROUTINE TAKESTEPCH(/;"	s
TANTYPE	optim.gsdata.f90	/^  INTEGER :: TANTYPE$/;"	k	type:IMGNODE
TARFL	optim.key.f90	/^      CHARACTER(LEN=5) :: TARFL$/;"	v	module:KEY
TARFL	pathsample.main.F	/^      CHARACTER(LEN=5) :: TARFL$/;"	v	program:PATHSAMPLE
TARFL	pathsample.main.f90	/^      CHARACTER(LEN=5) :: TARFL$/;"	v	program:PATHSAMPLE
TCHECK	optim.tcheck.f	/^      SUBROUTINE TCHECK(/;"	s
TCONNECTDIST	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH, TPFOLD, TTFOLD, TGT, TDIJKSTRA, TCONNECTDIST,/;"	v
TDIJKSTRA	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH, TPFOLD, TTFOLD, TGT, TDIJKSTRA,/;"	v
TDT	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT,/;"	v	module:KEY
TEIPS	optim.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,/;"	v	module:modamber9
TEMP	commons.f90	/^DOUBLE PRECISION TEMP,/;"	v	module:GMIN_COMMONS
TEMPCOORDS	mc.vars.inc.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD,SAVECOORDS,BESTCOORDS,TEMPCOORDS,/;"	v
TEMPERATURE	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE, TEMPERATURE,/;"	v
TEMPPARAM	optim.modamber9.f90	/^      DOUBLE PRECISION, PARAMETER :: TEMPPARAM /;"	v	module:modamber9
TEMPSTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=120) :: TEMPSTRING$/;"	v	module:NODES
TENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,/;"	v	module:MODAMBER
TEST	optim.input.f	810;"	c	subroutine:REPORT
TEST	pathsample.input.f	804;"	c	subroutine:REPORT
TEST1	pathsample.common.f90	/^      LOGICAL YESNO, TEST1,/;"	v
TEST2	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2,/;"	v
TFGRAD	optim.tosifumi.f	/^      SUBROUTINE TFGRAD(/;"	s
TFIND	optim.tosifumi.f	/^      SUBROUTINE TFIND(/;"	s
TFOLD	pathsample.Pfold.f90	/^SUBROUTINE TFOLD$/;"	s
TFOLDT	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST, LOWESTFRQT, BISECTT, NGTDISCONNECTALL, ANGLEAXIS2, TFOLDT,/;"	v
TFOLDTHRESH	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES, NGTSWITCH, NTFOLD, TOMEGA, TFOLDTHRESH,/;"	v
TFSEC	optim.tosifumi.f	/^      SUBROUTINE TFSEC(/;"	s
TGT	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(:), GRAD(:), TGT(/;"	k	type:IMGNODE
TGT	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH, TPFOLD, TTFOLD, TGT,/;"	v
THETA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  THETA$/;"	v	module:MODAMBER
THETA	optim.modunres.f90	/^      DOUBLE PRECISION :: THETA,/;"	v	module:MODUNRES
THETAEQ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: THETAEQ /;"	v	module:msevb_common
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA, THETA_0$/;"	v
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 /;"	v
THOMSON	optim.thomson.f	/^      SUBROUTINE THOMSON(/;"	s
THOMSONT	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT,/;"	v	module:KEY
TIGHTE	optim.tight.f	/^      SUBROUTINE TIGHTE(/;"	s
TIGHTG	optim.tight.f	/^      SUBROUTINE TIGHTG(/;"	s
TIM	optim.gsdata.f90	/^  INTEGER :: TIM /;"	k	type:IMGNODE
TIME	mc.vars.inc.f90	/^      DOUBLE PRECISION ::       EBEST,RMSD,EPPREV,TIME,/;"	v
TIMELIMIT	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS, TIMELIMIT,/;"	v	module:KEY
TINIT	pathsample.main.F	/^      DOUBLE PRECISION TINIT,/;"	v	program:PATHSAMPLE
TINIT	pathsample.main.f90	/^      DOUBLE PRECISION TINIT,/;"	v	program:PATHSAMPLE
TINY	optim.gsdata.f90	/^  DOUBLE PRECISION, PARAMETER :: TINY=/;"	k	type:IMGNODE
TINY	optim.modamber.f90	/^      DOUBLE PRECISION TINY$/;"	v	module:MODAMBER
TIPID	optim.key.f90	/^     &        NNREPULSIVE, NEBRESEEDPOW1, NEBRESEEDPOW2, NCONSTRAINT, NENDHESS, ACKLANDID, RBATOMSMAX, &$/;"	v	module:KEY
TIPIO	optim.tip.f	/^      SUBROUTINE TIPIO(/;"	s
TIPnP	optim.tip.f	/^      SUBROUTINE TIPnP(/;"	s
TKSHORTESTPATHS	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH, TPFOLD, TTFOLD, TGT, TDIJKSTRA, TCONNECTDIST, TKSHORTESTPATHS /;"	v
TLANGV	optim.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,/;"	v	module:modamber9
TMPCOORDS	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TMPCOORDS(/;"	v	program:GMIN
TNEW	pathsample.main.F	/^      DOUBLE PRECISION TINIT, TNEW,/;"	v	program:PATHSAMPLE
TNEW	pathsample.main.f90	/^      DOUBLE PRECISION TINIT, TNEW,/;"	v	program:PATHSAMPLE
TNORM	optim.gsdata.f90	/^     DOUBLE PRECISION :: TNORM,/;"	k	type:IMGNODE
TO	optim.modamber.f90	/^      DOUBLE PRECISION KT(42,42,42),TO(/;"	v	module:MODAMBER
TOLD	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD,/;"	v	module:KEY
TOLE	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE,/;"	v	module:KEY
TOMEGA	pathsample.common.f90	/^     &                 BISECTMINDIST, BISECTMAXENERGY, NKMCCYCLES, NGTSWITCH, NTFOLD, TOMEGA,/;"	v
TOMEGAC	optim.modcharmm.f90	/^      LOGICAL :: TOMEGAC,/;"	v	module:modcharmm
TOP	optim.modamber.f90	/^      DOUBLE PRECISION  TOP,/;"	v	module:MODAMBER
TOPPOINTER	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERMIN(:), TOPPOINTER(/;"	v
TOPPOINTERSAVE	pathsample.savestate.f90	/^      INTEGER, ALLOCATABLE :: TOPPOINTERSAVE(/;"	v	module:SAVESTATE
TORSHELL	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,ANGLEHELL,TORSHELL,/;"	v	module:MODAMBER
TOSI	optim.key.f90	/^     &        PGRAD, VALUEST, ADMT, BFGSMINT, BFGSTST, CHECKINDEX, TOSI,/;"	v	module:KEY
TOSIC6	optim.key.f90	/^     &        BFGSSTEP, BULKT, HUPDATE, NOHESS, READV, NOIT, THOMSONT, SIO2T, SIO2C6T, BISECTT, BISECTDEBUG, &$/;"	v	module:KEY
TOSIFUMI	optim.tosifumi.f	/^      SUBROUTINE TOSIFUMI(/;"	s
TOSIFUMIC6	optim.tosifumi.f	/^      SUBROUTINE TOSIFUMIC6(/;"	s
TOSIFUMIPOL	optim.tosifumi.f	/^      SUBROUTINE TOSIFUMIPOL(/;"	s
TOSIPOL	optim.key.f90	/^     &        TOSIC6, TOSIPOL,/;"	v	module:KEY
TOT	mc.vars.inc.f90	10;"	c
TOTALE	pathsample.common.f90	/^      DOUBLE PRECISION EDIFFTOL, IDIFFTOL, GEOMDIFFTOL, PFMEAN, TOTALE,/;"	v
TOTALJOBSTRING	pathsample.nodes.f90	/^     CHARACTER(LEN=1000) :: TOTALJOBSTRING$/;"	v	module:NODES
TOTANG	optim.intcommons.f90	/^  INTEGER :: TOTBOND, TOTANG,/;"	v	module:INTCOMMONS
TOTBOND	optim.intcommons.f90	/^  INTEGER :: TOTBOND,/;"	v	module:INTCOMMONS
TOTDIH	optim.intcommons.f90	/^  INTEGER :: TOTBOND, TOTANG, TOTDIH,/;"	v	module:INTCOMMONS
TOTENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,/;"	v	module:MODAMBER
TOTRES	optim.intcommons.f90	/^  INTEGER :: TOTBOND, TOTANG, TOTDIH, TOTRES!/;"	v	module:INTCOMMONS
TOTSTEPS	optim.gsdata.f90	/^  INTEGER :: MAXTOTSTEPS,/;"	k	type:IMGNODE
TPFOLD	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH, TPFOLD,/;"	v
TRAD	optim.key.f90	/^      DOUBLE PRECISION :: TRAD,/;"	v	module:KEY
TRANSBACK	optim.chdummy.f	/^      SUBROUTINE TRANSBACK(/;"	s
TRANSBACKDELTA	optim.chdummy.f	/^      SUBROUTINE TRANSBACKDELTA(/;"	s
TRANSFORM	optim.chdummy.f	/^      SUBROUTINE TRANSFORM(/;"	s
TRANSITION	mc.f90	/^      SUBROUTINE TRANSITION(/;"	s
TRANSMAX	optim.modcharmm.f90	/^      DOUBLE PRECISION :: RPRO,PTRANS,TRANSMAX,/;"	v	module:modcharmm
TRAPK	optim.key.f90	/^     &        INTLJTOL, INTLJDEL, INTLJEPS, IMSEPMIN, IMSEPMAX, TRAPK$/;"	v	module:KEY
TRIGUNITY	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: TRIGUNITY /;"	v	module:msevb_common
TRIPLES	pathsample.common.f90	/^     &        KMCT, UNRST, KMCCOMMITT, REGROUPT, REGROUPRATET, REGROUPPET, NOPOINTS, ADDPATH, NGTT, GTT, GT2T, TRIPLES,/;"	v
TRYAGAIN	optim.connect.f	/^      SUBROUTINE TRYAGAIN(/;"	s
TRYAGAINRESET	optim.connect.f	/^      SUBROUTINE TRYAGAINRESET(/;"	s
TRYNEB	optim.modcharmm.f90	/^      LOGICAL :: TRYNEB,/;"	v	module:modcharmm
TSATTEMPT	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: HORDERTS(:), PLUS(:), MINUS(:), POINTERM(:), POINTERP(:), TSATTEMPT(/;"	v
TSDOUBLE	pathsample.tsdouble.f90	/^SUBROUTINE TSDOUBLE$/;"	s
TSEGUESS	pathsample.setup.f	/^      DOUBLE PRECISION FUNCTION TSEGUESS(/;"	f
TSFOUNDTYPE	optim.intlbfgs.f90	/^TYPE TSFOUNDTYPE$/;"	t	subroutine:INTLBFGS
TSFOUNDTYPE	optim.intlbfgslj.f90	/^TYPE TSFOUNDTYPE$/;"	t	subroutine:INTLBFGSLJ
TSFVIBGUESS	pathsample.setup.f	/^      DOUBLE PRECISION FUNCTION TSFVIBGUESS(/;"	f
TSGLD	optim.modamber9.f90	/^      LOGICAL TSGLD,/;"	v	module:modamber9
TSIDECHAIN	optim.modcharmm.f90	/^      LOGICAL :: TOMEGAC,TSIDECHAIN /;"	v	module:modcharmm
TSSEARCH	optim.connect.f	/^      SUBROUTINE TSSEARCH(/;"	s
TSSEARCH	pathsample.tssearch.f	/^      SUBROUTINE TSSEARCH(/;"	s
TSTART	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS, TIMELIMIT, TSTART,/;"	v	module:KEY
TSTHRESH	pathsample.common.f90	/^     &                 ORDERPARAM, BOXLX, BOXLY, BOXLZ, DSCALE, PSCALE, TSTHRESH,/;"	v
TSTRING	optim.main.f90	/^      CHARACTER FNAME*80, TSTRING*/;"	v	program:OPTIM4
TSUMMARY	optim.OPTIM.F	/^      SUBROUTINE TSUMMARY$/;"	s
TSUMMARY	optim.func.f90	/^      SUBROUTINE TSUMMARY$/;"	s
TTDONE	optim.modtwoend.f90	/^      LOGICAL :: TTDONE$/;"	v	module:MODTWOEND
TTFOLD	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH, TPFOLD, TTFOLD,/;"	v
TTSSEARCH	pathsample.common.f90	/^      DOUBLE PRECISION TTSSEARCH,/;"	v
TVIPS	optim.modamber9.f90	/^      LOGICAL TSGLD,TLANGV,TEIPS,TVIPS$/;"	v	module:modamber9
TWISTCH	optim.chdummy.f	/^      SUBROUTINE TWISTCH(/;"	s
TWISTDIHE	optim.chdummy.f	/^      SUBROUTINE TWISTDIHE(/;"	s
TWISTDIHET	optim.modcharmm.f90	/^      LOGICAL :: CHRMMT,TWISTDIHET,/;"	v	module:modcharmm
TWISTTYPE	optim.modcharmm.f90	/^      INTEGER :: TWISTTYPE,/;"	v	module:modcharmm
TWOD	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH, BINARY, AMBER, READHESS, MOVIE, NORESET, TWOD,/;"	v	module:KEY
TWOD	pathsample.common.f90	/^      LOGICAL YESNO, TEST1, TEST2, DEBUG, PRINTT, ADDPT, TWOD,/;"	v
TWODFUNC	optim.2Dfunc.f	/^      SUBROUTINE TWODFUNC(/;"	s
TWOEND	optim.twoend.f	/^      SUBROUTINE TWOEND(/;"	s
TWOENDS	optim.key.f90	/^     &        VARIABLES, FIELDT, OHT, IHT, TDT, D5HT, TWOENDS,/;"	v	module:KEY
TWOEVAL	optim.key.f90	/^      DOUBLE PRECISION :: TRAD, RESIZE, JZ, PUSHOFF, TOLD, TOLE, PCUT, DAMP, RADIUS, TWOEVAL,/;"	v	module:KEY
TWOPI	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: TWOPI=/;"	v
TWOPI	optim.intcommons.f90	/^  DOUBLE PRECISION, PARAMETER :: PI=3.141592653589793D0, TWOPI /;"	v	module:INTCOMMONS
TW_DIFFP	optim.modamber9.f90	/^double precision, dimension(:), allocatable :: TW_DIFFP$/;"	v	module:modamber9
TW_SIDECHAIN	optim.modamber9.f90	/^integer, dimension(:), allocatable :: TW_SIDECHAIN$/;"	v	module:modamber9
T_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg,/;"	v	module:amhglobals
UACHIRAL	optim.modamber9.f90	/^      LOGICAL GOODSTRUCTURE1, GOODSTRUCTURE2, AMBERENERGIEST, UACHIRAL,/;"	v	module:modamber9
UBONDS	optim.intcommons.f90	/^  INTEGER :: NUBONDS=/;"	v	module:INTCOMMONS
UEDITRGYR	optim.unrescalcdihe.f	/^      SUBROUTINE UEDITRGYR(/;"	s
UENERGY	optim.unresoptim.f	/^      SUBROUTINE UENERGY(/;"	s
UMIN	pathsample.common.f90	/^      INTEGER, PARAMETER :: UMIND/;"	v
UMINDATA	pathsample.common.f90	/^      INTEGER, PARAMETER :: UMINDATA=/;"	v
UNCONNECTEDS	pathsample.common.f90	/^      CHARACTER(LEN=2) UNCONNECTEDS$/;"	v
UNEWREAD	optim.unresdump.f	/^      SUBROUTINE UNEWREAD(/;"	s
UNGUESSPATH	optim.unguesspath.f90	/^SUBROUTINE UNGUESSPATH(/;"	s
UNIAXGETPATHLENGTH	optim.rigidb.f90	/^SUBROUTINE UNIAXGETPATHLENGTH(/;"	s
UNIAXT	optim.key.f90	/^     &        RBAAT, DBPT, DBPTDT, LWOTPT, GBT, GBDT, MSSTOCKT, NCAPT, NTIPT, PAHAT, PATCHYDT, PYGT, RADIFT, UNIAXT,/;"	v	module:KEY
UNMAKEGRADMEC	optim.unmeccano.f90	/^SUBROUTINE UNMAKEGRADMEC(/;"	s
UNMAXRES	optim.modunres.f90	/^      INTEGER :: UNMAXRES,/;"	v	module:MODUNRES
UNMAXRES2	optim.modunres.f90	/^      INTEGER :: UNMAXRES, UNMAXRES2,/;"	v	module:MODUNRES
UNMECBFGS	optim.unmeccano.f90	/^SUBROUTINE UNMECBFGS(/;"	s
UNMECCANO	optim.unmeccano.f90	/^SUBROUTINE UNMECCANO(/;"	s
UNREADREF	optim.unrescalcdihe.f	/^      SUBROUTINE UNREADREF(/;"	s
UNRESCALCDIHE	optim.unrescalcdihe.f	/^      SUBROUTINE UNRESCALCDIHE(/;"	s
UNRESCALCDIHEREF	optim.unrescalcdihe.f	/^      SUBROUTINE UNRESCALCDIHEREF(/;"	s
UNRESCALCDIHESEC	optim.unresconnectsections.f	/^      SUBROUTINE UNRESCALCDIHESEC(/;"	s
UNRESCALCRGYR	optim.unrescalcdihe.f	/^      SUBROUTINE UNRESCALCRGYR(/;"	s
UNRESDIHENEB	optim.unresnebguessts.f	/^      SUBROUTINE UNRESDIHENEB(/;"	s
UNRESDUMP2	optim.unresdump.f	/^      SUBROUTINE UNRESDUMP2(/;"	s
UNRESDUMP2	pathsample.unresdump.f	/^      SUBROUTINE UNRESDUMP2(/;"	s
UNRESDUMP3	optim.unresdump.f	/^      SUBROUTINE UNRESDUMP3(/;"	s
UNRESGETDIHEDIST	optim.unresnebguessts.f	/^      SUBROUTINE UNRESGETDIHEDIST(/;"	s
UNRESGUESSMIN	optim.unresguessts.f	/^      SUBROUTINE UNRESGUESSMIN(/;"	s
UNRESGUESSMINSEC	optim.unresconnectsections.f	/^      SUBROUTINE UNRESGUESSMINSEC(/;"	s
UNRESGUESSTS	optim.unresguessts.f	/^      SUBROUTINE UNRESGUESSTS(/;"	s
UNRESGUESSTSSEC	optim.unresconnectsections.f	/^      SUBROUTINE UNRESGUESSTSSEC(/;"	s
UNRESMASS	optim.modunres.f90	87;"	c	module:MODUNRES
UNRESREAD	pathsample.unresdump.f	/^      SUBROUTINE UNRESREAD(/;"	s
UNRSETDIHE	optim.unressetdihe.f	/^      SUBROUTINE UNRSETDIHE$/;"	s
UNRSETZSYMATMASS	optim.unresoptim.f	/^      SUBROUTINE UNRSETZSYMATMASS$/;"	s
UNRSGETBEE	optim.unrestransform.f	/^      SUBROUTINE UNRSGETBEE(/;"	s
UNRSPERTDIHE	optim.unrestwist.f	/^      SUBROUTINE UNRSPERTDIHE(/;"	s
UNRST	optim.key.f90	/^     &        REPEL,UNRST,/;"	v	module:KEY
UNRST	pathsample.common.f90	/^     &        KMCT, UNRST,/;"	v
UNRSTWISTALL	optim.unrestwist.f	/^      SUBROUTINE UNRSTWISTALL(/;"	s
UNRSTWISTDIHE	optim.unrestwist.f	/^      SUBROUTINE UNRSTWISTDIHE(/;"	s
UNTRAPT	pathsample.common.f90	/^     &        EXPCOSTFUNCTION, COPYOPTIMT, CALCORDERT, CONNECTREGIONT, SHORTCUTT, MERGEDBT, UNTRAPT,/;"	v
UPCASE	pathsample.input.f	/^      SUBROUTINE UPCASE(/;"	s
UPDATEDC	optim.unresoptim.f	/^      SUBROUTINE UPDATEDC$/;"	s
UPDATENBONDS	optim.chdummy.f	/^      SUBROUTINE UPDATENBONDS(/;"	s
UPPERCASE	optim.input.f	/^      SUBROUTINE UPPERCASE(/;"	s
UREFCOORD	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: UREFCOORD,/;"	v	module:MODUNRES
UREFPPSANGLE	optim.modunres.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:) :: UREFCOORD,UREFPPSANGLE /;"	v	module:MODUNRES
URINGS	optim.intcommons.f90	/^  INTEGER :: NURINGS=/;"	v	module:INTCOMMONS
USECART	optim.intcommons.f90	/^  LOGICAL, ALLOCATABLE :: BACKBONE(:), USECART(/;"	v	module:INTCOMMONS
USEPAIRSFILE	pathsample.common.f90	/^      CHARACTER(LEN=80) USEPAIRSFILE$/;"	v
USEPAIRSMIN	pathsample.common.f90	/^      INTEGER, ALLOCATABLE :: USEPAIRSMIN(/;"	v
USEPAIRST	pathsample.common.f90	/^     &        DUMMYTST, DOCKT, DSTAGE(6), USEPAIRST,/;"	v
USEPARFILE	optim.intcommons.f90	/^  LOGICAL :: USEPARFILE /;"	v	module:INTCOMMONS
USERNAME	pathsample.nodes.f90	/^     CHARACTER(LEN=80) :: USERNAME$/;"	v	module:NODES
UTS	pathsample.common.f90	/^      INTEGER, PARAMETER :: UMINDATA=11, UTSD/;"	v
UTSDATA	pathsample.common.f90	/^      INTEGER, PARAMETER :: UMINDATA=11, UTSDATA=/;"	v
V	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD/;"	v
VADD	optim.utils.f	/^      SUBROUTINE VADD(/;"	s
VALUEST	optim.key.f90	/^     &        PGRAD, VALUEST,/;"	v	module:KEY
VAR	optim.modunres.f90	54;"	c	module:MODUNRES
VARIABLE	optim.gsdata.f90	/^    LOGICAL :: VARIABLE /;"	k	type:IMGNODE
VARIABLES	optim.key.f90	/^     &        GAUSSIAN, CADPAC, PRESSURE, FTEST, DCHECK, CP2K, DFTP, CPMD, CPMDC, FREEZERES, DF1T, &$/;"	v	module:KEY
VARIABLES	optim.main.f90	/^      LOGICAL VARIABLES,/;"	v	program:OPTIM4
VARS	optim.vars.f90	/^MODULE VARS$/;"	m
VAT	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO, VAT,/;"	v	module:GMIN_COMMONS
VATO	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO, VAT, VATO$/;"	v	module:GMIN_COMMONS
VBL	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,/;"	v	module:MODUNRES
VBL0	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,VBLINV2,VBL_CIS,VBL0$/;"	v	module:MODUNRES
VBLINV	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,/;"	v	module:MODUNRES
VBLINV2	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,VBLINV2,/;"	v	module:MODUNRES
VBL_CIS	optim.modunres.f90	/^      DOUBLE PRECISION :: DSC,VBL,VBLINV,VBLINV2,VBL_CIS,/;"	v	module:MODUNRES
VD	optim.double.f	/^      DOUBLE PRECISION X(3*N), VD(/;"	v
VDUMP	optim.vdump.f	/^      SUBROUTINE VDUMP(/;"	s
VDWA	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:,:) ::  R,VDWA,/;"	v	module:MODAMBER
VDWB	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:,:) ::  R,VDWA,VDWB$/;"	v	module:MODAMBER
VDWE	optim.modamber.f90	/^      DOUBLE PRECISION VDWR(42),VDWE(/;"	v	module:MODAMBER
VDWENERGY	optim.modamber.f90	/^      DOUBLE PRECISION  TOTENERGY,BENERGY,TENERGY,PENERGY,ANSWER,IMPENERGY,QENERGY,VDWENERGY$/;"	v	module:MODAMBER
VDWR	optim.modamber.f90	/^      DOUBLE PRECISION VDWR(/;"	v	module:MODAMBER
VECCHK	optim.vecck.f90	/^       DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: VECCHK$/;"	v	module:VECCK
VECCK	optim.vecck.f90	/^MODULE VECCK$/;"	m
VECNORM	optim.utils.f	/^      SUBROUTINE VECNORM(/;"	s
VECS	optim.intlbfgs.f90	/^     DOUBLE PRECISION,POINTER :: VECS(/;"	k	type:TSFOUNDTYPE
VECS	optim.intlbfgslj.f90	/^     DOUBLE PRECISION,POINTER :: VECS(/;"	k	type:TSFOUNDTYPE
VECTORST	optim.key.f90	/^      LOGICAL :: DTEST, MASST, RTEST, EFSTEPST, VECTORST,/;"	v	module:KEY
VERSIONTEMP	pathsample.main.F	/^      INTEGER J1, NSIZE, NWORST, NAVAIL, NMINSAVE, VERSIONTEMP$/;"	v	program:PATHSAMPLE
VERSIONTEMP	pathsample.main.f90	/^      INTEGER J1, NSIZE, NWORST, NAVAIL, NMINSAVE, VERSIONTEMP$/;"	v	program:PATHSAMPLE
VIEW	optim.pahagh.f90	/^      SUBROUTINE VIEW(/;"	s
VIJ	optim.msevb_common.f90	/^  DOUBLE PRECISION, PARAMETER :: VIJ /;"	v	module:msevb_common
VIJEXCH	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: VIJEXCH$/;"	v	module:msevb_common
VMIN	tr.f90	/^      DOUBLE PRECISION VMIN$/;"	v
VPOT	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION VPOT(/;"	f
VPOT_D	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION VPOT_D(/;"	f
VPOT_DD	optim.Ackland_metals.f90	/^        DOUBLE PRECISION FUNCTION VPOT_DD(/;"	f
VSTAT	optim.utils.f	/^      SUBROUTINE VSTAT(/;"	s
VT	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VT(/;"	v	module:KEY
VXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD,/;"	v
W	optim.double.f	/^     1                 V(3*N), R, G(2,2), H, W,/;"	v
WALESAMH_INITIAL	optim.amhdummy.f	/^      SUBROUTINE WALESAMH_INITIAL(/;"	s
WALESAMH_INTERFACE	optim.amhdummy.f	/^      SUBROUTINE WALESAMH_INTERFACE(/;"	s
WATER_INTER_COULOMB	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: WATER_INTER_COULOMB$/;"	v	module:msevb_common
WC	optim.wc.f90	/^MODULE WC$/;"	m
WCOMPLEX	pathsample.dock.f90	/^double precision, allocatable :: WLIGAND(:), WCOMPLEX(/;"	v	module:DOCKMODULE
WEL	optim.welch.f	/^      SUBROUTINE WEL(/;"	s
WELCH	optim.key.f90	/^     &        ALLSTEPS, ALLVECTORS, MWVECTORS, WELCH,/;"	v	module:KEY
WENERGY	optim.welch.f	/^      SUBROUTINE WENERGY(/;"	s
WGRAD	optim.welch.f	/^      SUBROUTINE WGRAD(/;"	s
WHICHMIN	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN,/;"	v
WHICHORDER	optim.key.f90	/^      CHARACTER(LEN=4), ALLOCATABLE :: WHICHORDER(/;"	v	module:KEY
WHICHTS	pathsample.common.f90	/^     &        STARTMINA, STARTMINB, WHICHMIN, SECONDMIN, WHICHTS,/;"	v
WLIGAND	pathsample.dock.f90	/^double precision, allocatable :: WLIGAND(/;"	v	module:DOCKMODULE
WORD	optim.main.f90	/^      CHARACTER WORD*/;"	v	program:OPTIM4
WORKINGDIRECTORY	pathsample.nodes.f90	/^     CHARACTER(LEN=100) :: WORKINGDIRECTORY$/;"	v	module:NODES
WPROTEIN	pathsample.dock.f90	/^double precision, allocatable :: WLIGAND(:), WCOMPLEX(:), WPROTEIN(/;"	v	module:DOCKMODULE
WRITEPROFILE	optim.intlbfgs.f90	/^SUBROUTINE WRITEPROFILE(/;"	s
Warranty	optim.wc.f90	/^          subroutine Warranty$/;"	s	module:WC
WriteOutFile	optim.binaryio.f90	/^     subroutine WriteOutFile(/;"	s	module:BinaryIO
X	optim.double.f	/^      DOUBLE PRECISION X(/;"	v
X	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,/;"	v	module:MODAMBER
XDGUESS	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM, ALPHAP, ALPHAM, PHIG, SHIFTV, SHIFTL(6), DGUESS, XDGUESS,/;"	v	module:KEY
XERCNT	optim.dqag.f	/^      SUBROUTINE XERCNT /;"	s
XERCNT	pathsample.dsort.f	/^      SUBROUTINE XERCNT /;"	s
XERHLT	optim.dqag.f	/^      SUBROUTINE XERHLT /;"	s
XERHLT	pathsample.dsort.f	/^      SUBROUTINE XERHLT /;"	s
XERMSG	optim.dqag.f	/^      SUBROUTINE XERMSG /;"	s
XERMSG	pathsample.dsort.f	/^      SUBROUTINE XERMSG /;"	s
XERPRN	optim.dqag.f	/^      SUBROUTINE XERPRN /;"	s
XERPRN	pathsample.dsort.f	/^      SUBROUTINE XERPRN /;"	s
XERSVE	optim.dqag.f	/^      SUBROUTINE XERSVE /;"	s
XERSVE	pathsample.dsort.f	/^      SUBROUTINE XERSVE /;"	s
XGETUA	optim.dqag.f	/^      SUBROUTINE XGETUA /;"	s
XGETUA	pathsample.dsort.f	/^      SUBROUTINE XGETUA /;"	s
XINT	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(:), GRAD(:), TGT(:), XINT(/;"	k	type:IMGNODE
XLB3	optim.changep.f	38;"	c	subroutine:CHANGEP
XLOC	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,/;"	v	module:MODUNRES
XMAXERISE	optim.key.f90	/^     &        CONVU, CONVR, SYMCUT, MXSTP, GFRACTION, CEIG, REPELPUSH, XMAXERISE,/;"	v	module:KEY
XMINA	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RPMASSES(:), XMINA(/;"	v	module:KEY
XMINB	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: RPMASSES(:), XMINA(:), XMINB(/;"	v	module:KEY
XMUL	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL,/;"	v	module:KEY
XMUPDATE	optim.key.f90	/^     &        NEVL, NEVS, NHCHECK, NHUP=0, NSTHUP, INTHUP, XMUL, NSTEPMIN, LSYS, MUPDATE, XMUPDATE,/;"	v	module:KEY
XMYLBFGS	optim.xmylbfgs.f	/^      SUBROUTINE XMYLBFGS(/;"	s
XPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_/;"	v
XPD_2	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_2,/;"	v
XQM	optim.key.f90	/^     &        APP, AMM, APM, XQP,XQM,/;"	v	module:KEY
XQP	optim.key.f90	/^     &        APP, AMM, APM, XQP,/;"	v	module:KEY
XROT	optim.modunres.f90	/^      DOUBLE PRECISION :: C,DC,XLOC,XROT,/;"	v	module:MODUNRES
XX	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: XX,/;"	v	module:msevb_common
XYZ	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZ(/;"	k	type:IMGNODE
XYZCART	optim.gsdata.f90	/^     DOUBLE PRECISION, POINTER :: XYZCART(/;"	k	type:IMGNODE
Y	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,Y,/;"	v	module:MODAMBER
YESNO	pathsample.common.f90	/^      LOGICAL YESNO,/;"	v
YESNO	pathsample.nodes.f90	/^     LOGICAL :: SSHPARALLEL=.FALSE., YESNO$/;"	v	module:NODES
YY	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: XX, YY,/;"	v	module:msevb_common
Z	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION (:) ::  X,Y,Z,/;"	v	module:MODAMBER
Z1	optim.Zetterling.f	/^      SUBROUTINE Z1(/;"	s
Z2	optim.Zetterling.f	/^      SUBROUTINE Z2(/;"	s
ZALIGNTEST	optim.stock.f	/^      LOGICAL FUNCTION ZALIGNTEST(/;"	f
ZDUM	optim.main.f90	/^      CHARACTER ZDUM*/;"	v	program:OPTIM4
ZSTAR	optim.commons.f90	/^      DOUBLE PRECISION :: ZSTAR,/;"	v	module:COMMONS
ZSYM	optim.commons.f90	/^      CHARACTER(LEN=5), ALLOCATABLE, DIMENSION(:) :: ZSYM /;"	v	module:COMMONS
ZSYM	pathsample.common.f90	/^      CHARACTER(LEN=5) ZSYM$/;"	v
ZSYMBOL	pathsample.common.f90	/^      CHARACTER(LEN=2), ALLOCATABLE ::  ZSYMBOL(/;"	v
ZSYMCOMPLEX	pathsample.dock.f90	/^character(len=4), allocatable :: ZSYMLIGAND(:),ZSYMCOMPLEX(/;"	v	module:DOCKMODULE
ZSYMLIGAND	pathsample.dock.f90	/^character(len=4), allocatable :: ZSYMLIGAND(/;"	v	module:DOCKMODULE
ZSYMPROTEIN	pathsample.dock.f90	/^character(len=4), allocatable :: ZSYMLIGAND(:),ZSYMCOMPLEX(:),ZSYMPROTEIN(/;"	v	module:DOCKMODULE
ZUNDEL_F	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ZUNDEL_F$/;"	v	module:msevb_common
ZUNDEL_G	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ZUNDEL_G$/;"	v	module:msevb_common
ZWK	optim.zwk.f90	/^MODULE ZWK$/;"	m
ZWORK	optim.zwk.f90	/^       DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: ZWORK$/;"	v	module:ZWK
ZZ	optim.msevb_common.f90	/^  DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: XX, YY, ZZ$/;"	v	module:msevb_common
a	optim.modamber.f90	/^      INTEGER  a,/;"	v	module:MODAMBER
a	optim.ttm3f.f90	/^double precision :: a,/;"	v	module:mnasa_mod
aCCaCD	optim.ttm3f.f90	/^double precision, parameter :: aDD=0.175d0, aCCaCD=/;"	v	module:ttm3f_mod
aDD	optim.ttm3f.f90	/^double precision, parameter :: aDD=/;"	v	module:ttm3f_mod
aa1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: aa1,/;"	v	module:MODAMBER
aa2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: aa1,aa2,/;"	v	module:MODAMBER
aa3	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: aa1,aa2,aa3$/;"	v	module:MODAMBER
ab_c_of_n_new	optim.amhglobals.f	/^      logical alpha_c_of_n,ab_c_of_n_old,ab_c_of_n_new,/;"	v	module:amhglobals
ab_c_of_n_old	optim.amhglobals.f	/^      logical alpha_c_of_n,ab_c_of_n_old,/;"	v	module:amhglobals
aconnectdump	optim.amber.f	/^      SUBROUTINE aconnectdump$/;"	s
add_candidate	pathsample.kshortestpaths.f90	/^SUBROUTINE add_candidate(/;"	s
add_pred	pathsample.kshortestpaths.f90	/^SUBROUTINE add_pred(/;"	s
add_succ	pathsample.kshortestpaths.f90	/^SUBROUTINE add_succ(/;"	s
ag	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,/;"	v	module:modamber9
allow_neg	optim.amhglobals.f	/^      logical ran_force,ran_file,allow_neg$/;"	v	module:amhglobals
alpb	optim.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,/;"	v	module:modamber9
alpha	optim.SD.f90	/^real*8 :: alpha /;"	v	module:SDwater
alpha_c_of_n	optim.amhglobals.f	/^      logical alpha_c_of_n,/;"	v	module:amhglobals
alphaoh	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,/;"	v	module:mnasa_mod
alt_prox_cut	optim.amhglobals.f	/^      double precision alt_prox_cut$/;"	v	module:amhglobals
amber_deallocate_stacks	optim.amber9dummy.f90	/^subroutine amber_deallocate_stacks(/;"	s
amber_readcoords	optim.amber9dummy.f90	/^subroutine amber_readcoords(/;"	s
amberdump	optim.amber.f	/^      SUBROUTINE amberdump(/;"	s
amberenergy	optim.amber.f	/^      SUBROUTINE amberenergy$/;"	s
ambermass	optim.amber.f	/^      SUBROUTINE ambermass$/;"	s
amberstr	optim.modamber9.f90	/^      CHARACTER(len=20) :: amberstr$/;"	v	module:modamber9
amberstr1	optim.modamber9.f90	/^      CHARACTER(len=8)  :: amberstr1$/;"	v	module:modamber9
amh_gse	optim.amhglobals.f	/^      double precision vpotnt(0:maxr+1,maxcnt,maxtab),amh_gse,/;"	v	module:amhglobals
amhglobals	optim.amhglobals.f	/^      Module amhglobals$/;"	m
aminoa	optim.amhglobals.f	/^      character aminoa(/;"	v	module:amhglobals
amoviedump	optim.amber.f	/^      SUBROUTINE amoviedump(/;"	s
angle	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,/;"	v	module:LJCAPSIDMODULE
angle	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,/;"	v	module:PYMODULE
angle2	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,/;"	v	module:LJCAPSIDMODULE
angle2	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,/;"	v	module:PYMODULE
anglesecderivs	optim.amber.f	/^      SUBROUTINE anglesecderivs$/;"	s
angmag	optim.utils.f	/^        function angmag(/;"	f
ans	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,fish,ans,/;"	v	module:MODAMBER
anti_HB	optim.amhglobals.f	/^        double precision :: anti_NHB(20,20,2),$/;"	v	module:amhglobals
anti_NHB	optim.amhglobals.f	/^        double precision :: anti_NHB(/;"	v	module:amhglobals
anti_one	optim.amhglobals.f	/^     *  para_HB(20,20,2),para_one(20),$/;"	v	module:amhglobals
aparams	optim.amber.f	/^      SUBROUTINE aparams$/;"	s
aps	optim.amhglobals.f	/^      double precision aps(/;"	v	module:amhglobals
aread	optim.amber.f	/^      SUBROUTINE aread$/;"	s
assignPivotVBstate	optim.msevb.f90	/^     subroutine assignPivotVBstate(/;"	s
assignZundelSpecies	optim.msevb.f90	/^     subroutine assignZundelSpecies(/;"	s
assignvb3	optim.msevb.f90	/^        subroutine assignvb3$/;"	s
atmass1	optim.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1, coords, atmass1$/;"	v	module:modamber9
atmpl	optim.msevb_common.f90	/^  INTEGER, ALLOCATABLE, DIMENSION(:,:) :: atmpl /;"	v	module:msevb_common
atnum	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: atnum,/;"	v	module:MODAMBER
atomicNumber	pathsample.rigidbody.f90	/^     integer, allocatable :: atomicNumber(/;"	k	type:rigidbodyPotential
atomicNumber	pathsample.rigidbodymod.f90	/^     integer, allocatable :: atomicNumber(/;"	k	type:rigidbodyPotential
attr	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(/;"	v	module:PYMODULE
ave_seq	optim.amhglobals.f	/^      logical ave_seq,/;"	v	module:amhglobals
ave_seq_amc	optim.amhglobals.f	/^      logical ssweight,ave_seq_amw, ave_seq_amc$/;"	v	module:amhglobals
ave_seq_amw	optim.amhglobals.f	/^      logical ssweight,ave_seq_amw,/;"	v	module:amhglobals
ave_seq_hb	optim.amhglobals.f	/^      logical ave_seq,targ_cons, mem_cons,ave_seq_hb$/;"	v	module:amhglobals
avep	optim.amhglobals.f	/^     *     zrcord(AMHmaxsiz,3,maxpro,maxcrd),$/;"	v	module:amhglobals
avepp	optim.amhglobals.f	/^      double precision avepp(/;"	v	module:amhglobals
b	optim.modamber.f90	/^      INTEGER  a,b,/;"	v	module:MODAMBER
b	optim.ttm3f.f90	/^doubl/;"	v	module:mnasa_mod
b	pathsample.GT2data.f90	/^          type(IntegerList),pointer :: f,b$/;"	k	type:IntegerList
b	pathsample.GT2data.f90	/^          type(NodeList),pointer :: f,b$/;"	k	type:NodeList
b	pathsample.GT2data.f90	/^          type(RealList),pointer :: f,b$/;"	k	type:RealList
b1	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,/;"	v	module:mnasa_mod
b1D	optim.ttm3f.f90	/^double precision :: a,b,c0,c1,c2,b1D$/;"	v	module:mnasa_mod
bHH	optim.VRTMCY5f.f90	/^							AHH = 0.98642d0,&$/;"	v	module:MCY
bOH	optim.VRTMCY5f.f90	/^							AOH = 2.91318d0,&$/;"	v	module:MCY
bOO	optim.VRTMCY5f.f90	/^							AOO = 2376.94d0,&$/;"	v	module:MCY
bVH	optim.VRTMCY5f.f90	/^							AVH = 0.475543d0,&$/;"	v	module:MCY
bc_lesi	optim.modamber9.f90	/^integer bc_lesr,bc_lesi$/;"	v	module:modamber9
bc_lesr	optim.modamber9.f90	/^integer bc_lesr,/;"	v	module:modamber9
bean	optim.modamber.f90	/^      INTEGER  match,bean,/;"	v	module:MODAMBER
belly	optim.modamber9.f90	/^logical belly,/;"	v	module:modamber9
bellymask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,/;"	v	module:modamber9
beta_c_of_n	optim.amhglobals.f	/^      logical beta_c_of_n,/;"	v	module:amhglobals
bg	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,/;"	v	module:modamber9
bias_av	optim.amhglobals.f	/^      double precision bias_weight,bias_av,/;"	v	module:amhglobals
bias_prefactor	optim.amhglobals.f	/^      double precision bias_weight,bias_av,bias_var,bias_prefactor,/;"	v	module:amhglobals
bias_var	optim.amhglobals.f	/^      double precision bias_weight,bias_av,bias_var,/;"	v	module:amhglobals
bias_weight	optim.amhglobals.f	/^      double precision bias_weight,/;"	v	module:amhglobals
biaspoly	optim.amhglobals.f	/^      double precision bias_weight,bias_av,bias_var,bias_prefactor,$/;"	v	module:amhglobals
bildham	optim.msevb.f90	/^     subroutine bildham$/;"	s
bondarray	optim.modamber.f90	/^      INTEGER,ALLOCATABLE, DIMENSION (:,:) :: bondarray$/;"	v	module:MODAMBER
bondedto	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: atnum,bondedto,/;"	v	module:MODAMBER
bondln	optim.amhglobals.f	/^      double precision temtur(mxtemp),temtur_quench(maxmov,maxmov),temgrd(5),$/;"	v	module:amhglobals
bondnumber	optim.modamber.f90	/^      INTEGER  match,bean,bondnumber$/;"	v	module:MODAMBER
bonds	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:,:) :: bonds$/;"	v	module:MODAMBER
box	optim.modamber9.f90	/^double precision box,/;"	v	module:modamber9
boxi	optim.modamber9.f90	144;"	c	module:modamber9
boxr	optim.modamber9.f90	137;"	c	module:modamber9
bs	optim.dimer.f	28;"	c	subroutine:fdimer
build_boxes	optim.Z2faster.f	/^      subroutine build_boxes(/;"	s
c	optim.modamber2.f90	/^      INTEGER  c$/;"	v	module:MODAMBER2
c0	optim.ttm3f.f90	/^double precision :: a,b,c0,/;"	v	module:mnasa_mod
c1	optim.ttm3f.f90	/^double precision :: a,b,c0,c1,/;"	v	module:mnasa_mod
c10	optim.c10.f	/^        subroutine c10(/;"	s
c10calc_dyn	optim.c10.f	/^        subroutine c10calc_dyn(/;"	s
c10calc_energy	optim.c10.f	/^        subroutine c10calc_energy(/;"	s
c10calc_gradient	optim.c10.f	/^        subroutine c10calc_gradient(/;"	s
c10calc_int_coords	optim.c10.f	/^        subroutine c10calc_int_coords(/;"	s
c10param_array	optim.c10.f	/^        subroutine c10param_array(/;"	s
c2	optim.ttm3f.f90	/^double precision :: a,b,c0,c1,c2,/;"	v	module:mnasa_mod
c5zA	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA,/;"	v	module:mnasa_mod
c_of_m_dist	optim.amhglobals.f	/^      double precision c_of_m_dist(/;"	v	module:amhglobals
calcAtomicInteractions	optim.msevb.f90	/^     subroutine calcAtomicInteractions /;"	s
calcInterAtomicDistances	optim.msevb.f90	/^     subroutine calcInterAtomicDistances(/;"	s
calc_dyn	optim.p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_dyn	p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_dynBLN	optim.BLN.f	/^      subroutine calc_dynBLN(/;"	s
calc_energy	optim.p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_energy	p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_energyBLN	optim.BLN.f	/^      subroutine calc_energyBLN(/;"	s
calc_energy_Go	optim.GoOptim.f	/^      subroutine calc_energy_Go(/;"	s
calc_gradient	optim.p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_gradient	p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_int_coords	optim.p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
calc_int_coords	p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
calc_int_coordsBLN	optim.BLN.f	/^      subroutine calc_int_coordsBLN(/;"	s
calculateH2OinterForces	optim.fmsevb.f90	/^	subroutine calculateH2OinterForces /;"	s
cand	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: cand /;"	k	type:node
candidate_paths	pathsample.kshortestpaths.f90	/^TYPE(path), TARGET, ALLOCATABLE :: shortest_paths(:,:), candidate_paths(/;"	v	module:GRAPH
capsomer	pathsample.rigidbody.f90	/^  type capsomer$/;"	t	module:rigidbody
capsomer	pathsample.rigidbodymod.f90	/^  type capsomer$/;"	t	module:rigidbodymod
capsomerDefs	pathsample.rigidbody.f90	/^  type (capsomer), allocatable :: capsomerDefs(/;"	v	module:rigidbody
capsomerDefs	pathsample.rigidbodymod.f90	/^  type (capsomer), allocatable :: capsomerDefs(/;"	v	module:rigidbodymod
carrms	optim.modamber9.f90	/^   double precision carrms$/;"	v	module:modamber9
cartesianSeparation	pathsample.rigidbody.f90	/^  function cartesianSeparation(/;"	f	module:rigidbody
cartesianSeparation	pathsample.rigidbodymod.f90	/^  function cartesianSeparation(/;"	f	module:rigidbodymod
cartesianX	pathsample.rigidbody.f90	/^  function cartesianX /;"	f	module:rigidbody
cartesianX	pathsample.rigidbodymod.f90	/^  function cartesianX /;"	f	module:rigidbodymod
cartesianY	pathsample.rigidbody.f90	/^  function cartesianY /;"	f	module:rigidbody
cartesianY	pathsample.rigidbodymod.f90	/^  function cartesianY /;"	f	module:rigidbodymod
cartesianZ	pathsample.rigidbody.f90	/^  function cartesianZ /;"	f	module:rigidbody
cartesianZ	pathsample.rigidbodymod.f90	/^  function cartesianZ /;"	f	module:rigidbodymod
cbasis	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA, cbasis,/;"	v	module:mnasa_mod
ccev_dist	optim.amhglobals.f	/^      double precision ccev_dist(/;"	v	module:amhglobals
ccore	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA, cbasis, ccore,/;"	v	module:mnasa_mod
cg	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,ag,bg,cg$/;"	v	module:modamber9
charge	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: charge$/;"	v	module:ttm3f_mod
check	optim.main.f90	/^      CHARACTER(LEN=10)  check$/;"	v	program:OPTIM4
check	optim.modamber.f90	/^      CHARACTER(LEN=10)  check$/;"	v	module:MODAMBER
check_chirality	optim.amber9dummy.f90	/^subroutine check_chirality(/;"	s
check_cistrans_dna	optim.amber9dummy.f90	/^subroutine check_cistrans_dna(/;"	s
check_cistrans_rna	optim.amber9dummy.f90	/^subroutine check_cistrans_rna(/;"	s
check_valleu_chirality	optim.amber9dummy.f90	/^subroutine check_valleu_chirality(/;"	s
checked_acos	optim.checkedtrig.f90	/^      function checked_acos(/;"	f
chiarray1	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1,/;"	v	module:modamber9
chiarray2	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2, chiarray1, chiarray2$/;"	v	module:modamber9
child	pathsample.GT2data.f90	/^          type(Node),pointer :: left,right,parent,child$/;"	k	type:Node
chiral	optim.modamber.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:) :: chiral$/;"	v	module:MODAMBER
chiralarray	optim.modamber.f90	/^      INTEGER,ALLOCATABLE,DIMENSION(:,:) :: chiralarray$/;"	v	module:MODAMBER
chiraltest	optim.amber.f	/^      SUBROUTINE chiraltest(/;"	s
chngmask	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask,/;"	v	module:modamber9
chrlscl	optim.amhglobals.f	/^      double precision chrlscl$/;"	v	module:amhglobals
cisarray1	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1,/;"	v	module:modamber9
cisarray2	optim.modamber9.f90	/^      INTEGER, DIMENSION(:), ALLOCATABLE :: cisarray1, cisarray2,/;"	v	module:modamber9
clambda	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,/;"	v	module:modamber9
class_2	optim.amhglobals.f	/^      integer class_of_res_2(AMHmaxsiz),sort_non_add(2,2,2,2,2),$/;"	v	module:amhglobals
class_of_res_2	optim.amhglobals.f	/^      integer class_of_res_2(/;"	v	module:amhglobals
cleanMemory	optim.cleanmemory.f90	/^SUBROUTINE cleanMemory /;"	s
cleanRigidBodies	pathsample.rigidbody.f90	/^  subroutine cleanRigidBodies$/;"	s	module:rigidbody
cleanRigidBodies	pathsample.rigidbodymod.f90	/^  subroutine cleanRigidBodies$/;"	s	module:rigidbodymod
cmass	optim.ttm3f.f90	/^double precision, dimension(9) :: cmass /;"	v	module:mnasa_mod
coefD	optim.ttm3f.f90	/^double precision, dimension(84) :: coefD$/;"	v	module:mnasa_mod
colin	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,/;"	v	module:MODAMBER
comp	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,/;"	v	module:modamber9
con_local_a	optim.amhglobals.f	/^      logical con_local_a,/;"	v	module:amhglobals
con_local_a_cut	optim.amhglobals.f	/^      integer con_local_a_cut,/;"	v	module:amhglobals
con_local_b	optim.amhglobals.f	/^      logical con_local_a, con_local_b$/;"	v	module:amhglobals
con_local_b_cut	optim.amhglobals.f	/^      integer con_local_a_cut, con_local_b_cut$/;"	v	module:amhglobals
const_mode	optim.amhglobals.f	/^       integer num_foldon_a,num_foldon_b,const_mode,/;"	v	module:amhglobals
coords	optim.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1/;"	v	module:modamber9
coords1	optim.modamber9.f90	/^      DOUBLE PRECISION, DIMENSION(:), ALLOCATABLE :: coords1,/;"	v	module:modamber9
coulombConversionFactor	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: coulombConversionFactor /;"	k	type:rigidbodyPotential
coulombConversionFactor	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: coulombConversionFactor /;"	k	type:rigidbodyPotential
cpin	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes, &$/;"	v	module:modamber9
cpout	optim.modamber9.f90	/^      cpin, cpout,/;"	v	module:modamber9
cprestrt	optim.modamber9.f90	/^      cpin, cpout, cprestrt,/;"	v	module:modamber9
crdixn	optim.amhglobals.f	/^     *        mempre(maxres,maxtab),jres(maxres),crdixn(/;"	v	module:amhglobals
crest	optim.ttm3f.f90	/^double precision, dimension(245) :: c5zA, cbasis, ccore, crest$/;"	v	module:mnasa_mod
ctemp	optim.amhglobals.f	/^      double precision ctemp$/;"	v	module:amhglobals
cubspl	optim.cubspl.f	/^      subroutine cubspl /;"	s
cut	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,/;"	v	module:LJCAPSIDMODULE
cut	optim.modamber9.f90	/^double precision box,cut,/;"	v	module:modamber9
cut	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,/;"	v	module:PYMODULE
cut_inner	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,/;"	v	module:modamber9
cutcap	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb, &$/;"	v	module:modamber9
cyclic	optim.amhglobals.f	/^      logical cyclic,/;"	v	module:amhglobals
d	optim.modamber.f90	/^      INTEGER  a,b,ios,d,/;"	v	module:MODAMBER
d	pathsample.GT2data.f90	/^          integer :: de/;"	k	type:Node
d2RijdXrb1dXrb2	optim.rigidfuncs.f	/^      function d2RijdXrb1dXrb2(/;"	f
d2fCoulombdR2	pathsample.rigidbody.f90	/^  function d2fCoulombdR2 /;"	f	module:rigidbody
d2fCoulombdR2	pathsample.rigidbodymod.f90	/^  function d2fCoulombdR2 /;"	f	module:rigidbodymod
d2fLJdR2	pathsample.rigidbody.f90	/^  function d2fLJdR2(/;"	f	module:rigidbody
d2fLJdR2	pathsample.rigidbodymod.f90	/^  function d2fLJdR2(/;"	f	module:rigidbodymod
d2fMorsedR2	pathsample.rigidbody.f90	/^  function d2fMorsedR2(/;"	f	module:rigidbody
d2fMorsedR2	pathsample.rigidbodymod.f90	/^  function d2fMorsedR2(/;"	f	module:rigidbodymod
d2fermi	optim.PachecoC60.f	/^      function d2fermi(/;"	f
d2morse	optim.PachecoC60.f	/^      function d2morse(/;"	f
d2vdw	optim.PachecoC60.f	/^      function d2vdw(/;"	f
d2zdXrb1dXrb2	optim.rigidfuncs.f	/^      function d2zdXrb1dXrb2(/;"	f
d2zdpx2	optim.rigidfuncs.f	/^      function d2zdpx2 /;"	f
d2zdpxdpy	optim.rigidfuncs.f	/^      function d2zdpxdpy /;"	f
d2zdpxdpz	optim.rigidfuncs.f	/^      function d2zdpxdpz /;"	f
d2zdpy2	optim.rigidfuncs.f	/^      function d2zdpy2 /;"	f
d2zdpydpz	optim.rigidfuncs.f	/^      function d2zdpydpz /;"	f
d2zdpz2	optim.rigidfuncs.f	/^      function d2zdpz2 /;"	f
dEbydx	optim.modamber.f90	/^     &                 dvdwEbydy,dvdwEbydz, &$/;"	v	module:MODAMBER
dEbydy	optim.modamber.f90	/^     &                 dEbydx,dEbydy,/;"	v	module:MODAMBER
dEbydz	optim.modamber.f90	/^     &                 dEbydx,dEbydy,dEbydz,/;"	v	module:MODAMBER
dQ_dr_ij_a	optim.amhglobals.f	/^     *           Q_ij_a(0:n_divs_max,AMHmaxsiz),$/;"	v	module:amhglobals
dQ_dr_ij_b	optim.amhglobals.f	/^     *           Q_ij_b(0:n_divs_max,AMHmaxsiz),$/;"	v	module:amhglobals
dRM	optim.ttm3f.f90	/^double precision, dimension(:,:), allocatable :: dRM$/;"	v	module:ttm3f_mod
dRijdXrb	optim.rigidfuncs.f	/^      function dRijdXrb(/;"	f
dTdx	optim.SD.f90	/^function dTdx(/;"	f	module:SDwater
dVC	optim.VRTMCY5f.f90	/^							bVH = 1.18216d0,&$/;"	v	module:MCY
dVS	optim.VRTMCY5f.f90	/^							dVC = 0.517424d0,&$/;"	v	module:MCY
da1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,/;"	v	module:MODAMBER
da2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,da2,/;"	v	module:MODAMBER
da3	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,da2,da3,/;"	v	module:MODAMBER
da4	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: da1,da2,da3,da4$/;"	v	module:MODAMBER
dangEbydy	optim.modamber.f90	/^      DOUBLE PRECISION,ALLOCATABLE, DIMENSION(:) :: DBONDEBYDX,DBONDEBYDY,DBONDEBYDZ,DANGEBYDX, &$/;"	v	module:MODAMBER
dangEbydz	optim.modamber.f90	/^     &                 dangEbydy,dangEbydz,/;"	v	module:MODAMBER
daxpy	lbfgs.f	/^      subroutine daxpy(/;"	s
dbdx	optim.SD.f90	/^function dbdx(/;"	f	module:SDwater
dcoomm	optim.myblas.f	/^      subroutine dcoomm(/;"	s
ddot	lbfgs.f	/^      double precision function ddot(/;"	f
degree	pathsample.GT2data.f90	/^          integer :: degree,/;"	k	type:Node
degreesToRadians	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: degreesToRadians /;"	v	module:mathsConstants
delR_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg, delR_rg,/;"	v	module:amhglobals
del_r_a	optim.amhglobals.f	/^       double precision del_r_a(/;"	v	module:amhglobals
del_r_b	optim.amhglobals.f	/^       double precision del_r_b(/;"	v	module:amhglobals
delete_candidate	pathsample.kshortestpaths.f90	/^SUBROUTINE delete_candidate(/;"	s
delta	optim.amhglobals.f	/^      double precision delta,/;"	v	module:amhglobals
delta_dirac	optim.Ackland_metals.f90	/^        double precision function delta_dirac(/;"	f
delte	optim.amhglobals.f	/^      double precision delta,delte$/;"	v	module:amhglobals
deltz	optim.amhglobals.f	/^     *     forse(0:maxr+1,maxcnt,maxtab),$/;"	v	module:amhglobals
deohA	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,deohA,/;"	v	module:mnasa_mod
derphi	optim.dzugutov.f	/^      subroutine derphi(/;"	s
derphiz1	optim.Zetterling.f	/^      subroutine derphiz1(/;"	s
derphiz2	optim.Zetterling.f	/^      subroutine derphiz2(/;"	s
destruct	optim.SD.f90	/^subroutine destruct(/;"	s	module:SDwater
devang	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,/;"	v	module:modamber9
devdis	optim.modamber9.f90	/^   double precision f,enmr,devdis,/;"	v	module:modamber9
devtor	optim.modamber9.f90	/^   double precision f,enmr,devdis,devang,devtor,/;"	v	module:modamber9
dfCoulombdR	pathsample.rigidbody.f90	/^  function dfCoulombdR /;"	f	module:rigidbody
dfCoulombdR	pathsample.rigidbodymod.f90	/^  function dfCoulombdR /;"	f	module:rigidbodymod
dfLJdR	pathsample.rigidbody.f90	/^  function dfLJdR(/;"	f	module:rigidbody
dfLJdR	pathsample.rigidbodymod.f90	/^  function dfLJdR(/;"	f	module:rigidbodymod
dfMorsedR	pathsample.rigidbody.f90	/^  function dfMorsedR(/;"	f	module:rigidbody
dfMorsedR	pathsample.rigidbodymod.f90	/^  function dfMorsedR(/;"	f	module:rigidbodymod
dfermi	optim.PachecoC60.f	/^      function dfermi(/;"	f
dgeco	optim.projh.f	/^      subroutine dgeco(/;"	s
dgedi	optim.projh.f	/^      subroutine dgedi(/;"	s
dgefa	optim.projh.f	/^      subroutine dgefa(/;"	s
dielc	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,/;"	v	module:modamber9
diff	optim.SD.f90	/^pure function diff(/;"	f	module:SDwater
dimer	optim.dimer.f	/^       subroutine dimer /;"	s
dimpEbydx	optim.modamber.f90	/^     &                 dEbydx,dEbydy,dEbydz,dimpEbydx,/;"	v	module:MODAMBER
dimpEbydy	optim.modamber.f90	/^     &                 dEbydx,dEbydy,dEbydz,dimpEbydx, &$/;"	v	module:MODAMBER
dimpEbydz	optim.modamber.f90	/^     &                 dimpEbydy,dimpEbydz,/;"	v	module:MODAMBER
dip	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: dip$/;"	v	module:ttm3f_mod
diptol	optim.ttm3f.f90	/^double precision, parameter :: diptol /;"	v	module:ttm3f_mod
dist	optim.utils.f	/^      function dist(/;"	f
dist_cut	optim.amhglobals.f	/^      logical beta_c_of_n,dist_cut$/;"	v	module:amhglobals
dist_d	optim.SD.f90	/^pure real*8 function dist_d(/;"	f	module:SDwater
dist_x	optim.SD.f90	/^pure real*8 function dist_x(/;"	f	module:SDwater
distfunc	optim.mindist.f	/^      function distfunc(/;"	f
distfunc	pathsample.mindist.f	/^      function distfunc(/;"	f
dmix	optim.ttm3f.f90	/^double precision, parameter :: dmix /;"	v	module:ttm3f_mod
dmorse	optim.PachecoC60.f	/^      function dmorse(/;"	f
dms_nasa	optim.ttm3f.f90	/^subroutine dms_nasa(/;"	s
dms_param1	optim.ttm3f.f90	/^double precision, parameter :: dms_param1 /;"	v	module:ttm3f_mod
dms_param2	optim.ttm3f.f90	/^double precision, parameter :: dms_param1 =0.5d0,dms_param2 /;"	v	module:ttm3f_mod
dms_param3	optim.ttm3f.f90	/^double precision, parameter :: dms_param1 =0.5d0,dms_param2 = 0.9578d0, dms_param3=/;"	v	module:ttm3f_mod
doligmove	optim.modamber9.f90	/^      LOGICAL :: doligmove$/;"	v	module:modamber9
domKr3dr	optim.SD.f90	/^pure real*8 function domKr3dr(/;"	f	module:SDwater
domLr3dr	optim.SD.f90	/^pure real*8 function domLr3dr(/;"	f	module:SDwater
dotopt	optim.utils.f	/^      function dotopt(/;"	f
dphiHHdror	optim.SD.f90	/^pure real*8 function dphiHHdror(/;"	f	module:SDwater
dphiOHdror	optim.SD.f90	/^pure real*8 function dphiOHdror(/;"	f	module:SDwater
dphiOOdror	optim.SD.f90	/^pure real*8 function dphiOOdror(/;"	f	module:SDwater
dprand	optim.dprand.f	/^        function dprand(/;"	f
dqEbydx	optim.modamber.f90	/^     &                 dimpEbydy,dimpEbydz, &$/;"	v	module:MODAMBER
dqEbydy	optim.modamber.f90	/^     &                 dqEbydx,dqEbydy,/;"	v	module:MODAMBER
dqEbydz	optim.modamber.f90	/^     &                 dqEbydx,dqEbydy,dqEbydz$/;"	v	module:MODAMBER
drjar	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,drjar$/;"	v	module:modamber9
drms	optim.modamber9.f90	/^      tol,taur,dx0,drms,/;"	v	module:modamber9
drvmsevb	optim.drvmsevb.f90	/^subroutine drvmsevb(/;"	s
dt	optim.modamber9.f90	/^double precision t,dt,/;"	v	module:modamber9
dtorsEbydx	optim.modamber.f90	/^     &                 dangEbydy,dangEbydz, &$/;"	v	module:MODAMBER
dtorsEbydy	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,/;"	v	module:MODAMBER
dtorsEbydz	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,dtorsEbydz,/;"	v	module:MODAMBER
dvalue	optim.dimer.f	/^       function dvalue /;"	f
dvdw	optim.PachecoC60.f	/^      function dvdw(/;"	f
dvdwEbydx	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,dtorsEbydz,dvdwEbydx,/;"	v	module:MODAMBER
dvdwEbydy	optim.modamber.f90	/^     &                 dtorsEbydx,dtorsEbydy,dtorsEbydz,dvdwEbydx, &$/;"	v	module:MODAMBER
dvdwEbydz	optim.modamber.f90	/^     &                 dvdwEbydy,dvdwEbydz,/;"	v	module:MODAMBER
dx0	optim.modamber9.f90	/^      tol,taur,dx0,/;"	v	module:modamber9
dxdpx	optim.rigidfuncs.f	/^      function dxdpx /;"	f
dxdpy	optim.rigidfuncs.f	/^      function dxdpy /;"	f
dxdpz	optim.rigidfuncs.f	/^      function dxdpz /;"	f
dydpx	optim.rigidfuncs.f	/^      function dydpx /;"	f
dydpy	optim.rigidfuncs.f	/^      function dydpy /;"	f
dydpz	optim.rigidfuncs.f	/^      function dydpz /;"	f
dzdXrb	optim.rigidfuncs.f	/^      function dzdXrb /;"	f
dzdpx	optim.rigidfuncs.f	/^      function dzdpx /;"	f
dzdpy	optim.rigidfuncs.f	/^      function dzdpy /;"	f
dzdpz	optim.rigidfuncs.f	/^      function dzdpz /;"	f
e	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,/;"	v	module:MODAMBER
eadev	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,eadev,/;"	v	module:modamber9
ebdev	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,ebdev,/;"	v	module:modamber9
edge	pathsample.kshortestpaths.f90	/^TYPE edge$/;"	t	module:GRAPH
efieldConversionFactor	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: efieldConversionFactor /;"	k	type:rigidbodyPotential
efieldConversionFactor	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: efieldConversionFactor /;"	k	type:rigidbodyPotential
eigensort_val_asc	optim.eigensort.f90	/^subroutine eigensort_val_asc(/;"	s
eigensort_val_asc	pathsample.quaternionmatch.f90	/^subroutine eigensort_val_asc(/;"	s
ekeles	optim.modamber9.f90	/^double precision scaltles,tempsules,ekeles,/;"	v	module:modamber9
ekinles0	optim.modamber9.f90	/^double precision ekinles0,/;"	v	module:modamber9
ekmhles	optim.modamber9.f90	/^double precision ekmhles,/;"	v	module:modamber9
ekphles	optim.modamber9.f90	/^double precision ekmhles,ekphles$/;"	v	module:modamber9
ene	optim.modamber9.f90	/^   double precision ene(/;"	v	module:modamber9
enmr	optim.modamber9.f90	/^   double precision f,enmr,/;"	v	module:modamber9
ensave	optim.modamber9.f90	/^double precision scalm,pencut,ensave,/;"	v	module:modamber9
entots	optim.Natb.f	/^        SUBROUTINE entots(/;"	s
epair	optim.Z2faster.f	/^      real*8 function epair(/;"	f
epsilon1	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:LJCAPSIDMODULE
epsilon1	optim.pymodule.f90	/^ DOUBLE PRECISION, ALLOCATABLE :: PSCALEFAC1vec(:),PSCALEFAC2vec(:),epsilon1(/;"	v	module:PYMODULE
epsilonRep	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: epsilonRep /;"	k	type:capsomer
epsilonRep	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: epsilonRep /;"	k	type:capsomer
eqdist	optim.amhglobals.f	/^      double precision hydscl(0:21,2),hrdrad(0:21,2),eqdist(/;"	v	module:amhglobals
eres	optim.amhglobals.f	/^      double precision eres$/;"	v	module:amhglobals
erstop	optim.modamber9.f90	/^logical belly, erstop,/;"	v	module:modamber9
evbin	optim.modamber9.f90	/^      cpin, cpout, cprestrt, evbin,/;"	v	module:modamber9
evbout	optim.modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout,/;"	v	module:modamber9
evbt	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,evbt,/;"	v	module:modamber9
ew_type	optim.modamber9.f90	/^integer verbose,netfrc,     ew_type,/;"	v	module:modamber9
ewcntrl	optim.modamber9.f90	261;"	c	module:modamber9
exchange2	optim.msevb.f90	/^        subroutine exchange2$/;"	s
extdiel	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,/;"	v	module:modamber9
extra_logical	optim.modamber9.f90	81;"	c	module:modamber9
extraboxdim	optim.modamber9.f90	/^double precision extraboxdim$/;"	v	module:modamber9
extrasamberdp	optim.modamber9.f90	331;"	c	module:modamber9
extrasamberint	optim.modamber9.f90	330;"	c	module:modamber9
exvmin	optim.amhglobals.f	/^      double precision exvmin,/;"	v	module:amhglobals
exvminS	optim.amhglobals.f	/^      double precision exvmin,exvminS,/;"	v	module:amhglobals
exvminS_beta	optim.amhglobals.f	/^      double precision exvmin,exvminS,exvminS_beta(/;"	v	module:amhglobals
exvmin_gamma	optim.amhglobals.f	/^      double precision exvmin_gamma(/;"	v	module:amhglobals
f	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,/;"	v	module:MODAMBER
f	optim.modamber9.f90	/^   double precision f,/;"	v	module:modamber9
f	pathsample.GT2data.f90	/^          type(IntegerList),pointer :: f,/;"	k	type:IntegerList
f	pathsample.GT2data.f90	/^          type(NodeList),pointer :: f,/;"	k	type:NodeList
f	pathsample.GT2data.f90	/^          type(RealList),pointer :: f,/;"	k	type:RealList
f5z	optim.ttm3f.f90	/^double precision :: f5z,/;"	v	module:mnasa_mod
fCoulomb	pathsample.rigidbody.f90	/^  function fCoulomb /;"	f	module:rigidbody
fCoulomb	pathsample.rigidbodymod.f90	/^  function fCoulomb /;"	f	module:rigidbodymod
fH	optim.ttm3f.f90	/^integer :: fO, lO, fH,/;"	v	module:ttm3f_mod
fH3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3,/;"	v	module:ttm3f_mod
fLJ	pathsample.rigidbody.f90	/^  function fLJ(/;"	f	module:rigidbody
fLJ	pathsample.rigidbodymod.f90	/^  function fLJ(/;"	f	module:rigidbodymod
fM	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM,/;"	v	module:ttm3f_mod
fM3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3, lH3, fM3,/;"	v	module:ttm3f_mod
fMorse	pathsample.rigidbody.f90	/^  function fMorse(/;"	f	module:rigidbody
fMorse	pathsample.rigidbodymod.f90	/^  function fMorse(/;"	f	module:rigidbodymod
fO	optim.ttm3f.f90	/^integer :: fO,/;"	v	module:ttm3f_mod
fO3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3,/;"	v	module:ttm3f_mod
facc	optim.modamber9.f90	/^character owrite, facc$/;"	v	module:modamber9
factlocal	optim.dimer.f	/^       function factlocal(/;"	f
factorize	optim.SD.f90	/^subroutine factorize(/;"	s	module:SDwater
fbasis	optim.ttm3f.f90	/^double precision :: f5z,fbasis,/;"	v	module:mnasa_mod
fcap	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,/;"	v	module:modamber9
fcore	optim.ttm3f.f90	/^double precision :: f5z,fbasis,fcore,/;"	v	module:mnasa_mod
fcut	optim.Ackland_metals.f90	/^	double precision  function fcut(/;"	f
fcut_d	optim.Ackland_metals.f90	/^	double precision  function fcut_d(/;"	f
fcut_dd	optim.Ackland_metals.f90	/^	double precision function fcut_dd(/;"	f
fdiag	optim.fmsevb.f90	/^	subroutine fdiag(/;"	s
fdimer	optim.dimer.f	/^       subroutine fdimer /;"	s
fermi	optim.PachecoC60.f	/^      function fermi(/;"	f
fgcalc	optim.Z2faster.f	/^      subroutine fgcalc(/;"	s
fh2ointer	optim.fmsevb.f90	/^	subroutine fh2ointer(/;"	s
fh2ointra	optim.fmsevb.f90	/^	subroutine fh2ointra(/;"	s
fh3ointra	optim.fmsevb.f90	/^        subroutine fh3ointra(/;"	s
field1	optim.SD.f90	/^function field1(/;"	f	module:SDwater
field2	optim.SD.f90	/^function field2(/;"	f	module:SDwater
filename	optim.modamber.f90	/^      CHARACTER(LEN=20)  filename$/;"	v	module:MODAMBER
files	optim.modamber9.f90	205;"	c	module:modamber9
finalio	main.pl	/^sub finalio {$/;"	s
finalio	main.pl~	/^sub finalio {$/;"	s
finalq	main.pl	/^sub finalq {$/;"	s
finalq	main.pl~	/^sub finalq {$/;"	s
finite_differences	optim.finite_differences.f90	/^module finite_differences$/;"	m
finter	optim.fmsevb.f90	/^	subroutine finter(/;"	s
fish	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,fish,/;"	v	module:MODAMBER
fix_dip	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip,/;"	v	module:modamber9
fix_quad	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd, fix_dip, &$/;"	v	module:modamber9
fmsevb	optim.fmsevb.f90	/^	subroutine fmsevb(/;"	s
foldstrt_max_a	optim.amhglobals.f	/^        integer foldstrt_min_a(maxres),foldstrt_max_a(/;"	v	module:amhglobals
foldstrt_max_b	optim.amhglobals.f	/^        integer foldstrt_min_b(maxres),foldstrt_max_b(/;"	v	module:amhglobals
foldstrt_min_a	optim.amhglobals.f	/^        integer foldstrt_min_a(/;"	v	module:amhglobals
foldstrt_min_b	optim.amhglobals.f	/^        integer foldstrt_min_b(/;"	v	module:amhglobals
forse	optim.amhglobals.f	/^     *     rincsq(maxcnt,maxtab),$/;"	v	module:amhglobals
four_plus	optim.amhglobals.f	/^        logical four_plus$/;"	v	module:amhglobals
fphi	optim.Ackland_metals.f90	/^       double precision function fphi(/;"	f
fphi_d	optim.Ackland_metals.f90	/^       double precision function fphi_d(/;"	f
fphi_dd	optim.Ackland_metals.f90	/^       double precision function fphi_dd(/;"	f
frameon	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon,/;"	v	module:modamber9
freqConvFactor	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: freqConvFactor /;"	k	type:rigidbodyPotential
freqConvFactor	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: freqConvFactor /;"	k	type:rigidbodyPotential
freqe	optim.modamber9.f90	/^      vecs, radii, freqe,/;"	v	module:modamber9
frest	optim.ttm3f.f90	/^double precision :: f5z,fbasis,fcore,frest$/;"	v	module:mnasa_mod
from	pathsample.kshortestpaths.f90	/^   TYPE(node), POINTER :: from /;"	k	type:edge
frss	optim.Natb.f	/^        subroutine frss(/;"	s
fsmax	optim.modamber9.f90	/^          solvph,rgbmax,fsmax,/;"	v	module:modamber9
fswitchbeta	optim.modamber9.f90	/^double precision fswitchbeta$/;"	v	module:modamber9
ftss	optim.Natb.f	/^        subroutine ftss(/;"	s
ftsz	optim.Natb.f	/^        subroutine ftsz(/;"	s
g	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,/;"	v	module:MODAMBER
g46merdiff	optim.g46merdiff.f	/^        subroutine g46merdiff(/;"	s
gamma1	optim.ttm3f.f90	/^function gamma1(/;"	f
gamma2	optim.ttm3f.f90	/^subroutine gamma2(/;"	s
gamma3	optim.ttm3f.f90	/^subroutine gamma3(/;"	s
gamma4	optim.ttm3f.f90	/^function gamma4(/;"	f
gammaM	optim.ttm3f.f90	/^double precision, parameter :: gammaM=/;"	v	module:ttm3f_mod
gamma_contact_order	optim.amhglobals.f	/^      double precision gamma_contact_order(/;"	v	module:amhglobals
gamma_ln	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,/;"	v	module:modamber9
gamma_non_add	optim.amhglobals.f	/^      double precision :: gamma_non_add(/;"	v	module:amhglobals
gbalpha	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,  & !32$/;"	v	module:modamber9
gbbeta	optim.modamber9.f90	/^          gbalpha,gbbeta,/;"	v	module:modamber9
gbgamma	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,/;"	v	module:modamber9
gbneckscale	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,/;"	v	module:modamber9
gbsa	optim.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,           &!41$/;"	v	module:modamber9
geom	optim.mindist.f	337;"	c	function:distfunc
geom	optim.mindist.f	417;"	c	subroutine:DDISTFUNC
geom	optim.mindist.f	443;"	c	subroutine:DDDISTFUNC
geom	pathsample.mindist.f	337;"	c	function:distfunc
geom	pathsample.mindist.f	417;"	c	subroutine:DDISTFUNC
geom	pathsample.mindist.f	443;"	c	subroutine:DDDISTFUNC
gfunc	optim.Ackland_metals.f90	/^	double precision function gfunc(/;"	f
gfunc_d	optim.Ackland_metals.f90	/^	double precision function gfunc_d(/;"	f
gfunc_dd	optim.Ackland_metals.f90	/^	double precision function gfunc_dd(/;"	f
gly_con	optim.amhglobals.f	/^      logical i_alt_prox,i_3rd_is_contact,gly_con$/;"	v	module:amhglobals
gminbinding	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,/;"	v	module:DOCKMODULE
gmincomplex	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,/;"	v	module:DOCKMODULE
gminligand	pathsample.dock.f90	/^double precision :: gminligand,/;"	v	module:DOCKMODULE
gminprotein	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,/;"	v	module:DOCKMODULE
go_con	optim.amhglobals.f	/^      logical go_con$/;"	v	module:amhglobals
go_con_dist	optim.amhglobals.f	/^      double precision    go_con_dist$/;"	v	module:amhglobals
gparam_array	optim.g46merdiff.f	/^        subroutine gparam_array(/;"	s
gpes	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,gpes,/;"	v	module:modamber9
grad2d	optim.dimer.f	/^       function grad2d /;"	f
gradd	optim.dimer.f	/^       function gradd /;"	f
grdq	optim.ttm3f.f90	/^double precision, dimension(:,:,:,:), allocatable :: grdq$/;"	v	module:ttm3f_mod
ground_state	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,ground_state,/;"	v	module:msevb_common
groupbuffer	optim.modamber9.f90	/^character(len=4096) groupbuffer$/;"	v	module:modamber9
groups	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,groups,/;"	v	module:modamber9
h	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,/;"	v	module:MODAMBER
hairy	optim.amber.f	/^      SUBROUTINE hairy(/;"	s
hairyhell	optim.amber.f	/^      SUBROUTINE hairyhell(/;"	s
hairyimp	optim.amber.f	/^      SUBROUTINE hairyimp(/;"	s
hairyimphell	optim.amber.f	/^      SUBROUTINE hairyimphell(/;"	s
hbond	optim.amhglobals.f	/^        logical hbond,/;"	v	module:amhglobals
hbscl	optim.amhglobals.f	/^        double precision hbscl(/;"	v	module:amhglobals
height	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: rho, radius, height$/;"	k	type:capsomer
height	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: rho, radius, height$/;"	k	type:capsomer
hell	optim.modamber.f90	/^     &                 imphell,/;"	v	module:MODAMBER
hellcount	optim.modamber.f90	/^      INTEGER hellcount$/;"	v	module:MODAMBER
ho_zero	optim.amhglobals.f	/^        double precision sigma_h,sigma_NO,ho_zero,/;"	v	module:amhglobals
homlfl	optim.amhglobals.f	/^       character homlfl(/;"	v	module:amhglobals
hrdrad	optim.amhglobals.f	/^      double precision hydscl(0:21,2),hrdrad(/;"	v	module:amhglobals
hulp	optim.modamber9.f90	93;"	c	module:modamber9
hydscl	optim.amhglobals.f	/^      double precision hydscl(/;"	v	module:amhglobals
hydseq	optim.amhglobals.f	/^     *     ywork(maxres,3,maxcrd),$/;"	v	module:amhglobals
i	optim.modamber.f90	/^      INTEGER  a,b,io/;"	v	module:MODAMBER
i	pathsample.kshortestpaths.f90	/^   INTEGER :: i /;"	k	type:path
i01	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01,/;"	v	module:modamber9
i02	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,/;"	v	module:modamber9
i04	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,/;"	v	module:modamber9
i06	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,/;"	v	module:modamber9
i08	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,/;"	v	module:modamber9
i1	optim.amhglobals.f	/^      integer i1,/;"	v	module:amhglobals
i10	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10,/;"	v	module:modamber9
i2	optim.amhglobals.f	/^      integer i1,i2$/;"	v	module:amhglobals
i24	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba, &$/;"	v	module:modamber9
i26	optim.modamber9.f90	/^      i24,i26,/;"	v	module:modamber9
i28	optim.modamber9.f90	/^      i24,i26,i28,/;"	v	module:modamber9
i30	optim.modamber9.f90	/^      i24,i26,i28,i30,/;"	v	module:modamber9
i32	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,/;"	v	module:modamber9
i34	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,/;"	v	module:modamber9
i36	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,/;"	v	module:modamber9
i38	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,/;"	v	module:modamber9
i40	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40,/;"	v	module:modamber9
i42	optim.modamber9.f90	/^      i24,i26,i28,i30,i32,i34,i36,i38,i40, &$/;"	v	module:modamber9
i44	optim.modamber9.f90	/^      i42,i44,/;"	v	module:modamber9
i46	optim.modamber9.f90	/^      i42,i44,i46,/;"	v	module:modamber9
i48	optim.modamber9.f90	/^      i42,i44,i46,i48,/;"	v	module:modamber9
i50	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,/;"	v	module:modamber9
i502	optim.amhglobals.f	/^      integer i502,/;"	v	module:amhglobals
i503	optim.amhglobals.f	/^      integer i502,i503,/;"	v	module:amhglobals
i505	optim.amhglobals.f	/^      integer i502,i503,i505,/;"	v	module:amhglobals
i507	optim.amhglobals.f	/^      integer i502,i503,i505,i507,/;"	v	module:amhglobals
i508	optim.amhglobals.f	/^      integer i502,i503,i505,i507,$/;"	v	module:amhglobals
i509	optim.amhglobals.f	/^     *        i508,i509,/;"	v	module:amhglobals
i511	optim.amhglobals.f	/^     *        i508,i509,i511,/;"	v	module:amhglobals
i512	optim.amhglobals.f	/^     *        i508,i509,i511,i512,/;"	v	module:amhglobals
i513	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,/;"	v	module:amhglobals
i514	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,i514,/;"	v	module:amhglobals
i515	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,i514,i515,/;"	v	module:amhglobals
i516	optim.amhglobals.f	/^     *        i508,i509,i511,i512,i513,i514,i515,$/;"	v	module:amhglobals
i518	optim.amhglobals.f	/^     *        i516,i518,/;"	v	module:amhglobals
i52	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,/;"	v	module:modamber9
i521	optim.amhglobals.f	/^     *        i516,i518,i521,/;"	v	module:amhglobals
i523	optim.amhglobals.f	/^     *        i516,i518,i521,i523,/;"	v	module:amhglobals
i525	optim.amhglobals.f	/^     *        i516,i518,i521,i523,$/;"	v	module:amhglobals
i526	optim.amhglobals.f	/^     *        i525,i526,/;"	v	module:amhglobals
i527	optim.amhglobals.f	/^     *        i525,i526,i527,/;"	v	module:amhglobals
i528	optim.amhglobals.f	/^     *        i525,i526,i527,i528,/;"	v	module:amhglobals
i54	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,/;"	v	module:modamber9
i540	optim.amhglobals.f	/^     *        i525,i526,i527,i528,$/;"	v	module:amhglobals
i56	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,/;"	v	module:modamber9
i58	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,/;"	v	module:modamber9
i64	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,/;"	v	module:modamber9
i65	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,/;"	v	module:modamber9
i68	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68,/;"	v	module:modamber9
i70	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,i64,i65,i68, &$/;"	v	module:modamber9
i72	optim.modamber9.f90	/^      i70,i72,/;"	v	module:modamber9
i74	optim.modamber9.f90	/^      i70,i72,i74,/;"	v	module:modamber9
i76	optim.modamber9.f90	/^      i70,i72,i74,i76,/;"	v	module:modamber9
i78	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,/;"	v	module:modamber9
i79	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,/;"	v	module:modamber9
i80	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,/;"	v	module:modamber9
i82	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,/;"	v	module:modamber9
i84	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,/;"	v	module:modamber9
i86	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86,/;"	v	module:modamber9
i_3rd_is_contact	optim.amhglobals.f	/^      logical i_alt_prox,i_3rd_is_contact,/;"	v	module:amhglobals
i_Etim	optim.amhglobals.f	/^      logical i_Etim$/;"	v	module:amhglobals
i_Etim_step	optim.amhglobals.f	/^      integer i_Etim_step$/;"	v	module:amhglobals
i_Q_format_a	optim.amhglobals.f	/^      integer nbiaspoly,n_Qbias_a,i_Q_format_a$/;"	v	module:amhglobals
i_Q_format_b	optim.amhglobals.f	/^      integer n_Qbias_b,i_Q_format_b$/;"	v	module:amhglobals
i_Qbias_a	optim.amhglobals.f	/^      logical ibiasgauss,ibiaspoly,i_Qbias_a,/;"	v	module:amhglobals
i_Qbias_b	optim.amhglobals.f	/^      logical i_Qbias_b,/;"	v	module:amhglobals
i_Rg_bias	optim.amhglobals.f	/^      logical i_Rg_bias$/;"	v	module:amhglobals
i_V_test	optim.amhglobals.f	/^      logical i_V_test$/;"	v	module:amhglobals
i_alt_prox	optim.amhglobals.f	/^      logical i_alt_prox,/;"	v	module:amhglobals
i_atom_P_AP	optim.amhglobals.f	/^      integer:: i_diff_P_AP,i_atom_P_AP$/;"	v	module:amhglobals
i_bias_native_a	optim.amhglobals.f	/^      logical ibiasgauss,ibiaspoly,i_Qbias_a,i_bias_native_a$/;"	v	module:amhglobals
i_bias_native_b	optim.amhglobals.f	/^      logical i_Qbias_b,i_bias_native_b$/;"	v	module:amhglobals
i_con_P_AP	optim.amhglobals.f	/^      logical:: i_con_P_AP$/;"	v	module:amhglobals
i_contact_order	optim.amhglobals.f	/^      logical i_contact_order$/;"	v	module:amhglobals
i_contact_order_max	optim.amhglobals.f	/^      integer i_contact_order_min(max_contact_order_terms),$/;"	v	module:amhglobals
i_contact_order_min	optim.amhglobals.f	/^      integer i_contact_order_min(/;"	v	module:amhglobals
i_diff_P_AP	optim.amhglobals.f	/^      integer:: i_diff_P_AP,/;"	v	module:amhglobals
i_hbond_czong	optim.amhglobals.f	/^        logical hbond,i_hbond_eastwood,i_hbond_czong$/;"	v	module:amhglobals
i_hbond_eastwood	optim.amhglobals.f	/^        logical hbond,i_hbond_eastwood,/;"	v	module:amhglobals
i_ignore_chain_dirn	optim.amhglobals.f	/^        logical i_ignore_chain_dirn,/;"	v	module:amhglobals
i_ixn_Qbias_a	optim.amhglobals.f	/^     *        numconst_b,i_ixn_Qbias_a(/;"	v	module:amhglobals
i_ixn_Qbias_b	optim.amhglobals.f	/^     *        numconst_a,i_ixn_Qbias_b(/;"	v	module:amhglobals
i_non_add_contact	optim.amhglobals.f	/^      logical :: i_non_add_contact$/;"	v	module:amhglobals
i_rama	optim.amhglobals.f	/^       integer i_rama$/;"	v	module:amhglobals
i_rep	optim.amhglobals.f	/^      logical i_rep,/;"	v	module:amhglobals
i_rep_lambda_uniform	optim.amhglobals.f	/^      logical i_rep,i_rep_lambda_uniform$/;"	v	module:amhglobals
i_rg_corey	optim.amhglobals.f	/^      logical i_rg_corey$/;"	v	module:amhglobals
i_rg_first	optim.amhglobals.f	/^      logical i_rg_garyk, i_rg_first$/;"	v	module:amhglobals
i_rg_garyk	optim.amhglobals.f	/^      logical i_rg_garyk,/;"	v	module:amhglobals
i_type_ev_gamma	optim.amhglobals.f	/^      integer i_type_ev_gamma$/;"	v	module:amhglobals
ia1	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,/;"	v	module:MODAMBER
ia2	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,ia2,/;"	v	module:MODAMBER
ia3	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,ia2,ia3,/;"	v	module:MODAMBER
ia4	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: ia1,ia2,ia3,ia4$/;"	v	module:MODAMBER
iargc_subr	pathsample.nag.f90	/^          subroutine iargc_subr(/;"	s	module:NAG
ibelly	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,/;"	v	module:modamber9
ibellygp	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp,/;"	v	module:modamber9
ibgwat	optim.modamber9.f90	/^      ntmin,irest,jfastw,                &!33$/;"	v	module:modamber9
ibiasfile	optim.amhglobals.f	/^     *        obias_Rg,oKE,ibiasfile,/;"	v	module:amhglobals
ibiasgauss	optim.amhglobals.f	/^      logical ibiasgauss,/;"	v	module:amhglobals
ibiaspoly	optim.amhglobals.f	/^      logical ibiasgauss,ibiaspoly,/;"	v	module:amhglobals
icfe	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,/;"	v	module:modamber9
iclassweight	optim.amhglobals.f	/^      logical iclassweight$/;"	v	module:amhglobals
icnstph	optim.modamber9.f90	/^      idecomp,icnstph,/;"	v	module:modamber9
icnstrgp	optim.modamber9.f90	/^      i42,i44,i46,i48,i50,i52,i54,i56,i58,ibellygp, &$/;"	v	module:modamber9
icon	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,icon,/;"	v	module:amhglobals
iconstreff	optim.modamber9.f90	/^      rbornstat,ivcap,iconstreff,/;"	v	module:modamber9
icontacts	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,iphi,icontacts,/;"	v	module:amhglobals
icphidx	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,/;"	v	module:modamber9
icpptcnt	optim.modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt,/;"	v	module:modamber9
icpresst	optim.modamber9.f90	/^      icpstinf,icpresst,/;"	v	module:modamber9
icpstinf	optim.modamber9.f90	/^      i70,i72,i74,i76,i78,i79,i80,i82,i84,i86, &$/;"	v	module:modamber9
icptpair	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,/;"	v	module:modamber9
icptrsct	optim.modamber9.f90	/^      icpstinf,icpresst,icptrsct,/;"	v	module:modamber9
ictemp	optim.amhglobals.f	/^      logical ictemp$/;"	v	module:amhglobals
idecomp	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,    &!59$/;"	v	module:modamber9
idigns	optim.amhglobals.f	/^      logical idigns$/;"	v	module:amhglobals
idx	optim.ttm3f.f90	/^integer, dimension(245,3) :: idx$/;"	v	module:mnasa_mod
idxD	optim.ttm3f.f90	/^integer, dimension(84 ,3) :: idxD$/;"	v	module:mnasa_mod
idxm	optim.ttm3f.f90	/^integer, dimension(9,3) :: idxm$/;"	v	module:mnasa_mod
ienwat	optim.modamber9.f90	/^      ibgwat,ienwat,/;"	v	module:modamber9
ier	optim.modamber9.f90	/^integer ier$/;"	v	module:modamber9
iesp	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,/;"	v	module:modamber9
ievb	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,/;"	v	module:modamber9
ievbeta	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,/;"	v	module:amhglobals
ievgamma	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,/;"	v	module:amhglobals
iexcld	optim.amhglobals.f	/^      logical iexcld$/;"	v	module:amhglobals
iexcld_beta	optim.amhglobals.f	/^      logical iexcld_gamma,iexcld_beta$/;"	v	module:amhglobals
iexcld_gamma	optim.amhglobals.f	/^      logical iexcld_gamma,/;"	v	module:amhglobals
ifbox	optim.modamber9.f90	/^integer ntb,ifbox,/;"	v	module:modamber9
ifcap	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,/;"	v	module:modamber9
ifpert	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,/;"	v	module:modamber9
ifswitch	optim.modamber9.f90	/^integer ifswitch,/;"	v	module:modamber9
ig	optim.modamber9.f90	/^integer nrp,nspm,ig,/;"	v	module:modamber9
igamma	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,/;"	v	module:amhglobals
igb	optim.modamber9.f90	/^      iwatpr,nsolw,igb,/;"	v	module:modamber9
igomb	optim.amhglobals.f	/^      logical igomb$/;"	v	module:amhglobals
ih	optim.modamber9.f90	/^   character(len=4), dimension(:), allocatable :: ih$/;"	v	module:modamber9
ihbond	optim.amhglobals.f	/^     *        iss_bias,ihbond,/;"	v	module:amhglobals
ihomol	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,itargseqs,ihomol,/;"	v	module:amhglobals
ihwtnm	optim.modamber9.f90	/^character(len=4) iwtnm,iowtnm,ihwtnm$/;"	v	module:modamber9
iiba	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,/;"	v	module:modamber9
iibh	optim.modamber9.f90	/^      mxsub,natyp,npdec,i02,i04,i06,i08,i10, &$/;"	v	module:modamber9
iicba	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,iicba,/;"	v	module:modamber9
iicbh	optim.modamber9.f90	/^      iibh,ijbh,iicbh,/;"	v	module:modamber9
iifstwr	optim.modamber9.f90	/^      iifstwt,iifstwr,/;"	v	module:modamber9
iifstwt	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,i01, &$/;"	v	module:modamber9
ijba	optim.modamber9.f90	/^      iibh,ijbh,iicbh,iiba,ijba,/;"	v	module:modamber9
ijbh	optim.modamber9.f90	/^      iibh,ijbh,/;"	v	module:modamber9
ilong	optim.amhglobals.f	/^      integer ilong(/;"	v	module:amhglobals
imask1	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy, &$/;"	v	module:modamber9
imask2	optim.modamber9.f90	/^      imask1,imask2,/;"	v	module:modamber9
imat	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,oecorr,imat,/;"	v	module:amhglobals
imem_cons	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,icon,imem_cons,/;"	v	module:amhglobals
imemri	optim.amhglobals.f	/^      integer imemri,/;"	v	module:amhglobals
imin	optim.modamber9.f90	/^      ntrx,npscal,imin,/;"	v	module:modamber9
imoviein	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,/;"	v	module:amhglobals
impderivs	optim.amber.f	/^      SUBROUTINE impderivs$/;"	s
imphell	optim.modamber.f90	/^      DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: BONDHELL,ANGLEHELL,TORSHELL,  &$/;"	v	module:MODAMBER
incmov	optim.amhglobals.f	/^      integer incmov$/;"	v	module:amhglobals
index	pathsample.GT2data.f90	/^          integer :: degree,d,index,/;"	k	type:Node
index	pathsample.kshortestpaths.f90	/^   INTEGER :: index /;"	k	type:edge
index	pathsample.kshortestpaths.f90	/^   INTEGER :: index /;"	k	type:node
index_next	pathsample.kshortestpaths.f90	/^INTEGER, ALLOCATABLE :: index_next(/;"	v	module:GRAPH
index_start	pathsample.kshortestpaths.f90	/^INTEGER, ALLOCATABLE :: index_next(:), index_start(/;"	v	module:GRAPH
indexarrayc	pathsample.dock.f90	/^integer, allocatable :: indexarrayl(:),indexarrayc(/;"	v	module:DOCKMODULE
indexarrayl	pathsample.dock.f90	/^integer, allocatable :: indexarrayl(/;"	v	module:DOCKMODULE
indexarrayp	pathsample.dock.f90	/^integer, allocatable :: indexarrayl(:),indexarrayc(:),indexarrayp(/;"	v	module:DOCKMODULE
indexorig	pathsample.GT2data.f90	/^          integer :: degree,d,index,indexorig /;"	k	type:Node
induced	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,/;"	v	module:modamber9
inertiaWrapper	pathsample.inertia.f	/^      subroutine inertiaWrapper(/;"	s
init	optim.modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,/;"	v	module:modamber9
init_ttm3f	optim.ttm3f.f90	/^subroutine init_ttm3f(/;"	s
initialiseInteractionMap	pathsample.rigidbody.f90	/^  subroutine initialiseInteractionMap$/;"	s	module:rigidbody
initialiseInteractionMap	pathsample.rigidbodymod.f90	/^  subroutine initialiseInteractionMap$/;"	s	module:rigidbodymod
initialiseRigidBody	pathsample.rigidbody.f90	/^  subroutine initialiseRigidBody /;"	s	module:rigidbody
initialiseRigidBody	pathsample.rigidbodymod.f90	/^  subroutine initialiseRigidBody /;"	s	module:rigidbodymod
inmr02	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,/;"	v	module:modamber9
inpcrd	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd,/;"	v	module:modamber9
inpdip	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,inpdip,/;"	v	module:modamber9
input_amh	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,/;"	v	module:amhglobals
intdiel	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,/;"	v	module:modamber9
inter	optim.VRTMCY5f.f90	/^real*8 function inter(/;"	f	module:MCY
intreq	optim.modamber9.f90	/^integer       intreq,/;"	v	module:modamber9
inverse	optim.mindist.f	/^        subroutine inverse(/;"	s
inverse	pathsample.mindist.f	/^        subroutine inverse(/;"	s
iorwat	optim.modamber9.f90	/^      ibgwat,ienwat,iorwat,/;"	v	module:modamber9
ios	optim.modamber.f90	/^      INTEGER  a,b,ios,/;"	v	module:MODAMBER
ioutfm	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,/;"	v	module:modamber9
iowtnm	optim.modamber9.f90	/^character(len=4) iwtnm,iowtnm,/;"	v	module:modamber9
ipairs	optim.modamber9.f90	/^   integer, dimension(:), allocatable :: ipairs$/;"	v	module:modamber9
iphi	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,iphi,/;"	v	module:amhglobals
ipnlty	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,/;"	v	module:modamber9
ipol	optim.modamber9.f90	/^      neb,vv,tmode,ipol,/;"	v	module:modamber9
iprint	optim.modamber9.f90	/^integer nmropt,iprint,/;"	v	module:modamber9
iprolst	optim.amhglobals.f	/^      integer imemri,iprolst,/;"	v	module:amhglobals
iprolstscl	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,/;"	v	module:amhglobals
iprr	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,/;"	v	module:modamber9
iprw	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,inmr02,iprr,iprw$/;"	v	module:modamber9
iran	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,/;"	v	module:amhglobals
iredir	optim.modamber9.f90	/^integer iredir(/;"	v	module:modamber9
ires	optim.amhglobals.f	/^      integer ilong(maxcnt,2,maxtab),numlng(0:AMHmaxsiz,maxtab),ires(/;"	v	module:amhglobals
irespa	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,/;"	v	module:modamber9
irespa2	optim.modamber9.f90	/^integer ifswitch, irespa2,/;"	v	module:modamber9
iresrt	optim.amhglobals.f	/^      logical iresrt$/;"	v	module:amhglobals
irest	optim.modamber9.f90	/^      ntmin,irest,/;"	v	module:modamber9
irlreq	optim.modamber9.f90	/^integer       intreq,irlreq,/;"	v	module:modamber9
iscale	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,/;"	v	module:modamber9
ischrgd	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,   ischrgd,/;"	v	module:modamber9
iscltab	optim.amhglobals.f	/^      logical iscltab$/;"	v	module:amhglobals
iseed_amh	optim.amhglobals.f	/^      integer iseed_amh(/;"	v	module:amhglobals
isftrp	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,isftrp$/;"	v	module:modamber9
ishake	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,/;"	v	module:modamber9
isolvp	optim.modamber9.f90	/^      ntcm,nscm,isolvp,/;"	v	module:modamber9
iss_bias	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,oecorr,imat,$/;"	v	module:amhglobals
iss_struct	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,iphi,icontacts,$/;"	v	module:amhglobals
it1	optim.amhglobals.f	/^      integer it1,/;"	v	module:amhglobals
it2	optim.amhglobals.f	/^      integer it1,it2,/;"	v	module:amhglobals
it3	optim.amhglobals.f	/^      integer it1,it2,it3,/;"	v	module:amhglobals
it4	optim.amhglobals.f	/^      integer it1,it2,it3,it4,/;"	v	module:amhglobals
it5	optim.amhglobals.f	/^      integer it1,it2,it3,it4,it5$/;"	v	module:amhglobals
itarg_seq	optim.amhglobals.f	/^     *        iss_struct,itarg_seq$/;"	v	module:amhglobals
itargseqs	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,itargseqs,/;"	v	module:amhglobals
itgrd	optim.amhglobals.f	/^      integer itgrd(/;"	v	module:amhglobals
itgtfitgp	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,/;"	v	module:modamber9
itgtrmsgp	optim.modamber9.f90	/^      icnstrgp,itgtfitgp,itgtrmsgp,/;"	v	module:modamber9
iuse	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,/;"	v	module:modamber9
ivcap	optim.modamber9.f90	/^      rbornstat,ivcap,/;"	v	module:modamber9
iwatpr	optim.modamber9.f90	/^      ibgwat,ienwat,iorwat,              &!36$/;"	v	module:modamber9
iwork	optim.amhglobals.f	/^      integer iwork(/;"	v	module:amhglobals
iwrap	optim.modamber9.f90	/^      gbsa,vrand,iwrap,/;"	v	module:modamber9
iwtnm	optim.modamber9.f90	/^character(len=4) iwtnm,/;"	v	module:modamber9
ix	optim.modamber9.f90	/^   integer, dimension(:), allocatable, target :: ix$/;"	v	module:modamber9
ixn_from_site	optim.amhglobals.f	/^      integer ixn_from_site(/;"	v	module:amhglobals
iyammp	optim.modamber9.f90	/^      iwatpr,nsolw,igb,alpb,iyammp,/;"	v	module:modamber9
j	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,/;"	v	module:MODAMBER
jacobi	optim.msevb.f90	/^      SUBROUTINE jacobi(/;"	s
jar	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,jar$/;"	v	module:modamber9
jfastw	optim.modamber9.f90	/^      ntmin,irest,jfastw,/;"	v	module:modamber9
jres	optim.amhglobals.f	/^     *        mempre(maxres,maxtab),jres(/;"	v	module:amhglobals
k	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,/;"	v	module:MODAMBER
k	pathsample.kshortestpaths.f90	/^   INTEGER :: k /;"	k	type:path
kappa	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,  & !25$/;"	v	module:modamber9
kappa_rg	optim.amhglobals.f	/^      double precision D_rg, T_rg, delR_rg, M_rg, kappa_rg$/;"	v	module:amhglobals
kevb	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,kevb,/;"	v	module:modamber9
keyword	main.pl	/^sub keyword {$/;"	s
keyword	main.pl~	/^sub keyword {$/;"	s
klambda	optim.modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,klambda,/;"	v	module:modamber9
known	optim.amhglobals.f	/^      logical known$/;"	v	module:amhglobals
l	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,/;"	v	module:MODAMBER
l	pathsample.kshortestpaths.f90	/^   DOUBLE PRECISION :: l /;"	k	type:edge
l	pathsample.kshortestpaths.f90	/^   DOUBLE PRECISION :: l /;"	k	type:path
l105	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp, &$/;"	v	module:modamber9
l110	optim.modamber9.f90	/^      l105,l110,/;"	v	module:modamber9
l115	optim.modamber9.f90	/^      l105,l110,l115,/;"	v	module:modamber9
l120	optim.modamber9.f90	/^      l105,l110,l115,l120,/;"	v	module:modamber9
l125	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,/;"	v	module:modamber9
l130	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,/;"	v	module:modamber9
l135	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,/;"	v	module:modamber9
l140	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,/;"	v	module:modamber9
l145	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,/;"	v	module:modamber9
l15	optim.modamber9.f90	/^      icpstinf,icpresst,icptrsct, icpptcnt, &$/;"	v	module:modamber9
l150	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150,/;"	v	module:modamber9
l165	optim.modamber9.f90	/^      l105,l110,l115,l120,l125,l130,l135,l140,l145,l150, &$/;"	v	module:modamber9
l170	optim.modamber9.f90	/^      l165,l170,/;"	v	module:modamber9
l175	optim.modamber9.f90	/^      l165,l170,l175,/;"	v	module:modamber9
l180	optim.modamber9.f90	/^      l165,l170,l175,l180,/;"	v	module:modamber9
l185	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,/;"	v	module:modamber9
l186	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,/;"	v	module:modamber9
l187	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,/;"	v	module:modamber9
l188	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,/;"	v	module:modamber9
l189	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,/;"	v	module:modamber9
l190	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190,/;"	v	module:modamber9
l36	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,/;"	v	module:modamber9
l45	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,/;"	v	module:modamber9
l50	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50,/;"	v	module:modamber9
l60	optim.modamber9.f90	/^      lcrdr,l60,/;"	v	module:modamber9
l65	optim.modamber9.f90	/^      lcrdr,l60,l65,/;"	v	module:modamber9
l75	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,/;"	v	module:modamber9
l80	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,/;"	v	module:modamber9
l85	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,/;"	v	module:modamber9
l90	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,/;"	v	module:modamber9
l95	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,/;"	v	module:modamber9
l96	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,/;"	v	module:modamber9
l97	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,/;"	v	module:modamber9
l98	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,/;"	v	module:modamber9
l99	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,/;"	v	module:modamber9
lH	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH,/;"	v	module:ttm3f_mod
lH3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3, lH3,/;"	v	module:ttm3f_mod
lM	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM,/;"	v	module:ttm3f_mod
lM3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3, fH3, lH3, fM3, lM3$/;"	v	module:ttm3f_mod
lO	optim.ttm3f.f90	/^integer :: fO, lO,/;"	v	module:ttm3f_mod
lO3	optim.ttm3f.f90	/^integer :: fO, lO, fH, lH, fM, lM, fO3, lO3,/;"	v	module:ttm3f_mod
label	optim.modamber.f90	/^      CHARACTER, ALLOCATABLE, DIMENSION(:) ::  label$/;"	v	module:MODAMBER
lambdaR	optim.amhglobals.f	/^        double precision lambdaR$/;"	v	module:amhglobals
lasth	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth,/;"	v	module:modamber9
lasti	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,/;"	v	module:modamber9
lastpr	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,lasti,lasth, &$/;"	v	module:modamber9
lastr	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,lastr,/;"	v	module:modamber9
lcpcrg	optim.modamber9.f90	/^      l165,l170,l175,l180,l185,l186,l187,l188,l189,l190, &$/;"	v	module:modamber9
lcpene	optim.modamber9.f90	/^      lcpcrg,lcpene,/;"	v	module:modamber9
lcrd	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,/;"	v	module:modamber9
lcrdr	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,l45,l50, &$/;"	v	module:modamber9
left	pathsample.GT2data.f90	/^          type(Node),pointer :: left,/;"	k	type:Node
lenfun	optim.amhglobals.f	/^      integer lenfun$/;"	v	module:amhglobals
lenic	optim.modamber9.f90	/^integer:: lenic$/;"	v	module:modamber9
lesfac	optim.modamber9.f90	/^double precision lesfac(/;"	v	module:modamber9
lesr	optim.modamber9.f90	114;"	c	module:modamber9
lfac	optim.modamber9.f90	/^double precision lesfac(maxlestyp*maxlestyp),lfac$/;"	v	module:modamber9
lforce	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,/;"	v	module:modamber9
lfrctmp	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,l75,l80,l85,l90,l95,l96,l97,l98,l99,lfrctmp,/;"	v	module:modamber9
lfsg	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,/;"	v	module:modamber9
ligcartstep	optim.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep,/;"	v	module:modamber9
ligmovefreq	optim.modamber9.f90	/^      INTEGER :: ligmovefreq$/;"	v	module:modamber9
ligrotscale	optim.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale,/;"	v	module:modamber9
ligtransstep	optim.modamber9.f90	/^      DOUBLE PRECISION :: ligrotscale, ligcartstep, ligtransstep$/;"	v	module:modamber9
lmass	optim.modamber9.f90	/^      lcrdr,l60,l65,lmass,/;"	v	module:modamber9
lnmr01	optim.modamber9.f90	/^integer       intreq,irlreq,lnmr01,/;"	v	module:modamber9
loopatom	optim.modamber.f90	/^      INTEGER loopatom(/;"	v	module:MODAMBER
lpol	optim.modamber9.f90	/^      l15,lwinv,lpol,/;"	v	module:modamber9
lpolp	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp,/;"	v	module:modamber9
lvel	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,/;"	v	module:modamber9
lvel2	optim.modamber9.f90	/^      l15,lwinv,lpol,lcrd,lforce,l36,lvel,lvel2,/;"	v	module:modamber9
lvsg	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,/;"	v	module:modamber9
lwinv	optim.modamber9.f90	/^      l15,lwinv,/;"	v	module:modamber9
lwork	optim.SD.f90	/^integer :: lwork$/;"	v	module:SDwater
m02	optim.modamber9.f90	/^      lcpcrg,lcpene, &$/;"	v	module:modamber9
m04	optim.modamber9.f90	/^      m02,m04,/;"	v	module:modamber9
m06	optim.modamber9.f90	/^      m02,m04,m06,/;"	v	module:modamber9
m08	optim.modamber9.f90	/^      m02,m04,m06,m08,/;"	v	module:modamber9
m10	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,/;"	v	module:modamber9
m12	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,/;"	v	module:modamber9
m14	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,/;"	v	module:modamber9
m16	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,/;"	v	module:modamber9
m18	optim.modamber9.f90	/^      m02,m04,m06,m08,m10,m12,m14,m16,m18,/;"	v	module:modamber9
mark	pathsample.GT2data.f90	/^          logical :: FH,mark$/;"	k	type:Node
mass	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)), allocatable :: mass(/;"	k	type:rigidbodyPotential
mass	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, allocatable :: mass(/;"	k	type:rigidbodyPotential
master	optim.modamber9.f90	/^logical master$/;"	v	module:modamber9
match	optim.modamber.f90	/^      INTEGER  match,/;"	v	module:MODAMBER
mathsConstants	pathsample.mathsconstants.f90	/^MODULE mathsConstants$/;"	m
maxNumVBstates	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,ground_state,reduced_num_eig,maxNumVBstates$/;"	v	module:msevb_common
max_contact_order_terms	optim.amhglobals.f	/^      integer, parameter:: max_contact_order_terms=/;"	v	module:amhglobals
max_letters	optim.amhglobals.f	/^      integer max_letters$/;"	v	module:amhglobals
max_well	optim.amhglobals.f	/^        integer max_well$/;"	v	module:amhglobals
maxcnt	optim.amhglobals.f	/^        integer maxcnt$/;"	v	module:amhglobals
maxcrd	optim.amhglobals.f	/^      integer maxcrd$/;"	v	module:amhglobals
maxcyc	optim.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,/;"	v	module:modamber9
maxdup	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,/;"	v	module:modamber9
maxles	optim.modamber9.f90	/^integer maxles,/;"	v	module:modamber9
maxlesadj	optim.modamber9.f90	/^integer maxles,maxlestyp,maxlesadj$/;"	v	module:modamber9
maxlestyp	optim.modamber9.f90	/^integer maxles,maxlestyp,/;"	v	module:modamber9
maxmem	optim.amhglobals.f	/^      integer maxmem$/;"	v	module:amhglobals
maxmem	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,/;"	v	module:modamber9
maxmov	optim.amhglobals.f	/^      integer maxmov$/;"	v	module:amhglobals
maxmr	optim.amhglobals.f	/^      integer minmr,maxmr$/;"	v	module:amhglobals
maxpro	optim.amhglobals.f	/^      integer maxpro$/;"	v	module:amhglobals
maxr	optim.amhglobals.f	/^      integer maxr,/;"	v	module:amhglobals
maxres	optim.amhglobals.f	/^      integer maxres$/;"	v	module:amhglobals
maxs	optim.amhglobals.f	/^      integer maxr,maxs$/;"	v	module:amhglobals
maxsec	optim.amhglobals.f	/^      integer maxsec$/;"	v	module:amhglobals
maxseq	optim.amhglobals.f	/^      integer maxseq,/;"	v	module:amhglobals
maxsub	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,iscale,ipnlty,iuse,maxsub,/;"	v	module:modamber9
maxtab	optim.amhglobals.f	/^      integer maxtab$/;"	v	module:amhglobals
mc	main.pl	/^sub mc {$/;"	s
mc	main.pl~	/^sub mc {$/;"	s
mdcrd	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd,/;"	v	module:modamber9
mddip	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,mddip,/;"	v	module:modamber9
mden	optim.modamber9.f90	/^      refc, mdvel, mden,/;"	v	module:modamber9
mdiamber	optim.modamber9.f90	187;"	c	module:modamber9
mdin	optim.modamber9.f90	/^character(len=256) mdin,/;"	v	module:modamber9
mdinfo	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo,/;"	v	module:modamber9
mdout	optim.modamber9.f90	/^character(len=256) mdin, mdout,/;"	v	module:modamber9
mdr	optim.modamber9.f90	158;"	c	module:modamber9
mds	optim.modamber9.f90	169;"	c	module:modamber9
mdvel	optim.modamber9.f90	/^      refc, mdvel,/;"	v	module:modamber9
meane	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,meane(/;"	v	module:DOCKMODULE
mem_cons	optim.amhglobals.f	/^      logical ave_seq,targ_cons, mem_cons,/;"	v	module:amhglobals
memory	optim.modamber9.f90	232;"	c	module:modamber9
mempre	optim.amhglobals.f	/^     *        sa(maxres),tarpre(maxres,maxtab),$/;"	v	module:amhglobals
min_seq_sep	optim.amhglobals.f	/^      integer n_letters,min_seq_sep,/;"	v	module:amhglobals
mincor	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor,/;"	v	module:modamber9
minmr	optim.amhglobals.f	/^      integer minmr,/;"	v	module:amhglobals
minnode	pathsample.kshortestpaths.f90	/^TYPE(node), TARGET, ALLOCATABLE :: minnode(/;"	v	module:GRAPH
minperm	optim.minperm.f	/^      subroutine minperm(/;"	s
minperm	pathsample.minperm.f	/^      subroutine minperm(/;"	s
mismatch	optim.amhglobals.f	/^        logical i_ignore_chain_dirn,mismatch$/;"	v	module:amhglobals
mmtsb_setup_file	optim.modamber9.f90	/^      cpin, cpout, cprestrt, evbin, evbout, mmtsb_setup_file$/;"	v	module:modamber9
mnasa_mod	optim.ttm3f.f90	/^module mnasa_mod$/;"	m
modamber9	optim.modamber9.f90	/^      MODULE modamber9 /;"	m
modcharmm	optim.modcharmm.f90	/^MODULE modcharmm$/;"	m
monomerMass	pathsample.rigidbody.f90	/^  function monomerMass /;"	f	module:rigidbody
monomerMass	pathsample.rigidbodymod.f90	/^  function monomerMass /;"	f	module:rigidbodymod
monomerToAA	pathsample.rigidbody.f90	/^  subroutine monomerToAA /;"	s	module:rigidbody
monomerToAA	pathsample.rigidbodymod.f90	/^  subroutine monomerToAA /;"	s	module:rigidbodymod
monomerToCartesians	pathsample.rigidbody.f90	/^  subroutine monomerToCartesians /;"	s	module:rigidbody
monomerToCartesians	pathsample.rigidbodymod.f90	/^  subroutine monomerToCartesians /;"	s	module:rigidbodymod
morseParameters	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)), allocatable :: morseParameters(/;"	k	type:rigidbodyPotential
morseParameters	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION, allocatable :: morseParameters(/;"	k	type:rigidbodyPotential
movanal	optim.amhglobals.f	/^      logical movanal$/;"	v	module:amhglobals
mpoltype	optim.modamber9.f90	/^      fix_quad,  mpoltype,/;"	v	module:modamber9
msevb	optim.msevb.f90	/^     subroutine msevb(/;"	s
msevb_common	optim.msevb_common.f90	/^MODULE msevb_common$/;"	m
msevb_interfaces	optim.msevb_interfaces.f90	/^MODULE msevb_interfaces$/;"	m
mxadjmsk	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,/;"	v	module:modamber9
mxlevl	optim.amhglobals.f	/^      integer mxlevl,/;"	v	module:amhglobals
mxsct	optim.amhglobals.f	/^      integer mxlevl,mxsct$/;"	v	module:amhglobals
mxsub	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs, &$/;"	v	module:modamber9
mxtemp	optim.amhglobals.f	/^      integer mxtemp,/;"	v	module:amhglobals
my_dijkstra	pathsample.kshortestpaths.f90	/^SUBROUTINE my_dijkstra(/;"	s
n	pathsample.GT2FibonacciHeap.f90	/^     int/;"	v	module:FibonacciHeapModule
nBasalSites	pathsample.rigidbody.f90	/^     integer :: nBasalSites$/;"	k	type:capsomer
nBasalSites	pathsample.rigidbodymod.f90	/^     integer :: nBasalSites$/;"	k	type:capsomer
nPhysicalSites	pathsample.rigidbody.f90	/^     integer :: nPhysicalSites /;"	k	type:rigidbodyPotential
nPhysicalSites	pathsample.rigidbodymod.f90	/^     integer :: nPhysicalSites /;"	k	type:rigidbodyPotential
nSites	pathsample.rigidbody.f90	/^     integer :: nSites$/;"	k	type:rigidbodyPotential
nSites	pathsample.rigidbodymod.f90	/^     integer :: nSites$/;"	k	type:rigidbodyPotential
n_Q_anneal_a	optim.amhglobals.f	/^      integer n_Q_anneal_a,/;"	v	module:amhglobals
n_Q_anneal_b	optim.amhglobals.f	/^      integer n_Q_anneal_a,n_Q_anneal_b$/;"	v	module:amhglobals
n_Qbias_a	optim.amhglobals.f	/^      integer nbiaspoly,n_Qbias_a,/;"	v	module:amhglobals
n_Qbias_b	optim.amhglobals.f	/^      integer n_Qbias_b,/;"	v	module:amhglobals
n_Rg_bias	optim.amhglobals.f	/^      integer n_Rg_bias$/;"	v	module:amhglobals
n_amb_calls	optim.modamber9.f90	/^      INTEGER :: n_amb_calls=/;"	v	module:modamber9
n_contact_order_terms	optim.amhglobals.f	/^      integer n_contact_order_terms$/;"	v	module:amhglobals
n_divs_max	optim.amhglobals.f	/^      integer n_divs_max$/;"	v	module:amhglobals
n_letters	optim.amhglobals.f	/^      integer n_letters,/;"	v	module:amhglobals
n_letters_con	optim.amhglobals.f	/^      integer n_letters,min_seq_sep,num_well,n_letters_con$/;"	v	module:amhglobals
n_rep_con	optim.amhglobals.f	/^      integer n_rep_con(/;"	v	module:amhglobals
natbel	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,/;"	v	module:modamber9
natc	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm, &$/;"	v	module:modamber9
natcap	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,ifcap,natcap,/;"	v	module:modamber9
native	optim.modamber9.f90	/^   integer native,/;"	v	module:modamber9
natom	optim.modamber9.f90	/^integer       natom,/;"	v	module:modamber9
natomscomplex	pathsample.dock.f90	/^integer :: natomsligand, natomscomplex,/;"	v	module:DOCKMODULE
natomsligand	pathsample.dock.f90	/^integer :: natomsligand,/;"	v	module:DOCKMODULE
natomsprotein	pathsample.dock.f90	/^integer :: natomsligand, natomscomplex, natomsprotein,/;"	v	module:DOCKMODULE
nattgtfit	optim.modamber9.f90	/^      natc,nattgtfit,/;"	v	module:modamber9
nattgtrms	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,/;"	v	module:modamber9
natyp	optim.modamber9.f90	/^      mxsub,natyp,/;"	v	module:modamber9
nbiaspoly	optim.amhglobals.f	/^      integer nbiaspoly,/;"	v	module:amhglobals
nbit	optim.modamber9.f90	/^integer ntb,ifbox,numpk,nbit,/;"	v	module:modamber9
nbona	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,/;"	v	module:modamber9
nbonh	optim.modamber9.f90	/^integer       natom,nres,nbonh,/;"	v	module:modamber9
nbper	optim.modamber9.f90	/^      lastpr,nbper,/;"	v	module:modamber9
nconp	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,/;"	v	module:modamber9
ncopy	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,ifpert,lpolp, ncopy,/;"	v	module:modamber9
ncyc	optim.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,/;"	v	module:modamber9
ndfmin	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,/;"	v	module:modamber9
ndper	optim.modamber9.f90	/^      lastpr,nbper,ngper,ndper,/;"	v	module:modamber9
neb	optim.modamber9.f90	/^      rbornstat,ivcap,iconstreff,        &!51$/;"	v	module:modamber9
netfrc	optim.modamber9.f90	/^integer verbose,netfrc,/;"	v	module:modamber9
newstyle	optim.modamber9.f90	/^logical newstyle,/;"	v	module:modamber9
next	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: next /;"	k	type:path
next_path	pathsample.kshortestpaths.f90	/^RECURSIVE SUBROUTINE next_path(/;"	s
nextpred	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: nextpred /;"	k	type:edge
nextsucc	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: nextsucc /;"	k	type:edge
ngamma_non_add	optim.amhglobals.f	/^      integer, parameter:: ngamma_non_add=/;"	v	module:amhglobals
ngomb	optim.amhglobals.f	/^      double precision ngomb$/;"	v	module:amhglobals
ngper	optim.modamber9.f90	/^      lastpr,nbper,ngper,/;"	v	module:modamber9
nhb	optim.modamber9.f90	/^   integer numphi,nttyp,nhb$/;"	v	module:modamber9
nholb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,/;"	v	module:modamber9
nintb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,/;"	v	module:modamber9
nmdif	optim.amhglobals.f	/^      integer nmdif$/;"	v	module:amhglobals
nmr1amber	optim.modamber9.f90	89;"	c	module:modamber9
nmrf	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf,/;"	v	module:modamber9
nmropt	optim.modamber9.f90	/^integer nmropt,/;"	v	module:modamber9
nmrrdr	optim.modamber9.f90	85;"	c	module:modamber9
nmrstf	optim.modamber9.f90	315;"	c	module:modamber9
nmstep	optim.amhglobals.f	/^      integer nmstep$/;"	v	module:amhglobals
nmtemp	optim.amhglobals.f	/^      integer mxtemp,nmtemp$/;"	v	module:amhglobals
nmxrs	optim.modamber9.f90	/^      natc,nattgtfit,nattgtrms,ibelly,natbel,ishake,nmxrs,/;"	v	module:modamber9
nnb	optim.modamber9.f90	/^      nphia,nnb,/;"	v	module:modamber9
node	pathsample.kshortestpaths.f90	/^   TYPE(node)/;"	k	type:path
node	pathsample.kshortestpaths.f90	/^TYPE node$/;"	t	module:GRAPH
nodeid	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,/;"	v	module:modamber9
noeskp	optim.modamber9.f90	/^integer nmropt,iprint,noeskp,/;"	v	module:modamber9
noshake	optim.modamber9.f90	/^      imask1,imask2,numadjst,mxadjmsk,icphidx,icptpair,lfsg,lvsg,noshake$/;"	v	module:modamber9
noshakemask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,noshakemask$/;"	v	module:modamber9
npairb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,nintb,nholb,npairb,/;"	v	module:modamber9
nparm	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,nparm,/;"	v	module:modamber9
npdec	optim.modamber9.f90	/^      mxsub,natyp,npdec,/;"	v	module:modamber9
nphia	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih, &$/;"	v	module:modamber9
nphih	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,nphih,/;"	v	module:modamber9
npscal	optim.modamber9.f90	/^      ntrx,npscal,/;"	v	module:modamber9
nquench	optim.amhglobals.f	/^      integer nquench$/;"	v	module:amhglobals
nr	optim.modamber9.f90	/^   integer native,nr3/;"	v	module:modamber9
nr3	optim.modamber9.f90	/^   integer native,nr3,/;"	v	module:modamber9
nrc	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,/;"	v	module:modamber9
nrealb	optim.modamber9.f90	/^      iifstwt,iifstwr,nrealb,/;"	v	module:modamber9
nres	optim.modamber9.f90	/^integer       natom,nres,/;"	v	module:modamber9
nrespa	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,/;"	v	module:modamber9
nrespa2	optim.modamber9.f90	/^integer ifswitch, irespa2, nrespa2$/;"	v	module:modamber9
nrespai	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,/;"	v	module:modamber9
nrp	optim.modamber9.f90	/^integer nrp,/;"	v	module:modamber9
nscm	optim.modamber9.f90	/^      ntcm,nscm,/;"	v	module:modamber9
nseg	optim.modamber9.f90	/^integer:: nseg$/;"	v	module:modamber9
nsnb	optim.modamber9.f90	/^      ntnb,nsnb,/;"	v	module:modamber9
nsolut	optim.modamber9.f90	/^      ntcm,nscm,isolvp,nsolut,/;"	v	module:modamber9
nsolw	optim.modamber9.f90	/^      iwatpr,nsolw,/;"	v	module:modamber9
nspm	optim.modamber9.f90	/^integer nrp,nspm,/;"	v	module:modamber9
nstlim	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,/;"	v	module:modamber9
ntave	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,ntave$/;"	v	module:modamber9
ntb	optim.modamber9.f90	/^integer ntb,/;"	v	module:modamber9
ntc	optim.modamber9.f90	/^      ntcm/;"	v	module:modamber9
ntcc	optim.modamber9.f90	/^      ntc,ntcc,/;"	v	module:modamber9
ntcm	optim.modamber9.f90	/^      ntxo,ntt,ntp,ntr,init,             &!10$/;"	v	module:modamber9
ntcnstph	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,/;"	v	module:modamber9
ntcx	optim.modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,/;"	v	module:modamber9
ntf	optim.modamber9.f90	/^      ntc,ntcc,ntf,/;"	v	module:modamber9
ntheta	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,ntheta,/;"	v	module:modamber9
ntheth	optim.modamber9.f90	/^integer       natom,nres,nbonh,nbona,ntheth,/;"	v	module:modamber9
ntid	optim.modamber9.f90	/^      ntc,ntcc,ntf,ntid,/;"	v	module:modamber9
ntmin	optim.modamber9.f90	/^      ntrx,npscal,imin,maxcyc,ncyc,      &!30$/;"	v	module:modamber9
ntn	optim.modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,/;"	v	module:modamber9
ntnb	optim.modamber9.f90	/^      ntc,ntcc,ntf,ntid,ntn,             &!20$/;"	v	module:modamber9
ntp	optim.modamber9.f90	/^      ntxo,ntt,ntp,/;"	v	module:modamber9
ntpp	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,/;"	v	module:modamber9
ntpr	optim.modamber9.f90	/^integer     ntpr,/;"	v	module:modamber9
ntr	optim.modamber9.f90	/^      ntxo,ntt,ntp,ntr,/;"	v	module:modamber9
ntrx	optim.modamber9.f90	/^      ntnb,nsnb,ndfmin,nstlim,nrc,       &!25$/;"	v	module:modamber9
ntt	optim.modamber9.f90	/^      ntxo,ntt,/;"	v	module:modamber9
nttyp	optim.modamber9.f90	/^   integer numphi,nttyp,/;"	v	module:modamber9
ntwe	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,/;"	v	module:modamber9
ntwprt	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,ntwe,ntpp,ioutfm,ntwprt,/;"	v	module:modamber9
ntwr	optim.modamber9.f90	/^integer     ntpr,ntwr,/;"	v	module:modamber9
ntwv	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,ntwv,/;"	v	module:modamber9
ntwx	optim.modamber9.f90	/^integer     ntpr,ntwr,ntwx,/;"	v	module:modamber9
ntx	optim.modamber9.f90	/^integer nrp,nspm,ig,ntx,/;"	v	module:modamber9
ntxo	optim.modamber9.f90	/^integer nrp,nspm,ig,ntx,ntcx,           &!5$/;"	v	module:modamber9
ntypes	optim.modamber9.f90	/^      nphia,nnb,ntypes,/;"	v	module:modamber9
numRBtypes	pathsample.rigidbody.f90	/^  integer :: numRBtypes$/;"	v	module:rigidbody
numRBtypes	pathsample.rigidbodymod.f90	/^  integer :: numRBtypes$/;"	v	module:rigidbodymod
num_eig	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,/;"	v	module:msevb_common
num_foldon_a	optim.amhglobals.f	/^       integer num_foldon_a,/;"	v	module:amhglobals
num_foldon_b	optim.amhglobals.f	/^       integer num_foldon_a,num_foldon_b,/;"	v	module:amhglobals
num_hyd	optim.msevb_common.f90	/^  INTEGER :: num_hyd,/;"	v	module:msevb_common
num_noshake	optim.modamber9.f90	/^      neb,vv,tmode,ipol,iesp,ievb,nodeid,num_noshake,/;"	v	module:modamber9
num_well	optim.amhglobals.f	/^      integer n_letters,min_seq_sep,num_well,/;"	v	module:amhglobals
numadjst	optim.modamber9.f90	/^      imask1,imask2,numadjst,/;"	v	module:modamber9
numconst_a	optim.amhglobals.f	/^      integer seglist_a(maxres), seglist_b(maxres),$/;"	v	module:amhglobals
numconst_b	optim.amhglobals.f	/^     *        numconst_a,i_ixn_Qbias_b(maxres,maxres),$/;"	v	module:amhglobals
numcrd	optim.amhglobals.f	/^      integer numcrd,/;"	v	module:amhglobals
numergrad	optim.amber.f	/^      SUBROUTINE numergrad$/;"	s
numexchg	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,/;"	v	module:modamber9
numlng	optim.amhglobals.f	/^      integer ilong(maxcnt,2,maxtab),numlng(/;"	v	module:amhglobals
nummem	optim.amhglobals.f	/^      integer nummem$/;"	v	module:amhglobals
numphi	optim.modamber9.f90	/^   integer numphi,/;"	v	module:modamber9
numpk	optim.modamber9.f90	/^integer ntb,ifbox,numpk,/;"	v	module:modamber9
numpro	optim.amhglobals.f	/^      integer numpro$/;"	v	module:amhglobals
numseq	optim.amhglobals.f	/^      integer maxseq,numseq,/;"	v	module:amhglobals
numseq_amc	optim.amhglobals.f	/^      integer numseq_amc$/;"	v	module:amhglobals
numseq_amw	optim.amhglobals.f	/^      integer maxseq,numseq,numseq_hb,numseq_amw$/;"	v	module:amhglobals
numseq_hb	optim.amhglobals.f	/^      integer maxseq,numseq,numseq_hb,/;"	v	module:amhglobals
numtab	optim.amhglobals.f	/^      integer numcrd,numtab$/;"	v	module:amhglobals
numwatkeep	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,numwatkeep /;"	v	module:modamber9
nwdvar	optim.modamber9.f90	/^      nphia,nnb,ntypes,nconp,maxmem,nwdvar,/;"	v	module:modamber9
oKE	optim.amhglobals.f	/^     *        obias_Rg,oKE,/;"	v	module:amhglobals
oPE_backbone	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,oPE_backbone,/;"	v	module:amhglobals
oPE_backbone_norama	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,oPE_backbone,oPE_backbone_norama,/;"	v	module:amhglobals
oPE_no_bias	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,/;"	v	module:amhglobals
oPE_plus_KE	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,ocon_P_AP,pdb,$/;"	v	module:amhglobals
oPE_with_bias	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,/;"	v	module:amhglobals
o_exvmin	optim.amhglobals.f	/^        double precision o_exvmin,/;"	v	module:amhglobals
o_exvminS	optim.amhglobals.f	/^        double precision o_exvmin,o_exvminS(/;"	v	module:amhglobals
oamh	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,oamh,/;"	v	module:amhglobals
oamhlr	optim.amhglobals.f	/^     *        oamhsr,oamhlr,/;"	v	module:amhglobals
oamhmr	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,ooev,oamhmr,/;"	v	module:amhglobals
oamhsr	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,oamh,orep,$/;"	v	module:amhglobals
oarchv	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,/;"	v	module:amhglobals
obias_Rg	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,ooev,oamhmr,$/;"	v	module:amhglobals
occev	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,/;"	v	module:amhglobals
ochiral	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,/;"	v	module:amhglobals
ocon_P_AP	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,ocon_P_AP,/;"	v	module:amhglobals
oconv	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,/;"	v	module:amhglobals
oecorr	optim.amhglobals.f	/^      integer imemri,iprolst,iprolstscl,iran,oarchv,oconv,oecorr,/;"	v	module:amhglobals
oexcldscl	optim.amhglobals.f	/^      double precision oexcldscl$/;"	v	module:amhglobals
offd_atom1	optim.fmsevb.f90	/^	subroutine offd_atom1(/;"	s
offd_atom3	optim.fmsevb.f90	/^	subroutine offd_atom3(/;"	s
offd_atom4	optim.fmsevb.f90	/^	subroutine offd_atom4(/;"	s
offset	optim.modamber9.f90	/^          kappa,offset,/;"	v	module:modamber9
oharmspring	optim.amhglobals.f	/^     *        oobiassega,oobiassegb,oharmspring,/;"	v	module:amhglobals
ohdrgn	optim.amhglobals.f	/^     *        omovi,omoviseg,SO,input_amh,ievgamma,ievbeta,icon,imem_cons,$/;"	v	module:amhglobals
ohdrgn_l	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,/;"	v	module:amhglobals
ohdrgn_m	optim.amhglobals.f	/^     *        obias_Rg,oKE,ibiasfile,ohdrgn_s,$/;"	v	module:amhglobals
ohdrgn_s	optim.amhglobals.f	/^     *        obias_Rg,oKE,ibiasfile,ohdrgn_s,/;"	v	module:amhglobals
ohdrgn_seq	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,/;"	v	module:amhglobals
ok	optim.modamber9.f90	/^logical newstyle,ok$/;"	v	module:modamber9
omKr3	optim.SD.f90	/^pure real*8 function omKr3(/;"	f	module:SDwater
omLr3	optim.SD.f90	/^pure real*8 function omLr3(/;"	f	module:SDwater
omovi	optim.amhglobals.f	/^     *        iss_bias,ihbond,imoviein,igamma,itargseqs,ihomol,$/;"	v	module:amhglobals
omoviseg	optim.amhglobals.f	/^     *        omovi,omoviseg,/;"	v	module:amhglobals
one3	optim.amber.f	/^      SUBROUTINE one3$/;"	s
one4	optim.amber.f	/^      SUBROUTINE one4$/;"	s
one_four	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:,:) :: one_four,/;"	v	module:MODAMBER
one_three	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:,:) :: one_four,one_three$/;"	v	module:MODAMBER
ononadd	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,/;"	v	module:amhglobals
oobiassega	optim.amhglobals.f	/^     *        oPE_plus_KE,oPE_no_bias,oPE_with_bias,oPE_backbone,oPE_backbone_norama,$/;"	v	module:amhglobals
oobiassegb	optim.amhglobals.f	/^     *        oobiassega,oobiassegb,/;"	v	module:amhglobals
ooev	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,occev,ooev,/;"	v	module:amhglobals
ooev_dist	optim.amhglobals.f	/^      double precision ccev_dist(1:maxcnt,1:maxtab),ooev_dist(/;"	v	module:amhglobals
ooxy	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,/;"	v	module:amhglobals
openiostat	pathsample.utils.f90	/^     subroutine openiostat(/;"	s	module:utils
opt_infl	optim.modamber9.f90	/^      periodic,  use_pme,    opt_infl,/;"	v	module:modamber9
orama	optim.amhglobals.f	/^     *        ohdrgn,orama,/;"	v	module:amhglobals
oran	optim.amhglobals.f	/^     *        oamhsr,oamhlr,oran,/;"	v	module:amhglobals
orep	optim.amhglobals.f	/^     *        ohdrgn,orama,ooxy,ochiral,oamh,orep,/;"	v	module:amhglobals
ovgaspot	optim.amhglobals.f	/^     *        oobiassega,oobiassegb,oharmspring,$/;"	v	module:amhglobals
ovscltab	optim.amhglobals.f	/^     *        ovgaspot,ovscltab,/;"	v	module:amhglobals
owrite	optim.modamber9.f90	/^character owrite,/;"	v	module:modamber9
oxexcldv	optim.amhglobals.f	/^        logical oxexcldv$/;"	v	module:amhglobals
oxscl	optim.amhglobals.f	/^      double precision oxscl$/;"	v	module:amhglobals
p	pathsample.GT2data.f90	/^          type/;"	k	type:NodeArray
p46merdiff	optim.p46merdiff.f	/^        subroutine p46merdiff(/;"	s
para_HB	optim.amhglobals.f	/^     *  anti_HB(20,20,2),$/;"	v	module:amhglobals
para_one	optim.amhglobals.f	/^     *  para_HB(20,20,2),para_one(/;"	v	module:amhglobals
param_array	optim.p46merdiff.f	/^        subroutine param_array(/;"	s
param_array	p46merdiff.f	/^        subroutine param_array(/;"	s
param_arrayBLN	optim.BLN.f	/^      subroutine param_arrayBLN(/;"	s
param_cut_off	optim.Ackland_wrapper.f	32;"	c	subroutine:ACK
parent	pathsample.GT2data.f90	/^          type(Node),pointer :: left,right,parent,/;"	k	type:Node
parm	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm,/;"	v	module:modamber9
path	pathsample.kshortestpaths.f90	/^TYPE path$/;"	t	module:GRAPH
pdb	optim.amhglobals.f	/^     *        ohdrgn_m,ohdrgn_l,ohdrgn_seq,ononadd,ocon_P_AP,pdb,/;"	v	module:amhglobals
pderivs	optim.amber.f	/^      SUBROUTINE pderivs$/;"	s
pencut	optim.modamber9.f90	/^double precision scalm,pencut,/;"	v	module:modamber9
periodic	optim.modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth, &$/;"	v	module:modamber9
permanent	pathsample.kshortestpaths.f90	/^   LOGICAL :: permanent /;"	k	type:node
permdist	optim.minperm.f	/^      double precision function permdist(/;"	f
permdist	pathsample.minperm.f	/^      double precision function permdist(/;"	f
pexcld	optim.amhglobals.f	/^      double precision pexcld$/;"	v	module:amhglobals
pexcld_gamma	optim.amhglobals.f	/^      double precision pexcld_gamma$/;"	v	module:amhglobals
phh1A	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,deohA,phh1A,/;"	v	module:mnasa_mod
phh2	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,alphaoh,deohA,phh1A,phh2$/;"	v	module:mnasa_mod
phi	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: phi$/;"	v	module:ttm3f_mod
phiHH	optim.SD.f90	/^pure real*8 function phiHH(/;"	f	module:SDwater
phiOH	optim.SD.f90	/^pure real*8 function phiOH(/;"	f	module:SDwater
phiOO	optim.SD.f90	/^pure real*8 function phiOO(/;"	f	module:SDwater
pi	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,/;"	v	module:LJCAPSIDMODULE
pi	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,/;"	v	module:PYMODULE
pi	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: pi /;"	v	module:mathsConstants
polarM	optim.ttm3f.f90	/^double precision, parameter :: polarM=/;"	v	module:ttm3f_mod
polfacH	optim.ttm3f.f90	/^double precision, parameter :: polfacO=0.837d0, polfacH /;"	v	module:ttm3f_mod
polfacM	optim.ttm3f.f90	/^double precision, parameter :: polfacO=0.837d0, polfacH = 0.496d0, polfacM=/;"	v	module:ttm3f_mod
polfacO	optim.ttm3f.f90	/^double precision, parameter :: polfacO=/;"	v	module:ttm3f_mod
pot_nasa	optim.ttm3f.f90	/^subroutine pot_nasa(/;"	s
potential	optim.VRTMCY5f.f90	/^real*8 function potential(/;"	f	module:MCY
pp	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD, pp$/;"	v
pr_dip	optim.ttm3f.f90	/^double precision, dimension( : ), allocatable :: pr_dip$/;"	v	module:ttm3f_mod
prcord	optim.amhglobals.f	/^     *     bondln(AMHmaxsiz,maxcrd),target(AMHmaxsiz,3,maxcrd),$/;"	v	module:amhglobals
pred	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: pred /;"	k	type:node
pred	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: pred /;"	k	type:path
pres0	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,/;"	v	module:modamber9
printCoefficients	optim.msevb_common.f90	/^  logical :: printCoefficients$/;"	v	module:msevb_common
print_nodes_in_path	pathsample.kshortestpaths.f90	/^RECURSIVE SUBROUTINE print_nodes_in_path(/;"	s
print_path	pathsample.kshortestpaths.f90	/^RECURSIVE SUBROUTINE print_path(/;"	s
prmtop	optim.modamber9.f90	/^      CHARACTER(len=81) :: prmtop$/;"	v	module:modamber9
prob	pathsample.GT2data.f90	/^          double precision :: tau,prob$/;"	k	type:Node
prod	pathsample.mind.f	/^      subroutine prod(/;"	s
protnm	optim.amhglobals.f	/^      character protnm(/;"	v	module:amhglobals
pya1bin	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VT(:), pya1bin(/;"	v	module:KEY
pya2bin	optim.key.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: VT(:), pya1bin(:,:),pya2bin(/;"	v	module:KEY
q	optim.SD.f90	/^real*8, dimension(:), allocatable :: work, q$/;"	v	module:SDwater
qchrg	optim.amhglobals.f	/^     *     hydseq(maxres,2,maxtab),$/;"	v	module:amhglobals
qchrg2	optim.amhglobals.f	/^     *     qchrg(21,21,20,20,max_well+2),$/;"	v	module:amhglobals
qhell	optim.modamber.f90	/^     &                 imphell,qhell,/;"	v	module:MODAMBER
qpsander	optim.modamber9.f90	/^logical belly, erstop, qsetup, qpsander$/;"	v	module:modamber9
qsetup	optim.modamber9.f90	/^logical belly, erstop, qsetup,/;"	v	module:modamber9
qspcfw	optim.qspcfw.f	/^      SUBROUTINE qspcfw /;"	s
qtip4pf	optim.qtip4pf.f	/^      SUBROUTINE qtip4pf(/;"	s
quaternionMatch	pathsample.quaternionmatch.f90	/^subroutine quaternionMatch /;"	s
quaternionToAngleAxis	pathsample.quaternionmatch.f90	/^subroutine quaternionToAngleAxis /;"	s
quench	optim.amhglobals.f	/^      logical alpha_c_of_n,ab_c_of_n_old,ab_c_of_n_new,quench$/;"	v	module:amhglobals
quench_crd	optim.amhglobals.f	/^     *     avep(maxpro,2,50),$/;"	v	module:amhglobals
r_cut_P_AP	optim.amhglobals.f	/^       double precision :: weight_P_AP(3),r_cut_P_AP$/;"	v	module:amhglobals
r_max	optim.amhglobals.f	/^      double precision r_min(1:max_well),r_max(/;"	v	module:amhglobals
r_max_contact_order	optim.amhglobals.f	/^      double precision r_min_contact_order(max_contact_order_terms),$/;"	v	module:amhglobals
r_min	optim.amhglobals.f	/^      double precision r_min(/;"	v	module:amhglobals
r_min_contact_order	optim.amhglobals.f	/^      double precision r_min_contact_order(/;"	v	module:amhglobals
r_ran	optim.amhglobals.f	/^      double precision  r_ran,/;"	v	module:amhglobals
rad	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,/;"	v	module:modamber9
radhb	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,/;"	v	module:modamber9
radiansToDegrees	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: radiansToDegrees /;"	v	module:mathsConstants
radii	optim.modamber9.f90	/^      vecs, radii,/;"	v	module:modamber9
radius	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: rho, radius,/;"	k	type:capsomer
radius	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: rho, radius,/;"	k	type:capsomer
ramascl	optim.amhglobals.f	/^      double precision ramascl$/;"	v	module:amhglobals
ran_file	optim.amhglobals.f	/^      logical ran_force,ran_file,/;"	v	module:amhglobals
ran_force	optim.amhglobals.f	/^      logical ran_force,/;"	v	module:amhglobals
ran_min_seq_dist	optim.amhglobals.f	/^      integer ran_min_seq_dist$/;"	v	module:amhglobals
range2inv3	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,range2inv3$/;"	v	module:LJCAPSIDMODULE
range2inv3	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,/;"	v	module:PYMODULE
rbPotential	pathsample.rigidbody.f90	/^  type(rigidbodyPotential) :: rbPotential$/;"	v	module:rigidbody
rbPotential	pathsample.rigidbodymod.f90	/^  type(rigidbodyPotential) :: rbPotential$/;"	v	module:rigidbodymod
rbornstat	optim.modamber9.f90	/^      gbsa,vrand,iwrap,nrespa,irespa,nrespai,icfe,  &!48$/;"	v	module:modamber9
rbtarg	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(/;"	v	module:modamber9
rcut	optim.amhglobals.f	/^      double precision rcut,/;"	v	module:amhglobals
rcutAMH	optim.amhglobals.f	/^      double precision rcut,rcutAMH,/;"	v	module:amhglobals
rdt	optim.modamber9.f90	/^          kappa,offset,surften,gamma_ln,extdiel,intdiel,rdt,/;"	v	module:modamber9
re	optim.SD.f90	/^rea/;"	v	module:SDwater
readcoords	optim.modamber9.f90	/^      LOGICAL MDSTEPT, readcoords,/;"	v	module:modamber9
redir	optim.modamber9.f90	/^      vecs, radii, freqe,redir(/;"	v	module:modamber9
reduced_num_eig	optim.msevb_common.f90	/^  INTEGER :: num_hyd,num_eig,ground_state,reduced_num_eig,/;"	v	module:msevb_common
refc	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt, &$/;"	v	module:modamber9
reoh	optim.ttm3f.f90	/^double precision :: reoh,/;"	v	module:mnasa_mod
rep_con_2_res	optim.amhglobals.f	/^      integer n_rep_con(AMHmaxsiz),rep_con_2_res(/;"	v	module:amhglobals
rep_cut_off	optim.amhglobals.f	/^      double precision rep_phi_exp(AMHmaxsiz),rep_lambda(AMHmaxsiz),$/;"	v	module:amhglobals
rep_lambda	optim.amhglobals.f	/^      double precision rep_phi_exp(AMHmaxsiz),rep_lambda(/;"	v	module:amhglobals
rep_phi_exp	optim.amhglobals.f	/^      double precision rep_phi_exp(/;"	v	module:amhglobals
rep_tol	optim.amhglobals.f	/^     *   rep_cut_off,rep_tol$/;"	v	module:amhglobals
repcrd	optim.modamber9.f90	/^      idecomp,icnstph,ntcnstph,maxdup,numexchg,repcrd,/;"	v	module:modamber9
restraint_wt	optim.modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt,/;"	v	module:modamber9
restraintmask	optim.modamber9.f90	/^character(len=256) restraintmask,/;"	v	module:modamber9
restrt	optim.modamber9.f90	/^character(len=256) mdin, mdout, inpcrd, parm, restrt,/;"	v	module:modamber9
rg_bounds	optim.amhglobals.f	/^      double precision rg_bounds(/;"	v	module:amhglobals
rg_scl	optim.amhglobals.f	/^      double precision rg_scl$/;"	v	module:amhglobals
rg_shift	optim.amhglobals.f	/^      double precision rg_shift$/;"	v	module:amhglobals
rgbmax	optim.modamber9.f90	/^          solvph,rgbmax,/;"	v	module:modamber9
rho	pathsample.rigidbody.f90	/^     real (kind=kind(0.0d0)) :: rho,/;"	k	type:capsomer
rho	pathsample.rigidbodymod.f90	/^     DOUBLE PRECISION :: rho,/;"	k	type:capsomer
right	pathsample.GT2data.f90	/^          type(Node),pointer :: left,right,/;"	k	type:Node
rigidbody	pathsample.rigidbody.f90	/^module rigidbody$/;"	m
rigidbodyPotential	pathsample.rigidbody.f90	/^  type rigidbodyPotential$/;"	t	module:rigidbody
rigidbodyPotential	pathsample.rigidbodymod.f90	/^  type rigidbodyPotential$/;"	t	module:rigidbodymod
rigidbodymod	pathsample.rigidbodymod.f90	/^module rigidbodymod$/;"	m
rinc	optim.amhglobals.f	/^      double precision vpotnt(0:maxr+1,maxcnt,maxtab),amh_gse,$/;"	v	module:amhglobals
rincinv	optim.amhglobals.f	/^     *     rinc(maxcnt,maxtab),$/;"	v	module:amhglobals
rincsq	optim.amhglobals.f	/^     *     rincinv(maxcnt,maxtab),$/;"	v	module:amhglobals
rings	optim.modamber.f90	/^      INTEGER  a,b,ios,d,e,f,g,h,i,j,k,l,colin,fish,ans,rings$/;"	v	module:MODAMBER
rmat	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,meane(3),totalw(3),rmat(/;"	v	module:DOCKMODULE
rndfles	optim.modamber9.f90	/^double precision ekinles0,temp0les,rndfles,/;"	v	module:modamber9
roh	optim.ttm3f.f90	/^double precision :: reoh,thetae,b1,roh,/;"	v	module:mnasa_mod
ron	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,/;"	v	module:LJCAPSIDMODULE
ron	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,/;"	v	module:PYMODULE
ron2	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,cut,ron,ron2,/;"	v	module:LJCAPSIDMODULE
ron2	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,/;"	v	module:PYMODULE
rotateAngleAxis	pathsample.quaternionmatch.f90	/^ subroutine rotateAngleAxis(/;"	s
rsdles	optim.modamber9.f90	/^double precision scaltles,tempsules,ekeles,rsdles$/;"	v	module:modamber9
rstdip	optim.modamber9.f90	/^      vecs, radii, freqe,redir(8),rstdip,/;"	v	module:modamber9
rwell	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,/;"	v	module:modamber9
s1	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile="GTkeywords",InputFile="GTinput",s1,/;"	v	module:DataModule
s2	pathsample.GT2data.f90	/^     character(len=20) :: KeywordsFile="GTkeywords",InputFile="GTinput",s1,s2$/;"	v	module:DataModule
s_ran	optim.amhglobals.f	/^      double precision  r_ran,s_ran$/;"	v	module:amhglobals
sa	optim.amhglobals.f	/^      integer ilong(maxcnt,2,maxtab),numlng(0:AMHmaxsiz,maxtab),ires(maxres),$/;"	v	module:amhglobals
saltcon	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,/;"	v	module:modamber9
scaldip	optim.modamber9.f90	/^      fix_quad,  mpoltype,   induced,    frameon, chngmask, &$/;"	v	module:modamber9
scalm	optim.modamber9.f90	/^double precision scalm,/;"	v	module:modamber9
scaltles	optim.modamber9.f90	/^double precision scaltles,/;"	v	module:modamber9
scee	optim.modamber9.f90	/^double precision box,cut,scnb,scee,/;"	v	module:modamber9
scnb	optim.modamber9.f90	/^double precision box,cut,scnb,/;"	v	module:modamber9
sdfacles	optim.modamber9.f90	/^double precision ekinles0,temp0les,rndfles,sdfacles$/;"	v	module:modamber9
sdgrad	optim.SD.f90	/^function sdgrad(/;"	f	module:SDwater
sdhess	optim.SD.f90	/^function sdhess(/;"	f	module:SDwater
sdinit	optim.SD.f90	/^subroutine sdinit(/;"	s	module:SDwater
sdpotential	optim.SD.f90	/^real*8 function sdpotential(/;"	f	module:SDwater
secondderivs	optim.amber.f	/^      SUBROUTINE secondderivs$/;"	s
seglist_a	optim.amhglobals.f	/^      integer seglist_a(/;"	v	module:amhglobals
seglist_b	optim.amhglobals.f	/^      integer seglist_a(maxres), seglist_b(/;"	v	module:amhglobals
shellsToCount	optim.msevb_common.f90	/^  INTEGER :: shellsToCount$/;"	v	module:msevb_common
shortest	pathsample.kshortestpaths.f90	/^   TYPE(path), POINTER :: shortest /;"	k	type:node
shortest_paths	pathsample.kshortestpaths.f90	/^TYPE(path), TARGET, ALLOCATABLE :: shortest_paths(/;"	v	module:GRAPH
shydro	optim.amhglobals.f	/^     *     deltz(maxcnt,maxtab),shydro(/;"	v	module:amhglobals
sigma1	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,sigma1,/;"	v	module:LJCAPSIDMODULE
sigma1	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(/;"	v	module:PYMODULE
sigma_NO	optim.amhglobals.f	/^        double precision sigma_h,sigma_NO,/;"	v	module:amhglobals
sigma_h	optim.amhglobals.f	/^        double precision sigma_h,/;"	v	module:amhglobals
siteLabel	pathsample.rigidbody.f90	/^     character(5), allocatable :: siteLabel(/;"	k	type:rigidbodyPotential
siteLabel	pathsample.rigidbodymod.f90	/^     character(5), allocatable :: siteLabel(/;"	k	type:rigidbodyPotential
sitesInteract	pathsample.rigidbody.f90	/^  logical, allocatable :: sitesInteract(/;"	v	module:rigidbody
sitesInteract	pathsample.rigidbodymod.f90	/^  logical, allocatable :: sitesInteract(/;"	v	module:rigidbodymod
skmax	optim.modamber9.f90	/^          skmin,skmax,/;"	v	module:modamber9
skmin	optim.modamber9.f90	/^          solvph,rgbmax,fsmax,restraint_wt, &  !42$/;"	v	module:modamber9
smallAngle	pathsample.rigidbody.f90	/^  real (kind=kind(0.0d0)), parameter :: smallAngle /;"	v	module:rigidbody
smallAngle	pathsample.rigidbodymod.f90	/^  DOUBLE PRECISION, parameter :: smallAngle /;"	v	module:rigidbodymod
smear01	optim.ttm3f.f90	/^subroutine smear01(/;"	s
smear1	optim.ttm3f.f90	/^subroutine smear1(/;"	s
smear2	optim.ttm3f.f90	/^subroutine smear2(/;"	s
smear3	optim.ttm3f.f90	/^subroutine smear3(/;"	s
solve	optim.SD.f90	/^subroutine solve(/;"	s	module:SDwater
solvph	optim.modamber9.f90	/^          gbalpha,gbbeta,gbgamma,cut_inner,clambda,saltcon,  & !38$/;"	v	module:modamber9
sort_non_add	optim.amhglobals.f	/^      integer class_of_res_2(AMHmaxsiz),sort_non_add(/;"	v	module:amhglobals
srcut	optim.amhglobals.f	/^      double precision rcut,rcutAMH,srcut$/;"	v	module:amhglobals
srplr	optim.amhglobals.f	/^      double precision srplr(/;"	v	module:amhglobals
ss_a	optim.amhglobals.f	/^      logical cyclic,ss_a,/;"	v	module:amhglobals
ss_b	optim.amhglobals.f	/^      logical cyclic,ss_a,ss_b$/;"	v	module:amhglobals
ss_dist	optim.amhglobals.f	/^      double precision ss_dist(/;"	v	module:amhglobals
ss_pattern_a	optim.amhglobals.f	/^        integer ss_pattern_a(/;"	v	module:amhglobals
ss_pattern_b	optim.amhglobals.f	/^        integer ss_pattern_a(maxres), ss_pattern_b(/;"	v	module:amhglobals
ssweight	optim.amhglobals.f	/^      logical ssweight,/;"	v	module:amhglobals
start_shift_factor	pathsample.kshortestpaths.f90	/^DOUBLE PRECISION :: start_shift_factor$/;"	v	module:GRAPH
statesInteract	optim.msevb_common.f90	/^  LOGICAL, ALLOCATABLE, DIMENSION(:,:) :: statesInteract /;"	v	module:msevb_common
succ	pathsample.kshortestpaths.f90	/^   TYPE(edge), POINTER :: succ /;"	k	type:node
surften	optim.modamber9.f90	/^          kappa,offset,surften,/;"	v	module:modamber9
symmetrize	optim.finite_differences.f90	/^subroutine symmetrize(/;"	s	module:finite_differences
systemToAA	pathsample.rigidbody.f90	/^  subroutine systemToAA /;"	s	module:rigidbody
systemToAA	pathsample.rigidbodymod.f90	/^  subroutine systemToAA /;"	s	module:rigidbodymod
systemToCartesians	pathsample.rigidbody.f90	/^  subroutine systemToCartesians /;"	s	module:rigidbody
systemToCartesians	pathsample.rigidbodymod.f90	/^  subroutine systemToCartesians /;"	s	module:rigidbodymod
t	optim.modamber9.f90	/^double precision t,/;"	v	module:modamber9
t	pathsample.GT2data.f90	/^          characte/;"	k	type:Node
t1	optim.amhglobals.f	/^      double precision t1,/;"	v	module:amhglobals
t2	optim.amhglobals.f	/^      double precision t1,t2,/;"	v	module:amhglobals
t3	optim.amhglobals.f	/^      double precision t1,t2,t3,/;"	v	module:amhglobals
t4	optim.amhglobals.f	/^      double precision t1,t2,t3,t4,/;"	v	module:amhglobals
t5	optim.amhglobals.f	/^      double precision t1,t2,t3,t4,t5$/;"	v	module:amhglobals
takestepamber	optim.amber9dummy.f90	/^subroutine takestepamber(/;"	s
targ_cons	optim.amhglobals.f	/^      logical ave_seq,targ_cons,/;"	v	module:amhglobals
targ_dist	optim.amhglobals.f	/^      double precision targ_dist(/;"	v	module:amhglobals
target	optim.amhglobals.f	/^     *     bondln(AMHmaxsiz,maxcrd),target(/;"	v	module:amhglobals
tarpre	optim.amhglobals.f	/^     *        sa(maxres),tarpre(/;"	v	module:amhglobals
tau	pathsample.GT2data.f90	/^          double precision :: tau,/;"	k	type:Node
tau	pathsample.GT2data.f90	/^     double precision,dimension(:),allocatable :: tau$/;"	v	module:DataModule
taup	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,/;"	v	module:modamber9
taur	optim.modamber9.f90	/^      tol,taur,/;"	v	module:modamber9
tausw	optim.modamber9.f90	/^double precision scalm,pencut,ensave,tausw,/;"	v	module:modamber9
tautp	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,/;"	v	module:modamber9
temgrd	optim.amhglobals.f	/^      double precision temtur(mxtemp),temtur_quench(maxmov,maxmov),temgrd(/;"	v	module:amhglobals
temp	optim.modamber9.f90	/^double precision t,dt,temp0/;"	v	module:modamber9
temp0	optim.modamber9.f90	/^double precision t,dt,temp0,/;"	v	module:modamber9
temp0les	optim.modamber9.f90	/^double precision ekinles0,temp0les,/;"	v	module:modamber9
tempi	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi,/;"	v	module:modamber9
tempsules	optim.modamber9.f90	/^double precision scaltles,tempsules,/;"	v	module:modamber9
temtur	optim.amhglobals.f	/^      double precision temtur(/;"	v	module:amhglobals
temtur_quench	optim.amhglobals.f	/^      double precision temtur(mxtemp),temtur_quench(/;"	v	module:amhglobals
test_site	optim.amhglobals.f	/^      integer test_site(/;"	v	module:amhglobals
tgsequences	optim.amhglobals.f	/^      integer tgsequences(/;"	v	module:amhglobals
tgsequences_amc	optim.amhglobals.f	/^      integer tgsequences_amc(/;"	v	module:amhglobals
tgsequences_amw	optim.amhglobals.f	/^      integer tgsequences_amw(/;"	v	module:amhglobals
tgsequences_hb	optim.amhglobals.f	/^      integer tgsequences_hb(/;"	v	module:amhglobals
tgtfitmask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,/;"	v	module:modamber9
tgtmdfrc	optim.modamber9.f90	/^double precision tgtrmsd,tgtmdfrc$/;"	v	module:modamber9
tgtrmsd	optim.modamber9.f90	/^double precision tgtrmsd,/;"	v	module:modamber9
tgtrmsmask	optim.modamber9.f90	/^character(len=256) restraintmask,bellymask,tgtfitmask,tgtrmsmask,/;"	v	module:modamber9
thetae	optim.ttm3f.f90	/^double precision :: reoh,thetae,/;"	v	module:mnasa_mod
timstp	optim.amhglobals.f	/^      double precision timstp$/;"	v	module:amhglobals
tmass	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,/;"	v	module:modamber9
tmassinv	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,rbtarg(9),tmass,tmassinv,/;"	v	module:modamber9
tmd_real	optim.modamber9.f90	319;"	c	module:modamber9
tmode	optim.modamber9.f90	/^      neb,vv,tmode,/;"	v	module:modamber9
to	pathsample.kshortestpaths.f90	/^   TYPE(node), POINTER :: to$/;"	k	type:edge
tol	optim.modamber9.f90	/^double precision t,dt,temp0,tautp,pres0,comp,taup,temp,tempi, & !9$/;"	v	module:modamber9
tolshk	optim.amhglobals.f	/^      double precision tolshk$/;"	v	module:amhglobals
tomegac	optim.modamber9.f90	/^logical:: tomegac$/;"	v	module:modamber9
totalmin	pathsample.dock.f90	/^integer :: natomsligand, natomscomplex, natomsprotein,totalmin(/;"	v	module:DOCKMODULE
totalssnorm	optim.amhglobals.f	/^       integer num_foldon_a,num_foldon_b,const_mode, totalssnorm$/;"	v	module:amhglobals
totalw	pathsample.dock.f90	/^double precision :: gminligand,gmincomplex,gminprotein,gminbinding,meane(3),totalw(/;"	v	module:DOCKMODULE
trySimpleVBAssignment	optim.msevb.f90	/^     subroutine trySimpleVBAssignment(/;"	s
tsedge	pathsample.kshortestpaths.f90	/^TYPE(edge), TARGET, ALLOCATABLE :: tsedge(/;"	v	module:GRAPH
ttm3f	optim.ttm3f.f90	/^subroutine ttm3f(/;"	s
ttm3f_mod	optim.ttm3f.f90	/^module ttm3f_mod$/;"	m
ttm3fcall	optim.ttm3f.f90	/^subroutine ttm3fcall(/;"	s
twopi	optim.ljcapsidmodule.f90	/^ DOUBLE PRECISION :: angle,angle2,pi,twopi,/;"	v	module:LJCAPSIDMODULE
twopi	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,/;"	v	module:PYMODULE
twopi	pathsample.mathsconstants.f90	/^  REAL (kind=KIND(0.0d0)), PARAMETER :: twopi /;"	v	module:mathsConstants
type	optim.modamber.f90	/^      INTEGER, ALLOCATABLE, DIMENSION (:) :: atnum,bondedto,type$/;"	v	module:MODAMBER
typech	optim.modamber.f90	/^      CHARACTER(LEN=2), ALLOCATABLE, DIMENSION(:) :: typech$/;"	v	module:MODAMBER
typechb	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,/;"	v	module:MODAMBER
typechc	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,typechc,/;"	v	module:MODAMBER
typechd	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,/;"	v	module:MODAMBER
typeche	optim.modamber.f90	/^      CHARACTER(LEN=2)  typechb,typechc,typechd,typeche$/;"	v	module:MODAMBER
typenumber	optim.amber.f	/^      SUBROUTINE typenumber(/;"	s
updateC12	pathsample.rigidbody.f90	/^  subroutine updateC12(/;"	s	module:rigidbody
updateC12	pathsample.rigidbodymod.f90	/^  subroutine updateC12(/;"	s	module:rigidbodymod
updateC6	pathsample.rigidbody.f90	/^  subroutine updateC6(/;"	s	module:rigidbody
updateC6	pathsample.rigidbodymod.f90	/^  subroutine updateC6(/;"	s	module:rigidbodymod
use_pme	optim.modamber9.f90	/^      periodic,  use_pme,/;"	v	module:modamber9
utils	pathsample.utils.f90	/^module utils$/;"	m
v11	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,/;"	v	module:modamber9
v12	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,/;"	v	module:modamber9
v22	optim.modamber9.f90	/^          skmin,skmax,vfac,gbneckscale,v11,v12,v22,/;"	v	module:modamber9
valleu_swap	optim.amber9dummy.f90	/^SUBROUTINE valleu_swap(/;"	s
value	pathsample.GT2data.f90	/^          double precision :: value$/;"	k	type:RealList
value	pathsample.GT2data.f90	/^          integer :: value$/;"	k	type:IntegerList
value	pathsample.GT2data.f90	/^          type(Node),pointer :: value$/;"	k	type:NodeList
vdw	optim.PachecoC60.f	/^      function vdw(/;"	f
vdwC	optim.ttm3f.f90	/^double precision, parameter ::   &$/;"	v	module:ttm3f_mod
vdwD	optim.ttm3f.f90	/^                                 vdwC=-0.72298855D+03,vdwD=/;"	v	module:ttm3f_mod
vdwE	optim.ttm3f.f90	/^                                 vdwC=-0.72298855D+03,vdwD=0.10211829D+06, vdwE=/;"	v	module:ttm3f_mod
vdwhell	optim.modamber.f90	/^     &                 imphell,qhell,vdwhell,/;"	v	module:MODAMBER
vdwmeth	optim.modamber9.f90	/^integer verbose,netfrc,     ew_type,    vdwmeth,/;"	v	module:modamber9
vecs	optim.modamber9.f90	/^      refc, mdvel, mden, mdcrd, mdinfo, nmrf, mincor, &$/;"	v	module:modamber9
vecsbf	optim.pymodule.f90	/^ DOUBLE PRECISION :: BOXLX,BOXLY,BOXLZ,angle,angle2,pi,twopi,sigma1(4),cut,ron,ron2,range2inv3,attr(4),vecsbf(/;"	v	module:PYMODULE
vectorModulus	pathsample.quaternionmatch.f90	/^ function vectorModulus(/;"	f
verbose	optim.modamber9.f90	/^integer verbose,/;"	v	module:modamber9
vfac	optim.modamber9.f90	/^          skmin,skmax,vfac,/;"	v	module:modamber9
vh2ointer	optim.msevb.f90	/^     subroutine vh2ointer(/;"	s
vh2ointra	optim.msevb.f90	/^     subroutine vh2ointra(/;"	s
vh3ointra	optim.msevb.f90	/^     subroutine vh3ointra(/;"	s
vinter	optim.msevb.f90	/^     subroutine vinter(/;"	s
vlimit	optim.modamber9.f90	/^      tol,taur,dx0,drms,vlimit,/;"	v	module:modamber9
voffdiag2	optim.msevb.f90	/^     subroutine voffdiag2$/;"	s
vpotnt	optim.amhglobals.f	/^      double precision vpotnt(/;"	v	module:amhglobals
vrand	optim.modamber9.f90	/^      gbsa,vrand,/;"	v	module:modamber9
vv	optim.modamber9.f90	/^      neb,vv,/;"	v	module:modamber9
wales_nmres	optim.amhglobals.f	/^      integer wales_nmres$/;"	v	module:amhglobals
weight_P_AP	optim.amhglobals.f	/^       double precision :: weight_P_AP(/;"	v	module:amhglobals
wel	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,/;"	v	module:modamber9
welhb	optim.modamber9.f90	/^double precision box,cut,scnb,scee,dielc,rad,wel,radhb,welhb,/;"	v	module:modamber9
welscl	optim.amhglobals.f	/^      logical welscl$/;"	v	module:amhglobals
width_Qexp_a	optim.amhglobals.f	/^     *           biaspoly(1:100),Qbiaspoly_a(1:100),$/;"	v	module:amhglobals
width_Qexp_b	optim.amhglobals.f	/^      double precision        width_Qexp_b,/;"	v	module:amhglobals
work	optim.SD.f90	/^real*8, dimension(:), allocatable :: work,/;"	v	module:SDwater
work1	optim.amhglobals.f	/^      double precision work1(/;"	v	module:amhglobals
work2	optim.amhglobals.f	/^      double precision work1(maxcnt),work2(/;"	v	module:amhglobals
work3	optim.amhglobals.f	/^      double precision work1(maxcnt),work2(maxcnt),work3(/;"	v	module:amhglobals
work4	optim.amhglobals.f	/^      double precision work1(maxcnt),work2(maxcnt),work3(maxcnt),$/;"	v	module:amhglobals
work6	optim.amhglobals.f	/^     *     work4(maxcnt),work6(/;"	v	module:amhglobals
work8	optim.amhglobals.f	/^     *     work4(maxcnt),work6(maxcnt),$/;"	v	module:amhglobals
writeToCartesianStream	pathsample.rigidbody.f90	/^  subroutine writeToCartesianStream /;"	s	module:rigidbody
writeToCartesianStream	pathsample.rigidbodymod.f90	/^  subroutine writeToCartesianStream /;"	s	module:rigidbodymod
x	optim.modamber9.f90	/^   double precision,  dimension(:), allocatable :: x$/;"	v	module:modamber9
x2n	optim.dimer.f	/^       function x2n(/;"	f
x_int	optim.amhglobals.f	/^      DOUBLE PRECISION x_int(/;"	v	module:amhglobals
x_mcp	optim.amhglobals.f	/^      DOUBLE PRECISION x_mcp(/;"	v	module:amhglobals
xbox0	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,/;"	v	module:modamber9
xcap	optim.modamber9.f90	/^      cutcap,xcap,/;"	v	module:modamber9
xmorse	optim.PachecoC60.f	/^      function xmorse(/;"	f
ybox0	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,/;"	v	module:modamber9
ycap	optim.modamber9.f90	/^      cutcap,xcap,ycap,/;"	v	module:modamber9
ywork	optim.amhglobals.f	/^     *     deltz(maxcnt,maxtab),shydro(maxres,2,maxtab),$/;"	v	module:amhglobals
z2dist	optim.Z2faster.f	/^      subroutine z2dist(/;"	s
z2faster	optim.Z2faster.f	/^      subroutine z2faster(/;"	s
zbox0	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,fcap,rwell,xbox0,ybox0,zbox0$/;"	v	module:modamber9
zcap	optim.modamber9.f90	/^      cutcap,xcap,ycap,zcap,/;"	v	module:modamber9
zrcord	optim.amhglobals.f	/^     *     prcord(AMHmaxsiz,3,maxpro,maxcrd),$/;"	v	module:amhglobals
zundel_species	optim.msevb_common.f90	/^  INTEGER, ALLOCATABLE, DIMENSION(:,:,:) :: zundel_species$/;"	v	module:msevb_common
