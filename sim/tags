!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
10	dv.f90	/^10 format(a)$/;"	l	subroutine:display_version	file:
10	func.f90	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	func.f90	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	func.f90	/^10    CALL FLUSH(LFH)$/;"	l	subroutine:MYLBFGS	file:
10	mylbfgs.ref.f90	/^10    CALL FLUSH(MYUNIT)$/;"	l	subroutine:MYLBFGS	file:
101	func.f90	/^101   FORMAT(A,F20.10,G20.10,A,I6,A)$/;"	l	subroutine:MYLBFGS	file:
102	func.f90	/^102   FORMAT(A,I10,A,I10,A)$/;"	l	subroutine:MYLBFGS	file:
103	func.f90	/^	103   FORMAT(A,F20.10,G20.10,A,I6,A,A,F13.10)$/;"	l	subroutine:MYLBFGS	file:
104	func.f90	/^104 FORMAT(A,F20.10,A,F20.10,A,F20.10) $/;"	l	subroutine:MYLBFGS	file:
105	func.f90	/^	105 FORMAT(A,F19.10,A,F16.10,A,F15.8) $/;"	l	subroutine:MYLBFGS	file:
11	mylbfgs.ref.f90	/^11          FORMAT(1X,'QUENCH NUMBER ',I6,' initial points in mylbfgs')$/;"	l	subroutine:MYLBFGS	file:
111	fmt.i.f90	/^111 format(A,I10,A,F20.10,A,I5,A,G12.5,A,G20.10,A,F11.1)$/;"	l	file:
160	func.f90	/^160      FORMAT('Debug printing is on')$/;"	l	subroutine:IO	file:
20	func.f90	/^20    FORMAT('Initial coordinates:')$/;"	l	subroutine:IO	file:
20	mylbfgs.ref.f90	/^20    IF (INTMINT) THEN$/;"	l	subroutine:MYLBFGS	file:
21	fmt.i.f90	/^21 FORMAT(A,F12.5,A,F12.5,A,F12.5,A,F12.5) $/;"	l	file:
22	fmt.i.f90	/^22 FORMAT((3(A,G20.10)))$/;"	l	file:
23	fmt.i.f90	/^23 FORMAT (A,I6,A,F8.4,A,F8.4)$/;"	l	file:
235	func.f90	/^		        235 FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,' INVERSE HESSIAN APPROXIMATION IS NOT POSITIVE')$/;"	l	subroutine:MYLBFGS	file:
235	mylbfgs.ref.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
240	func.f90	/^	    240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
240	mylbfgs.ref.f90	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
30	func.f90	/^30    FORMAT(3F20.10)$/;"	l	subroutine:IO	file:
30	func.f90	/^30 WSS(:,1+POINT)=STP*WSS(:,1+POINT)     ! save the step taken$/;"	l	subroutine:MYLBFGS	file:
30	mylbfgs.ref.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
34	fmt.i.f90	/^34 FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	file:
37	mc.f90	/^37 CONTINUE$/;"	l	subroutine:MCRUN	file:
65	mylbfgs.ref.f90	/^65          FORMAT('AR ',3F20.10)$/;"	l	subroutine:MYLBFGS	file:
AB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,2) :: AB$/;"	v
ACCRAT	v.f90	/^     DOUBLE PRECISION :: ACCRAT$/;"	v	module:V
ACCREJ	mc.f90	/^SUBROUTINE ACCREJ(/;"	s	module:MC
AN	bln.vars.inc.f90	/^        DOUBLE PRECISION   AN$/;"	v
ANG	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: ANG /;"	v
ARATIO	mc.vars.i.f90	/^      DOUBLE PRECISION ::       ARATIO$/;"	v
ARGS	v.f90	/^CHARACTER(LEN=SLEN), DIMENSION(MAXNARGS)/;"	v	module:V
ASTEP	v.f90	/^     DOUBLE PRECISION :: ASTEP$/;"	v	module:V
ATEST	mc.vars.i.f90	/^      LOGICAL :: ATEST$/;"	v
B	bln.vars.inc.f90	/^        DOUBL/;"	v
BEST_FH	v.f90	/^INTEGER :: BEST_FH$/;"	v	module:V
BEST_FH	v.files.i.f90	/^INTEGER :: BEST_FH$/;"	v
BFGST	v.f90	/^     LOGICAL :: BFGST$/;"	v	module:V
BLN	bln.f90	/^     MODULE BLN /;"	m
BLNT	v.f90	/^     LOGICAL :: BLNT$/;"	v	module:V
BUFINF	kw.f90	24;"	c	subroutine:KEYWORD
BVR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR,/;"	v
CD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2)   :: CD$/;"	v
CENTRE	func.f90	/^SUBROUTINE CENTRE(/;"	s
COMPACT	strings.f90	/^SUBROUTINE COMPACT(/;"	s	module:STRINGS
CONNECT	bln.vars.inc.f90	/^        LOGICAL CONNECT(/;"	v
CONVG	mc.vars.i.f90	/^      LOGICAL CONVG$/;"	v
COORDS	v.f90	/^     DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS,/;"	v	module:V
COORDSO	v.f90	/^     DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS, COORDSO$/;"	v	module:V
COORDS_FH	v.f90	/^INTEGER :: COORDS_FH$/;"	v	module:V
COORDS_FH	v.files.i.f90	/^INTEGER :: COORDS_FH$/;"	v
COS_PHI	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI,/;"	v
COS_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA$/;"	v
DATA_FH	v.f90	/^INTEGER :: DATA_FH$/;"	v	module:V
DATA_FH	v.files.i.f90	/^INTEGER :: DATA_FH$/;"	v
DEBUG	v.f90	/^     LOGICAL :: DEBUG$/;"	v	module:V
DELTA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0, EPSILON, DELTA,/;"	v
DF	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF,/;"	v
DGUESS	v.f90	/^     DOUBLE PRECISION :: DGUESS$/;"	v	module:V
DPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: DPD$/;"	v
DPRAND	func.f90	/^FUNCTION DPRAND(/;"	f
DQE	mc.vars.i.f90	/^      DOUBLE PRECISION :: QE, QEPPREV, DQE$/;"	v
DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,3) :: DR$/;"	v
DX	func.f90	/^DOUBLE PRECISION :: RND(:),XMIN,XMAX,DX$/;"	v
E	bln.vars.inc.f90	/^        DOUBLE /;"	v
EB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR, EB$/;"	v
EBEST	mc.vars.i.f90	/^      DOUBLE PRECISION :: EBEST$/;"	v
EBLN	bln.f90	/^        SUBROUTINE EBLN(/;"	s	module:BLN
ECHO_S	func.f90	/^SUBROUTINE ECHO_S$/;"	s
EDIFF	v.f90	/^     DOUBLE PRECISION :: EDIFF$/;"	v	module:V
ENERGY	bln.vars.inc.f90	/^        DOUBLE PRECISION ENERGY$/;"	v
ENERGY_FH	v.f90	/^INTEGER :: ENERGY_FH$/;"	v	module:V
ENERGY_FH	v.files.i.f90	/^INTEGER :: ENERGY_FH$/;"	v
EPSILON	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0, EPSILON,/;"	v
EV	mylbfgs.ref.f90	51;"	c	subroutine:MYLBFGS
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(-1:N+1,2) :: F$/;"	v
FAC0	v.f90	/^     DOUBLE PRECISION :: FAC0$/;"	v	module:V
FB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: FB$/;"	v
FH	v.f90	/^INTEGER, PARAMETER :: FH=/;"	v	module:V
FH	v.files.i.f90	/^INTEGER, PARAMETER :: FH=/;"	v
FIXOPT	v.f90	/^     CHARACTER(LEN=100) :: FIXOPT$/;"	v	module:V
FQFLAG	v.f90	/^     LOGICAL :: FQFLAG$/;"	v	module:V
FQMAX	v.f90	/^     DOUBLE PRECISION :: FQMAX$/;"	v	module:V
FRR	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF, FRR(/;"	v
FUNC	func.f90	/^MODULE FUNC$/;"	m
G	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G,/;"	v
G46	v.f90	/^     LOGICAL :: G46$/;"	v	module:V
GB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA/;"	v
GBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA,/;"	v
GBA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I,/;"	v
GBA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J,/;"	v
GBA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J, GBA_K$/;"	v
GD	mylbfgs.ref.f90	50;"	c	subroutine:MYLBFGS
GENFFILES	makefile	/^GENFFILES = porfuncs.f90 dv.f90 $/;"	m
GETMODEL	func.f90	/^SUBROUTINE GETMODEL$/;"	s	module:FUNC
GMAX	v.f90	/^     DOUBLE PRECISION :: GMAX$/;"	v	module:V
GMI	gmi.main.f90	/^      PROGRAM GMI$/;"	p
GNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB,/;"	v
GRAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G, GRAD$/;"	v
GRAD	v.f90	/^     DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: GRAD$/;"	v	module:V
GRADT	bln.vars.inc.f90	/^        LOGICAL GRADT,/;"	v
GRAD_MIN	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(/;"	v
GRAD_PLUS	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(N,3), GRAD_PLUS(/;"	v
GTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB, GTA,/;"	v
GTA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I,/;"	v
GTA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J,/;"	v
GTA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K,/;"	v
GTA_L	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K, GTA_L$/;"	v
GTEST	bln.vars.inc.f90	/^        LOGICAL GTEST,/;"	v
HESS	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(:,:) :: HESS$/;"	v
HESS	v.f90	/^     DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS$/;"	v	module:V
HESST	bln.vars.inc.f90	/^        LOGICAL GRADT, HESST$/;"	v
HVXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD,/;"	v
I	bln.vars.inc.f90	/^        IN/;"	v
I	func.f90	/^IN/;"	v
ICOUNT	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX, ICOUNT$/;"	v
IH	bln.vars.inc.f90	/^        INTEGER ::     IK,JK,KI,KJ,IH,/;"	v
IK	bln.vars.inc.f90	/^        INTEGER ::     IK,/;"	v
INCPATH	makefile	/^INCPATH = $(PPATH)\/..\/include\/$/;"	m
INITVARS	func.f90	/^SUBROUTINE INITVARS$/;"	s
INQF	func.f90	/^SUBROUTINE INQF(/;"	s
IO	func.f90	/^SUBROUTINE IO$/;"	s
ISTEP	v.f90	/^INTEGER :: ISTEP$/;"	v	module:V
IS_DIGIT	strings.f90	/^FUNCTION IS_DIGIT(/;"	f	module:STRINGS
IS_LETTER	strings.f90	/^FUNCTION IS_LETTER(/;"	f	module:STRINGS
ITERATIONS	mc.vars.i.f90	/^      INTEGER ITERATIONS,/;"	v
J	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J,/;"	v
J1	bln.vars.inc.f90	/^        INTEGER J1,/;"	v
J2	bln.vars.inc.f90	/^        INTEGER J1,J2$/;"	v
JACCPREV	mc.vars.i.f90	/^      INTEGER JACCPREV$/;"	v
JBEST	mc.vars.i.f90	/^      INTEGER :: JBEST$/;"	v
JH	bln.vars.inc.f90	/^        INTEGER ::     IK,JK,KI,KJ,IH,JH,/;"	v
JK	bln.vars.inc.f90	/^        INTEGER ::     IK,JK,/;"	v
JMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX,/;"	v
K	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K,/;"	v
KEYWORD	kw.f90	/^      SUBROUTINE KEYWORD(/;"	s	module:KW
KH	bln.vars.inc.f90	/^        INTEGER ::     IK,JK,KI,KJ,IH,JH,KH$/;"	v
KI	bln.vars.inc.f90	/^        INTEGER ::     IK,JK,KI,/;"	v
KJ	bln.vars.inc.f90	/^        INTEGER ::     IK,JK,KI,KJ,/;"	v
KMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX,/;"	v
KW	kw.f90	/^MODULE KW$/;"	m
LBFGST	v.f90	/^     LOGICAL :: LBFGST$/;"	v	module:V
LEN_DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LEN_DR$/;"	v
LFH	v.f90	/^INTEGER :: LFH$/;"	v	module:V
LFH	v.files.i.f90	/^INTEGER :: LFH$/;"	v
LFN	v.f90	/^CHARACTER(LEN=100) LFN$/;"	v	module:V
LFN	v.files.i.f90	/^CHARACTER(LEN=100) LFN$/;"	v
LJATT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP, LJATT$/;"	v
LJREP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,/;"	v
MARKOV_FH	v.f90	/^INTEGER :: MARKOV_FH$/;"	v	module:V
MARKOV_FH	v.files.i.f90	/^INTEGER :: MARKOV_FH$/;"	v
MAXBFGS	v.f90	/^     DOUBLE PRECISION :: MAXBFGS$/;"	v	module:V
MAXEFALL	v.f90	/^     DOUBLE PRECISION ::     MAXEFALL$/;"	v	module:V
MAXERISE	v.f90	/^     DOUBLE PRECISION ::     MAXERISE$/;"	v	module:V
MAXIT	v.f90	/^     INTEGER :: MAXIT$/;"	v	module:V
MAXNARGS	v.const.i.f90	/^INTEGER :: MAXNARGS$/;"	v
MAXNARGS	v.f90	/^INTEGER :: MAXNARGS$/;"	v	module:V
MC	mc.f90	/^MODULE MC$/;"	m
MCRUN	mc.f90	/^SUBROUTINE MCRUN$/;"	s	module:MC
MCSTEPS	v.f90	/^     INTEGER :: MCSTEPS$/;"	v	module:V
MCTEMP	mc.vars.i.f90	/^      DOUBLE PRECISION :: MCTEMP$/;"	v
MODEL	v.f90	/^     CHARACTER(LEN=100) MODEL$/;"	v	module:V
MYLBFGS	func.f90	/^SUBROUTINE MYLBFGS(/;"	s
MYLBFGS	mylbfgs.ref.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYPOT	func.f90	562;"	c	subroutine:MYLBFGS
MYPOT	mc.f90	40;"	c	subroutine:QUENCH
MYPOT	mc.vars.i.f90	24;"	c
MYPOT	mylbfgs.ref.f90	47;"	c	subroutine:MYLBFGS
MYSYSTEM	func.f90	/^SUBROUTINE MYSYSTEM(/;"	s
M_LBFGS	v.f90	/^     INTEGER :: M_LBFGS$/;"	v	module:V
N	bln.vars.inc.f90	/^        INT/;"	v
N	func.f90	/^INT/;"	v
NACCEPT	v.f90	/^     INTEGER :: NACCEPT$/;"	v	module:V
NARGS	v.f90	/^INTEGER NARGS$/;"	v	module:V
NATOMS	v.f90	/^     INTEGER :: NATOMS$/;"	v	module:V
NCORE	v.f90	/^INTEGER :: NCORE$/;"	v	module:V
NDONE	mc.vars.i.f90	/^      INTEGER ITERATIONS,NDONE$/;"	v
NFAIL	mc.vars.i.f90	/^      INTEGER NFAIL,/;"	v
NFAILT	mc.vars.i.f90	/^      INTEGER NFAIL, NFAILT,/;"	v
NPAIRS	v.f90	/^     INTEGER :: NPAIRS$/;"	v	module:V
NQ	v.f90	/^     INTEGER :: NQ$/;"	v	module:V
NRELAX	v.f90	/^     INTEGER :: NRELAX$/;"	v	module:V
NSAVE	v.f90	/^INTEGER :: NSAVE$/;"	v	module:V
NSEED	v.f90	/^     INTEGER :: NSEED$/;"	v	module:V
NSUCCESS	mc.vars.i.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS,/;"	v
NSUCCESST	mc.vars.i.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS, NSUCCESST$/;"	v
NTARGETS	v.f90	/^     INTEGER NTARGETS$/;"	v	module:V
NTYPE	bln.vars.inc.f90	/^        INTEGER NTYPE(/;"	v
ONE	v.const.i.f90	/^DOUBLE PRECISION :: PI,ZERO,ONE$/;"	v
ONE	v.f90	/^DOUBLE PRECISION :: PI,ZERO,ONE$/;"	v	module:V
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s
OSTEP	v.f90	/^     DOUBLE PRECISION :: OSTEP$/;"	v	module:V
P46	v.f90	/^     LOGICAL :: P46$/;"	v	module:V
PAIRDIST	v.f90	/^     INTEGER, ALLOCATABLE :: PAIRDIST(/;"	v	module:V
PAIRDISTT	v.f90	/^     LOGICAL :: PAIRDISTT$/;"	v	module:V
PAIRDIST_FH	v.f90	/^INTEGER :: PAIRDIST_FH$/;"	v	module:V
PAIRDIST_FH	v.files.i.f90	/^INTEGER :: PAIRDIST_FH$/;"	v
PARSE	strings.f90	/^SUBROUTINE PARSE(/;"	s	module:STRINGS
PATOM1	v.f90	/^     INTEGER :: PATOM1$/;"	v	module:V
PATOM2	v.f90	/^     INTEGER :: PATOM2$/;"	v	module:V
PFORCE	v.f90	/^     DOUBLE PRECISION :: PFORCE$/;"	v	module:V
PI	v.const.i.f90	/^DOUBLE PRECISION :: PI,/;"	v
PI	v.f90	/^DOUBLE PRECISION :: PI,/;"	v	module:V
PI4	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0, EPSILON, DELTA, PI4,/;"	v
PORFUNCS	porfuncs.f90	/^MODULE PORFUNCS$/;"	m
POTENTIAL	func.f90	/^      SUBROUTINE POTENTIAL(/;"	s	module:FUNC
PP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD, PP$/;"	v
PPATH	makefile	/^PPATH=$(PWD)$/;"	m
PRECISION	v.mc.i.f90	/^     DOUBLE PRECISION /;"	v
PRINTVARS	func.f90	/^SUBROUTINE PRINTVARS$/;"	s
PROGNAME	makefile	/^PROGNAME=gmi$/;"	m
PTYPE	bln.vars.inc.f90	/^        CHARACTER(LEN=*) :: PTYPE$/;"	v
PTYPE	v.f90	/^     CHARACTER(LEN=SLEN) PTYPE$/;"	v	module:V
PULLT	v.f90	/^     LOGICAL :: PULLT$/;"	v	module:V
Q4C	mylbfgs.ref.f90	48;"	c	subroutine:MYLBFGS
QE	mc.vars.i.f90	/^      DOUBLE PRECISION :: QE,/;"	v
QEPPREV	mc.vars.i.f90	/^      DOUBLE PRECISION :: QE, QEPPREV,/;"	v
QEPREV	v.f90	/^     DOUBLE PRECISION :: QEPREV$/;"	v	module:V
QUENCH	mc.f90	/^SUBROUTINE QUENCH(/;"	s	module:MC
R	bln.vars.inc.f90	/^        DOUBLE PRE/;"	v
RAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(15) :: RAD,/;"	v
RADIUS	v.f90	/^     DOUBLE PRECISION :: RADIUS$/;"	v	module:V
RANDDP	func.f90	386;"	c	subroutine:SDPRND
RANDDP	func.f90	433;"	c	function:DPRAND
RCA	rca.f90	/^SUBROUTINE RCA$/;"	s
REMOVEBKSL	strings.f90	/^SUBROUTINE REMOVEBKSL(/;"	s	module:STRINGS
RK_R	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0, EPSILON, DELTA, PI4, TWOPI, RK_R,/;"	v
RK_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0, EPSILON, DELTA, PI4, TWOPI, RK_R, RK_THETA$/;"	v
RMASS	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS,/;"	v
RMASS	v.f90	/^     DOUBLE PRECISION ::     RMASS(/;"	v	module:V
RMS	v.f90	/^     DOUBLE PRECISION ::       RMS$/;"	v	module:V
RMSD_FH	v.f90	/^INTEGER :: RMSD_FH$/;"	v	module:V
RMSD_FH	v.files.i.f90	/^INTEGER :: RMSD_FH$/;"	v
RMST	v.f90	/^     LOGICAL :: RMST$/;"	v	module:V
RND	func.f90	/^DOUBLE PRECISION :: RND(/;"	v
RVAR	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     RVAR$/;"	v
S	bln.vars.inc.f90	/^        DOUBLE PRECISI/;"	v
SCREENC	v.f90	/^DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	module:V
SDPRND	func.f90	/^SUBROUTINE SDPRND /;"	s
SETVARS	func.f90	/^SUBROUTINE SETVARS$/;"	s
SIGMA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA,/;"	v
SLEN	v.const.i.f90	/^INTEGER ::      SLEN$/;"	v
SLEN	v.f90	/^INTEGER ::      SLEN$/;"	v	module:V
SPLIT	strings.f90	/^SUBROUTINE SPLIT(/;"	s	module:STRINGS
SQMAX	v.f90	/^     DOUBLE PRECISION :: SQMAX$/;"	v	module:V
STEP	v.f90	/^     DOUBLE PRECISION :: STEP$/;"	v	module:V
STEST	bln.vars.inc.f90	/^        LOGICAL GTEST, STEST$/;"	v
STRINGS	strings.f90	/^MODULE STRINGS$/;"	m
TAKESTEP	func.f90	/^SUBROUTINE TAKESTEP$/;"	s
TARGET	v.f90	/^     LOGICAL :: TARGET$/;"	v	module:V
TARGETS	v.f90	/^     DOUBLE PRECISION, ALLOCATABLE,DIMENSION(:) :: TARGETS$/;"	v	module:V
TEMP	v.f90	/^     DOUBLE PRECISION :: TEMP$/;"	v	module:V
TFAC	v.f90	/^     DOUBLE PRECISION :: TFAC$/;"	v	module:V
TFACOUBLE	v.mc.i.f90	/^     DOUBLE PRECISION :: TFAC$/;"	v
TFINISH	v.f90	/^     DOUBLE PRECISION :: TSTART, TFINISH$/;"	v	module:V
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0,/;"	v
TIME	mc.vars.i.f90	/^      DOUBLE PRECISION ::       TIME$/;"	v
TRACKDATAT	v.f90	/^     LOGICAL :: TRACKDATAT$/;"	v	module:V
TRAN	mc.f90	/^SUBROUTINE TRAN(/;"	s	module:MC
TSTART	v.f90	/^     DOUBLE PRECISION :: TSTART,/;"	v	module:V
TWOPI	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, THETA_0, EPSILON, DELTA, PI4, TWOPI,/;"	v
USEKW	v.f90	/^     LOGICAL :: USEKW$/;"	v	module:V
V	v.f90	/^MODULE V$/;"	m
VXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD,/;"	v
XMAX	func.f90	/^DOUBLE PRECISION :: RND(:),XMIN,XMAX,/;"	v
XMIN	func.f90	/^DOUBLE PRECISION :: RND(:),XMIN,/;"	v
XPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_/;"	v
XPD_2	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_2,/;"	v
ZERO	v.const.i.f90	/^DOUBLE PRECISION :: PI,ZERO,/;"	v
ZERO	v.f90	/^DOUBLE PRECISION :: PI,ZERO,/;"	v	module:V
define_base_dirs	v	/^define_base_dirs(){$/;"	f
delall	strings.f90	/^subroutine delall(/;"	s	module:STRINGS
delsubstr	strings.f90	/^subroutine delsubstr(/;"	s	module:STRINGS
display_help	v	/^display_help(){$/;"	f
display_version	dv.f90	/^subroutine display_version(/;"	s	module:dv
dv	dv.f90	/^module dv$/;"	m
flush	porfuncs.f90	/^subroutine flush(/;"	s	module:PORFUNCS
fork_subr	porfuncs.f90	/^          subroutine fork_subr(/;"	s	module:PORFUNCS
getarg_subr	porfuncs.f90	/^          subroutine getarg_subr(/;"	s	module:PORFUNCS
getpid_subr	porfuncs.f90	/^          subroutine getpid_subr(/;"	s	module:PORFUNCS
iargc_subr	porfuncs.f90	/^subroutine iargc_subr(/;"	s	module:PORFUNCS
insertstr	strings.f90	/^subroutine insertstr(/;"	s	module:STRINGS
kc4	precmod.f90	/^integer, parameter :: kc4 /;"	v
kc8	precmod.f90	/^integer, parameter :: kc8 /;"	v
ki4	precmod.f90	/^integer, parameter :: ki4 /;"	v
ki8	precmod.f90	/^integer, parameter :: ki8 /;"	v
kr4	precmod.f90	/^integer, parameter :: kr4 /;"	v
kr8	precmod.f90	/^integer, parameter :: kr8 /;"	v
lowercase	strings.f90	/^function lowercase(/;"	f	module:STRINGS
main	v	/^main(){$/;"	f
match	strings.f90	/^subroutine match(/;"	s	module:STRINGS
readline	strings.f90	/^subroutine readline(/;"	s	module:STRINGS
removesp	strings.f90	/^subroutine removesp(/;"	s	module:STRINGS
set_base_vars	v	/^set_base_vars(){$/;"	f
shiftstr	strings.f90	/^subroutine shiftstr(/;"	s	module:STRINGS
system_subr	porfuncs.f90	/^          subroutine system_subr(/;"	s	module:PORFUNCS
trimzero	strings.f90	/^subroutine trimzero(/;"	s	module:STRINGS
uppercase	strings.f90	/^function uppercase(/;"	f	module:STRINGS
value_di	strings.f90	/^subroutine value_di(/;"	s	module:STRINGS
value_dr	strings.f90	/^subroutine value_dr(/;"	s	module:STRINGS
value_si	strings.f90	/^subroutine value_si(/;"	s	module:STRINGS
value_sr	strings.f90	/^subroutine value_sr(/;"	s	module:STRINGS
wait_subr	porfuncs.f90	/^          subroutine wait_subr(/;"	s	module:PORFUNCS
write_di	strings.f90	/^subroutine write_di(/;"	s	module:STRINGS
write_dr	strings.f90	/^subroutine write_dr(/;"	s	module:STRINGS
write_si	strings.f90	/^subroutine write_si(/;"	s	module:STRINGS
write_sr	strings.f90	/^subroutine write_sr(/;"	s	module:STRINGS
writeq_di	strings.f90	/^subroutine writeq_di(/;"	s	module:STRINGS
writeq_dr	strings.f90	/^subroutine writeq_dr(/;"	s	module:STRINGS
writeq_si	strings.f90	/^subroutine writeq_si(/;"	s	module:STRINGS
writeq_sr	strings.f90	/^subroutine writeq_sr(/;"	s	module:STRINGS
