!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	func.f90	/^     1        DBLE(IZ)\/30323.0D0,1.0D0)$/;"	l	subroutine:SDPRND	file:
1	func.f90	/^     1    OTHER, OFFSET, X, Y$/;"	l	function:DPRAND	file:
1	func.f90	/^     1    XMOD2 = 2000019422.0D0, XMOD4 = 4000038844.0D0,$/;"	l	function:DPRAND	file:
1	mylbfgs.f90	/^     1                   ' INVERSE HESSIAN APPROXIMATION IS NOT POSITIVE')$/;"	l	subroutine:MYLBFGS	file:
10	func.f90	/^   10   Y = 37.0D0*OTHER+OFFSET$/;"	l	function:DPRAND	file:
10	func.f90	/^  10    CONTINUE$/;"	l	subroutine:SDPRND	file:
10	func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	mylbfgs.f90	/^10    CALL FLUSH(LFH)$/;"	l	subroutine:MYLBFGS	file:
101	mylbfgs.f90	/^101   FORMAT(A,F20.10,G20.10,A,I6,A)$/;"	l	subroutine:MYLBFGS	file:
102	mylbfgs.f90	/^102   FORMAT(A,I10,A,I10,A)$/;"	l	subroutine:MYLBFGS	file:
103	mylbfgs.f90	/^103   FORMAT(A,F20.10,G20.10,A,I6,A,A,F13.10)$/;"	l	subroutine:MYLBFGS	file:
104	mylbfgs.f90	/^104 FORMAT(A,F20.10,A,F20.10,A,F20.10) $/;"	l	subroutine:MYLBFGS	file:
105	mylbfgs.f90	/^105 FORMAT(A,F19.10,A,F16.10,A,F15.8) $/;"	l	subroutine:MYLBFGS	file:
160	func.f90	/^160      FORMAT('Debug printing is on')$/;"	l	subroutine:IO	file:
2	func.f90	/^     2    TINY = 1.0D-17)$/;"	l	function:DPRAND	file:
20	func.f90	/^20    FORMAT('Initial coordinates:')$/;"	l	subroutine:IO	file:
235	mylbfgs.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
240	mylbfgs.f90	/^ 240        FORMAT(' IMPROPER INPUT PARAMETERS (N OR M ARE NOT POSITIVE)')$/;"	l	subroutine:MYLBFGS	file:
30	func.f90	/^30    FORMAT(3F20.10)$/;"	l	subroutine:IO	file:
30	mylbfgs.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
36	mc.bh.accrej.inc.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	file:
ACCREJ	mc.f90	/^SUBROUTINE ACCREJ(/;"	s
AN	bln.vars.inc.f90	/^        DOUBLE PRECISION   AN$/;"	v
ANG	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: ANG /;"	v
ARGS	v.f90	/^CHARACTER(LEN=SLEN),DIMENSION(MAXNARGS)/;"	v	module:V
ATOM1	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMPAIR	gmin.main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
B	bln.vars.inc.f90	/^        DOUBL/;"	v
BEST_FH	v.files.i.f90	/^INTEGER :: BEST_FH=/;"	v
BLN	bln.f90	/^     MODULE BLN /;"	m
BUFINF	keyword.f90	13;"	c	subroutine:KEYWORD
BVR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR,/;"	v
CENTRE2	func.f90	/^SUBROUTINE CENTRE2(/;"	s
COMPACT	stringmod.f90	/^SUBROUTINE COMPACT(/;"	s	module:strings
CONNECT	bln.vars.inc.f90	/^        LOGICAL CONNECT(/;"	v
COORDS_FH	v.files.i.f90	/^INTEGER :: COORDS_FH=/;"	v
COS_PHI	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI,/;"	v
COS_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA$/;"	v
COUNTATOMS	func.f90	/^SUBROUTINE COUNTATOMS$/;"	s	module:FUNC
DATA_FH	v.files.i.f90	/^INTEGER :: DATA_FH=/;"	v
DELTA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA,/;"	v
DF	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF,/;"	v
DPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: DPD$/;"	v
DPRAND	func.f90	/^FUNCTION DPRAND(/;"	f
DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,3) :: DR$/;"	v
E	bln.vars.inc.f90	/^        DOUBLE /;"	v
E	gmin.main.f90	/^      DOUBLE /;"	v	program:GMIN
E	mc.vars.i.f90	/^      DOUBLE /;"	v
EB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR, EB$/;"	v
EBLN	bln.f90	/^        SUBROUTINE EBLN(/;"	s	module:BLN
ENERGY	bln.vars.inc.f90	/^        DOUBLE PRECISION ENERGY$/;"	v
ENERGY_FH	v.files.i.f90	/^INTEGER :: ENERGY_FH=/;"	v
EPREV	mc.vars.i.f90	/^      DOUBLE PRECISION ::       TIME,E,EPREV$/;"	v
EPSILON	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON,/;"	v
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(-1:N+1,2) :: F$/;"	v
FB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: FB$/;"	v
FH	v.files.i.f90	/^INTEGER :: FH=/;"	v
FRR	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF, FRR(/;"	v
FUNC	func.f90	/^MODULE FUNC$/;"	m
G	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G,/;"	v
GB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA/;"	v
GBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA,/;"	v
GBA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I,/;"	v
GBA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J,/;"	v
GBA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J, GBA_K$/;"	v
GETRND	func.f90	/^SUBROUTINE GETRND(/;"	s
GMIN	gmin.main.f90	/^      PROGRAM GMIN$/;"	p
GNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB,/;"	v
GRAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: G, GRAD$/;"	v
GRAD	mc.vars.i.f90	/^      DOUBLE PRECISION, DIMENSION(NATOMS,3) ::  GRAD$/;"	v
GRADT	bln.vars.inc.f90	/^        LOGICAL GRADT,/;"	v
GRAD_MIN	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(/;"	v
GRAD_PLUS	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD_MIN(N,3), GRAD_PLUS(/;"	v
GSORT	func.f90	/^SUBROUTINE GSORT(/;"	s
GTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB, GTA,/;"	v
GTA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I,/;"	v
GTA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J,/;"	v
GTA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K,/;"	v
GTA_L	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K, GTA_L$/;"	v
GTEST	bln.vars.inc.f90	/^        LOGICAL GTEST,/;"	v
HESS	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: HESS$/;"	v
HESST	bln.vars.inc.f90	/^        LOGICAL GRADT, HESST$/;"	v
HVXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD,/;"	v
I	bln.vars.inc.f90	/^        IN/;"	v
ICOUNT	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX, ICOUNT$/;"	v
IH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,/;"	v
IK	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,/;"	v
INQF	func.f90	/^SUBROUTINE INQF(/;"	s	module:FUNC
IO	func.f90	/^SUBROUTINE IO$/;"	s	module:FUNC
ISTEP	v.f90	/^INTEGER :: ISTEP$/;"	v	module:V
IS_DIGIT	stringmod.f90	/^FUNCTION IS_DIGIT(/;"	f	module:strings
IS_LETTER	stringmod.f90	/^FUNCTION IS_LETTER(/;"	f	module:strings
ITERATIONS	mc.vars.i.f90	/^      INTEGER ITERATIONS,/;"	v
J	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J,/;"	v
J1	bln.vars.inc.f90	/^        INTEGER J1,/;"	v
J2	bln.vars.inc.f90	/^        INTEGER J1,J2$/;"	v
JH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,JH,/;"	v
JK	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,/;"	v
JMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX,/;"	v
K	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K,/;"	v
KEYWORD	keyword.f90	/^      SUBROUTINE KEYWORD(/;"	s
KH	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,IH,JH,KH$/;"	v
KI	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,/;"	v
KJ	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     IK,JK,KI,KJ,/;"	v
KMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX,/;"	v
LEN_DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LEN_DR$/;"	v
LFH	v.files.i.f90	/^INTEGER :: LFH=/;"	v
LFN	v.files.i.f90	/^CHARACTER(LEN=100) LFN$/;"	v
LJATT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP, LJATT$/;"	v
LJREP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,/;"	v
MARKOV_FH	v.files.i.f90	/^INTEGER :: MARKOV_FH=/;"	v
MAXNARGS	v.f90	/^INTEGER, PARAMETER :: MAXNARGS=/;"	v	module:V
MC	mc.f90	/^SUBROUTINE MC(/;"	s
MCRUNS	mcruns.f90	/^      SUBROUTINE MCRUNS(/;"	s
MYLBFGS	mylbfgs.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYPOT	gmin.main.f90	21;"	c	program:GMIN
MYPOT	mc.vars.i.f90	3;"	c
MYPOT	quench.f90	32;"	c	subroutine:QUENCH
MYSYSTEM	func.f90	/^SUBROUTINE MYSYSTEM(/;"	s	module:FUNC
N	bln.vars.inc.f90	/^        INT/;"	v
NARGS	v.f90	/^INTEGER NARGS$/;"	v	module:V
NCORE	v.f90	/^INTEGER :: NCORE$/;"	v	module:V
NDONE	mc.vars.i.f90	/^      INTEGER ITERATIONS,QDONE,NDONE$/;"	v
NFAIL	mc.vars.i.f90	/^      INTEGER NFAIL,/;"	v
NFAILT	mc.vars.i.f90	/^      INTEGER NFAIL, NFAILT,/;"	v
NSAVE	v.f90	/^INTEGER :: NSAVE=/;"	v	module:V
NSTEPS	mc.vars.i.f90	/^      INTEGER, INTENT(IN) :: NSTEPS$/;"	v
NSUCCESS	mc.vars.i.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS,/;"	v
NSUCCESST	mc.vars.i.f90	/^      INTEGER NFAIL, NFAILT, NSUCCESS, NSUCCESST$/;"	v
NTYPE	bln.vars.inc.f90	/^        INTEGER NTYPE(/;"	v
ONE	v.const.i.f90	/^DOUBLE PRECISION :: PI,ZERO,ONE$/;"	v
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
PAIRDIST_FH	v.files.i.f90	/^INTEGER :: PAIRDIST_FH=/;"	v
PARSE	stringmod.f90	/^SUBROUTINE PARSE(/;"	s	module:strings
PI	v.const.i.f90	/^DOUBLE PRECISION :: PI,/;"	v
PI4	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 = 1.8326D0, PI4=/;"	v
POTENTIAL	potential.f90	/^      SUBROUTINE POTENTIAL(/;"	s
PRECISION	v.mc.i.f90	/^     DOUBLE PRECISION /;"	v
PTYPE	bln.vars.inc.f90	/^        CHARACTER(LEN=*) :: PTYPE$/;"	v
QDONE	mc.vars.i.f90	/^      INTEGER ITERATIONS,QDONE,/;"	v
QUENCH	quench.f90	/^      SUBROUTINE QUENCH(/;"	s
R	bln.vars.inc.f90	/^        DOUBLE PRE/;"	v
RAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(15) :: RAD,/;"	v
RANDDP	func.f90	284;"	c	subroutine:SDPRND
REMOVEBKSL	stringmod.f90	/^SUBROUTINE REMOVEBKSL(/;"	s	module:strings
RK_R	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R,/;"	v
RK_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R, RK_THETA$/;"	v
RMASS	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS,/;"	v
S	bln.vars.inc.f90	/^        DOUBLE PRECISI/;"	v
SCALEFAC	mc.vars.i.f90	/^      DOUBLE PRECISION, INTENT(IN) :: SCALEFAC /;"	v
SCREENC	gmin.main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SCREENC	mc.vars.i.f90	/^      DOUBLE PRECISION, INTENT(INOUT) :: SCREENC(/;"	v
SDPRND	func.f90	/^SUBROUTINE SDPRND /;"	s
SIGMA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA,/;"	v
SLEN	v.f90	/^INTEGER, PARAMETER :: SLEN=/;"	v	module:V
SPLIT	stringmod.f90	/^SUBROUTINE SPLIT(/;"	s	module:strings
STEST	bln.vars.inc.f90	/^        LOGICAL GTEST, STEST$/;"	v
TAKESTEP	func.f90	/^SUBROUTINE TAKESTEP$/;"	s
TARGETSOUBLE	v.mc.i.f90	/^     DOUBLE PRECISION, DIMENSION(:) :: TARGETS$/;"	v
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA, THETA_0$/;"	v
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 /;"	v
TIME	mc.vars.i.f90	/^      DOUBLE PRECISION ::       TIME,/;"	v
TRAN	mc.f90	/^SUBROUTINE TRAN(/;"	s
TWOPI	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: TWOPI=/;"	v
V	v.f90	/^MODULE V$/;"	m
VXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD,/;"	v
XPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_/;"	v
XPD_2	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_2,/;"	v
ZERO	v.const.i.f90	/^DOUBLE PRECISION :: PI,ZERO,/;"	v
delall	stringmod.f90	/^subroutine delall(/;"	s	module:strings
delsubstr	stringmod.f90	/^subroutine delsubstr(/;"	s	module:strings
insertstr	stringmod.f90	/^subroutine insertstr(/;"	s	module:strings
kc4	precmod.f90	/^integer, parameter :: kc4 /;"	v
kc8	precmod.f90	/^integer, parameter :: kc8 /;"	v
ki4	precmod.f90	/^integer, parameter :: ki4 /;"	v
ki8	precmod.f90	/^integer, parameter :: ki8 /;"	v
kr4	precmod.f90	/^integer, parameter :: kr4 /;"	v
kr8	precmod.f90	/^integer, parameter :: kr8 /;"	v
lowercase	stringmod.f90	/^function lowercase(/;"	f	module:strings
match	stringmod.f90	/^subroutine match(/;"	s	module:strings
pp	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD, pp$/;"	v
readline	stringmod.f90	/^subroutine readline(/;"	s	module:strings
removesp	stringmod.f90	/^subroutine removesp(/;"	s	module:strings
shiftstr	stringmod.f90	/^subroutine shiftstr(/;"	s	module:strings
strings	stringmod.f90	/^module strings$/;"	m
trimzero	stringmod.f90	/^subroutine trimzero(/;"	s	module:strings
uppercase	stringmod.f90	/^function uppercase(/;"	f	module:strings
value_di	stringmod.f90	/^subroutine value_di(/;"	s	module:strings
value_dr	stringmod.f90	/^subroutine value_dr(/;"	s	module:strings
value_si	stringmod.f90	/^subroutine value_si(/;"	s	module:strings
value_sr	stringmod.f90	/^subroutine value_sr(/;"	s	module:strings
write_di	stringmod.f90	/^subroutine write_di(/;"	s	module:strings
write_dr	stringmod.f90	/^subroutine write_dr(/;"	s	module:strings
write_si	stringmod.f90	/^subroutine write_si(/;"	s	module:strings
write_sr	stringmod.f90	/^subroutine write_sr(/;"	s	module:strings
writeq_di	stringmod.f90	/^subroutine writeq_di(/;"	s	module:strings
writeq_dr	stringmod.f90	/^subroutine writeq_dr(/;"	s	module:strings
writeq_si	stringmod.f90	/^subroutine writeq_si(/;"	s	module:strings
writeq_sr	stringmod.f90	/^subroutine writeq_sr(/;"	s	module:strings
