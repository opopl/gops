!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	bln.f90	/^     1               DSQRT(DOT_PROD(I+1,1)*DOT_PROD(I,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1              DSQRT(DOT_PROD(I,1)*DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1         *COS(ANG(I+1,2))-3.0))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1         *DOT_PROD(I,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1         *DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1         DPD(I+1,1)*DR(I+2,I+3,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        ((DOT_PROD(I-2,2)\/DOT_PROD(I-1,1))*XR(I-1,I) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        ((DOT_PROD(I-2,2)\/DOT_PROD(I-1,1))*YR(I-1,I) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        ((DOT_PROD(I-2,2)\/DOT_PROD(I-1,1))*ZR(I-1,I) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        (1.0D0\/XPD(I))*(DPD(I+1,2)*DPD(I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        (1.0D0\/XPD(I))*(DPD(I,2)*DPD(I-1,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        (1.0D0\/XPD(I-1))*(DPD(I,2)*DPD(I-1,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        (1.0D0\/XPD(I-1))*(DPD(I-1,2)*DPD(I-2,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        (1.0D0\/XPD(I-2))*(DPD(I-1,2)*DPD(I-2,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        (1.0D0\/XPD(I-2))*(DPD(I-2,2)*DPD(I-3,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *(1.0D0\/SQRT(XPD(I+1)*XPD(I)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *COS(ANG(I,2)) - $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *COS(ANG(I-1,2)) - $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *COS(ANG(I-2,2)) - $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *DSQRT(DOT_PROD(I,1)*DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *XR(I-1,I) + XR(I,I+1) - XR(I-1,I))\/DEN$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *YR(I-1,I) + YR(I,I+1) - YR(I-1,I))\/DEN$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        *ZR(I-1,I) + ZR(I,I+1) - ZR(I-1,I))\/DEN$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        - DPD(I-2,1)*DR(I-3,I-2,1:3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        - XR(I-2,I-1))\/DEN$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        - YR(I-2,I-1))\/DEN$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        - ZR(I-2,I-1))\/DEN$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        2.0*DPD(I-2,3)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        2.0*DPD(I-2,3)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        2.0*DPD(I-2,3)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        3.0))*(1.0D0\/SQRT(XPD(I)*XPD(I-1)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        3.0))*(1.0D0\/SQRT(XPD(I+1)*XPD(I)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        3.0))*(1.0D0\/SQRT(XPD(I-1)*XPD(I-2)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        3.0))*(1.0D0\/SQRT(XPD(I-2)*XPD(I-3)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I,1))*XR(I,I+1) - XR(I+1,I+2))\/DEN1$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I,1))*YR(I,I+1) - YR(I+1,I+2))\/DEN1$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I,1))*ZR(I,I+1) - ZR(I+1,I+2))\/DEN1$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I-1,1))*XR(I-1,I) - XR(I-2,I-1))\/DEN1$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I-1,1))*XR(I-1,I) - XR(I-2,I-1))\/DEN2$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I-1,1))*YR(I-1,I) - YR(I-2,I-1))\/DEN1$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I-1,1))*YR(I-1,I) - YR(I-2,I-1))\/DEN2$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I-1,1))*ZR(I-1,I) - ZR(I-2,I-1))\/DEN1$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DOT_PROD(I-1,1))*ZR(I-1,I) - ZR(I-2,I-1))\/DEN2$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I+1,1)*DR(I+2,I+3,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I+1,1)*DR(I+2,I+3,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I+1,1)*DR(I+2,I+3,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,1)*DR(I+1,I+2,1) + 2.0*DPD(I-1,3)*DR(I,I+1,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,1)*DR(I+1,I+2,2) + 2.0*DPD(I-1,3)*DR(I,I+1,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,1)*DR(I+1,I+2,3) + 2.0*DPD(I-1,3)*DR(I,I+1,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I+1,I+2,1))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I+1,I+2,1)))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I+1,I+2,2))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I+1,I+2,2)))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I+1,I+2,3))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I,I+1,1) - DPD(I,2)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I,I+1,2) - DPD(I,2)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,2)*DR(I,I+1,3) - DPD(I,2)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,3)*DPD(I+1,1))*(-DPD(I+1,1)*DR(I,I+1,1) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,3)*DPD(I+1,1))*(-DPD(I+1,1)*DR(I,I+1,2) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I,3)*DPD(I+1,1))*(-DPD(I+1,1)*DR(I,I+1,3) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,1)*DR(I,I+1,1) - DPD(I-1,2)*DR(I,I+1,1) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,1)*DR(I,I+1,2) - DPD(I-1,2)*DR(I,I+1,2) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,1)*DR(I,I+1,3) - DPD(I-1,2)*DR(I,I+1,3) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,1)*DR(I-2,I-1,1) - 2.0*DPD(I-2,3)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,1)*DR(I-2,I-1,2) - 2.0*DPD(I-2,3)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,1)*DR(I-2,I-1,3) - 2.0*DPD(I-2,3)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,1)) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,1))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,2)) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,2))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,2)))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,3)) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-1,I,3))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-2,I-1,1) +  DPD(I-1,1)*DR(I-2,I-1,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-2,I-1,2) +  DPD(I-1,1)*DR(I-2,I-1,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,2)*DR(I-2,I-1,3) +  DPD(I-1,1)*DR(I-2,I-1,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,3)*DPD(I,1))*(-DPD(I+1,1)*DR(I,I+1,1) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,3)*DPD(I,1))*(-DPD(I+1,1)*DR(I,I+1,2) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,3)*DPD(I,1))*(-DPD(I+1,1)*DR(I,I+1,3) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,3)*DPD(I,1))*(DPD(I,1)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,3)*DPD(I,1))*(DPD(I,1)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-1,3)*DPD(I,1))*(DPD(I,1)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,1)*DR(I-3,I-2,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,1)*DR(I-3,I-2,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,1)*DR(I-3,I-2,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-1,I,1) + DPD(I-1,2)*DR(I-2,I-1,1) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-1,I,1) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-1,I,2) + DPD(I-1,2)*DR(I-2,I-1,2) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-1,I,2) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-1,I,3) + DPD(I-1,2)*DR(I-2,I-1,3) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-1,I,3) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,1)) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,1))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,1:3))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,2)) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,2))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,3)) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,2)*DR(I-2,I-1,3))) $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,3)*DPD(I-1,1))*(DPD(I,1)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,3)*DPD(I-1,1))*(DPD(I,1)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,3)*DPD(I-1,1))*(DPD(I,1)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,3)*DPD(I-1,1))*(DPD(I-2,1)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,3)*DPD(I-1,1))*(DPD(I-2,1)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-2,3)*DPD(I-1,1))*(DPD(I-2,1)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-3,3)*DPD(I-2,1))*(DPD(I-2,1)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-3,3)*DPD(I-2,1))*(DPD(I-2,1)*DR(I-1,I,2) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1        DPD(I-3,3)*DPD(I-2,1))*(DPD(I-2,1)*DR(I-1,I,3) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  *(1.0D0\/SQRT(XPD(I+1)*XPD(I)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  *COS(ANG(I+1,2)) - $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  *COS(ANG(I+1,2)) - 3.0))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  3.0))*(1.0D0\/SQRT(XPD(I-2)*XPD(I-3)))  $/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  DOT_PROD(I,1))*XR(I,I+1) - (DOT_PROD(I-1,2)\/DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  DOT_PROD(I,1))*YR(I,I+1) - (DOT_PROD(I-1,2)\/DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  DOT_PROD(I,1))*ZR(I,I+1) - (DOT_PROD(I-1,2)\/DOT_PROD(I-1,1))$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  DPD(I-1,1)*DR(I,I+1,2) - DPD(I-1,2)*DR(I,I+1,2) +$/;"	l	subroutine:CALC_GRADIENT	file:
1	bln.f90	/^     1  DPD(I-2,3)*DPD(I-1,1))*(DPD(I,1)*DR(I-1,I,1) -$/;"	l	subroutine:CALC_GRADIENT	file:
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RAD	file:
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RADR	file:
10	finalio.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	func.f90	/^10       J2=3*J1$/;"	l	module:FUNC	file:
10	mylbfgs.f90	/^10    CALL FLUSH(LOG_FH)$/;"	l	subroutine:MYLBFGS	file:
101	mylbfgs.f90	/^101   FORMAT(A,F20.10,G20.10,A,I6,A)$/;"	l	subroutine:MYLBFGS	file:
102	mylbfgs.f90	/^102   FORMAT(A,I10,A,I10,A)$/;"	l	subroutine:MYLBFGS	file:
12	keyword.f90	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
190	keyword.f90	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
21	mc.f90	/^21         FORMAT('Acceptance ratio for run=',F12.5,' Step=',F12.5,' Angular step factor=',F12.5,' T=',F12.5)$/;"	l	subroutine:MC	file:
23	mc.f90	/^23          CONTINUE$/;"	l	subroutine:MC	file:
235	mylbfgs.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
30	finalio.f90	/^30       FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	mylbfgs.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
34	mc.f90	/^34                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	subroutine:MC	file:
36	mc.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	subroutine:MC	file:
37	mc.f90	/^37    CONTINUE$/;"	l	subroutine:MC	file:
56	keyword.f90	/^56          WRITE(MYUNIT,'(A,I6,A)') $/;"	l	subroutine:KEYWORD	file:
57	keyword.f90	/^57          READ(34,*,END=56) DUMMY$/;"	l	subroutine:KEYWORD	file:
A	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,4) :: A$/;"	v
A1	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2, COEF3, A3, DEN2, A2, A1,/;"	v
A1	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR, DEN, RNUM, DEN1, A1,/;"	v
A2	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2, COEF3, A3, DEN2, A2,/;"	v
A2	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR, DEN, RNUM, DEN1, A1, A2,/;"	v
A3	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2, COEF3, A3,/;"	v
A3	bln.vars.inc.f90	/^      DOUBLE PRECISION A3,/;"	v
A4	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4,/;"	v
A4	bln.vars.inc.f90	/^      DOUBLE PRECISION A3, COEF, COEF1, COEF2, COEF3, A4$/;"	v
ACCRAT	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:COMMONS
AMBWORD	keyword.f90	27;"	c	subroutine:KEYWORD
ANG	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: ANG /;"	v
ASTEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP,/;"	v	module:COMMONS
ATOM1	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMPAIR	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
BIN	keyword.f90	17;"	c	subroutine:KEYWORD
BLN	bln.f90	/^     MODULE BLN /;"	m
BSNEW	keyword.f90	22;"	c	subroutine:KEYWORD
BUFINF	keyword.f90	12;"	c	subroutine:KEYWORD
BVR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: BVR$/;"	v
CALC_ENERGY	bln.f90	/^        SUBROUTINE CALC_ENERGY(/;"	s	module:BLN
CALC_GRADIENT	bln.f90	/^        SUBROUTINE CALC_GRADIENT(/;"	s	module:BLN
CALC_HESS	bln.f90	/^        SUBROUTINE CALC_HESS(/;"	s	module:BLN
CALC_INT_COORDS	bln.f90	/^        SUBROUTINE CALC_INT_COORDS(/;"	s	module:BLN
CAPS	keyword.f90	24;"	c	subroutine:KEYWORD
COEF	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF,/;"	v
COEF	bln.vars.inc.f90	/^      DOUBLE PRECISION A3, COEF,/;"	v
COEF1	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1,/;"	v
COEF1	bln.vars.inc.f90	/^      DOUBLE PRECISION A3, COEF, COEF1,/;"	v
COEF2	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2,/;"	v
COEF2	bln.vars.inc.f90	/^      DOUBLE PRECISION A3, COEF, COEF1, COEF2,/;"	v
COEF3	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2, COEF3,/;"	v
COEF3	bln.vars.inc.f90	/^      DOUBLE PRECISION A3, COEF, COEF1, COEF2, COEF3,/;"	v
COMMONS	commons.f90	/^MODULE COMMONS$/;"	m
CONNECT	bln.vars.inc.f90	/^        LOGICAL CONNECT(/;"	v
COORDS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS$/;"	v	module:COMMONS
COSTOR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: COSTOR,/;"	v
COS_PHI	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI,/;"	v
COS_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA,/;"	v
DELTA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA$/;"	v
DEN	bln.vars.inc.f90	/^                DEN1/;"	v
DEN	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR, DEN,/;"	v
DEN1	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2, COEF3, A3, DEN2, A2, A1, &$/;"	v
DEN1	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR, DEN, RNUM, DEN1,/;"	v
DEN2	bln.vars.inc.f90	/^        DOUBLE PRECISION  A4, COEF, COEF1, COEF2, COEF3, A3, DEN2,/;"	v
DEN2	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR, DEN, RNUM, DEN1, A1, A2, DEN2$/;"	v
DF	bln.vars.inc.f90	/^                DEN1, RNUM, DEN, RVAR, FRR(3), DF,/;"	v
DF	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF,/;"	v
DFAC	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: COSTOR, SINBOND, DFAC$/;"	v
DPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: DPD$/;"	v
DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,3) :: DR$/;"	v
DUMMY	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA, DUMMY,/;"	v
DUMMY2	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA, DUMMY, DUMMY2$/;"	v
E	bln.vars.inc.f90	/^        DOUBLE /;"	v
EAMLJCOMM	keyword.f90	19;"	c	subroutine:KEYWORD
EBLN	bln.f90	/^        SUBROUTINE EBLN(/;"	s	module:BLN
ENERGY	bln.vars.inc.f90	/^        DOUBLE PRECISION ENERGY$/;"	v
EPREV	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV$/;"	v	module:COMMONS
EPSILON	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON,/;"	v
E_BANGLE	bln.vars.inc.f90	/^        DOUBLE PRECISION E_NBOND, E_BOND, E_BANGLE,/;"	v
E_BOND	bln.vars.inc.f90	/^        DOUBLE PRECISION E_NBOND, E_BOND,/;"	v
E_NBOND	bln.vars.inc.f90	/^        DOUBLE PRECISION E_NBOND,/;"	v
E_TANGLE	bln.vars.inc.f90	/^        DOUBLE PRECISION E_NBOND, E_BOND, E_BANGLE, E_TANGLE,/;"	v
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: F,/;"	v
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: FB/;"	v
FB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: F, FNB, FB,/;"	v
FBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: F, FNB, FB, FBA,/;"	v
FBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: FBA,/;"	v
FF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(/;"	v	module:COMMONS
FF	main.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	program:GMIN
FIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: FIN(/;"	v	program:GMIN
FINALIO	finalio.f90	/^      SUBROUTINE FINALIO$/;"	s
FINALQ	finalq.f90	/^      SUBROUTINE FINALQ$/;"	s
FNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: F, FNB,/;"	v
FNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: FBA, FNB,/;"	v
FQ	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(3*N) :: QO,FQ$/;"	v
FQ_MINUS	bln.vars.inc.f90	/^        DOUBLE PRECISION FQ_PLUS(3*N), FQ_MINUS(/;"	v
FQ_PLUS	bln.vars.inc.f90	/^        DOUBLE PRECISION FQ_PLUS(/;"	v
FRR	bln.vars.inc.f90	/^                DEN1, RNUM, DEN, RVAR, FRR(/;"	v
FTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: F, FNB, FB, FBA, FTA$/;"	v
FTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: FBA, FNB, FTA,/;"	v
FUNC	func.f90	/^MODULE FUNC$/;"	m
FXX	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX,/;"	v
FYY	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY,/;"	v
FZZ	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ,/;"	v
GMIN	main.f90	/^      PROGRAM GMIN$/;"	p
GRAD	bln.vars.inc.f90	/^        DOUBLE PRECISION GRAD(/;"	v
GRADT	bln.vars.inc.f90	/^        LOGICAL GRADT$/;"	v
GSORT	func.f90	/^      SUBROUTINE GSORT(/;"	s
GTEST	bln.vars.inc.f90	/^        LOGICAL GTEST,/;"	v
HESS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS$/;"	v	module:COMMONS
I	bln.vars.inc.f90	/^        IN/;"	v
ICOUNT	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX, ICOUNT$/;"	v
INFIX	commons.f90	/^INTEGER :: INFIX$/;"	v	module:COMMONS
INTEFF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	module:COMMONS
INTEFF	main.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	program:GMIN
INTEQMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:COMMONS
INTEQMIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	program:GMIN
INTEQMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:COMMONS
INTEQMINP	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	program:GMIN
ISTEP	commons.f90	/^INTEGER :: ISTEP$/;"	v	module:COMMONS
IXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: IXPD$/;"	v
J	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J,/;"	v
J1	bln.vars.inc.f90	/^        INTEGER J1,/;"	v
J2	bln.vars.inc.f90	/^        INTEGER J1,J2$/;"	v
JMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX,/;"	v
K	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K,/;"	v
KEYWORD	keyword.f90	/^      SUBROUTINE KEYWORD$/;"	s
KMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX,/;"	v
LEN_BV	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: LEN_BV$/;"	v
LEN_DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LEN_DR$/;"	v
LJATT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,LJATT$/;"	v
LJREP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,/;"	v
MC	mc.f90	/^      SUBROUTINE MC(/;"	s
MCRUNS	mcruns.f90	/^      SUBROUTINE MCRUNS(/;"	s
MYLBFGS	mylbfgs.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYPOT	finalq.f90	15;"	c	subroutine:FINALQ
MYPOT	main.f90	32;"	c	program:GMIN
MYPOT	quench.f90	22;"	c	subroutine:QUENCH
M_LBFGS	commons.f90	/^INTEGER :: M_LBFGS$/;"	v	module:COMMONS
N	bln.vars.inc.f90	/^        INT/;"	v
NATOMS	commons.f90	/^INTEGER :: NATOMS /;"	v	module:COMMONS
NCORE	commons.f90	/^INTEGER :: NCORE$/;"	v	module:COMMONS
NDUMMY	main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(/;"	v	program:GMIN
NDUMMY2	main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(:), NDUMMY2(/;"	v	program:GMIN
NQ	commons.f90	/^INTEGER :: NQ$/;"	v	module:COMMONS
NSAVE	commons.f90	/^INTEGER :: NSAVE$/;"	v	module:COMMONS
NTYPE	bln.vars.inc.f90	/^        INTEGER NTYPE(/;"	v
NUMBER_OF_ATOMS	func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	main.f90	/^      INTEGER :: NUMBER_OF_ATOMS$/;"	v	program:GMIN
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OSTEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP,/;"	v	module:COMMONS
PARAM_ARRAY	bln.f90	/^        SUBROUTINE PARAM_ARRAY(/;"	s	module:BLN
PCALL	keyword.f90	28;"	c	subroutine:KEYWORD
PI4	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 = 1.8326D0, PI4=/;"	v
POTEL	main.f90	/^      DOUBLE PRECISION POTEL$/;"	v	program:GMIN
POTENTIAL	potential.f90	/^      SUBROUTINE POTENTIAL(/;"	s
PTYPE	bln.vars.inc.f90	/^        CHARACTER(LEN=*) :: PTYPE$/;"	v
QMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:COMMONS
QMIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	program:GMIN
QMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:COMMONS
QMINP	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	program:GMIN
QO	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(3*N) :: QO,/;"	v
QUENCH	quench.f90	/^      SUBROUTINE QUENCH(/;"	s
R	bln.vars.inc.f90	/^        DOUBLE PRE/;"	v
RAD	bln.vars.inc.f90	/^                DEN1, RNUM, DEN, RVAR, FRR(3), DF, RAD(/;"	v
RAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(15) :: RAD,/;"	v
RAD	func.f90	/^      SUBROUTINE RAD(/;"	s	module:FUNC
RAD14	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14,/;"	v
RAD6	bln.vars.inc.f90	/^        DOUBLE PRECISION E_NBOND, E_BOND, E_BANGLE, E_TANGLE, RAD6$/;"	v
RAD7	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7,/;"	v
RADR	func.f90	/^      SUBROUTINE RADR(/;"	s	module:FUNC
RK_R	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R,/;"	v
RK_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R, RK_THETA$/;"	v
RMASS	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS,/;"	v
RNUM	bln.vars.inc.f90	/^                DEN1, RNUM,/;"	v
RNUM	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR, DEN, RNUM,/;"	v
RVAR	bln.vars.inc.f90	/^                DEN1, RNUM, DEN, RVAR,/;"	v
RVAR	bln.vars.inc.f90	/^      DOUBLE PRECISION RAD7, RAD14, DF, FXX, FZZ, FYY, RVAR,/;"	v
S	bln.vars.inc.f90	/^                DEN1, RNUM, DEN, RVAR, FRR(3), DF, RAD(15), S(/;"	v
S	bln.vars.inc.f90	/^        DOUBLE PRECISI/;"	v
SCREENC	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SIGMA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA,/;"	v
SINBOND	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: COSTOR, SINBOND,/;"	v
STEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP,/;"	v	module:COMMONS
STEST	bln.vars.inc.f90	/^        LOGICAL GTEST, STEST$/;"	v
TEMP	commons.f90	/^DOUBLE PRECISION TEMP,/;"	v	module:COMMONS
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION THETA_0$/;"	v
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 /;"	v
TMPCOORDS	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TMPCOORDS(/;"	v	program:GMIN
TWOPI	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: TWOPI=/;"	v
XPD_2	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N) :: XPD_2$/;"	v
