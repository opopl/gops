!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RAD	file:
1	func.f90	/^     1                 ENERGY, DUMMYX, DUMMYY, DUMMYZ$/;"	l	subroutine:RADR	file:
10	finalio.f90	/^10       FORMAT('Energy of minimum ',I6,'=',F20.10,' first found at step ',I8)$/;"	l	subroutine:FINALIO	file:
10	func.f90	/^10       CONTINUE$/;"	l	subroutine:GSORT	file:
10	func.f90	/^10       J2=3*J1$/;"	l	module:FUNC	file:
10	lbfgs.f	/^   10    CONTINUE$/;"	l	subroutine:MCSRCH	file:
10	lbfgs.f	/^   10 continue$/;"	l	function:ddot	file:
10	lbfgs.f	/^   10 continue$/;"	l	subroutine:daxpy	file:
10	lbfgs.f	/^  10  ITER= 0$/;"	l	subroutine:LBFGS	file:
10	lbfgs.f	/^ 10   FORMAT('*************************************************')$/;"	l	subroutine:LB1	file:
10	mylbfgs.f90	/^10    CALL FLUSH(LOG_FH)$/;"	l	subroutine:MYLBFGS	file:
100	lbfgs.f	/^ 100  CONTINUE$/;"	l	subroutine:LBFGS	file:
100	lbfgs.f	/^ 100  FORMAT(\/' THE MINIMIZATION TERMINATED WITHOUT DETECTING ERRORS.',$/;"	l	subroutine:LB1	file:
101	mylbfgs.f90	/^101   FORMAT(A,F20.10,G20.10,A,I6,A)$/;"	l	subroutine:MYLBFGS	file:
102	mylbfgs.f90	/^102   FORMAT(A,I10,A,I10,A)$/;"	l	subroutine:MYLBFGS	file:
110	lbfgs.f	/^ 110    IF (DIAG(I).LE.ZERO) GO TO 195$/;"	l	subroutine:LBFGS	file:
111	fmt.inc.f90	/^111 format(A,I10,A,F20.10,A,I5,A,G12.5,A,G20.10,A,F11.1)$/;"	l	file:
112	lbfgs.f	/^ 112  W(I)= -G(I)$/;"	l	subroutine:LBFGS	file:
12	keyword.f90	/^12       CONTINUE$/;"	l	subroutine:KEYWORD	file:
125	lbfgs.f	/^ 125  CONTINUE$/;"	l	subroutine:LBFGS	file:
130	lbfgs.f	/^ 130  W(I)=DIAG(I)*W(I)$/;"	l	subroutine:LBFGS	file:
145	lbfgs.f	/^ 145  CONTINUE$/;"	l	subroutine:LBFGS	file:
15	lbfgs.f	/^   15    FORMAT(\/'  THE SEARCH DIRECTION IS NOT A DESCENT DIRECTION')$/;"	l	subroutine:MCSRCH	file:
160	lbfgs.f	/^ 160   W(ISPT+POINT*N+I)= W(I)$/;"	l	subroutine:LBFGS	file:
165	lbfgs.f	/^ 165  NFEV=0$/;"	l	subroutine:LBFGS	file:
170	lbfgs.f	/^ 170  W(I)=G(I)$/;"	l	subroutine:LBFGS	file:
172	lbfgs.f	/^ 172  CONTINUE$/;"	l	subroutine:LBFGS	file:
175	lbfgs.f	/^ 175  W(IYPT+NPT+I)= G(I)-W(I)$/;"	l	subroutine:LBFGS	file:
190	keyword.f90	/^190   CALL INPUT(END)$/;"	l	subroutine:KEYWORD	file:
190	lbfgs.f	/^ 190  IFLAG=-1$/;"	l	subroutine:LBFGS	file:
195	lbfgs.f	/^ 195  IFLAG=-2$/;"	l	subroutine:LBFGS	file:
196	lbfgs.f	/^ 196  IFLAG= -3$/;"	l	subroutine:LBFGS	file:
20	lbfgs.f	/^   20    CONTINUE$/;"	l	subroutine:MCSRCH	file:
20	lbfgs.f	/^   20 m = mod(n,4)$/;"	l	subroutine:daxpy	file:
20	lbfgs.f	/^   20 m = mod(n,5)$/;"	l	function:ddot	file:
20	lbfgs.f	/^ 20   FORMAT('  N=',I5,'   NUMBER OF CORRECTIONS=',I2,$/;"	l	subroutine:LB1	file:
200	lbfgs.f	/^ 200  FORMAT(\/' IFLAG= -1 ',\/' LINE SEARCH FAILED. SEE'$/;"	l	subroutine:LBFGS	file:
21	fmt.inc.f90	/^21 FORMAT(A,F12.5,A,F12.5,A,F12.5,A,F12.5) $/;"	l	file:
22	fmt.inc.f90	/^22 FORMAT((3(A,G20.10)))$/;"	l	file:
23	mc.bh.inc.f90	/^23       CONTINUE$/;"	l	file:
235	lbfgs.f	/^ 235  FORMAT(\/' IFLAG= -2',\/' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:LBFGS	file:
235	mylbfgs.f90	/^ 235              FORMAT(' THE',I5,'-TH DIAGONAL ELEMENT OF THE',\/,$/;"	l	subroutine:MYLBFGS	file:
240	lbfgs.f	/^ 240  FORMAT(\/' IFLAG= -3',\/' IMPROPER INPUT PARAMETERS (N OR M',$/;"	l	subroutine:LBFGS	file:
245	lbfgs.f	/^ 245  FORMAT(\/'  GTOL IS LESS THAN OR EQUAL TO 1.D-04',$/;"	l	subroutine:LBFGS	file:
30	finalio.f90	/^30       FORMAT('LA ',3F20.10)$/;"	l	subroutine:FINALIO	file:
30	lbfgs.f	/^   30 CONTINUE$/;"	l	subroutine:MCSRCH	file:
30	lbfgs.f	/^   30 continue$/;"	l	function:ddot	file:
30	lbfgs.f	/^   30 continue$/;"	l	subroutine:daxpy	file:
30	lbfgs.f	/^ 30      IF (DIAG(I).LE.ZERO) GO TO 195$/;"	l	subroutine:LBFGS	file:
30	lbfgs.f	/^ 30   FORMAT(' F= ',1PD10.3,'   GNORM= ',1PD10.3)$/;"	l	subroutine:LB1	file:
30	mylbfgs.f90	/^30    NPT=POINT*N$/;"	l	subroutine:MYLBFGS	file:
34	mc.bh.inc.f90	/^34                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' ACC')$/;"	l	file:
36	mc.bh.inc.f90	/^36                   FORMAT('JP,RAN,POTEL,EPREV,NSUC,NFAIL=',I2,3F15.7,2I6,' REJ')$/;"	l	file:
37	mc.f90	/^37    CONTINUE$/;"	l	subroutine:MC	file:
40	lbfgs.f	/^   40       CONTINUE$/;"	l	subroutine:MCSRCH	file:
40	lbfgs.f	/^   40 mp1 = m + 1$/;"	l	function:ddot	file:
40	lbfgs.f	/^   40 mp1 = m + 1$/;"	l	subroutine:daxpy	file:
40	lbfgs.f	/^ 40      DIAG(I)= 1.0D0$/;"	l	subroutine:LBFGS	file:
40	lbfgs.f	/^ 40   FORMAT(' VECTOR X= ')$/;"	l	subroutine:LB1	file:
45	lbfgs.f	/^   45    INFO=0$/;"	l	subroutine:MCSRCH	file:
50	lbfgs.f	/^   50       CONTINUE$/;"	l	subroutine:MCSRCH	file:
50	lbfgs.f	/^   50 continue$/;"	l	function:ddot	file:
50	lbfgs.f	/^   50 continue$/;"	l	subroutine:daxpy	file:
50	lbfgs.f	/^ 50   FORMAT(6(2X,1PD10.3))$/;"	l	subroutine:LB1	file:
50	lbfgs.f	/^ 50   W(ISPT+I)= -G(I)*DIAG(I)$/;"	l	subroutine:LBFGS	file:
56	keyword.f90	/^56          WRITE(MYUNIT,'(A,I6,A)') $/;"	l	subroutine:KEYWORD	file:
57	keyword.f90	/^57          READ(34,*,END=56) DUMMY$/;"	l	subroutine:KEYWORD	file:
60	lbfgs.f	/^   60 ddot = dtemp$/;"	l	function:ddot	file:
60	lbfgs.f	/^ 60   FORMAT(' GRADIENT VECTOR G= ')$/;"	l	subroutine:LB1	file:
70	lbfgs.f	/^ 70   FORMAT(\/'   I   NFN',4X,'FUNC',8X,'GNORM',7X,'STEPLENGTH'\/)$/;"	l	subroutine:LB1	file:
80	lbfgs.f	/^ 80   FORMAT(2(I4,1X),3X,3(1PD10.3,2X))$/;"	l	subroutine:LB1	file:
80	lbfgs.f	/^ 80   ITER= ITER+1$/;"	l	subroutine:LBFGS	file:
90	lbfgs.f	/^   90    DIAG(I)= YS\/YY$/;"	l	subroutine:LBFGS	file:
90	lbfgs.f	/^ 90   FORMAT(' FINAL POINT X= ')$/;"	l	subroutine:LB1	file:
ACCRAT	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT,/;"	v	module:COMMONS
AMBWORD	keyword.f90	27;"	c	subroutine:KEYWORD
AN	bln.vars.inc.f90	/^        DOUBLE PRECISION   AN$/;"	v
ANG	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: ANG /;"	v
ARATIO	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV, ARATIO$/;"	v	module:COMMONS
ASTEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP,/;"	v	module:COMMONS
ATOM1	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,/;"	v	program:GMIN
ATOM2	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,/;"	v	program:GMIN
ATOMPAIR	main.f90	/^      CHARACTER(LEN=40) :: ATOM1,ATOM2,ATOMPAIR$/;"	v	program:GMIN
B	bln.vars.inc.f90	/^        DOUBL/;"	v
BEST_FH	commons.f90	/^INTEGER :: ENERGY_FH, MARKOV_FH, BEST_FH,/;"	v	module:COMMONS
BIN	keyword.f90	17;"	c	subroutine:KEYWORD
BLN	bln.f90	/^     MODULE BLN /;"	m
BSNEW	keyword.f90	22;"	c	subroutine:KEYWORD
BUFINF	keyword.f90	12;"	c	subroutine:KEYWORD
BVR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR,/;"	v
CAPS	keyword.f90	24;"	c	subroutine:KEYWORD
COMMONS	commons.f90	/^MODULE COMMONS$/;"	m
CONNECT	bln.vars.inc.f90	/^        LOGICAL CONNECT(/;"	v
COORDS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: COORDS$/;"	v	module:COMMONS
COS_PHI	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI,/;"	v
COS_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION COS_PHI, COS_THETA$/;"	v
Calculation of the torsional angles gradient	grad.tangle.tex	/^\\subsection{Calculation of the torsional angles gradient}$/;"	u
DELTA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA,/;"	v
DF	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF,/;"	v
DPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: DPD$/;"	v
DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N,3) :: DR$/;"	v
E	bln.vars.inc.f90	/^        DOUBLE /;"	v
EAMLJCOMM	keyword.f90	19;"	c	subroutine:KEYWORD
EB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: BVR, EB$/;"	v
EBLN	bln.f90	/^        SUBROUTINE EBLN(/;"	s	module:BLN
ENERGY	bln.vars.inc.f90	/^        DOUBLE PRECISION ENERGY$/;"	v
ENERGY_FH	commons.f90	/^INTEGER :: ENERGY_FH,/;"	v	module:COMMONS
EPREV	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP, ASTEP, ACCRAT, EPREV,/;"	v	module:COMMONS
EPSILON	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON,/;"	v
F	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(-1:N+1,2) :: F$/;"	v
FB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,2) :: FB$/;"	v
FF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(/;"	v	module:COMMONS
FF	main.f90	/^      INTEGER,ALLOCATABLE :: FF(/;"	v	program:GMIN
FIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: FIN(/;"	v	program:GMIN
FINALIO	finalio.f90	/^      SUBROUTINE FINALIO$/;"	s
FINALQ	finalq.f90	/^      SUBROUTINE FINALQ$/;"	s
FQ	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(3*N) :: QO, FQ$/;"	v
FQ_MINUS	bln.vars.inc.f90	/^        DOUBLE PRECISION FQ_PLUS(3*N), FQ_MINUS(/;"	v
FQ_PLUS	bln.vars.inc.f90	/^        DOUBLE PRECISION FQ_PLUS(/;"	v
FRR	bln.vars.inc.f90	/^        DOUBLE PRECISION ::     DF, FRR(/;"	v
FUNC	func.f90	/^MODULE FUNC$/;"	m
G	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GB/;"	v
GB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA/;"	v
GBA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA,/;"	v
GBA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I,/;"	v
GBA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J,/;"	v
GBA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA_I, GBA_J, GBA_K$/;"	v
GMIN	main.f90	/^      PROGRAM GMIN$/;"	p
GNB	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB,/;"	v
GRAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(3*N) :: GRAD,/;"	v
GRADIENT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(3*N) :: GRAD, GRADIENT$/;"	v
GRADT	bln.vars.inc.f90	/^        LOGICAL GRADT,/;"	v
GSORT	func.f90	/^      SUBROUTINE GSORT(/;"	s
GTA	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GBA, GNB, GTA,/;"	v
GTA_I	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I,/;"	v
GTA_J	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J,/;"	v
GTA_K	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K,/;"	v
GTA_L	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,3) :: GTA_I, GTA_J, GTA_K, GTA_L$/;"	v
GTEST	bln.vars.inc.f90	/^        LOGICAL GTEST,/;"	v
GTOL	lbfgs.f	/^      DOUBLE PRECISION GTOL,/;"	v	block data:LB2
HESS	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: HESS$/;"	v
HESS	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE, DIMENSION(:,:) :: HESS$/;"	v	module:COMMONS
HESST	bln.vars.inc.f90	/^        LOGICAL GRADT, HESST$/;"	v
HVXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD,/;"	v
I	bln.vars.inc.f90	/^        IN/;"	v
ICOUNT	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX, ICOUNT$/;"	v
INFIX	commons.f90	/^INTEGER :: INFIX$/;"	v	module:COMMONS
INTEFF	commons.f90	/^INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	module:COMMONS
INTEFF	main.f90	/^      INTEGER,ALLOCATABLE :: FF(:),INTEFF(/;"	v	program:GMIN
INTEQMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	module:COMMONS
INTEQMIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(:), INTEQMIN(/;"	v	program:GMIN
INTEQMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	module:COMMONS
INTEQMINP	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(:,:), INTEQMINP(/;"	v	program:GMIN
ISTEP	commons.f90	/^INTEGER :: ISTEP$/;"	v	module:COMMONS
J	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J,/;"	v
J1	bln.vars.inc.f90	/^        INTEGER J1,/;"	v
J2	bln.vars.inc.f90	/^        INTEGER J1,J2$/;"	v
JMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX,/;"	v
K	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K,/;"	v
KEYWORD	keyword.f90	/^      SUBROUTINE KEYWORD$/;"	s
KMAX	bln.vars.inc.f90	/^        INTEGER NTYPE(N), I, J, JMAX, K, KMAX,/;"	v
LB1	lbfgs.f	/^      SUBROUTINE LB1(/;"	s
LB2	lbfgs.f	/^      BLOCK DATA LB2$/;"	b
LB3	lbfgs.f	187;"	c	subroutine:LBFGS
LB3	lbfgs.f	444;"	c	subroutine:LB1
LB3	lbfgs.f	511;"	c	block data:LB2
LB3	lbfgs.f	627;"	c	subroutine:MCSRCH
LBFGS	lbfgs.f	/^      SUBROUTINE LBFGS(/;"	s
LEN_DR	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LEN_DR$/;"	v
LFH	commons.f90	/^INTEGER :: LFH$/;"	v	module:COMMONS
LFN	commons.f90	/^CHARACTER(LEN=100) LFN$/;"	v	module:COMMONS
LJATT	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP, LJATT$/;"	v
LJREP	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N,N) :: LJREP,/;"	v
LP	lbfgs.f	/^      INTEGER LP,/;"	v	block data:LB2
MARKOV_FH	commons.f90	/^INTEGER :: ENERGY_FH, MARKOV_FH,/;"	v	module:COMMONS
MC	mc.f90	/^      SUBROUTINE MC(/;"	s
MCRUNS	mcruns.f90	/^      SUBROUTINE MCRUNS(/;"	s
MCSRCH	lbfgs.f	/^      SUBROUTINE MCSRCH(/;"	s
MCSTEP	lbfgs.f	/^      SUBROUTINE MCSTEP(/;"	s
MP	lbfgs.f	/^      INTEGER LP,MP$/;"	v	block data:LB2
MYLBFGS	mylbfgs.f90	/^      SUBROUTINE MYLBFGS(/;"	s
MYPOT	finalq.f90	15;"	c	subroutine:FINALQ
MYPOT	main.f90	33;"	c	program:GMIN
MYPOT	quench.f90	22;"	c	subroutine:QUENCH
M_LBFGS	commons.f90	/^INTEGER :: M_LBFGS$/;"	v	module:COMMONS
N	bln.vars.inc.f90	/^        INT/;"	v
NATOMS	commons.f90	/^INTEGER :: NATOMS /;"	v	module:COMMONS
NCORE	commons.f90	/^INTEGER :: NCORE$/;"	v	module:COMMONS
NDUMMY	main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(/;"	v	program:GMIN
NDUMMY2	main.f90	/^      INTEGER, ALLOCATABLE :: NDUMMY(:), NDUMMY2(/;"	v	program:GMIN
NQ	commons.f90	/^INTEGER :: NQ$/;"	v	module:COMMONS
NSAVE	commons.f90	/^INTEGER :: NSAVE$/;"	v	module:COMMONS
NTYPE	bln.vars.inc.f90	/^        INTEGER NTYPE(/;"	v
NUMBER_OF_ATOMS	func.f90	/^INTEGER :: NUMBER_OF_ATOMS$/;"	v	module:FUNC
NUMBER_OF_ATOMS	main.f90	/^      INTEGER :: NUMBER_OF_ATOMS$/;"	v	program:GMIN
OPENF	func.f90	/^SUBROUTINE OPENF(/;"	s	module:FUNC
OSTEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP, OSTEP,/;"	v	module:COMMONS
P46MERDIFF	p46merdiff.f	/^        SUBROUTINE P46MERDIFF(/;"	s
PAIRDIST_FH	commons.f90	/^INTEGER :: ENERGY_FH, MARKOV_FH, BEST_FH, PAIRDIST_FH$/;"	v	module:COMMONS
PATOM1	commons.f90	/^INTEGER :: PATOM1$/;"	v	module:COMMONS
PATOM2	commons.f90	/^INTEGER :: PATOM2$/;"	v	module:COMMONS
PCALL	keyword.f90	28;"	c	subroutine:KEYWORD
PI4	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 = 1.8326D0, PI4=/;"	v
POTEL	main.f90	/^      DOUBLE PRECISION POTEL$/;"	v	program:GMIN
POTENTIAL	potential.f90	/^      SUBROUTINE POTENTIAL(/;"	s
PTYPE	bln.vars.inc.f90	/^        CHARACTER(LEN=*) :: PTYPE$/;"	v
QMIN	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	module:COMMONS
QMIN	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMIN(/;"	v	program:GMIN
QMINP	commons.f90	/^DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	module:COMMONS
QMINP	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: QMINP(/;"	v	program:GMIN
QO	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(3*N) :: QO,/;"	v
QUENCH	quench.f90	/^      SUBROUTINE QUENCH(/;"	s
R	bln.vars.inc.f90	/^        DOUBLE PRE/;"	v
RAD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(15) :: RAD,/;"	v
RAD	func.f90	/^      SUBROUTINE RAD(/;"	s	module:FUNC
RADR	func.f90	/^      SUBROUTINE RADR(/;"	s	module:FUNC
RK_R	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R,/;"	v
RK_THETA	bln.vars.inc.f90	/^        DOUBLE PRECISION RK_R, RK_THETA$/;"	v
RMASS	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS,/;"	v
S	bln.vars.inc.f90	/^        DOUBLE PRECISI/;"	v
SCREENC	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: SCREENC(/;"	v	program:GMIN
SIGMA	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA,/;"	v
STEP	commons.f90	/^DOUBLE PRECISION TEMP, STEP,/;"	v	module:COMMONS
STEST	bln.vars.inc.f90	/^        LOGICAL GTEST, STEST$/;"	v
STPMAX	lbfgs.f	/^      DOUBLE PRECISION GTOL,STPMIN,STPMAX$/;"	v	block data:LB2
STPMIN	lbfgs.f	/^      DOUBLE PRECISION GTOL,STPMIN,/;"	v	block data:LB2
TEMP	commons.f90	/^DOUBLE PRECISION TEMP,/;"	v	module:COMMONS
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION RMASS, SIGMA, EPSILON, DELTA, THETA_0$/;"	v
THETA_0	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: THETA_0 /;"	v
TMPCOORDS	main.f90	/^      DOUBLE PRECISION, ALLOCATABLE :: TMPCOORDS(/;"	v	program:GMIN
TRANSITION	mc.f90	/^      SUBROUTINE TRANSITION(/;"	s
TWOPI	bln.vars.inc.f90	/^        DOUBLE PRECISION, PARAMETER :: TWOPI=/;"	v
VXPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD,/;"	v
XPD	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_/;"	v
XPD_2	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1) :: XPD_2,/;"	v
calc_dyn	p46merdiff.f	/^        subroutine calc_dyn(/;"	s
calc_energy	p46merdiff.f	/^        subroutine calc_energy(/;"	s
calc_gradient	p46merdiff.f	/^        subroutine calc_gradient(/;"	s
calc_int_coords	p46merdiff.f	/^        subroutine calc_int_coords(/;"	s
daxpy	lbfgs.f	/^      subroutine daxpy(/;"	s
ddot	lbfgs.f	/^      double precision function ddot(/;"	f
finalio	main.pl	/^sub finalio {$/;"	s
finalio	main.pl~	/^sub finalio {$/;"	s
finalq	main.pl	/^sub finalq {$/;"	s
finalq	main.pl~	/^sub finalq {$/;"	s
keyword	main.pl	/^sub keyword {$/;"	s
keyword	main.pl~	/^sub keyword {$/;"	s
mc	main.pl	/^sub mc {$/;"	s
mc	main.pl~	/^sub mc {$/;"	s
param_array	p46merdiff.f	/^        subroutine param_array(/;"	s
pp	bln.vars.inc.f90	/^        DOUBLE PRECISION, DIMENSION(N-1,3) :: VXPD, HVXPD, pp$/;"	v
